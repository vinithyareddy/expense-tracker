{"ast":null,"code":"import _asyncToGenerator from \"/Users/vinithyareddy/Desktop/projects/my github projects/expense-tracker/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { getAuth, reauthenticateWithCredential, EmailAuthProvider, updatePassword } from 'firebase/auth';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/forms\";\nexport class ChangePasswordDialogComponent {\n  constructor(dialogRef, authService, snackBar) {\n    this.dialogRef = dialogRef;\n    this.authService = authService;\n    this.snackBar = snackBar;\n    this.currentPassword = '';\n    this.newPassword = '';\n    this.confirmPassword = '';\n  }\n  changePassword() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.newPassword !== _this.confirmPassword) {\n        _this.snackBar.open('New passwords do not match.', 'Close', {\n          duration: 3000,\n          panelClass: ['snackbar-error']\n        });\n        return;\n      }\n      const auth = getAuth();\n      const user = auth.currentUser;\n      if (user && user.email) {\n        const credential = EmailAuthProvider.credential(user.email, _this.currentPassword);\n        try {\n          yield reauthenticateWithCredential(user, credential);\n          yield updatePassword(user, _this.newPassword);\n          _this.snackBar.open('Password updated successfully.', 'Close', {\n            duration: 3000,\n            panelClass: ['snackbar-success']\n          });\n          _this.dialogRef.close();\n        } catch (error) {\n          let msg = 'Failed to update password.';\n          if (error.code === 'auth/wrong-password') {\n            msg = 'Incorrect current password.';\n          } else if (error.code === 'auth/weak-password') {\n            msg = 'New password must be at least 6 characters.';\n          }\n          _this.snackBar.open(msg, 'Close', {\n            duration: 3000,\n            panelClass: ['snackbar-error']\n          });\n        }\n      } else {\n        _this.snackBar.open('No authenticated user found.', 'Close', {\n          duration: 3000,\n          panelClass: ['snackbar-error']\n        });\n      }\n    })();\n  }\n  static {\n    this.ɵfac = function ChangePasswordDialogComponent_Factory(t) {\n      return new (t || ChangePasswordDialogComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.MatSnackBar));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChangePasswordDialogComponent,\n      selectors: [[\"app-change-password-dialog\"]],\n      decls: 22,\n      vars: 3,\n      consts: [[\"mat-dialog-title\", \"\"], [\"changeForm\", \"ngForm\"], [\"appearance\", \"outline\", 1, \"full-width\"], [\"matInput\", \"\", \"type\", \"password\", \"name\", \"currentPassword\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"password\", \"name\", \"newPassword\", \"required\", \"\", \"minlength\", \"6\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"password\", \"name\", \"confirmPassword\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"align\", \"end\"], [\"mat-button\", \"\", \"mat-dialog-close\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n      template: function ChangePasswordDialogComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\", 0);\n          i0.ɵɵtext(1, \"Change Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"mat-dialog-content\")(3, \"form\", null, 1)(5, \"mat-form-field\", 2)(6, \"mat-label\");\n          i0.ɵɵtext(7, \"Current Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"input\", 3);\n          i0.ɵɵlistener(\"ngModelChange\", function ChangePasswordDialogComponent_Template_input_ngModelChange_8_listener($event) {\n            return ctx.currentPassword = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(9, \"mat-form-field\", 2)(10, \"mat-label\");\n          i0.ɵɵtext(11, \"New Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"input\", 4);\n          i0.ɵɵlistener(\"ngModelChange\", function ChangePasswordDialogComponent_Template_input_ngModelChange_12_listener($event) {\n            return ctx.newPassword = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(13, \"mat-form-field\", 2)(14, \"mat-label\");\n          i0.ɵɵtext(15, \"Confirm New Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"input\", 5);\n          i0.ɵɵlistener(\"ngModelChange\", function ChangePasswordDialogComponent_Template_input_ngModelChange_16_listener($event) {\n            return ctx.confirmPassword = $event;\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(17, \"mat-dialog-actions\", 6)(18, \"button\", 7);\n          i0.ɵɵtext(19, \"Cancel\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"button\", 8);\n          i0.ɵɵlistener(\"click\", function ChangePasswordDialogComponent_Template_button_click_20_listener() {\n            return ctx.changePassword();\n          });\n          i0.ɵɵtext(21, \"Update\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngModel\", ctx.currentPassword);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.newPassword);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.confirmPassword);\n        }\n      },\n      dependencies: [i1.MatDialogClose, i1.MatDialogTitle, i1.MatDialogContent, i1.MatDialogActions, i4.MatButton, i5.MatFormField, i5.MatLabel, i6.MatInput, i7.ɵNgNoValidate, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.RequiredValidator, i7.MinLengthValidator, i7.NgModel, i7.NgForm],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["getAuth","reauthenticateWithCredential","EmailAuthProvider","updatePassword","ChangePasswordDialogComponent","constructor","dialogRef","authService","snackBar","currentPassword","newPassword","confirmPassword","changePassword","_this","_asyncToGenerator","open","duration","panelClass","auth","user","currentUser","email","credential","close","error","msg","code","i0","ɵɵdirectiveInject","i1","MatDialogRef","i2","AuthService","i3","MatSnackBar","selectors","decls","vars","consts","template","ChangePasswordDialogComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ChangePasswordDialogComponent_Template_input_ngModelChange_8_listener","$event","ChangePasswordDialogComponent_Template_input_ngModelChange_12_listener","ChangePasswordDialogComponent_Template_input_ngModelChange_16_listener","ChangePasswordDialogComponent_Template_button_click_20_listener","ɵɵadvance","ɵɵproperty"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/expense-tracker/src/app/pages/ChangePasswordDialogComponent/change-password-dialog.component.ts","/Users/vinithyareddy/Desktop/projects/my github projects/expense-tracker/src/app/pages/ChangePasswordDialogComponent/change-password-dialog.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport {\n  getAuth,\n  reauthenticateWithCredential,\n  EmailAuthProvider,\n  updatePassword,\n  User\n} from 'firebase/auth';\n\n@Component({\n  selector: 'app-change-password-dialog',\n  templateUrl: './change-password-dialog.component.html',\n  styleUrls: ['./change-password-dialog.component.scss']\n})\nexport class ChangePasswordDialogComponent {\n  currentPassword = '';\n  newPassword = '';\n  confirmPassword = '';\n\n  constructor(\n    private dialogRef: MatDialogRef<ChangePasswordDialogComponent>,\n    private authService: AuthService,\n    private snackBar: MatSnackBar\n  ) {}\n\n  async changePassword(): Promise<void> {\n    if (this.newPassword !== this.confirmPassword) {\n      this.snackBar.open('New passwords do not match.', 'Close', {\n        duration: 3000,\n        panelClass: ['snackbar-error']\n      });\n      return;\n    }\n\n    const auth = getAuth();\n    const user: User | null = auth.currentUser;\n\n    if (user && user.email) {\n      const credential = EmailAuthProvider.credential(user.email, this.currentPassword);\n\n      try {\n        await reauthenticateWithCredential(user, credential);\n        await updatePassword(user, this.newPassword);\n        this.snackBar.open('Password updated successfully.', 'Close', {\n          duration: 3000,\n          panelClass: ['snackbar-success']\n        });\n        this.dialogRef.close();\n      } catch (error: any) {\n        let msg = 'Failed to update password.';\n        if (error.code === 'auth/wrong-password') {\n          msg = 'Incorrect current password.';\n        } else if (error.code === 'auth/weak-password') {\n          msg = 'New password must be at least 6 characters.';\n        }\n        this.snackBar.open(msg, 'Close', {\n          duration: 3000,\n          panelClass: ['snackbar-error']\n        });\n      }\n    } else {\n      this.snackBar.open('No authenticated user found.', 'Close', {\n        duration: 3000,\n        panelClass: ['snackbar-error']\n      });\n    }\n  }\n}\n","<h2 mat-dialog-title>Change Password</h2>\n\n<mat-dialog-content>\n  <form #changeForm=\"ngForm\">\n    <mat-form-field appearance=\"outline\" class=\"full-width\">\n      <mat-label>Current Password</mat-label>\n      <input matInput type=\"password\" [(ngModel)]=\"currentPassword\" name=\"currentPassword\" required>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\" class=\"full-width\">\n      <mat-label>New Password</mat-label>\n      <input matInput type=\"password\" [(ngModel)]=\"newPassword\" name=\"newPassword\" required minlength=\"6\">\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\" class=\"full-width\">\n      <mat-label>Confirm New Password</mat-label>\n      <input matInput type=\"password\" [(ngModel)]=\"confirmPassword\" name=\"confirmPassword\" required>\n    </mat-form-field>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n  <button mat-button mat-dialog-close>Cancel</button>\n  <button mat-raised-button color=\"primary\" (click)=\"changePassword()\">Update</button>\n</mat-dialog-actions>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
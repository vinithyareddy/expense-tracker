{"ast":null,"code":"import _asyncToGenerator from \"/Users/vinithyareddy/Desktop/projects/my github projects/expense-tracker/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { getAuth, reauthenticateWithCredential, EmailAuthProvider, updatePassword } from 'firebase/auth';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/forms\";\nexport let ChangePasswordDialogComponent = /*#__PURE__*/(() => {\n  class ChangePasswordDialogComponent {\n    constructor(dialogRef, authService, snackBar) {\n      this.dialogRef = dialogRef;\n      this.authService = authService;\n      this.snackBar = snackBar;\n      this.currentPassword = '';\n      this.newPassword = '';\n      this.confirmPassword = '';\n    }\n    changePassword() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        if (_this.newPassword !== _this.confirmPassword) {\n          _this.snackBar.open('New passwords do not match.', 'Close', {\n            duration: 3000,\n            panelClass: ['snackbar-error']\n          });\n          return;\n        }\n        const auth = getAuth();\n        const user = auth.currentUser;\n        if (user && user.email) {\n          const credential = EmailAuthProvider.credential(user.email, _this.currentPassword);\n          try {\n            yield reauthenticateWithCredential(user, credential);\n            yield updatePassword(user, _this.newPassword);\n            _this.snackBar.open('Password updated successfully.', 'Close', {\n              duration: 3000,\n              panelClass: ['snackbar-success']\n            });\n            _this.dialogRef.close();\n          } catch (error) {\n            let msg = 'Failed to update password.';\n            if (error.code === 'auth/wrong-password') {\n              msg = 'Incorrect current password.';\n            } else if (error.code === 'auth/weak-password') {\n              msg = 'New password must be at least 6 characters.';\n            }\n            _this.snackBar.open(msg, 'Close', {\n              duration: 3000,\n              panelClass: ['snackbar-error']\n            });\n          }\n        } else {\n          _this.snackBar.open('No authenticated user found.', 'Close', {\n            duration: 3000,\n            panelClass: ['snackbar-error']\n          });\n        }\n      })();\n    }\n    static {\n      this.ɵfac = function ChangePasswordDialogComponent_Factory(t) {\n        return new (t || ChangePasswordDialogComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.MatSnackBar));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: ChangePasswordDialogComponent,\n        selectors: [[\"app-change-password-dialog\"]],\n        decls: 22,\n        vars: 3,\n        consts: [[\"mat-dialog-title\", \"\"], [\"changeForm\", \"ngForm\"], [\"appearance\", \"outline\", 1, \"full-width\"], [\"matInput\", \"\", \"type\", \"password\", \"name\", \"currentPassword\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"password\", \"name\", \"newPassword\", \"required\", \"\", \"minlength\", \"6\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"password\", \"name\", \"confirmPassword\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"align\", \"end\"], [\"mat-button\", \"\", \"mat-dialog-close\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n        template: function ChangePasswordDialogComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"h2\", 0);\n            i0.ɵɵtext(1, \"Change Password\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(2, \"mat-dialog-content\")(3, \"form\", null, 1)(5, \"mat-form-field\", 2)(6, \"mat-label\");\n            i0.ɵɵtext(7, \"Current Password\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"input\", 3);\n            i0.ɵɵlistener(\"ngModelChange\", function ChangePasswordDialogComponent_Template_input_ngModelChange_8_listener($event) {\n              return ctx.currentPassword = $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(9, \"mat-form-field\", 2)(10, \"mat-label\");\n            i0.ɵɵtext(11, \"New Password\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(12, \"input\", 4);\n            i0.ɵɵlistener(\"ngModelChange\", function ChangePasswordDialogComponent_Template_input_ngModelChange_12_listener($event) {\n              return ctx.newPassword = $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(13, \"mat-form-field\", 2)(14, \"mat-label\");\n            i0.ɵɵtext(15, \"Confirm New Password\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(16, \"input\", 5);\n            i0.ɵɵlistener(\"ngModelChange\", function ChangePasswordDialogComponent_Template_input_ngModelChange_16_listener($event) {\n              return ctx.confirmPassword = $event;\n            });\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵelementStart(17, \"mat-dialog-actions\", 6)(18, \"button\", 7);\n            i0.ɵɵtext(19, \"Cancel\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(20, \"button\", 8);\n            i0.ɵɵlistener(\"click\", function ChangePasswordDialogComponent_Template_button_click_20_listener() {\n              return ctx.changePassword();\n            });\n            i0.ɵɵtext(21, \"Update\");\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(8);\n            i0.ɵɵproperty(\"ngModel\", ctx.currentPassword);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngModel\", ctx.newPassword);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngModel\", ctx.confirmPassword);\n          }\n        },\n        dependencies: [i4.MatButton, i5.MatFormField, i5.MatLabel, i6.MatInput, i1.MatDialogClose, i1.MatDialogTitle, i1.MatDialogContent, i1.MatDialogActions, i7.ɵNgNoValidate, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.RequiredValidator, i7.MinLengthValidator, i7.NgModel, i7.NgForm],\n        styles: [\"mat-dialog-content[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:1rem;padding:1rem 0}mat-dialog-content[_ngcontent-%COMP%]   .full-width[_ngcontent-%COMP%]{width:100%}mat-dialog-actions[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;gap:1rem;padding-top:1rem}@media screen and (max-width: 480px){mat-dialog-content[_ngcontent-%COMP%]{padding:.5rem}mat-dialog-actions[_ngcontent-%COMP%]{flex-direction:column;align-items:stretch}mat-dialog-actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:100%}}\"]\n      });\n    }\n  }\n  return ChangePasswordDialogComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
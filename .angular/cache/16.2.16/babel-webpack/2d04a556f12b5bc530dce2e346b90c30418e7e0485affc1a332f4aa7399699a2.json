{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\nexport class AuthService {\n  constructor(afAuth) {\n    this.afAuth = afAuth;\n  }\n  login(email, password) {\n    return this.afAuth.signInWithEmailAndPassword(email, password);\n  }\n  register(name, phone, email, password) {\n    return this.afAuth.createUserWithEmailAndPassword(email, password).then(userCredential => {\n      return userCredential.user?.updateProfile({\n        displayName: name,\n        photoURL: phone\n      });\n    });\n  }\n  logout() {\n    return this.afAuth.signOut();\n  }\n  getCurrentUser() {\n    return this.afAuth.authState;\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.AngularFireAuth));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AuthService","constructor","afAuth","login","email","password","signInWithEmailAndPassword","register","name","phone","createUserWithEmailAndPassword","then","userCredential","user","updateProfile","displayName","photoURL","logout","signOut","getCurrentUser","authState","i0","ɵɵinject","i1","AngularFireAuth","factory","ɵfac","providedIn"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/expense-tracker/src/app/services/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport firebase from 'firebase/compat/app';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  constructor(private afAuth: AngularFireAuth) {}\n\n  login(email: string, password: string) {\n    return this.afAuth.signInWithEmailAndPassword(email, password);\n  }\n\n  register(name: string, phone: string, email: string, password: string) {\n    return this.afAuth.createUserWithEmailAndPassword(email, password).then(userCredential => {\n      return userCredential.user?.updateProfile({\n        displayName: name,\n        photoURL: phone\n      });\n    });\n  }\n\n  logout() {\n    return this.afAuth.signOut();\n  }\n\n  getCurrentUser() {\n    return this.afAuth.authState;\n  }\n}\n"],"mappings":";;AAKA,OAAM,MAAOA,WAAW;EACtBC,YAAoBC,MAAuB;IAAvB,KAAAA,MAAM,GAANA,MAAM;EAAoB;EAE9CC,KAAKA,CAACC,KAAa,EAAEC,QAAgB;IACnC,OAAO,IAAI,CAACH,MAAM,CAACI,0BAA0B,CAACF,KAAK,EAAEC,QAAQ,CAAC;EAChE;EAEAE,QAAQA,CAACC,IAAY,EAAEC,KAAa,EAAEL,KAAa,EAAEC,QAAgB;IACnE,OAAO,IAAI,CAACH,MAAM,CAACQ,8BAA8B,CAACN,KAAK,EAAEC,QAAQ,CAAC,CAACM,IAAI,CAACC,cAAc,IAAG;MACvF,OAAOA,cAAc,CAACC,IAAI,EAAEC,aAAa,CAAC;QACxCC,WAAW,EAAEP,IAAI;QACjBQ,QAAQ,EAAEP;OACX,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAQ,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACf,MAAM,CAACgB,OAAO,EAAE;EAC9B;EAEAC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACjB,MAAM,CAACkB,SAAS;EAC9B;;;uBAtBWpB,WAAW,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,eAAA;IAAA;EAAA;;;aAAXxB,WAAW;MAAAyB,OAAA,EAAXzB,WAAW,CAAA0B,IAAA;MAAAC,UAAA,EADE;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
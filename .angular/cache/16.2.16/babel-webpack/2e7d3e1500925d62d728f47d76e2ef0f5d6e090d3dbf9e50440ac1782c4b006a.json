{"ast":null,"code":"/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Chart = factory());\n})(this, function () {\n  'use strict';\n\n  function noop() {}\n  const uid = function () {\n    let id = 0;\n    return function () {\n      return id++;\n    };\n  }();\n  function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n  }\n  function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n      return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n      return true;\n    }\n    return false;\n  }\n  function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n  }\n  const isNumberFinite = value => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n  function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n  }\n  function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n  }\n  const toPercentage = (value, dimension) => typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : value / dimension;\n  const toDimension = (value, dimension) => typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n  function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n      return fn.apply(thisArg, args);\n    }\n  }\n  function each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n      len = loopable.length;\n      if (reverse) {\n        for (i = len - 1; i >= 0; i--) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      } else {\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      }\n    } else if (isObject(loopable)) {\n      keys = Object.keys(loopable);\n      len = keys.length;\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[keys[i]], keys[i]);\n      }\n    }\n  }\n  function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n      return false;\n    }\n    for (i = 0, ilen = a0.length; i < ilen; ++i) {\n      v0 = a0[i];\n      v1 = a1[i];\n      if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function clone$1(source) {\n    if (isArray(source)) {\n      return source.map(clone$1);\n    }\n    if (isObject(source)) {\n      const target = Object.create(null);\n      const keys = Object.keys(source);\n      const klen = keys.length;\n      let k = 0;\n      for (; k < klen; ++k) {\n        target[keys[k]] = clone$1(source[keys[k]]);\n      }\n      return target;\n    }\n    return source;\n  }\n  function isValidKey(key) {\n    return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n  }\n  function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n      return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n      merge(tval, sval, options);\n    } else {\n      target[key] = clone$1(sval);\n    }\n  }\n  function merge(target, source, options) {\n    const sources = isArray(source) ? source : [source];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n      return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    for (let i = 0; i < ilen; ++i) {\n      source = sources[i];\n      if (!isObject(source)) {\n        continue;\n      }\n      const keys = Object.keys(source);\n      for (let k = 0, klen = keys.length; k < klen; ++k) {\n        merger(keys[k], target, source, options);\n      }\n    }\n    return target;\n  }\n  function mergeIf(target, source) {\n    return merge(target, source, {\n      merger: _mergerIf\n    });\n  }\n  function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n      return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n      mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n      target[key] = clone$1(sval);\n    }\n  }\n  function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n      console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n  }\n  const keyResolvers = {\n    '': v => v,\n    x: o => o.x,\n    y: o => o.y\n  };\n  function resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n  }\n  function _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return obj => {\n      for (const k of keys) {\n        if (k === '') {\n          break;\n        }\n        obj = obj && obj[k];\n      }\n      return obj;\n    };\n  }\n  function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts) {\n      tmp += part;\n      if (tmp.endsWith('\\\\')) {\n        tmp = tmp.slice(0, -1) + '.';\n      } else {\n        keys.push(tmp);\n        tmp = '';\n      }\n    }\n    return keys;\n  }\n  function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n  const defined = value => typeof value !== 'undefined';\n  const isFunction = value => typeof value === 'function';\n  const setsEqual = (a, b) => {\n    if (a.size !== b.size) {\n      return false;\n    }\n    for (const item of a) {\n      if (!b.has(item)) {\n        return false;\n      }\n    }\n    return true;\n  };\n  function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n  }\n  const PI = Math.PI;\n  const TAU = 2 * PI;\n  const PITAU = TAU + PI;\n  const INFINITY = Number.POSITIVE_INFINITY;\n  const RAD_PER_DEG = PI / 180;\n  const HALF_PI = PI / 2;\n  const QUARTER_PI = PI / 4;\n  const TWO_THIRDS_PI = PI * 2 / 3;\n  const log10 = Math.log10;\n  const sign = Math.sign;\n  function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n  }\n  function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for (i = 1; i < sqrt; i++) {\n      if (value % i === 0) {\n        result.push(i);\n        result.push(value / i);\n      }\n    }\n    if (sqrt === (sqrt | 0)) {\n      result.push(sqrt);\n    }\n    result.sort((a, b) => a - b).pop();\n    return result;\n  }\n  function isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n  function almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n  }\n  function almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n  }\n  function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for (i = 0, ilen = array.length; i < ilen; i++) {\n      value = array[i][property];\n      if (!isNaN(value)) {\n        target.min = Math.min(target.min, value);\n        target.max = Math.max(target.max, value);\n      }\n    }\n  }\n  function toRadians(degrees) {\n    return degrees * (PI / 180);\n  }\n  function toDegrees(radians) {\n    return radians * (180 / PI);\n  }\n  function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n      return;\n    }\n    let e = 1;\n    let p = 0;\n    while (Math.round(x * e) / e !== x) {\n      e *= 10;\n      p++;\n    }\n    return p;\n  }\n  function getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n      angle += TAU;\n    }\n    return {\n      angle,\n      distance: radialDistanceFromCenter\n    };\n  }\n  function distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n  }\n  function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n  }\n  function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n  }\n  function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n  }\n  function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n  }\n  function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n  }\n  function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n  }\n  function _lookup(table, value, cmp) {\n    cmp = cmp || (index => table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while (hi - lo > 1) {\n      mid = lo + hi >> 1;\n      if (cmp(mid)) {\n        lo = mid;\n      } else {\n        hi = mid;\n      }\n    }\n    return {\n      lo,\n      hi\n    };\n  }\n  const _lookupByKey = (table, key, value, last) => _lookup(table, value, last ? index => table[index][key] <= value : index => table[index][key] < value);\n  const _rlookupByKey = (table, key, value) => _lookup(table, value, index => table[index][key] >= value);\n  function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while (start < end && values[start] < min) {\n      start++;\n    }\n    while (end > start && values[end - 1] > max) {\n      end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n  }\n  const arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n      return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(key => {\n      const method = '_onData' + _capitalize(key);\n      const base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value(...args) {\n          const res = base.apply(this, args);\n          array._chartjs.listeners.forEach(object => {\n            if (typeof object[method] === 'function') {\n              object[method](...args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  function unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n      return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n      return;\n    }\n    arrayEvents.forEach(key => {\n      delete array[key];\n    });\n    delete array._chartjs;\n  }\n  function _arrayUnique(items) {\n    const set = new Set();\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      set.add(items[i]);\n    }\n    if (set.size === ilen) {\n      return items;\n    }\n    return Array.from(set);\n  }\n  function fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n  }\n  const requestAnimFrame = function () {\n    if (typeof window === 'undefined') {\n      return function (callback) {\n        return callback();\n      };\n    }\n    return window.requestAnimationFrame;\n  }();\n  function throttled(fn, thisArg, updateFn) {\n    const updateArgs = updateFn || (args => Array.prototype.slice.call(args));\n    let ticking = false;\n    let args = [];\n    return function (...rest) {\n      args = updateArgs(rest);\n      if (!ticking) {\n        ticking = true;\n        requestAnimFrame.call(window, () => {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n  function debounce(fn, delay) {\n    let timeout;\n    return function (...args) {\n      if (delay) {\n        clearTimeout(timeout);\n        timeout = setTimeout(fn, delay, args);\n      } else {\n        fn.apply(this, args);\n      }\n      return delay;\n    };\n  }\n  const _toLeftRightCenter = align => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n  const _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n  const _textX = (align, left, right, rtl) => {\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n  };\n  function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n      const {\n        iScale,\n        _parsed\n      } = meta;\n      const axis = iScale.axis;\n      const {\n        min,\n        max,\n        minDefined,\n        maxDefined\n      } = iScale.getUserBounds();\n      if (minDefined) {\n        start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n      }\n      if (maxDefined) {\n        count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max, true).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n      } else {\n        count = pointCount - start;\n      }\n    }\n    return {\n      start,\n      count\n    };\n  }\n  function _scaleRangesChanged(meta) {\n    const {\n      xScale,\n      yScale,\n      _scaleRanges\n    } = meta;\n    const newRanges = {\n      xmin: xScale.min,\n      xmax: xScale.max,\n      ymin: yScale.min,\n      ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n      meta._scaleRanges = newRanges;\n      return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n  }\n  class Animator {\n    constructor() {\n      this._request = null;\n      this._charts = new Map();\n      this._running = false;\n      this._lastDate = undefined;\n    }\n    _notify(chart, anims, date, type) {\n      const callbacks = anims.listeners[type];\n      const numSteps = anims.duration;\n      callbacks.forEach(fn => fn({\n        chart,\n        initial: anims.initial,\n        numSteps,\n        currentStep: Math.min(date - anims.start, numSteps)\n      }));\n    }\n    _refresh() {\n      if (this._request) {\n        return;\n      }\n      this._running = true;\n      this._request = requestAnimFrame.call(window, () => {\n        this._update();\n        this._request = null;\n        if (this._running) {\n          this._refresh();\n        }\n      });\n    }\n    _update(date = Date.now()) {\n      let remaining = 0;\n      this._charts.forEach((anims, chart) => {\n        if (!anims.running || !anims.items.length) {\n          return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        let draw = false;\n        let item;\n        for (; i >= 0; --i) {\n          item = items[i];\n          if (item._active) {\n            if (item._total > anims.duration) {\n              anims.duration = item._total;\n            }\n            item.tick(date);\n            draw = true;\n          } else {\n            items[i] = items[items.length - 1];\n            items.pop();\n          }\n        }\n        if (draw) {\n          chart.draw();\n          this._notify(chart, anims, date, 'progress');\n        }\n        if (!items.length) {\n          anims.running = false;\n          this._notify(chart, anims, date, 'complete');\n          anims.initial = false;\n        }\n        remaining += items.length;\n      });\n      this._lastDate = date;\n      if (remaining === 0) {\n        this._running = false;\n      }\n    }\n    _getAnims(chart) {\n      const charts = this._charts;\n      let anims = charts.get(chart);\n      if (!anims) {\n        anims = {\n          running: false,\n          initial: true,\n          items: [],\n          listeners: {\n            complete: [],\n            progress: []\n          }\n        };\n        charts.set(chart, anims);\n      }\n      return anims;\n    }\n    listen(chart, event, cb) {\n      this._getAnims(chart).listeners[event].push(cb);\n    }\n    add(chart, items) {\n      if (!items || !items.length) {\n        return;\n      }\n      this._getAnims(chart).items.push(...items);\n    }\n    has(chart) {\n      return this._getAnims(chart).items.length > 0;\n    }\n    start(chart) {\n      const anims = this._charts.get(chart);\n      if (!anims) {\n        return;\n      }\n      anims.running = true;\n      anims.start = Date.now();\n      anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n      this._refresh();\n    }\n    running(chart) {\n      if (!this._running) {\n        return false;\n      }\n      const anims = this._charts.get(chart);\n      if (!anims || !anims.running || !anims.items.length) {\n        return false;\n      }\n      return true;\n    }\n    stop(chart) {\n      const anims = this._charts.get(chart);\n      if (!anims || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      for (; i >= 0; --i) {\n        items[i].cancel();\n      }\n      anims.items = [];\n      this._notify(chart, anims, Date.now(), 'complete');\n    }\n    remove(chart) {\n      return this._charts.delete(chart);\n    }\n  }\n  var animator = new Animator();\n\n  /*!\n   * @kurkle/color v0.2.1\n   * https://github.com/kurkle/color#readme\n   * (c) 2022 Jukka Kurkela\n   * Released under the MIT License\n   */\n  function round(v) {\n    return v + 0.5 | 0;\n  }\n  const lim = (v, l, h) => Math.max(Math.min(v, h), l);\n  function p2b(v) {\n    return lim(round(v * 2.55), 0, 255);\n  }\n  function n2b(v) {\n    return lim(round(v * 255), 0, 255);\n  }\n  function b2n(v) {\n    return lim(round(v / 2.55) / 100, 0, 1);\n  }\n  function n2p(v) {\n    return lim(round(v * 100), 0, 100);\n  }\n  const map$1 = {\n    0: 0,\n    1: 1,\n    2: 2,\n    3: 3,\n    4: 4,\n    5: 5,\n    6: 6,\n    7: 7,\n    8: 8,\n    9: 9,\n    A: 10,\n    B: 11,\n    C: 12,\n    D: 13,\n    E: 14,\n    F: 15,\n    a: 10,\n    b: 11,\n    c: 12,\n    d: 13,\n    e: 14,\n    f: 15\n  };\n  const hex = [...'0123456789ABCDEF'];\n  const h1 = b => hex[b & 0xF];\n  const h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\n  const eq = b => (b & 0xF0) >> 4 === (b & 0xF);\n  const isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n  function hexParse(str) {\n    var len = str.length;\n    var ret;\n    if (str[0] === '#') {\n      if (len === 4 || len === 5) {\n        ret = {\n          r: 255 & map$1[str[1]] * 17,\n          g: 255 & map$1[str[2]] * 17,\n          b: 255 & map$1[str[3]] * 17,\n          a: len === 5 ? map$1[str[4]] * 17 : 255\n        };\n      } else if (len === 7 || len === 9) {\n        ret = {\n          r: map$1[str[1]] << 4 | map$1[str[2]],\n          g: map$1[str[3]] << 4 | map$1[str[4]],\n          b: map$1[str[5]] << 4 | map$1[str[6]],\n          a: len === 9 ? map$1[str[7]] << 4 | map$1[str[8]] : 255\n        };\n      }\n    }\n    return ret;\n  }\n  const alpha = (a, f) => a < 255 ? f(a) : '';\n  function hexString(v) {\n    var f = isShort(v) ? h1 : h2;\n    return v ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f) : undefined;\n  }\n  const HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\n  function hsl2rgbn(h, s, l) {\n    const a = s * Math.min(l, 1 - l);\n    const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n    return [f(0), f(8), f(4)];\n  }\n  function hsv2rgbn(h, s, v) {\n    const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n    return [f(5), f(3), f(1)];\n  }\n  function hwb2rgbn(h, w, b) {\n    const rgb = hsl2rgbn(h, 1, 0.5);\n    let i;\n    if (w + b > 1) {\n      i = 1 / (w + b);\n      w *= i;\n      b *= i;\n    }\n    for (i = 0; i < 3; i++) {\n      rgb[i] *= 1 - w - b;\n      rgb[i] += w;\n    }\n    return rgb;\n  }\n  function hueValue(r, g, b, d, max) {\n    if (r === max) {\n      return (g - b) / d + (g < b ? 6 : 0);\n    }\n    if (g === max) {\n      return (b - r) / d + 2;\n    }\n    return (r - g) / d + 4;\n  }\n  function rgb2hsl(v) {\n    const range = 255;\n    const r = v.r / range;\n    const g = v.g / range;\n    const b = v.b / range;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    const l = (max + min) / 2;\n    let h, s, d;\n    if (max !== min) {\n      d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n      h = hueValue(r, g, b, d, max);\n      h = h * 60 + 0.5;\n    }\n    return [h | 0, s || 0, l];\n  }\n  function calln(f, a, b, c) {\n    return (Array.isArray(a) ? f(a[0], a[1], a[2]) : f(a, b, c)).map(n2b);\n  }\n  function hsl2rgb(h, s, l) {\n    return calln(hsl2rgbn, h, s, l);\n  }\n  function hwb2rgb(h, w, b) {\n    return calln(hwb2rgbn, h, w, b);\n  }\n  function hsv2rgb(h, s, v) {\n    return calln(hsv2rgbn, h, s, v);\n  }\n  function hue(h) {\n    return (h % 360 + 360) % 360;\n  }\n  function hueParse(str) {\n    const m = HUE_RE.exec(str);\n    let a = 255;\n    let v;\n    if (!m) {\n      return;\n    }\n    if (m[5] !== v) {\n      a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n    }\n    const h = hue(+m[2]);\n    const p1 = +m[3] / 100;\n    const p2 = +m[4] / 100;\n    if (m[1] === 'hwb') {\n      v = hwb2rgb(h, p1, p2);\n    } else if (m[1] === 'hsv') {\n      v = hsv2rgb(h, p1, p2);\n    } else {\n      v = hsl2rgb(h, p1, p2);\n    }\n    return {\n      r: v[0],\n      g: v[1],\n      b: v[2],\n      a: a\n    };\n  }\n  function rotate(v, deg) {\n    var h = rgb2hsl(v);\n    h[0] = hue(h[0] + deg);\n    h = hsl2rgb(h);\n    v.r = h[0];\n    v.g = h[1];\n    v.b = h[2];\n  }\n  function hslString(v) {\n    if (!v) {\n      return;\n    }\n    const a = rgb2hsl(v);\n    const h = a[0];\n    const s = n2p(a[1]);\n    const l = n2p(a[2]);\n    return v.a < 255 ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})` : `hsl(${h}, ${s}%, ${l}%)`;\n  }\n  const map$2 = {\n    x: 'dark',\n    Z: 'light',\n    Y: 're',\n    X: 'blu',\n    W: 'gr',\n    V: 'medium',\n    U: 'slate',\n    A: 'ee',\n    T: 'ol',\n    S: 'or',\n    B: 'ra',\n    C: 'lateg',\n    D: 'ights',\n    R: 'in',\n    Q: 'turquois',\n    E: 'hi',\n    P: 'ro',\n    O: 'al',\n    N: 'le',\n    M: 'de',\n    L: 'yello',\n    F: 'en',\n    K: 'ch',\n    G: 'arks',\n    H: 'ea',\n    I: 'ightg',\n    J: 'wh'\n  };\n  const names$1 = {\n    OiceXe: 'f0f8ff',\n    antiquewEte: 'faebd7',\n    aqua: 'ffff',\n    aquamarRe: '7fffd4',\n    azuY: 'f0ffff',\n    beige: 'f5f5dc',\n    bisque: 'ffe4c4',\n    black: '0',\n    blanKedOmond: 'ffebcd',\n    Xe: 'ff',\n    XeviTet: '8a2be2',\n    bPwn: 'a52a2a',\n    burlywood: 'deb887',\n    caMtXe: '5f9ea0',\n    KartYuse: '7fff00',\n    KocTate: 'd2691e',\n    cSO: 'ff7f50',\n    cSnflowerXe: '6495ed',\n    cSnsilk: 'fff8dc',\n    crimson: 'dc143c',\n    cyan: 'ffff',\n    xXe: '8b',\n    xcyan: '8b8b',\n    xgTMnPd: 'b8860b',\n    xWay: 'a9a9a9',\n    xgYF: '6400',\n    xgYy: 'a9a9a9',\n    xkhaki: 'bdb76b',\n    xmagFta: '8b008b',\n    xTivegYF: '556b2f',\n    xSange: 'ff8c00',\n    xScEd: '9932cc',\n    xYd: '8b0000',\n    xsOmon: 'e9967a',\n    xsHgYF: '8fbc8f',\n    xUXe: '483d8b',\n    xUWay: '2f4f4f',\n    xUgYy: '2f4f4f',\n    xQe: 'ced1',\n    xviTet: '9400d3',\n    dAppRk: 'ff1493',\n    dApskyXe: 'bfff',\n    dimWay: '696969',\n    dimgYy: '696969',\n    dodgerXe: '1e90ff',\n    fiYbrick: 'b22222',\n    flSOwEte: 'fffaf0',\n    foYstWAn: '228b22',\n    fuKsia: 'ff00ff',\n    gaRsbSo: 'dcdcdc',\n    ghostwEte: 'f8f8ff',\n    gTd: 'ffd700',\n    gTMnPd: 'daa520',\n    Way: '808080',\n    gYF: '8000',\n    gYFLw: 'adff2f',\n    gYy: '808080',\n    honeyMw: 'f0fff0',\n    hotpRk: 'ff69b4',\n    RdianYd: 'cd5c5c',\n    Rdigo: '4b0082',\n    ivSy: 'fffff0',\n    khaki: 'f0e68c',\n    lavFMr: 'e6e6fa',\n    lavFMrXsh: 'fff0f5',\n    lawngYF: '7cfc00',\n    NmoncEffon: 'fffacd',\n    ZXe: 'add8e6',\n    ZcSO: 'f08080',\n    Zcyan: 'e0ffff',\n    ZgTMnPdLw: 'fafad2',\n    ZWay: 'd3d3d3',\n    ZgYF: '90ee90',\n    ZgYy: 'd3d3d3',\n    ZpRk: 'ffb6c1',\n    ZsOmon: 'ffa07a',\n    ZsHgYF: '20b2aa',\n    ZskyXe: '87cefa',\n    ZUWay: '778899',\n    ZUgYy: '778899',\n    ZstAlXe: 'b0c4de',\n    ZLw: 'ffffe0',\n    lime: 'ff00',\n    limegYF: '32cd32',\n    lRF: 'faf0e6',\n    magFta: 'ff00ff',\n    maPon: '800000',\n    VaquamarRe: '66cdaa',\n    VXe: 'cd',\n    VScEd: 'ba55d3',\n    VpurpN: '9370db',\n    VsHgYF: '3cb371',\n    VUXe: '7b68ee',\n    VsprRggYF: 'fa9a',\n    VQe: '48d1cc',\n    VviTetYd: 'c71585',\n    midnightXe: '191970',\n    mRtcYam: 'f5fffa',\n    mistyPse: 'ffe4e1',\n    moccasR: 'ffe4b5',\n    navajowEte: 'ffdead',\n    navy: '80',\n    Tdlace: 'fdf5e6',\n    Tive: '808000',\n    TivedBb: '6b8e23',\n    Sange: 'ffa500',\n    SangeYd: 'ff4500',\n    ScEd: 'da70d6',\n    pOegTMnPd: 'eee8aa',\n    pOegYF: '98fb98',\n    pOeQe: 'afeeee',\n    pOeviTetYd: 'db7093',\n    papayawEp: 'ffefd5',\n    pHKpuff: 'ffdab9',\n    peru: 'cd853f',\n    pRk: 'ffc0cb',\n    plum: 'dda0dd',\n    powMrXe: 'b0e0e6',\n    purpN: '800080',\n    YbeccapurpN: '663399',\n    Yd: 'ff0000',\n    Psybrown: 'bc8f8f',\n    PyOXe: '4169e1',\n    saddNbPwn: '8b4513',\n    sOmon: 'fa8072',\n    sandybPwn: 'f4a460',\n    sHgYF: '2e8b57',\n    sHshell: 'fff5ee',\n    siFna: 'a0522d',\n    silver: 'c0c0c0',\n    skyXe: '87ceeb',\n    UXe: '6a5acd',\n    UWay: '708090',\n    UgYy: '708090',\n    snow: 'fffafa',\n    sprRggYF: 'ff7f',\n    stAlXe: '4682b4',\n    tan: 'd2b48c',\n    teO: '8080',\n    tEstN: 'd8bfd8',\n    tomato: 'ff6347',\n    Qe: '40e0d0',\n    viTet: 'ee82ee',\n    JHt: 'f5deb3',\n    wEte: 'ffffff',\n    wEtesmoke: 'f5f5f5',\n    Lw: 'ffff00',\n    LwgYF: '9acd32'\n  };\n  function unpack() {\n    const unpacked = {};\n    const keys = Object.keys(names$1);\n    const tkeys = Object.keys(map$2);\n    let i, j, k, ok, nk;\n    for (i = 0; i < keys.length; i++) {\n      ok = nk = keys[i];\n      for (j = 0; j < tkeys.length; j++) {\n        k = tkeys[j];\n        nk = nk.replace(k, map$2[k]);\n      }\n      k = parseInt(names$1[ok], 16);\n      unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n    }\n    return unpacked;\n  }\n  let names;\n  function nameParse(str) {\n    if (!names) {\n      names = unpack();\n      names.transparent = [0, 0, 0, 0];\n    }\n    const a = names[str.toLowerCase()];\n    return a && {\n      r: a[0],\n      g: a[1],\n      b: a[2],\n      a: a.length === 4 ? a[3] : 255\n    };\n  }\n  const RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\n  function rgbParse(str) {\n    const m = RGB_RE.exec(str);\n    let a = 255;\n    let r, g, b;\n    if (!m) {\n      return;\n    }\n    if (m[7] !== r) {\n      const v = +m[7];\n      a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n    }\n    r = +m[1];\n    g = +m[3];\n    b = +m[5];\n    r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n    g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n    b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n    return {\n      r: r,\n      g: g,\n      b: b,\n      a: a\n    };\n  }\n  function rgbString(v) {\n    return v && (v.a < 255 ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})` : `rgb(${v.r}, ${v.g}, ${v.b})`);\n  }\n  const to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\n  const from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\n  function interpolate$1(rgb1, rgb2, t) {\n    const r = from(b2n(rgb1.r));\n    const g = from(b2n(rgb1.g));\n    const b = from(b2n(rgb1.b));\n    return {\n      r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n      g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n      b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n      a: rgb1.a + t * (rgb2.a - rgb1.a)\n    };\n  }\n  function modHSL(v, i, ratio) {\n    if (v) {\n      let tmp = rgb2hsl(v);\n      tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n      tmp = hsl2rgb(tmp);\n      v.r = tmp[0];\n      v.g = tmp[1];\n      v.b = tmp[2];\n    }\n  }\n  function clone(v, proto) {\n    return v ? Object.assign(proto || {}, v) : v;\n  }\n  function fromObject(input) {\n    var v = {\n      r: 0,\n      g: 0,\n      b: 0,\n      a: 255\n    };\n    if (Array.isArray(input)) {\n      if (input.length >= 3) {\n        v = {\n          r: input[0],\n          g: input[1],\n          b: input[2],\n          a: 255\n        };\n        if (input.length > 3) {\n          v.a = n2b(input[3]);\n        }\n      }\n    } else {\n      v = clone(input, {\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 1\n      });\n      v.a = n2b(v.a);\n    }\n    return v;\n  }\n  function functionParse(str) {\n    if (str.charAt(0) === 'r') {\n      return rgbParse(str);\n    }\n    return hueParse(str);\n  }\n  class Color {\n    constructor(input) {\n      if (input instanceof Color) {\n        return input;\n      }\n      const type = typeof input;\n      let v;\n      if (type === 'object') {\n        v = fromObject(input);\n      } else if (type === 'string') {\n        v = hexParse(input) || nameParse(input) || functionParse(input);\n      }\n      this._rgb = v;\n      this._valid = !!v;\n    }\n    get valid() {\n      return this._valid;\n    }\n    get rgb() {\n      var v = clone(this._rgb);\n      if (v) {\n        v.a = b2n(v.a);\n      }\n      return v;\n    }\n    set rgb(obj) {\n      this._rgb = fromObject(obj);\n    }\n    rgbString() {\n      return this._valid ? rgbString(this._rgb) : undefined;\n    }\n    hexString() {\n      return this._valid ? hexString(this._rgb) : undefined;\n    }\n    hslString() {\n      return this._valid ? hslString(this._rgb) : undefined;\n    }\n    mix(color, weight) {\n      if (color) {\n        const c1 = this.rgb;\n        const c2 = color.rgb;\n        let w2;\n        const p = weight === w2 ? 0.5 : weight;\n        const w = 2 * p - 1;\n        const a = c1.a - c2.a;\n        const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n        w2 = 1 - w1;\n        c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n        c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n        c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n        c1.a = p * c1.a + (1 - p) * c2.a;\n        this.rgb = c1;\n      }\n      return this;\n    }\n    interpolate(color, t) {\n      if (color) {\n        this._rgb = interpolate$1(this._rgb, color._rgb, t);\n      }\n      return this;\n    }\n    clone() {\n      return new Color(this.rgb);\n    }\n    alpha(a) {\n      this._rgb.a = n2b(a);\n      return this;\n    }\n    clearer(ratio) {\n      const rgb = this._rgb;\n      rgb.a *= 1 - ratio;\n      return this;\n    }\n    greyscale() {\n      const rgb = this._rgb;\n      const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n      rgb.r = rgb.g = rgb.b = val;\n      return this;\n    }\n    opaquer(ratio) {\n      const rgb = this._rgb;\n      rgb.a *= 1 + ratio;\n      return this;\n    }\n    negate() {\n      const v = this._rgb;\n      v.r = 255 - v.r;\n      v.g = 255 - v.g;\n      v.b = 255 - v.b;\n      return this;\n    }\n    lighten(ratio) {\n      modHSL(this._rgb, 2, ratio);\n      return this;\n    }\n    darken(ratio) {\n      modHSL(this._rgb, 2, -ratio);\n      return this;\n    }\n    saturate(ratio) {\n      modHSL(this._rgb, 1, ratio);\n      return this;\n    }\n    desaturate(ratio) {\n      modHSL(this._rgb, 1, -ratio);\n      return this;\n    }\n    rotate(deg) {\n      rotate(this._rgb, deg);\n      return this;\n    }\n  }\n  function index_esm(input) {\n    return new Color(input);\n  }\n  function isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n      const type = value.toString();\n      return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n  }\n  function color(value) {\n    return isPatternOrGradient(value) ? value : index_esm(value);\n  }\n  function getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : index_esm(value).saturate(0.5).darken(0.1).hexString();\n  }\n  const overrides = Object.create(null);\n  const descriptors = Object.create(null);\n  function getScope$1(node, key) {\n    if (!key) {\n      return node;\n    }\n    const keys = key.split('.');\n    for (let i = 0, n = keys.length; i < n; ++i) {\n      const k = keys[i];\n      node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n  }\n  function set(root, scope, values) {\n    if (typeof scope === 'string') {\n      return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n  }\n  class Defaults {\n    constructor(_descriptors) {\n      this.animation = undefined;\n      this.backgroundColor = 'rgba(0,0,0,0.1)';\n      this.borderColor = 'rgba(0,0,0,0.1)';\n      this.color = '#666';\n      this.datasets = {};\n      this.devicePixelRatio = context => context.chart.platform.getDevicePixelRatio();\n      this.elements = {};\n      this.events = ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'];\n      this.font = {\n        family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n        size: 12,\n        style: 'normal',\n        lineHeight: 1.2,\n        weight: null\n      };\n      this.hover = {};\n      this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n      this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n      this.hoverColor = (ctx, options) => getHoverColor(options.color);\n      this.indexAxis = 'x';\n      this.interaction = {\n        mode: 'nearest',\n        intersect: true,\n        includeInvisible: false\n      };\n      this.maintainAspectRatio = true;\n      this.onHover = null;\n      this.onClick = null;\n      this.parsing = true;\n      this.plugins = {};\n      this.responsive = true;\n      this.scale = undefined;\n      this.scales = {};\n      this.showLine = true;\n      this.drawActiveElementsOnTop = true;\n      this.describe(_descriptors);\n    }\n    set(scope, values) {\n      return set(this, scope, values);\n    }\n    get(scope) {\n      return getScope$1(this, scope);\n    }\n    describe(scope, values) {\n      return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n      return set(overrides, scope, values);\n    }\n    route(scope, name, targetScope, targetName) {\n      const scopeObject = getScope$1(this, scope);\n      const targetScopeObject = getScope$1(this, targetScope);\n      const privateName = '_' + name;\n      Object.defineProperties(scopeObject, {\n        [privateName]: {\n          value: scopeObject[name],\n          writable: true\n        },\n        [name]: {\n          enumerable: true,\n          get() {\n            const local = this[privateName];\n            const target = targetScopeObject[targetName];\n            if (isObject(local)) {\n              return Object.assign({}, target, local);\n            }\n            return valueOrDefault(local, target);\n          },\n          set(value) {\n            this[privateName] = value;\n          }\n        }\n      });\n    }\n  }\n  var defaults = new Defaults({\n    _scriptable: name => !name.startsWith('on'),\n    _indexable: name => name !== 'events',\n    hover: {\n      _fallback: 'interaction'\n    },\n    interaction: {\n      _scriptable: false,\n      _indexable: false\n    }\n  });\n  function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n  }\n  function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n      parent = parent.host;\n    }\n    return parent;\n  }\n  function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n      valueInPixels = parseInt(styleValue, 10);\n      if (styleValue.indexOf('%') !== -1) {\n        valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n      }\n    } else {\n      valueInPixels = styleValue;\n    }\n    return valueInPixels;\n  }\n  const getComputedStyle = element => window.getComputedStyle(element, null);\n  function getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n  }\n  const positions = ['top', 'right', 'bottom', 'left'];\n  function getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for (let i = 0; i < 4; i++) {\n      const pos = positions[i];\n      result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n  }\n  const useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\n  function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const {\n      offsetX,\n      offsetY\n    } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n      x = offsetX;\n      y = offsetY;\n    } else {\n      const rect = canvas.getBoundingClientRect();\n      x = source.clientX - rect.left;\n      y = source.clientY - rect.top;\n      box = true;\n    }\n    return {\n      x,\n      y,\n      box\n    };\n  }\n  function getRelativePosition(evt, chart) {\n    if ('native' in evt) {\n      return evt;\n    }\n    const {\n      canvas,\n      currentDevicePixelRatio\n    } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const {\n      x,\n      y,\n      box\n    } = getCanvasPosition(evt, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let {\n      width,\n      height\n    } = chart;\n    if (borderBox) {\n      width -= paddings.width + borders.width;\n      height -= paddings.height + borders.height;\n    }\n    return {\n      x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n      y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n  }\n  function getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n      const container = _getParentNode(canvas);\n      if (!container) {\n        width = canvas.clientWidth;\n        height = canvas.clientHeight;\n      } else {\n        const rect = container.getBoundingClientRect();\n        const containerStyle = getComputedStyle(container);\n        const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n        const containerPadding = getPositionedStyle(containerStyle, 'padding');\n        width = rect.width - containerPadding.width - containerBorder.width;\n        height = rect.height - containerPadding.height - containerBorder.height;\n        maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n        maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n      }\n    }\n    return {\n      width,\n      height,\n      maxWidth: maxWidth || INFINITY,\n      maxHeight: maxHeight || INFINITY\n    };\n  }\n  const round1 = v => Math.round(v * 10) / 10;\n  function getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let {\n      width,\n      height\n    } = containerSize;\n    if (style.boxSizing === 'content-box') {\n      const borders = getPositionedStyle(style, 'border', 'width');\n      const paddings = getPositionedStyle(style, 'padding');\n      width -= paddings.width + borders.width;\n      height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n      height = round1(width / 2);\n    }\n    return {\n      width,\n      height\n    };\n  }\n  function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = deviceHeight / pixelRatio;\n    chart.width = deviceWidth / pixelRatio;\n    const canvas = chart.canvas;\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n      canvas.style.height = `${chart.height}px`;\n      canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n      chart.currentDevicePixelRatio = pixelRatio;\n      canvas.height = deviceHeight;\n      canvas.width = deviceWidth;\n      chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n      return true;\n    }\n    return false;\n  }\n  const supportsEventListenerOptions = function () {\n    let passiveSupported = false;\n    try {\n      const options = {\n        get passive() {\n          passiveSupported = true;\n          return false;\n        }\n      };\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    } catch (e) {}\n    return passiveSupported;\n  }();\n  function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n  }\n  function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n      return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n      textWidth = data[string] = ctx.measureText(string).width;\n      gc.push(string);\n    }\n    if (textWidth > longest) {\n      longest = textWidth;\n    }\n    return longest;\n  }\n  function _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n      data = cache.data = {};\n      gc = cache.garbageCollect = [];\n      cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for (i = 0; i < ilen; i++) {\n      thing = arrayOfThings[i];\n      if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n        longest = _measureText(ctx, data, gc, longest, thing);\n      } else if (isArray(thing)) {\n        for (j = 0, jlen = thing.length; j < jlen; j++) {\n          nestedThing = thing[j];\n          if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n            longest = _measureText(ctx, data, gc, longest, nestedThing);\n          }\n        }\n      }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n      for (i = 0; i < gcLen; i++) {\n        delete data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n    return longest;\n  }\n  function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n  }\n  function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n  }\n  function drawPoint(ctx, options, x, y) {\n    drawPointLegend(ctx, options, x, y, null);\n  }\n  function drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n      type = style.toString();\n      if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.rotate(rad);\n        ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n        ctx.restore();\n        return;\n      }\n    }\n    if (isNaN(radius) || radius <= 0) {\n      return;\n    }\n    ctx.beginPath();\n    switch (style) {\n      default:\n        if (w) {\n          ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n        } else {\n          ctx.arc(x, y, radius, 0, TAU);\n        }\n        ctx.closePath();\n        break;\n      case 'triangle':\n        ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n        rad += TWO_THIRDS_PI;\n        ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n        rad += TWO_THIRDS_PI;\n        ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n        ctx.closePath();\n        break;\n      case 'rectRounded':\n        cornerRadius = radius * 0.516;\n        size = radius - cornerRadius;\n        xOffset = Math.cos(rad + QUARTER_PI) * size;\n        yOffset = Math.sin(rad + QUARTER_PI) * size;\n        ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n        ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n        ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n        ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n        ctx.closePath();\n        break;\n      case 'rect':\n        if (!rotation) {\n          size = Math.SQRT1_2 * radius;\n          width = w ? w / 2 : size;\n          ctx.rect(x - width, y - size, 2 * width, 2 * size);\n          break;\n        }\n        rad += QUARTER_PI;\n      case 'rectRot':\n        xOffset = Math.cos(rad) * radius;\n        yOffset = Math.sin(rad) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + yOffset, y - xOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        ctx.lineTo(x - yOffset, y + xOffset);\n        ctx.closePath();\n        break;\n      case 'crossRot':\n        rad += QUARTER_PI;\n      case 'cross':\n        xOffset = Math.cos(rad) * radius;\n        yOffset = Math.sin(rad) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        ctx.moveTo(x + yOffset, y - xOffset);\n        ctx.lineTo(x - yOffset, y + xOffset);\n        break;\n      case 'star':\n        xOffset = Math.cos(rad) * radius;\n        yOffset = Math.sin(rad) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        ctx.moveTo(x + yOffset, y - xOffset);\n        ctx.lineTo(x - yOffset, y + xOffset);\n        rad += QUARTER_PI;\n        xOffset = Math.cos(rad) * radius;\n        yOffset = Math.sin(rad) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        ctx.moveTo(x + yOffset, y - xOffset);\n        ctx.lineTo(x - yOffset, y + xOffset);\n        break;\n      case 'line':\n        xOffset = w ? w / 2 : Math.cos(rad) * radius;\n        yOffset = Math.sin(rad) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        break;\n      case 'dash':\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n        break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5;\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n  }\n  function clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n  }\n  function unclipArea(ctx) {\n    ctx.restore();\n  }\n  function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n      return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n      const midpoint = (previous.x + target.x) / 2.0;\n      ctx.lineTo(midpoint, previous.y);\n      ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n      ctx.lineTo(previous.x, target.y);\n    } else {\n      ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n  }\n  function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n      return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n  }\n  function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [text];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for (i = 0; i < lines.length; ++i) {\n      line = lines[i];\n      if (stroke) {\n        if (opts.strokeColor) {\n          ctx.strokeStyle = opts.strokeColor;\n        }\n        if (!isNullOrUndef(opts.strokeWidth)) {\n          ctx.lineWidth = opts.strokeWidth;\n        }\n        ctx.strokeText(line, x, y, opts.maxWidth);\n      }\n      ctx.fillText(line, x, y, opts.maxWidth);\n      decorateText(ctx, x, y, line, opts);\n      y += font.lineHeight;\n    }\n    ctx.restore();\n  }\n  function setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n      ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n      ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n      ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n      ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n      ctx.textBaseline = opts.textBaseline;\n    }\n  }\n  function decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n      const metrics = ctx.measureText(line);\n      const left = x - metrics.actualBoundingBoxLeft;\n      const right = x + metrics.actualBoundingBoxRight;\n      const top = y - metrics.actualBoundingBoxAscent;\n      const bottom = y + metrics.actualBoundingBoxDescent;\n      const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n      ctx.strokeStyle = ctx.fillStyle;\n      ctx.beginPath();\n      ctx.lineWidth = opts.decorationWidth || 2;\n      ctx.moveTo(left, yDecoration);\n      ctx.lineTo(right, yDecoration);\n      ctx.stroke();\n    }\n  }\n  function addRoundedRectPath(ctx, rect) {\n    const {\n      x,\n      y,\n      w,\n      h,\n      radius\n    } = rect;\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    ctx.lineTo(x + w, y + radius.topRight);\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    ctx.lineTo(x + radius.topLeft, y);\n  }\n  function _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n    if (!defined(fallback)) {\n      fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n      [Symbol.toStringTag]: 'Object',\n      _cacheable: true,\n      _scopes: scopes,\n      _rootScopes: rootScopes,\n      _fallback: fallback,\n      _getTarget: getTarget,\n      override: scope => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback)\n    };\n    return new Proxy(cache, {\n      deleteProperty(target, prop) {\n        delete target[prop];\n        delete target._keys;\n        delete scopes[0][prop];\n        return true;\n      },\n      get(target, prop) {\n        return _cached(target, prop, () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n      },\n      getOwnPropertyDescriptor(target, prop) {\n        return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n      },\n      getPrototypeOf() {\n        return Reflect.getPrototypeOf(scopes[0]);\n      },\n      has(target, prop) {\n        return getKeysFromAllScopes(target).includes(prop);\n      },\n      ownKeys(target) {\n        return getKeysFromAllScopes(target);\n      },\n      set(target, prop, value) {\n        const storage = target._storage || (target._storage = getTarget());\n        target[prop] = storage[prop] = value;\n        delete target._keys;\n        return true;\n      }\n    });\n  }\n  function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n      _cacheable: false,\n      _proxy: proxy,\n      _context: context,\n      _subProxy: subProxy,\n      _stack: new Set(),\n      _descriptors: _descriptors(proxy, descriptorDefaults),\n      setContext: ctx => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n      override: scope => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n      deleteProperty(target, prop) {\n        delete target[prop];\n        delete proxy[prop];\n        return true;\n      },\n      get(target, prop, receiver) {\n        return _cached(target, prop, () => _resolveWithContext(target, prop, receiver));\n      },\n      getOwnPropertyDescriptor(target, prop) {\n        return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n          enumerable: true,\n          configurable: true\n        } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n      },\n      getPrototypeOf() {\n        return Reflect.getPrototypeOf(proxy);\n      },\n      has(target, prop) {\n        return Reflect.has(proxy, prop);\n      },\n      ownKeys() {\n        return Reflect.ownKeys(proxy);\n      },\n      set(target, prop, value) {\n        proxy[prop] = value;\n        delete target[prop];\n        return true;\n      }\n    });\n  }\n  function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n  }) {\n    const {\n      _scriptable = defaults.scriptable,\n      _indexable = defaults.indexable,\n      _allKeys = defaults.allKeys\n    } = proxy;\n    return {\n      allKeys: _allKeys,\n      scriptable: _scriptable,\n      indexable: _indexable,\n      isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n      isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n    };\n  }\n  const readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\n  const needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\n  function _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n      return target[prop];\n    }\n    const value = resolve();\n    target[prop] = value;\n    return value;\n  }\n  function _resolveWithContext(target, prop, receiver) {\n    const {\n      _proxy,\n      _context,\n      _subProxy,\n      _descriptors: descriptors\n    } = target;\n    let value = _proxy[prop];\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n      value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n      value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n      value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n  }\n  function _resolveScriptable(prop, value, target, receiver) {\n    const {\n      _proxy,\n      _context,\n      _subProxy,\n      _stack\n    } = target;\n    if (_stack.has(prop)) {\n      throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    value = value(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n      value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n  }\n  function _resolveArray(prop, value, target, isIndexable) {\n    const {\n      _proxy,\n      _context,\n      _subProxy,\n      _descriptors: descriptors\n    } = target;\n    if (defined(_context.index) && isIndexable(prop)) {\n      value = value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n      const arr = value;\n      const scopes = _proxy._scopes.filter(s => s !== arr);\n      value = [];\n      for (const item of arr) {\n        const resolver = createSubResolver(scopes, _proxy, prop, item);\n        value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n      }\n    }\n    return value;\n  }\n  function resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n  }\n  const getScope = (key, parent) => key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n  function addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes) {\n      const scope = getScope(key, parent);\n      if (scope) {\n        set.add(scope);\n        const fallback = resolveFallback(scope._fallback, key, value);\n        if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n          return fallback;\n        }\n      } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n        return null;\n      }\n    }\n    return false;\n  }\n  function createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [...parentScopes, ...rootScopes];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n      return false;\n    }\n    if (defined(fallback) && fallback !== prop) {\n      key = addScopesFromKey(set, allScopes, fallback, key, value);\n      if (key === null) {\n        return false;\n      }\n    }\n    return _createResolver(Array.from(set), [''], rootScopes, fallback, () => subGetTarget(resolver, prop, value));\n  }\n  function addScopesFromKey(set, allScopes, key, fallback, item) {\n    while (key) {\n      key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n  }\n  function subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n      parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n      return value;\n    }\n    return target;\n  }\n  function _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes) {\n      value = _resolve(readKey(prefix, prop), scopes);\n      if (defined(value)) {\n        return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n      }\n    }\n  }\n  function _resolve(key, scopes) {\n    for (const scope of scopes) {\n      if (!scope) {\n        continue;\n      }\n      const value = scope[key];\n      if (defined(value)) {\n        return value;\n      }\n    }\n  }\n  function getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n      keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n  }\n  function resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes) {\n      for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n        set.add(key);\n      }\n    }\n    return Array.from(set);\n  }\n  function _parseObjectDataRadialScale(meta, data, start, count) {\n    const {\n      iScale\n    } = meta;\n    const {\n      key = 'r'\n    } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        r: iScale.parse(resolveObjectKey(item, key), index)\n      };\n    }\n    return parsed;\n  }\n  const EPSILON = Number.EPSILON || 1e-14;\n  const getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\n  const getValueAxis = indexAxis => indexAxis === 'x' ? 'y' : 'x';\n  function splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01;\n    const fb = t * s12;\n    return {\n      previous: {\n        x: current.x - fa * (next.x - previous.x),\n        y: current.y - fa * (next.y - previous.y)\n      },\n      next: {\n        x: current.x + fb * (next.x - previous.x),\n        y: current.y + fb * (next.y - previous.y)\n      }\n    };\n  }\n  function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for (let i = 0; i < pointsLen - 1; ++i) {\n      pointCurrent = pointAfter;\n      pointAfter = getPoint(points, i + 1);\n      if (!pointCurrent || !pointAfter) {\n        continue;\n      }\n      if (almostEquals(deltaK[i], 0, EPSILON)) {\n        mK[i] = mK[i + 1] = 0;\n        continue;\n      }\n      alphaK = mK[i] / deltaK[i];\n      betaK = mK[i + 1] / deltaK[i];\n      squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n      if (squaredMagnitude <= 9) {\n        continue;\n      }\n      tauK = 3 / Math.sqrt(squaredMagnitude);\n      mK[i] = alphaK * tauK * deltaK[i];\n      mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n  }\n  function monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for (let i = 0; i < pointsLen; ++i) {\n      pointBefore = pointCurrent;\n      pointCurrent = pointAfter;\n      pointAfter = getPoint(points, i + 1);\n      if (!pointCurrent) {\n        continue;\n      }\n      const iPixel = pointCurrent[indexAxis];\n      const vPixel = pointCurrent[valueAxis];\n      if (pointBefore) {\n        delta = (iPixel - pointBefore[indexAxis]) / 3;\n        pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n        pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n      }\n      if (pointAfter) {\n        delta = (pointAfter[indexAxis] - iPixel) / 3;\n        pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n        pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n      }\n    }\n  }\n  function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for (i = 0; i < pointsLen; ++i) {\n      pointBefore = pointCurrent;\n      pointCurrent = pointAfter;\n      pointAfter = getPoint(points, i + 1);\n      if (!pointCurrent) {\n        continue;\n      }\n      if (pointAfter) {\n        const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n        deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n      }\n      mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n  }\n  function capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n  }\n  function capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      inAreaPrev = inArea;\n      inArea = inAreaNext;\n      inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n      if (!inArea) {\n        continue;\n      }\n      point = points[i];\n      if (inAreaPrev) {\n        point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n        point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n      }\n      if (inAreaNext) {\n        point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n        point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n      }\n    }\n  }\n  function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    if (options.spanGaps) {\n      points = points.filter(pt => !pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n      splineCurveMonotone(points, indexAxis);\n    } else {\n      let prev = loop ? points[points.length - 1] : points[0];\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        point = points[i];\n        controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n        point.cp1x = controlPoints.previous.x;\n        point.cp1y = controlPoints.previous.y;\n        point.cp2x = controlPoints.next.x;\n        point.cp2y = controlPoints.next.y;\n        prev = point;\n      }\n    }\n    if (options.capBezierPoints) {\n      capBezierPoints(points, area);\n    }\n  }\n  const atEdge = t => t === 0 || t === 1;\n  const elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\n  const elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n  const effects = {\n    linear: t => t,\n    easeInQuad: t => t * t,\n    easeOutQuad: t => -t * (t - 2),\n    easeInOutQuad: t => (t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: t => t * t * t,\n    easeOutCubic: t => (t -= 1) * t * t + 1,\n    easeInOutCubic: t => (t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: t => t * t * t * t,\n    easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n    easeInOutQuart: t => (t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: t => t * t * t * t * t,\n    easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: t => (t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n    easeOutSine: t => Math.sin(t * HALF_PI),\n    easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: t => t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: t => t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: t => atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: t => t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: t => (t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic(t) {\n      const s = 0.1125;\n      const p = 0.45;\n      return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack(t) {\n      const s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack(t) {\n      const s = 1.70158;\n      return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack(t) {\n      let s = 1.70158;\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n    easeOutBounce(t) {\n      const m = 7.5625;\n      const d = 2.75;\n      if (t < 1 / d) {\n        return m * t * t;\n      }\n      if (t < 2 / d) {\n        return m * (t -= 1.5 / d) * t + 0.75;\n      }\n      if (t < 2.5 / d) {\n        return m * (t -= 2.25 / d) * t + 0.9375;\n      }\n      return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: t => t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n  };\n  function _pointInLine(p1, p2, t, mode) {\n    return {\n      x: p1.x + t * (p2.x - p1.x),\n      y: p1.y + t * (p2.y - p1.y)\n    };\n  }\n  function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n      x: p1.x + t * (p2.x - p1.x),\n      y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n  }\n  function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n      x: p1.cp2x,\n      y: p1.cp2y\n    };\n    const cp2 = {\n      x: p2.cp1x,\n      y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n  }\n  const intlCache = new Map();\n  function getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n      formatter = new Intl.NumberFormat(locale, options);\n      intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n  }\n  function formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n  }\n  const LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n  const FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\n  function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n      return size * 1.2;\n    }\n    value = +matches[2];\n    switch (matches[3]) {\n      case 'px':\n        return value;\n      case '%':\n        value /= 100;\n        break;\n    }\n    return size * value;\n  }\n  const numberOrZero = v => +v || 0;\n  function _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? prop => valueOrDefault(value[prop], value[props[prop]]) : prop => value[prop] : () => value;\n    for (const prop of keys) {\n      ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n  }\n  function toTRBL(value) {\n    return _readValueToProps(value, {\n      top: 'y',\n      right: 'x',\n      bottom: 'y',\n      left: 'x'\n    });\n  }\n  function toTRBLCorners(value) {\n    return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n  }\n  function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n  }\n  function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n      size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n      console.warn('Invalid font style specified: \"' + style + '\"');\n      style = '';\n    }\n    const font = {\n      family: valueOrDefault(options.family, fallback.family),\n      lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n      size,\n      style,\n      weight: valueOrDefault(options.weight, fallback.weight),\n      string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n  }\n  function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n      value = inputs[i];\n      if (value === undefined) {\n        continue;\n      }\n      if (context !== undefined && typeof value === 'function') {\n        value = value(context);\n        cacheable = false;\n      }\n      if (index !== undefined && isArray(value)) {\n        value = value[index % value.length];\n        cacheable = false;\n      }\n      if (value !== undefined) {\n        if (info && !cacheable) {\n          info.cacheable = false;\n        }\n        return value;\n      }\n    }\n  }\n  function _addGrace(minmax, grace, beginAtZero) {\n    const {\n      min,\n      max\n    } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n    return {\n      min: keepZero(min, -Math.abs(change)),\n      max: keepZero(max, change)\n    };\n  }\n  function createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n  }\n  const getRightToLeftAdapter = function (rectX, width) {\n    return {\n      x(x) {\n        return rectX + rectX + width - x;\n      },\n      setWidth(w) {\n        width = w;\n      },\n      textAlign(align) {\n        if (align === 'center') {\n          return align;\n        }\n        return align === 'right' ? 'left' : 'right';\n      },\n      xPlus(x, value) {\n        return x - value;\n      },\n      leftForLtr(x, itemWidth) {\n        return x - itemWidth;\n      }\n    };\n  };\n  const getLeftToRightAdapter = function () {\n    return {\n      x(x) {\n        return x;\n      },\n      setWidth(w) {},\n      textAlign(align) {\n        return align;\n      },\n      xPlus(x, value) {\n        return x + value;\n      },\n      leftForLtr(x, _itemWidth) {\n        return x;\n      }\n    };\n  };\n  function getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n  }\n  function overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n      style = ctx.canvas.style;\n      original = [style.getPropertyValue('direction'), style.getPropertyPriority('direction')];\n      style.setProperty('direction', direction, 'important');\n      ctx.prevTextDirection = original;\n    }\n  }\n  function restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n      delete ctx.prevTextDirection;\n      ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n  }\n  function propertyFn(property) {\n    if (property === 'angle') {\n      return {\n        between: _angleBetween,\n        compare: _angleDiff,\n        normalize: _normalizeAngle\n      };\n    }\n    return {\n      between: _isBetween,\n      compare: (a, b) => a - b,\n      normalize: x => x\n    };\n  }\n  function normalizeSegment({\n    start,\n    end,\n    count,\n    loop,\n    style\n  }) {\n    return {\n      start: start % count,\n      end: end % count,\n      loop: loop && (end - start + 1) % count === 0,\n      style\n    };\n  }\n  function getSegment(segment, points, bounds) {\n    const {\n      property,\n      start: startBound,\n      end: endBound\n    } = bounds;\n    const {\n      between,\n      normalize\n    } = propertyFn(property);\n    const count = points.length;\n    let {\n      start,\n      end,\n      loop\n    } = segment;\n    let i, ilen;\n    if (loop) {\n      start += count;\n      end += count;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n          break;\n        }\n        start--;\n        end--;\n      }\n      start %= count;\n      end %= count;\n    }\n    if (end < start) {\n      end += count;\n    }\n    return {\n      start,\n      end,\n      loop,\n      style: segment.style\n    };\n  }\n  function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n      return [segment];\n    }\n    const {\n      property,\n      start: startBound,\n      end: endBound\n    } = bounds;\n    const count = points.length;\n    const {\n      compare,\n      between,\n      normalize\n    } = propertyFn(property);\n    const {\n      start,\n      end,\n      loop,\n      style\n    } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = () => inside || startIsBefore();\n    const shouldStop = () => !inside || endIsBefore();\n    for (let i = start, prev = start; i <= end; ++i) {\n      point = points[i % count];\n      if (point.skip) {\n        continue;\n      }\n      value = normalize(point[property]);\n      if (value === prevValue) {\n        continue;\n      }\n      inside = between(value, startBound, endBound);\n      if (subStart === null && shouldStart()) {\n        subStart = compare(value, startBound) === 0 ? i : prev;\n      }\n      if (subStart !== null && shouldStop()) {\n        result.push(normalizeSegment({\n          start: subStart,\n          end: i,\n          loop,\n          count,\n          style\n        }));\n        subStart = null;\n      }\n      prev = i;\n      prevValue = value;\n    }\n    if (subStart !== null) {\n      result.push(normalizeSegment({\n        start: subStart,\n        end,\n        loop,\n        count,\n        style\n      }));\n    }\n    return result;\n  }\n  function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for (let i = 0; i < segments.length; i++) {\n      const sub = _boundSegment(segments[i], line.points, bounds);\n      if (sub.length) {\n        result.push(...sub);\n      }\n    }\n    return result;\n  }\n  function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n      while (start < count && !points[start].skip) {\n        start++;\n      }\n    }\n    while (start < count && points[start].skip) {\n      start++;\n    }\n    start %= count;\n    if (loop) {\n      end += start;\n    }\n    while (end > start && points[end % count].skip) {\n      end--;\n    }\n    end %= count;\n    return {\n      start,\n      end\n    };\n  }\n  function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for (end = start + 1; end <= max; ++end) {\n      const cur = points[end % count];\n      if (cur.skip || cur.stop) {\n        if (!prev.skip) {\n          loop = false;\n          result.push({\n            start: start % count,\n            end: (end - 1) % count,\n            loop\n          });\n          start = last = cur.stop ? end : null;\n        }\n      } else {\n        last = end;\n        if (prev.skip) {\n          start = end;\n        }\n      }\n      prev = cur;\n    }\n    if (last !== null) {\n      result.push({\n        start: start % count,\n        end: last % count,\n        loop\n      });\n    }\n    return result;\n  }\n  function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n      return [];\n    }\n    const loop = !!line._loop;\n    const {\n      start,\n      end\n    } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n      return splitByStyles(line, [{\n        start,\n        end,\n        loop\n      }], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n  }\n  function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n      return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n  }\n  function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const {\n      _datasetIndex: datasetIndex,\n      options: {\n        spanGaps\n      }\n    } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n      const dir = spanGaps ? -1 : 1;\n      if (s === e) {\n        return;\n      }\n      s += count;\n      while (points[s % count].skip) {\n        s -= dir;\n      }\n      while (points[e % count].skip) {\n        e += dir;\n      }\n      if (s % count !== e % count) {\n        result.push({\n          start: s % count,\n          end: e % count,\n          loop: l,\n          style: st\n        });\n        prevStyle = st;\n        start = e % count;\n      }\n    }\n    for (const segment of segments) {\n      start = spanGaps ? start : segment.start;\n      let prev = points[start % count];\n      let style;\n      for (i = start + 1; i <= segment.end; i++) {\n        const pt = points[i % count];\n        style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n          type: 'segment',\n          p0: prev,\n          p1: pt,\n          p0DataIndex: (i - 1) % count,\n          p1DataIndex: i % count,\n          datasetIndex\n        })));\n        if (styleChanged(style, prevStyle)) {\n          addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n        prev = pt;\n        prevStyle = style;\n      }\n      if (start < i - 1) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n    }\n    return result;\n  }\n  function readStyle(options) {\n    return {\n      backgroundColor: options.backgroundColor,\n      borderCapStyle: options.borderCapStyle,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderJoinStyle: options.borderJoinStyle,\n      borderWidth: options.borderWidth,\n      borderColor: options.borderColor\n    };\n  }\n  function styleChanged(style, prevStyle) {\n    return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n  }\n  var helpers = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    easingEffects: effects,\n    isPatternOrGradient: isPatternOrGradient,\n    color: color,\n    getHoverColor: getHoverColor,\n    noop: noop,\n    uid: uid,\n    isNullOrUndef: isNullOrUndef,\n    isArray: isArray,\n    isObject: isObject,\n    isFinite: isNumberFinite,\n    finiteOrDefault: finiteOrDefault,\n    valueOrDefault: valueOrDefault,\n    toPercentage: toPercentage,\n    toDimension: toDimension,\n    callback: callback,\n    each: each,\n    _elementsEqual: _elementsEqual,\n    clone: clone$1,\n    _merger: _merger,\n    merge: merge,\n    mergeIf: mergeIf,\n    _mergerIf: _mergerIf,\n    _deprecated: _deprecated,\n    resolveObjectKey: resolveObjectKey,\n    _splitKey: _splitKey,\n    _capitalize: _capitalize,\n    defined: defined,\n    isFunction: isFunction,\n    setsEqual: setsEqual,\n    _isClickEvent: _isClickEvent,\n    toFontString: toFontString,\n    _measureText: _measureText,\n    _longestText: _longestText,\n    _alignPixel: _alignPixel,\n    clearCanvas: clearCanvas,\n    drawPoint: drawPoint,\n    drawPointLegend: drawPointLegend,\n    _isPointInArea: _isPointInArea,\n    clipArea: clipArea,\n    unclipArea: unclipArea,\n    _steppedLineTo: _steppedLineTo,\n    _bezierCurveTo: _bezierCurveTo,\n    renderText: renderText,\n    addRoundedRectPath: addRoundedRectPath,\n    _lookup: _lookup,\n    _lookupByKey: _lookupByKey,\n    _rlookupByKey: _rlookupByKey,\n    _filterBetween: _filterBetween,\n    listenArrayEvents: listenArrayEvents,\n    unlistenArrayEvents: unlistenArrayEvents,\n    _arrayUnique: _arrayUnique,\n    _createResolver: _createResolver,\n    _attachContext: _attachContext,\n    _descriptors: _descriptors,\n    _parseObjectDataRadialScale: _parseObjectDataRadialScale,\n    splineCurve: splineCurve,\n    splineCurveMonotone: splineCurveMonotone,\n    _updateBezierControlPoints: _updateBezierControlPoints,\n    _isDomSupported: _isDomSupported,\n    _getParentNode: _getParentNode,\n    getStyle: getStyle,\n    getRelativePosition: getRelativePosition,\n    getMaximumSize: getMaximumSize,\n    retinaScale: retinaScale,\n    supportsEventListenerOptions: supportsEventListenerOptions,\n    readUsedSize: readUsedSize,\n    fontString: fontString,\n    requestAnimFrame: requestAnimFrame,\n    throttled: throttled,\n    debounce: debounce,\n    _toLeftRightCenter: _toLeftRightCenter,\n    _alignStartEnd: _alignStartEnd,\n    _textX: _textX,\n    _getStartAndCountOfVisiblePoints: _getStartAndCountOfVisiblePoints,\n    _scaleRangesChanged: _scaleRangesChanged,\n    _pointInLine: _pointInLine,\n    _steppedInterpolation: _steppedInterpolation,\n    _bezierInterpolation: _bezierInterpolation,\n    formatNumber: formatNumber,\n    toLineHeight: toLineHeight,\n    _readValueToProps: _readValueToProps,\n    toTRBL: toTRBL,\n    toTRBLCorners: toTRBLCorners,\n    toPadding: toPadding,\n    toFont: toFont,\n    resolve: resolve,\n    _addGrace: _addGrace,\n    createContext: createContext,\n    PI: PI,\n    TAU: TAU,\n    PITAU: PITAU,\n    INFINITY: INFINITY,\n    RAD_PER_DEG: RAD_PER_DEG,\n    HALF_PI: HALF_PI,\n    QUARTER_PI: QUARTER_PI,\n    TWO_THIRDS_PI: TWO_THIRDS_PI,\n    log10: log10,\n    sign: sign,\n    niceNum: niceNum,\n    _factorize: _factorize,\n    isNumber: isNumber,\n    almostEquals: almostEquals,\n    almostWhole: almostWhole,\n    _setMinAndMaxByKey: _setMinAndMaxByKey,\n    toRadians: toRadians,\n    toDegrees: toDegrees,\n    _decimalPlaces: _decimalPlaces,\n    getAngleFromPoint: getAngleFromPoint,\n    distanceBetweenPoints: distanceBetweenPoints,\n    _angleDiff: _angleDiff,\n    _normalizeAngle: _normalizeAngle,\n    _angleBetween: _angleBetween,\n    _limitValue: _limitValue,\n    _int16Range: _int16Range,\n    _isBetween: _isBetween,\n    getRtlAdapter: getRtlAdapter,\n    overrideTextDirection: overrideTextDirection,\n    restoreTextDirection: restoreTextDirection,\n    _boundSegment: _boundSegment,\n    _boundSegments: _boundSegments,\n    _computeSegments: _computeSegments\n  });\n  function binarySearch(metaset, axis, value, intersect) {\n    const {\n      controller,\n      data,\n      _sorted\n    } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n      const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n      if (!intersect) {\n        return lookupMethod(data, axis, value);\n      } else if (controller._sharedOptions) {\n        const el = data[0];\n        const range = typeof el.getRange === 'function' && el.getRange(axis);\n        if (range) {\n          const start = lookupMethod(data, axis, value - range);\n          const end = lookupMethod(data, axis, value + range);\n          return {\n            lo: start.lo,\n            hi: end.hi\n          };\n        }\n      }\n    }\n    return {\n      lo: 0,\n      hi: data.length - 1\n    };\n  }\n  function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const {\n        index,\n        data\n      } = metasets[i];\n      const {\n        lo,\n        hi\n      } = binarySearch(metasets[i], axis, value, intersect);\n      for (let j = lo; j <= hi; ++j) {\n        const element = data[j];\n        if (!element.skip) {\n          handler(element, index, j);\n        }\n      }\n    }\n  }\n  function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n  function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n      return items;\n    }\n    const evaluationFunc = function (element, datasetIndex, index) {\n      if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n        return;\n      }\n      if (element.inRange(position.x, position.y, useFinalPosition)) {\n        items.push({\n          element,\n          datasetIndex,\n          index\n        });\n      }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n  }\n  function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n      const {\n        startAngle,\n        endAngle\n      } = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n      const {\n        angle\n      } = getAngleFromPoint(element, {\n        x: position.x,\n        y: position.y\n      });\n      if (_angleBetween(angle, startAngle, endAngle)) {\n        items.push({\n          element,\n          datasetIndex,\n          index\n        });\n      }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n  }\n  function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n      const inRange = element.inRange(position.x, position.y, useFinalPosition);\n      if (intersect && !inRange) {\n        return;\n      }\n      const center = element.getCenterPoint(useFinalPosition);\n      const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n      if (!pointInArea && !inRange) {\n        return;\n      }\n      const distance = distanceMetric(position, center);\n      if (distance < minDistance) {\n        items = [{\n          element,\n          datasetIndex,\n          index\n        }];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        items.push({\n          element,\n          datasetIndex,\n          index\n        });\n      }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n  }\n  function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n      return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n  }\n  function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n      if (element[rangeMethod](position[axis], useFinalPosition)) {\n        items.push({\n          element,\n          datasetIndex,\n          index\n        });\n        intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n      }\n    });\n    if (intersect && !intersectsItem) {\n      return [];\n    }\n    return items;\n  }\n  var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n      index(chart, e, options, useFinalPosition) {\n        const position = getRelativePosition(e, chart);\n        const axis = options.axis || 'x';\n        const includeInvisible = options.includeInvisible || false;\n        const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n        const elements = [];\n        if (!items.length) {\n          return [];\n        }\n        chart.getSortedVisibleDatasetMetas().forEach(meta => {\n          const index = items[0].index;\n          const element = meta.data[index];\n          if (element && !element.skip) {\n            elements.push({\n              element,\n              datasetIndex: meta.index,\n              index\n            });\n          }\n        });\n        return elements;\n      },\n      dataset(chart, e, options, useFinalPosition) {\n        const position = getRelativePosition(e, chart);\n        const axis = options.axis || 'xy';\n        const includeInvisible = options.includeInvisible || false;\n        let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n        if (items.length > 0) {\n          const datasetIndex = items[0].datasetIndex;\n          const data = chart.getDatasetMeta(datasetIndex).data;\n          items = [];\n          for (let i = 0; i < data.length; ++i) {\n            items.push({\n              element: data[i],\n              datasetIndex,\n              index: i\n            });\n          }\n        }\n        return items;\n      },\n      point(chart, e, options, useFinalPosition) {\n        const position = getRelativePosition(e, chart);\n        const axis = options.axis || 'xy';\n        const includeInvisible = options.includeInvisible || false;\n        return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n      },\n      nearest(chart, e, options, useFinalPosition) {\n        const position = getRelativePosition(e, chart);\n        const axis = options.axis || 'xy';\n        const includeInvisible = options.includeInvisible || false;\n        return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n      },\n      x(chart, e, options, useFinalPosition) {\n        const position = getRelativePosition(e, chart);\n        return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n      },\n      y(chart, e, options, useFinalPosition) {\n        const position = getRelativePosition(e, chart);\n        return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n      }\n    }\n  };\n  const STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n  function filterByPosition(array, position) {\n    return array.filter(v => v.pos === position);\n  }\n  function filterDynamicPositionByAxis(array, axis) {\n    return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n  }\n  function sortByWeight(array, reverse) {\n    return array.sort((a, b) => {\n      const v0 = reverse ? b : a;\n      const v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n  }\n  function wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n      box = boxes[i];\n      ({\n        position: pos,\n        options: {\n          stack,\n          stackWeight = 1\n        }\n      } = box);\n      layoutBoxes.push({\n        index: i,\n        box,\n        pos,\n        horizontal: box.isHorizontal(),\n        weight: box.weight,\n        stack: stack && pos + stack,\n        stackWeight\n      });\n    }\n    return layoutBoxes;\n  }\n  function buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts) {\n      const {\n        stack,\n        pos,\n        stackWeight\n      } = wrap;\n      if (!stack || !STATIC_POSITIONS.includes(pos)) {\n        continue;\n      }\n      const _stack = stacks[stack] || (stacks[stack] = {\n        count: 0,\n        placed: 0,\n        weight: 0,\n        size: 0\n      });\n      _stack.count++;\n      _stack.weight += stackWeight;\n    }\n    return stacks;\n  }\n  function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const {\n      vBoxMaxWidth,\n      hBoxMaxHeight\n    } = params;\n    let i, ilen, layout;\n    for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n      layout = layouts[i];\n      const {\n        fullSize\n      } = layout.box;\n      const stack = stacks[layout.stack];\n      const factor = stack && layout.stackWeight / stack.weight;\n      if (layout.horizontal) {\n        layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n        layout.height = hBoxMaxHeight;\n      } else {\n        layout.width = vBoxMaxWidth;\n        layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n      }\n    }\n    return stacks;\n  }\n  function buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n      fullSize,\n      leftAndTop: left.concat(top),\n      rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n      chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n      vertical: left.concat(right).concat(centerVertical),\n      horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n  }\n  function getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n  }\n  function updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n  }\n  function updateDims(chartArea, params, layout, stacks) {\n    const {\n      pos,\n      box\n    } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n      if (layout.size) {\n        chartArea[pos] -= layout.size;\n      }\n      const stack = stacks[layout.stack] || {\n        size: 0,\n        count: 1\n      };\n      stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n      layout.size = stack.size / stack.count;\n      chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n      updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n      same: widthChanged,\n      other: heightChanged\n    } : {\n      same: heightChanged,\n      other: widthChanged\n    };\n  }\n  function handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n      const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n      chartArea[pos] += change;\n      return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n  }\n  function getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n      const margin = {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      };\n      positions.forEach(pos => {\n        margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n      });\n      return margin;\n    }\n    return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n  }\n  function fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n      layout = boxes[i];\n      box = layout.box;\n      box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n      const {\n        same,\n        other\n      } = updateDims(chartArea, params, layout, stacks);\n      refit |= same && refitBoxes.length;\n      changed = changed || other;\n      if (!box.fullSize) {\n        refitBoxes.push(layout);\n      }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n  }\n  function setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n  }\n  function placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let {\n      x,\n      y\n    } = chartArea;\n    for (const layout of boxes) {\n      const box = layout.box;\n      const stack = stacks[layout.stack] || {\n        count: 1,\n        placed: 0,\n        weight: 1\n      };\n      const weight = layout.stackWeight / stack.weight || 1;\n      if (layout.horizontal) {\n        const width = chartArea.w * weight;\n        const height = stack.size || box.height;\n        if (defined(stack.start)) {\n          y = stack.start;\n        }\n        if (box.fullSize) {\n          setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n        } else {\n          setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n        }\n        stack.start = y;\n        stack.placed += width;\n        y = box.bottom;\n      } else {\n        const height = chartArea.h * weight;\n        const width = stack.size || box.width;\n        if (defined(stack.start)) {\n          x = stack.start;\n        }\n        if (box.fullSize) {\n          setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n        } else {\n          setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n        }\n        stack.start = x;\n        stack.placed += height;\n        x = box.right;\n      }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n  }\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n  var layouts = {\n    addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      }\n      item.fullSize = item.fullSize || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      item._layers = item._layers || function () {\n        return [{\n          z: 0,\n          draw(chartArea) {\n            item.draw(chartArea);\n          }\n        }];\n      };\n      chart.boxes.push(item);\n    },\n    removeBox(chart, layoutItem) {\n      const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n    configure(chart, item, options) {\n      item.fullSize = options.fullSize;\n      item.position = options.position;\n      item.weight = options.weight;\n    },\n    update(chart, width, height, minPadding) {\n      if (!chart) {\n        return;\n      }\n      const padding = toPadding(chart.options.layout.padding);\n      const availableWidth = Math.max(width - padding.width, 0);\n      const availableHeight = Math.max(height - padding.height, 0);\n      const boxes = buildLayoutBoxes(chart.boxes);\n      const verticalBoxes = boxes.vertical;\n      const horizontalBoxes = boxes.horizontal;\n      each(chart.boxes, box => {\n        if (typeof box.beforeLayout === 'function') {\n          box.beforeLayout();\n        }\n      });\n      const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) => wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n      const params = Object.freeze({\n        outerWidth: width,\n        outerHeight: height,\n        padding,\n        availableWidth,\n        availableHeight,\n        vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n        hBoxMaxHeight: availableHeight / 2\n      });\n      const maxPadding = Object.assign({}, padding);\n      updateMaxPadding(maxPadding, toPadding(minPadding));\n      const chartArea = Object.assign({\n        maxPadding,\n        w: availableWidth,\n        h: availableHeight,\n        x: padding.left,\n        y: padding.top\n      }, padding);\n      const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n      fitBoxes(boxes.fullSize, chartArea, params, stacks);\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n      if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n      }\n      handleMaxPadding(chartArea);\n      placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n      chartArea.x += chartArea.w;\n      chartArea.y += chartArea.h;\n      placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n      chart.chartArea = {\n        left: chartArea.left,\n        top: chartArea.top,\n        right: chartArea.left + chartArea.w,\n        bottom: chartArea.top + chartArea.h,\n        height: chartArea.h,\n        width: chartArea.w\n      };\n      each(boxes.chartArea, layout => {\n        const box = layout.box;\n        Object.assign(box, chart.chartArea);\n        box.update(chartArea.w, chartArea.h, {\n          left: 0,\n          top: 0,\n          right: 0,\n          bottom: 0\n        });\n      });\n    }\n  };\n  class BasePlatform {\n    acquireContext(canvas, aspectRatio) {}\n    releaseContext(context) {\n      return false;\n    }\n    addEventListener(chart, type, listener) {}\n    removeEventListener(chart, type, listener) {}\n    getDevicePixelRatio() {\n      return 1;\n    }\n    getMaximumSize(element, width, height, aspectRatio) {\n      width = Math.max(0, width || element.width);\n      height = height || element.height;\n      return {\n        width,\n        height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n      };\n    }\n    isAttached(canvas) {\n      return true;\n    }\n    updateConfig(config) {}\n  }\n  class BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n      return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n      config.options.animation = false;\n    }\n  }\n  const EXPANDO_KEY = '$chartjs';\n  const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  const isNullOrEmpty = value => value === null || value === '';\n  function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n      const displayWidth = readUsedSize(canvas, 'width');\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n      if (canvas.style.height === '') {\n        canvas.height = canvas.width / (aspectRatio || 2);\n      } else {\n        const displayHeight = readUsedSize(canvas, 'height');\n        if (displayHeight !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n    return canvas;\n  }\n  const eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n  function removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n  function fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const {\n      x,\n      y\n    } = getRelativePosition(event, chart);\n    return {\n      type,\n      chart,\n      native: event,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n  function nodeListContains(nodeList, canvas) {\n    for (const node of nodeList) {\n      if (node === canvas || node.contains(canvas)) {\n        return true;\n      }\n    }\n  }\n  function createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver(entries => {\n      let trigger = false;\n      for (const entry of entries) {\n        trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n      }\n      if (trigger) {\n        listener();\n      }\n    });\n    observer.observe(document, {\n      childList: true,\n      subtree: true\n    });\n    return observer;\n  }\n  function createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver(entries => {\n      let trigger = false;\n      for (const entry of entries) {\n        trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n      }\n      if (trigger) {\n        listener();\n      }\n    });\n    observer.observe(document, {\n      childList: true,\n      subtree: true\n    });\n    return observer;\n  }\n  const drpListeningCharts = new Map();\n  let oldDevicePixelRatio = 0;\n  function onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n      return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart) => {\n      if (chart.currentDevicePixelRatio !== dpr) {\n        resize();\n      }\n    });\n  }\n  function listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n      window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n  }\n  function unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n      window.removeEventListener('resize', onWindowResize);\n    }\n  }\n  function createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      return;\n    }\n    const resize = throttled((width, height) => {\n      const w = container.clientWidth;\n      listener(width, height);\n      if (w < container.clientWidth) {\n        listener();\n      }\n    }, window);\n    const observer = new ResizeObserver(entries => {\n      const entry = entries[0];\n      const width = entry.contentRect.width;\n      const height = entry.contentRect.height;\n      if (width === 0 && height === 0) {\n        return;\n      }\n      resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n  }\n  function releaseObserver(chart, type, observer) {\n    if (observer) {\n      observer.disconnect();\n    }\n    if (type === 'resize') {\n      unlistenDevicePixelRatioChanges(chart);\n    }\n  }\n  function createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled(event => {\n      if (chart.ctx !== null) {\n        listener(fromNativeEvent(event, chart));\n      }\n    }, chart, args => {\n      const event = args[0];\n      return [event, event.offsetX, event.offsetY];\n    });\n    addListener(canvas, type, proxy);\n    return proxy;\n  }\n  class DomPlatform extends BasePlatform {\n    acquireContext(canvas, aspectRatio) {\n      const context = canvas && canvas.getContext && canvas.getContext('2d');\n      if (context && context.canvas === canvas) {\n        initCanvas(canvas, aspectRatio);\n        return context;\n      }\n      return null;\n    }\n    releaseContext(context) {\n      const canvas = context.canvas;\n      if (!canvas[EXPANDO_KEY]) {\n        return false;\n      }\n      const initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(prop => {\n        const value = initial[prop];\n        if (isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      const style = initial.style || {};\n      Object.keys(style).forEach(key => {\n        canvas.style[key] = style[key];\n      });\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n      return true;\n    }\n    addEventListener(chart, type, listener) {\n      this.removeEventListener(chart, type);\n      const proxies = chart.$proxies || (chart.$proxies = {});\n      const handlers = {\n        attach: createAttachObserver,\n        detach: createDetachObserver,\n        resize: createResizeObserver\n      };\n      const handler = handlers[type] || createProxyAndListen;\n      proxies[type] = handler(chart, type, listener);\n    }\n    removeEventListener(chart, type) {\n      const proxies = chart.$proxies || (chart.$proxies = {});\n      const proxy = proxies[type];\n      if (!proxy) {\n        return;\n      }\n      const handlers = {\n        attach: releaseObserver,\n        detach: releaseObserver,\n        resize: releaseObserver\n      };\n      const handler = handlers[type] || removeListener;\n      handler(chart, type, proxy);\n      proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n      return window.devicePixelRatio;\n    }\n    getMaximumSize(canvas, width, height, aspectRatio) {\n      return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n    isAttached(canvas) {\n      const container = _getParentNode(canvas);\n      return !!(container && container.isConnected);\n    }\n  }\n  function _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n      return BasicPlatform;\n    }\n    return DomPlatform;\n  }\n  var platforms = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    _detectPlatform: _detectPlatform,\n    BasePlatform: BasePlatform,\n    BasicPlatform: BasicPlatform,\n    DomPlatform: DomPlatform\n  });\n  const transparent = 'transparent';\n  const interpolators = {\n    boolean(from, to, factor) {\n      return factor > 0.5 ? to : from;\n    },\n    color(from, to, factor) {\n      const c0 = color(from || transparent);\n      const c1 = c0.valid && color(to || transparent);\n      return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number(from, to, factor) {\n      return from + (to - from) * factor;\n    }\n  };\n  class Animation {\n    constructor(cfg, target, prop, to) {\n      const currentValue = target[prop];\n      to = resolve([cfg.to, to, currentValue, cfg.from]);\n      const from = resolve([cfg.from, currentValue, to]);\n      this._active = true;\n      this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n      this._easing = effects[cfg.easing] || effects.linear;\n      this._start = Math.floor(Date.now() + (cfg.delay || 0));\n      this._duration = this._total = Math.floor(cfg.duration);\n      this._loop = !!cfg.loop;\n      this._target = target;\n      this._prop = prop;\n      this._from = from;\n      this._to = to;\n      this._promises = undefined;\n    }\n    active() {\n      return this._active;\n    }\n    update(cfg, to, date) {\n      if (this._active) {\n        this._notify(false);\n        const currentValue = this._target[this._prop];\n        const elapsed = date - this._start;\n        const remain = this._duration - elapsed;\n        this._start = date;\n        this._duration = Math.floor(Math.max(remain, cfg.duration));\n        this._total += elapsed;\n        this._loop = !!cfg.loop;\n        this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n        this._from = resolve([cfg.from, currentValue, to]);\n      }\n    }\n    cancel() {\n      if (this._active) {\n        this.tick(Date.now());\n        this._active = false;\n        this._notify(false);\n      }\n    }\n    tick(date) {\n      const elapsed = date - this._start;\n      const duration = this._duration;\n      const prop = this._prop;\n      const from = this._from;\n      const loop = this._loop;\n      const to = this._to;\n      let factor;\n      this._active = from !== to && (loop || elapsed < duration);\n      if (!this._active) {\n        this._target[prop] = to;\n        this._notify(true);\n        return;\n      }\n      if (elapsed < 0) {\n        this._target[prop] = from;\n        return;\n      }\n      factor = elapsed / duration % 2;\n      factor = loop && factor > 1 ? 2 - factor : factor;\n      factor = this._easing(Math.min(1, Math.max(0, factor)));\n      this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n      const promises = this._promises || (this._promises = []);\n      return new Promise((res, rej) => {\n        promises.push({\n          res,\n          rej\n        });\n      });\n    }\n    _notify(resolved) {\n      const method = resolved ? 'res' : 'rej';\n      const promises = this._promises || [];\n      for (let i = 0; i < promises.length; i++) {\n        promises[i][method]();\n      }\n    }\n  }\n  const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\n  const colors = ['color', 'borderColor', 'backgroundColor'];\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined\n  });\n  const animationOptions = Object.keys(defaults.animation);\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: name => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n  });\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    }\n  });\n  defaults.describe('animations', {\n    _fallback: 'animation'\n  });\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0\n        }\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0\n        }\n      }\n    }\n  });\n  class Animations {\n    constructor(chart, config) {\n      this._chart = chart;\n      this._properties = new Map();\n      this.configure(config);\n    }\n    configure(config) {\n      if (!isObject(config)) {\n        return;\n      }\n      const animatedProps = this._properties;\n      Object.getOwnPropertyNames(config).forEach(key => {\n        const cfg = config[key];\n        if (!isObject(cfg)) {\n          return;\n        }\n        const resolved = {};\n        for (const option of animationOptions) {\n          resolved[option] = cfg[option];\n        }\n        (isArray(cfg.properties) && cfg.properties || [key]).forEach(prop => {\n          if (prop === key || !animatedProps.has(prop)) {\n            animatedProps.set(prop, resolved);\n          }\n        });\n      });\n    }\n    _animateOptions(target, values) {\n      const newOptions = values.options;\n      const options = resolveTargetOptions(target, newOptions);\n      if (!options) {\n        return [];\n      }\n      const animations = this._createAnimations(options, newOptions);\n      if (newOptions.$shared) {\n        awaitAll(target.options.$animations, newOptions).then(() => {\n          target.options = newOptions;\n        }, () => {});\n      }\n      return animations;\n    }\n    _createAnimations(target, values) {\n      const animatedProps = this._properties;\n      const animations = [];\n      const running = target.$animations || (target.$animations = {});\n      const props = Object.keys(values);\n      const date = Date.now();\n      let i;\n      for (i = props.length - 1; i >= 0; --i) {\n        const prop = props[i];\n        if (prop.charAt(0) === '$') {\n          continue;\n        }\n        if (prop === 'options') {\n          animations.push(...this._animateOptions(target, values));\n          continue;\n        }\n        const value = values[prop];\n        let animation = running[prop];\n        const cfg = animatedProps.get(prop);\n        if (animation) {\n          if (cfg && animation.active()) {\n            animation.update(cfg, value, date);\n            continue;\n          } else {\n            animation.cancel();\n          }\n        }\n        if (!cfg || !cfg.duration) {\n          target[prop] = value;\n          continue;\n        }\n        running[prop] = animation = new Animation(cfg, target, prop, value);\n        animations.push(animation);\n      }\n      return animations;\n    }\n    update(target, values) {\n      if (this._properties.size === 0) {\n        Object.assign(target, values);\n        return;\n      }\n      const animations = this._createAnimations(target, values);\n      if (animations.length) {\n        animator.add(this._chart, animations);\n        return true;\n      }\n    }\n  }\n  function awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for (let i = 0; i < keys.length; i++) {\n      const anim = animations[keys[i]];\n      if (anim && anim.active()) {\n        running.push(anim.wait());\n      }\n    }\n    return Promise.all(running);\n  }\n  function resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n      return;\n    }\n    let options = target.options;\n    if (!options) {\n      target.options = newOptions;\n      return;\n    }\n    if (options.$shared) {\n      target.options = options = Object.assign({}, options, {\n        $shared: false,\n        $animations: {}\n      });\n    }\n    return options;\n  }\n  function scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n      start: reverse ? max : min,\n      end: reverse ? min : max\n    };\n  }\n  function defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n      return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n      top: y.end,\n      right: x.end,\n      bottom: y.start,\n      left: x.start\n    };\n  }\n  function toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n      t = value.top;\n      r = value.right;\n      b = value.bottom;\n      l = value.left;\n    } else {\n      t = r = b = l = value;\n    }\n    return {\n      top: t,\n      right: r,\n      bottom: b,\n      left: l,\n      disabled: value === false\n    };\n  }\n  function getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      keys.push(metasets[i].index);\n    }\n    return keys;\n  }\n  function applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n      return;\n    }\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      datasetIndex = +keys[i];\n      if (datasetIndex === dsIndex) {\n        if (options.all) {\n          continue;\n        }\n        break;\n      }\n      otherValue = stack.values[datasetIndex];\n      if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n        value += otherValue;\n      }\n    }\n    return value;\n  }\n  function convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      adata[i] = {\n        x: key,\n        y: data[key]\n      };\n    }\n    return adata;\n  }\n  function isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n  }\n  function getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n  }\n  function getUserBounds(scale) {\n    const {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = scale.getUserBounds();\n    return {\n      min: minDefined ? min : Number.NEGATIVE_INFINITY,\n      max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n  }\n  function getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n  }\n  function getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n      const value = stack[meta.index];\n      if (positive && value > 0 || !positive && value < 0) {\n        return meta.index;\n      }\n    }\n    return null;\n  }\n  function updateStacks(controller, parsed) {\n    const {\n      chart,\n      _cachedMeta: meta\n    } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const {\n      iScale,\n      vScale,\n      index: datasetIndex\n    } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for (let i = 0; i < ilen; ++i) {\n      const item = parsed[i];\n      const {\n        [iAxis]: index,\n        [vAxis]: value\n      } = item;\n      const itemStacks = item._stacks || (item._stacks = {});\n      stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n      stack[datasetIndex] = value;\n      stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n      stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n    }\n  }\n  function getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n  }\n  function createDatasetContext(parent, index) {\n    return createContext(parent, {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    });\n  }\n  function createDataContext(parent, index, element) {\n    return createContext(parent, {\n      active: false,\n      dataIndex: index,\n      parsed: undefined,\n      raw: undefined,\n      element,\n      index,\n      mode: 'default',\n      type: 'data'\n    });\n  }\n  function clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n      return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items) {\n      const stacks = parsed._stacks;\n      if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n        return;\n      }\n      delete stacks[axis][datasetIndex];\n    }\n  }\n  const isDirectUpdateMode = mode => mode === 'reset' || mode === 'none';\n  const cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\n  const createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked && {\n    keys: getSortedDatasetIndices(chart, true),\n    values: null\n  };\n  class DatasetController {\n    constructor(chart, datasetIndex) {\n      this.chart = chart;\n      this._ctx = chart.ctx;\n      this.index = datasetIndex;\n      this._cachedDataOpts = {};\n      this._cachedMeta = this.getMeta();\n      this._type = this._cachedMeta.type;\n      this.options = undefined;\n      this._parsing = false;\n      this._data = undefined;\n      this._objectData = undefined;\n      this._sharedOptions = undefined;\n      this._drawStart = undefined;\n      this._drawCount = undefined;\n      this.enableOptionSharing = false;\n      this.supportsDecimation = false;\n      this.$context = undefined;\n      this._syncList = [];\n      this.initialize();\n    }\n    initialize() {\n      const meta = this._cachedMeta;\n      this.configure();\n      this.linkScales();\n      meta._stacked = isStacked(meta.vScale, meta);\n      this.addElements();\n    }\n    updateIndex(datasetIndex) {\n      if (this.index !== datasetIndex) {\n        clearStacks(this._cachedMeta);\n      }\n      this.index = datasetIndex;\n    }\n    linkScales() {\n      const chart = this.chart;\n      const meta = this._cachedMeta;\n      const dataset = this.getDataset();\n      const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n      const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n      const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n      const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n      const indexAxis = meta.indexAxis;\n      const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n      const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n      meta.xScale = this.getScaleForId(xid);\n      meta.yScale = this.getScaleForId(yid);\n      meta.rScale = this.getScaleForId(rid);\n      meta.iScale = this.getScaleForId(iid);\n      meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n      return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    }\n    getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    }\n    _getOtherScale(scale) {\n      const meta = this._cachedMeta;\n      return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n      this._update('reset');\n    }\n    _destroy() {\n      const meta = this._cachedMeta;\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n      if (meta._stacked) {\n        clearStacks(meta);\n      }\n    }\n    _dataCheck() {\n      const dataset = this.getDataset();\n      const data = dataset.data || (dataset.data = []);\n      const _data = this._data;\n      if (isObject(data)) {\n        this._data = convertObjectDataToArray(data);\n      } else if (_data !== data) {\n        if (_data) {\n          unlistenArrayEvents(_data, this);\n          const meta = this._cachedMeta;\n          clearStacks(meta);\n          meta._parsed = [];\n        }\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, this);\n        }\n        this._syncList = [];\n        this._data = data;\n      }\n    }\n    addElements() {\n      const meta = this._cachedMeta;\n      this._dataCheck();\n      if (this.datasetElementType) {\n        meta.dataset = new this.datasetElementType();\n      }\n    }\n    buildOrUpdateElements(resetNewElements) {\n      const meta = this._cachedMeta;\n      const dataset = this.getDataset();\n      let stackChanged = false;\n      this._dataCheck();\n      const oldStacked = meta._stacked;\n      meta._stacked = isStacked(meta.vScale, meta);\n      if (meta.stack !== dataset.stack) {\n        stackChanged = true;\n        clearStacks(meta);\n        meta.stack = dataset.stack;\n      }\n      this._resyncElements(resetNewElements);\n      if (stackChanged || oldStacked !== meta._stacked) {\n        updateStacks(this, meta._parsed);\n      }\n    }\n    configure() {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetScopeKeys(this._type);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n      this.options = config.createResolver(scopes, this.getContext());\n      this._parsing = this.options.parsing;\n      this._cachedDataOpts = {};\n    }\n    parse(start, count) {\n      const {\n        _cachedMeta: meta,\n        _data: data\n      } = this;\n      const {\n        iScale,\n        _stacked\n      } = meta;\n      const iAxis = iScale.axis;\n      let sorted = start === 0 && count === data.length ? true : meta._sorted;\n      let prev = start > 0 && meta._parsed[start - 1];\n      let i, cur, parsed;\n      if (this._parsing === false) {\n        meta._parsed = data;\n        meta._sorted = true;\n        parsed = data;\n      } else {\n        if (isArray(data[start])) {\n          parsed = this.parseArrayData(meta, data, start, count);\n        } else if (isObject(data[start])) {\n          parsed = this.parseObjectData(meta, data, start, count);\n        } else {\n          parsed = this.parsePrimitiveData(meta, data, start, count);\n        }\n        const isNotInOrderComparedToPrev = () => cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n        for (i = 0; i < count; ++i) {\n          meta._parsed[i + start] = cur = parsed[i];\n          if (sorted) {\n            if (isNotInOrderComparedToPrev()) {\n              sorted = false;\n            }\n            prev = cur;\n          }\n        }\n        meta._sorted = sorted;\n      }\n      if (_stacked) {\n        updateStacks(this, parsed);\n      }\n    }\n    parsePrimitiveData(meta, data, start, count) {\n      const {\n        iScale,\n        vScale\n      } = meta;\n      const iAxis = iScale.axis;\n      const vAxis = vScale.axis;\n      const labels = iScale.getLabels();\n      const singleScale = iScale === vScale;\n      const parsed = new Array(count);\n      let i, ilen, index;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        parsed[i] = {\n          [iAxis]: singleScale || iScale.parse(labels[index], index),\n          [vAxis]: vScale.parse(data[index], index)\n        };\n      }\n      return parsed;\n    }\n    parseArrayData(meta, data, start, count) {\n      const {\n        xScale,\n        yScale\n      } = meta;\n      const parsed = new Array(count);\n      let i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(item[0], index),\n          y: yScale.parse(item[1], index)\n        };\n      }\n      return parsed;\n    }\n    parseObjectData(meta, data, start, count) {\n      const {\n        xScale,\n        yScale\n      } = meta;\n      const {\n        xAxisKey = 'x',\n        yAxisKey = 'y'\n      } = this._parsing;\n      const parsed = new Array(count);\n      let i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n        };\n      }\n      return parsed;\n    }\n    getParsed(index) {\n      return this._cachedMeta._parsed[index];\n    }\n    getDataElement(index) {\n      return this._cachedMeta.data[index];\n    }\n    applyStack(scale, parsed, mode) {\n      const chart = this.chart;\n      const meta = this._cachedMeta;\n      const value = parsed[scale.axis];\n      const stack = {\n        keys: getSortedDatasetIndices(chart, true),\n        values: parsed._stacks[scale.axis]\n      };\n      return applyStack(stack, value, meta.index, {\n        mode\n      });\n    }\n    updateRangeFromParsed(range, scale, parsed, stack) {\n      const parsedValue = parsed[scale.axis];\n      let value = parsedValue === null ? NaN : parsedValue;\n      const values = stack && parsed._stacks[scale.axis];\n      if (stack && values) {\n        stack.values = values;\n        value = applyStack(stack, parsedValue, this._cachedMeta.index);\n      }\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n    }\n    getMinMax(scale, canStack) {\n      const meta = this._cachedMeta;\n      const _parsed = meta._parsed;\n      const sorted = meta._sorted && scale === meta.iScale;\n      const ilen = _parsed.length;\n      const otherScale = this._getOtherScale(scale);\n      const stack = createStack(canStack, meta, this.chart);\n      const range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      const {\n        min: otherMin,\n        max: otherMax\n      } = getUserBounds(otherScale);\n      let i, parsed;\n      function _skip() {\n        parsed = _parsed[i];\n        const otherValue = parsed[otherScale.axis];\n        return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n      }\n      for (i = 0; i < ilen; ++i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        if (sorted) {\n          break;\n        }\n      }\n      if (sorted) {\n        for (i = ilen - 1; i >= 0; --i) {\n          if (_skip()) {\n            continue;\n          }\n          this.updateRangeFromParsed(range, scale, parsed, stack);\n          break;\n        }\n      }\n      return range;\n    }\n    getAllParsedValues(scale) {\n      const parsed = this._cachedMeta._parsed;\n      const values = [];\n      let i, ilen, value;\n      for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n        value = parsed[i][scale.axis];\n        if (isNumberFinite(value)) {\n          values.push(value);\n        }\n      }\n      return values;\n    }\n    getMaxOverflow() {\n      return false;\n    }\n    getLabelAndValue(index) {\n      const meta = this._cachedMeta;\n      const iScale = meta.iScale;\n      const vScale = meta.vScale;\n      const parsed = this.getParsed(index);\n      return {\n        label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n        value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n      };\n    }\n    _update(mode) {\n      const meta = this._cachedMeta;\n      this.update(mode || 'default');\n      meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n    update(mode) {}\n    draw() {\n      const ctx = this._ctx;\n      const chart = this.chart;\n      const meta = this._cachedMeta;\n      const elements = meta.data || [];\n      const area = chart.chartArea;\n      const active = [];\n      const start = this._drawStart || 0;\n      const count = this._drawCount || elements.length - start;\n      const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n      let i;\n      if (meta.dataset) {\n        meta.dataset.draw(ctx, area, start, count);\n      }\n      for (i = start; i < start + count; ++i) {\n        const element = elements[i];\n        if (element.hidden) {\n          continue;\n        }\n        if (element.active && drawActiveElementsOnTop) {\n          active.push(element);\n        } else {\n          element.draw(ctx, area);\n        }\n      }\n      for (i = 0; i < active.length; ++i) {\n        active[i].draw(ctx, area);\n      }\n    }\n    getStyle(index, active) {\n      const mode = active ? 'active' : 'default';\n      return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n    getContext(index, active, mode) {\n      const dataset = this.getDataset();\n      let context;\n      if (index >= 0 && index < this._cachedMeta.data.length) {\n        const element = this._cachedMeta.data[index];\n        context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n        context.parsed = this.getParsed(index);\n        context.raw = dataset.data[index];\n        context.index = context.dataIndex = index;\n      } else {\n        context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n        context.dataset = dataset;\n        context.index = context.datasetIndex = this.index;\n      }\n      context.active = !!active;\n      context.mode = mode;\n      return context;\n    }\n    resolveDatasetElementOptions(mode) {\n      return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n    resolveDataElementOptions(index, mode) {\n      return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n    _resolveElementOptions(elementType, mode = 'default', index) {\n      const active = mode === 'active';\n      const cache = this._cachedDataOpts;\n      const cacheKey = elementType + '-' + mode;\n      const cached = cache[cacheKey];\n      const sharing = this.enableOptionSharing && defined(index);\n      if (cached) {\n        return cloneIfNotShared(cached, sharing);\n      }\n      const config = this.chart.config;\n      const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n      const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      const names = Object.keys(defaults.elements[elementType]);\n      const context = () => this.getContext(index, active);\n      const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n      if (values.$shared) {\n        values.$shared = sharing;\n        cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n      }\n      return values;\n    }\n    _resolveAnimations(index, transition, active) {\n      const chart = this.chart;\n      const cache = this._cachedDataOpts;\n      const cacheKey = `animation-${transition}`;\n      const cached = cache[cacheKey];\n      if (cached) {\n        return cached;\n      }\n      let options;\n      if (chart.options.animation !== false) {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        options = config.createResolver(scopes, this.getContext(index, active, transition));\n      }\n      const animations = new Animations(chart, options && options.animations);\n      if (options && options._cacheable) {\n        cache[cacheKey] = Object.freeze(animations);\n      }\n      return animations;\n    }\n    getSharedOptions(options) {\n      if (!options.$shared) {\n        return;\n      }\n      return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n    includeOptions(mode, sharedOptions) {\n      return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n    _getSharedOptions(start, mode) {\n      const firstOpts = this.resolveDataElementOptions(start, mode);\n      const previouslySharedOptions = this._sharedOptions;\n      const sharedOptions = this.getSharedOptions(firstOpts);\n      const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n      return {\n        sharedOptions,\n        includeOptions\n      };\n    }\n    updateElement(element, index, properties, mode) {\n      if (isDirectUpdateMode(mode)) {\n        Object.assign(element, properties);\n      } else {\n        this._resolveAnimations(index, mode).update(element, properties);\n      }\n    }\n    updateSharedOptions(sharedOptions, mode, newOptions) {\n      if (sharedOptions && !isDirectUpdateMode(mode)) {\n        this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n      }\n    }\n    _setStyle(element, index, mode, active) {\n      element.active = active;\n      const options = this.getStyle(index, active);\n      this._resolveAnimations(index, mode, active).update(element, {\n        options: !active && this.getSharedOptions(options) || options\n      });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', true);\n    }\n    _removeDatasetHoverStyle() {\n      const element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', false);\n      }\n    }\n    _setDatasetHoverStyle() {\n      const element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', true);\n      }\n    }\n    _resyncElements(resetNewElements) {\n      const data = this._data;\n      const elements = this._cachedMeta.data;\n      for (const [method, arg1, arg2] of this._syncList) {\n        this[method](arg1, arg2);\n      }\n      this._syncList = [];\n      const numMeta = elements.length;\n      const numData = data.length;\n      const count = Math.min(numData, numMeta);\n      if (count) {\n        this.parse(0, count);\n      }\n      if (numData > numMeta) {\n        this._insertElements(numMeta, numData - numMeta, resetNewElements);\n      } else if (numData < numMeta) {\n        this._removeElements(numData, numMeta - numData);\n      }\n    }\n    _insertElements(start, count, resetNewElements = true) {\n      const meta = this._cachedMeta;\n      const data = meta.data;\n      const end = start + count;\n      let i;\n      const move = arr => {\n        arr.length += count;\n        for (i = arr.length - 1; i >= end; i--) {\n          arr[i] = arr[i - count];\n        }\n      };\n      move(data);\n      for (i = start; i < end; ++i) {\n        data[i] = new this.dataElementType();\n      }\n      if (this._parsing) {\n        move(meta._parsed);\n      }\n      this.parse(start, count);\n      if (resetNewElements) {\n        this.updateElements(data, start, count, 'reset');\n      }\n    }\n    updateElements(element, start, count, mode) {}\n    _removeElements(start, count) {\n      const meta = this._cachedMeta;\n      if (this._parsing) {\n        const removed = meta._parsed.splice(start, count);\n        if (meta._stacked) {\n          clearStacks(meta, removed);\n        }\n      }\n      meta.data.splice(start, count);\n    }\n    _sync(args) {\n      if (this._parsing) {\n        this._syncList.push(args);\n      } else {\n        const [method, arg1, arg2] = args;\n        this[method](arg1, arg2);\n      }\n      this.chart._dataChanges.push([this.index, ...args]);\n    }\n    _onDataPush() {\n      const count = arguments.length;\n      this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n    }\n    _onDataPop() {\n      this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n    }\n    _onDataShift() {\n      this._sync(['_removeElements', 0, 1]);\n    }\n    _onDataSplice(start, count) {\n      if (count) {\n        this._sync(['_removeElements', start, count]);\n      }\n      const newCount = arguments.length - 2;\n      if (newCount) {\n        this._sync(['_insertElements', start, newCount]);\n      }\n    }\n    _onDataUnshift() {\n      this._sync(['_insertElements', 0, arguments.length]);\n    }\n  }\n  DatasetController.defaults = {};\n  DatasetController.prototype.datasetElementType = null;\n  DatasetController.prototype.dataElementType = null;\n  class Element {\n    constructor() {\n      this.x = undefined;\n      this.y = undefined;\n      this.active = false;\n      this.options = undefined;\n      this.$animations = undefined;\n    }\n    tooltipPosition(useFinalPosition) {\n      const {\n        x,\n        y\n      } = this.getProps(['x', 'y'], useFinalPosition);\n      return {\n        x,\n        y\n      };\n    }\n    hasValue() {\n      return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n      const anims = this.$animations;\n      if (!final || !anims) {\n        return this;\n      }\n      const ret = {};\n      props.forEach(prop => {\n        ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n      });\n      return ret;\n    }\n  }\n  Element.defaults = {};\n  Element.defaultRoutes = undefined;\n  const formatters = {\n    values(value) {\n      return isArray(value) ? value : '' + value;\n    },\n    numeric(tickValue, index, ticks) {\n      if (tickValue === 0) {\n        return '0';\n      }\n      const locale = this.chart.options.locale;\n      let notation;\n      let delta = tickValue;\n      if (ticks.length > 1) {\n        const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n        if (maxTick < 1e-4 || maxTick > 1e+15) {\n          notation = 'scientific';\n        }\n        delta = calculateDelta(tickValue, ticks);\n      }\n      const logDelta = log10(Math.abs(delta));\n      const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n      const options = {\n        notation,\n        minimumFractionDigits: numDecimal,\n        maximumFractionDigits: numDecimal\n      };\n      Object.assign(options, this.options.ticks.format);\n      return formatNumber(tickValue, locale, options);\n    },\n    logarithmic(tickValue, index, ticks) {\n      if (tickValue === 0) {\n        return '0';\n      }\n      const remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n      if (remain === 1 || remain === 2 || remain === 5) {\n        return formatters.numeric.call(this, tickValue, index, ticks);\n      }\n      return '';\n    }\n  };\n  function calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n      delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n  }\n  var Ticks = {\n    formatters\n  };\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n    bounds: 'ticks',\n    grace: 0,\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderWidth: 1\n    },\n    title: {\n      display: false,\n      text: '',\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2\n    }\n  });\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.grid', 'borderColor', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: name => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: name => name !== 'borderDash' && name !== 'tickBorderDash'\n  });\n  defaults.describe('scales', {\n    _fallback: 'scale'\n  });\n  defaults.describe('scale.ticks', {\n    _scriptable: name => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: name => name !== 'backdropPadding'\n  });\n  function autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n      skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n      return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n      let i, ilen;\n      const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n      skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n      for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n        skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n      }\n      skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n      return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n  }\n  function determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n  }\n  function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n      return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n      const factor = factors[i];\n      if (factor > spacing) {\n        return factor;\n      }\n    }\n    return Math.max(spacing, 1);\n  }\n  function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (ticks[i].major) {\n        result.push(i);\n      }\n    }\n    return result;\n  }\n  function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for (i = 0; i < ticks.length; i++) {\n      if (i === next) {\n        newTicks.push(ticks[i]);\n        count++;\n        next = majorIndices[count * spacing];\n      }\n    }\n  }\n  function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n      length = majorEnd - majorStart;\n      spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while (next < 0) {\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n    for (i = Math.max(start, 0); i < end; i++) {\n      if (i === next) {\n        newTicks.push(ticks[i]);\n        count++;\n        next = Math.round(start + count * spacing);\n      }\n    }\n  }\n  function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n      return false;\n    }\n    for (diff = arr[0], i = 1; i < len; ++i) {\n      if (arr[i] - arr[i - 1] !== diff) {\n        return false;\n      }\n    }\n    return diff;\n  }\n  const reverseAlign = align => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n  const offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n  function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for (; i < len; i += increment) {\n      result.push(arr[Math.floor(i)]);\n    }\n    return result;\n  }\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n      if (length === 1) {\n        offset = Math.max(lineValue - start, end - lineValue);\n      } else if (index === 0) {\n        offset = (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n      }\n      lineValue += validIndex < index ? offset : -offset;\n      if (lineValue < start - epsilon || lineValue > end + epsilon) {\n        return;\n      }\n    }\n    return lineValue;\n  }\n  function garbageCollect(caches, length) {\n    each(caches, cache => {\n      const gc = cache.gc;\n      const gcLen = gc.length / 2;\n      let i;\n      if (gcLen > length) {\n        for (i = 0; i < gcLen; ++i) {\n          delete cache.data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n      }\n    });\n  }\n  function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n  }\n  function getTitleHeight(options, fallback) {\n    if (!options.display) {\n      return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n  }\n  function createScaleContext(parent, scale) {\n    return createContext(parent, {\n      scale,\n      type: 'scale'\n    });\n  }\n  function createTickContext(parent, index, tick) {\n    return createContext(parent, {\n      tick,\n      index,\n      type: 'tick'\n    });\n  }\n  function titleAlign(align, position, reverse) {\n    let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n      ret = reverseAlign(ret);\n    }\n    return ret;\n  }\n  function titleArgs(scale, offset, position, align) {\n    const {\n      top,\n      left,\n      bottom,\n      right,\n      chart\n    } = scale;\n    const {\n      chartArea,\n      scales\n    } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n      } else if (position === 'center') {\n        titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n      } else {\n        titleY = offsetFromEdge(scale, position, offset);\n      }\n      maxWidth = right - left;\n    } else {\n      if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n      } else if (position === 'center') {\n        titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n      } else {\n        titleX = offsetFromEdge(scale, position, offset);\n      }\n      titleY = _alignStartEnd(align, bottom, top);\n      rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    };\n  }\n  class Scale extends Element {\n    constructor(cfg) {\n      super();\n      this.id = cfg.id;\n      this.type = cfg.type;\n      this.options = undefined;\n      this.ctx = cfg.ctx;\n      this.chart = cfg.chart;\n      this.top = undefined;\n      this.bottom = undefined;\n      this.left = undefined;\n      this.right = undefined;\n      this.width = undefined;\n      this.height = undefined;\n      this._margins = {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      };\n      this.maxWidth = undefined;\n      this.maxHeight = undefined;\n      this.paddingTop = undefined;\n      this.paddingBottom = undefined;\n      this.paddingLeft = undefined;\n      this.paddingRight = undefined;\n      this.axis = undefined;\n      this.labelRotation = undefined;\n      this.min = undefined;\n      this.max = undefined;\n      this._range = undefined;\n      this.ticks = [];\n      this._gridLineItems = null;\n      this._labelItems = null;\n      this._labelSizes = null;\n      this._length = 0;\n      this._maxLength = 0;\n      this._longestTextCache = {};\n      this._startPixel = undefined;\n      this._endPixel = undefined;\n      this._reversePixels = false;\n      this._userMax = undefined;\n      this._userMin = undefined;\n      this._suggestedMax = undefined;\n      this._suggestedMin = undefined;\n      this._ticksLength = 0;\n      this._borderValue = 0;\n      this._cache = {};\n      this._dataLimitsCached = false;\n      this.$context = undefined;\n    }\n    init(options) {\n      this.options = options.setContext(this.getContext());\n      this.axis = options.axis;\n      this._userMin = this.parse(options.min);\n      this._userMax = this.parse(options.max);\n      this._suggestedMin = this.parse(options.suggestedMin);\n      this._suggestedMax = this.parse(options.suggestedMax);\n    }\n    parse(raw, index) {\n      return raw;\n    }\n    getUserBounds() {\n      let {\n        _userMin,\n        _userMax,\n        _suggestedMin,\n        _suggestedMax\n      } = this;\n      _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n      _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n      _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n      _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n      return {\n        min: finiteOrDefault(_userMin, _suggestedMin),\n        max: finiteOrDefault(_userMax, _suggestedMax),\n        minDefined: isNumberFinite(_userMin),\n        maxDefined: isNumberFinite(_userMax)\n      };\n    }\n    getMinMax(canStack) {\n      let {\n        min,\n        max,\n        minDefined,\n        maxDefined\n      } = this.getUserBounds();\n      let range;\n      if (minDefined && maxDefined) {\n        return {\n          min,\n          max\n        };\n      }\n      const metas = this.getMatchingVisibleMetas();\n      for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n        range = metas[i].controller.getMinMax(this, canStack);\n        if (!minDefined) {\n          min = Math.min(min, range.min);\n        }\n        if (!maxDefined) {\n          max = Math.max(max, range.max);\n        }\n      }\n      min = maxDefined && min > max ? max : min;\n      max = minDefined && min > max ? min : max;\n      return {\n        min: finiteOrDefault(min, finiteOrDefault(max, min)),\n        max: finiteOrDefault(max, finiteOrDefault(min, max))\n      };\n    }\n    getPadding() {\n      return {\n        left: this.paddingLeft || 0,\n        top: this.paddingTop || 0,\n        right: this.paddingRight || 0,\n        bottom: this.paddingBottom || 0\n      };\n    }\n    getTicks() {\n      return this.ticks;\n    }\n    getLabels() {\n      const data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n    beforeLayout() {\n      this._cache = {};\n      this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n      callback(this.options.beforeUpdate, [this]);\n    }\n    update(maxWidth, maxHeight, margins) {\n      const {\n        beginAtZero,\n        grace,\n        ticks: tickOpts\n      } = this.options;\n      const sampleSize = tickOpts.sampleSize;\n      this.beforeUpdate();\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins = Object.assign({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      this.ticks = null;\n      this._labelSizes = null;\n      this._gridLineItems = null;\n      this._labelItems = null;\n      this.beforeSetDimensions();\n      this.setDimensions();\n      this.afterSetDimensions();\n      this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n      if (!this._dataLimitsCached) {\n        this.beforeDataLimits();\n        this.determineDataLimits();\n        this.afterDataLimits();\n        this._range = _addGrace(this, grace, beginAtZero);\n        this._dataLimitsCached = true;\n      }\n      this.beforeBuildTicks();\n      this.ticks = this.buildTicks() || [];\n      this.afterBuildTicks();\n      const samplingEnabled = sampleSize < this.ticks.length;\n      this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n      this.configure();\n      this.beforeCalculateLabelRotation();\n      this.calculateLabelRotation();\n      this.afterCalculateLabelRotation();\n      if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n        this.ticks = autoSkip(this, this.ticks);\n        this._labelSizes = null;\n        this.afterAutoSkip();\n      }\n      if (samplingEnabled) {\n        this._convertTicksToLabels(this.ticks);\n      }\n      this.beforeFit();\n      this.fit();\n      this.afterFit();\n      this.afterUpdate();\n    }\n    configure() {\n      let reversePixels = this.options.reverse;\n      let startPixel, endPixel;\n      if (this.isHorizontal()) {\n        startPixel = this.left;\n        endPixel = this.right;\n      } else {\n        startPixel = this.top;\n        endPixel = this.bottom;\n        reversePixels = !reversePixels;\n      }\n      this._startPixel = startPixel;\n      this._endPixel = endPixel;\n      this._reversePixels = reversePixels;\n      this._length = endPixel - startPixel;\n      this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n      callback(this.options.afterUpdate, [this]);\n    }\n    beforeSetDimensions() {\n      callback(this.options.beforeSetDimensions, [this]);\n    }\n    setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = 0;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = 0;\n        this.bottom = this.height;\n      }\n      this.paddingLeft = 0;\n      this.paddingTop = 0;\n      this.paddingRight = 0;\n      this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n      callback(this.options.afterSetDimensions, [this]);\n    }\n    _callHooks(name) {\n      this.chart.notifyPlugins(name, this.getContext());\n      callback(this.options[name], [this]);\n    }\n    beforeDataLimits() {\n      this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n      this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n      this._callHooks('beforeBuildTicks');\n    }\n    buildTicks() {\n      return [];\n    }\n    afterBuildTicks() {\n      this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n      callback(this.options.beforeTickToLabelConversion, [this]);\n    }\n    generateTickLabels(ticks) {\n      const tickOpts = this.options.ticks;\n      let i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        tick = ticks[i];\n        tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n      }\n    }\n    afterTickToLabelConversion() {\n      callback(this.options.afterTickToLabelConversion, [this]);\n    }\n    beforeCalculateLabelRotation() {\n      callback(this.options.beforeCalculateLabelRotation, [this]);\n    }\n    calculateLabelRotation() {\n      const options = this.options;\n      const tickOpts = options.ticks;\n      const numTicks = this.ticks.length;\n      const minRotation = tickOpts.minRotation || 0;\n      const maxRotation = tickOpts.maxRotation;\n      let labelRotation = minRotation;\n      let tickWidth, maxHeight, maxLabelDiagonal;\n      if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n        this.labelRotation = minRotation;\n        return;\n      }\n      const labelSizes = this._getLabelSizes();\n      const maxLabelWidth = labelSizes.widest.width;\n      const maxLabelHeight = labelSizes.highest.height;\n      const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n      tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n      if (maxLabelWidth + 6 > tickWidth) {\n        tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n        maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n        maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n        labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n        labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n      }\n      this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n      callback(this.options.afterCalculateLabelRotation, [this]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n      callback(this.options.beforeFit, [this]);\n    }\n    fit() {\n      const minSize = {\n        width: 0,\n        height: 0\n      };\n      const {\n        chart,\n        options: {\n          ticks: tickOpts,\n          title: titleOpts,\n          grid: gridOpts\n        }\n      } = this;\n      const display = this._isVisible();\n      const isHorizontal = this.isHorizontal();\n      if (display) {\n        const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n        if (isHorizontal) {\n          minSize.width = this.maxWidth;\n          minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n        } else {\n          minSize.height = this.maxHeight;\n          minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n        }\n        if (tickOpts.display && this.ticks.length) {\n          const {\n            first,\n            last,\n            widest,\n            highest\n          } = this._getLabelSizes();\n          const tickPadding = tickOpts.padding * 2;\n          const angleRadians = toRadians(this.labelRotation);\n          const cos = Math.cos(angleRadians);\n          const sin = Math.sin(angleRadians);\n          if (isHorizontal) {\n            const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n            minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n          } else {\n            const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n            minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n          }\n          this._calculatePadding(first, last, sin, cos);\n        }\n      }\n      this._handleMargins();\n      if (isHorizontal) {\n        this.width = this._length = chart.width - this._margins.left - this._margins.right;\n        this.height = minSize.height;\n      } else {\n        this.width = minSize.width;\n        this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n      }\n    }\n    _calculatePadding(first, last, sin, cos) {\n      const {\n        ticks: {\n          align,\n          padding\n        },\n        position\n      } = this.options;\n      const isRotated = this.labelRotation !== 0;\n      const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n      if (this.isHorizontal()) {\n        const offsetLeft = this.getPixelForTick(0) - this.left;\n        const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n        let paddingLeft = 0;\n        let paddingRight = 0;\n        if (isRotated) {\n          if (labelsBelowTicks) {\n            paddingLeft = cos * first.width;\n            paddingRight = sin * last.height;\n          } else {\n            paddingLeft = sin * first.height;\n            paddingRight = cos * last.width;\n          }\n        } else if (align === 'start') {\n          paddingRight = last.width;\n        } else if (align === 'end') {\n          paddingLeft = first.width;\n        } else if (align !== 'inner') {\n          paddingLeft = first.width / 2;\n          paddingRight = last.width / 2;\n        }\n        this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n        this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n      } else {\n        let paddingTop = last.height / 2;\n        let paddingBottom = first.height / 2;\n        if (align === 'start') {\n          paddingTop = 0;\n          paddingBottom = first.height;\n        } else if (align === 'end') {\n          paddingTop = last.height;\n          paddingBottom = 0;\n        }\n        this.paddingTop = paddingTop + padding;\n        this.paddingBottom = paddingBottom + padding;\n      }\n    }\n    _handleMargins() {\n      if (this._margins) {\n        this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n        this._margins.top = Math.max(this.paddingTop, this._margins.top);\n        this._margins.right = Math.max(this.paddingRight, this._margins.right);\n        this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n      }\n    }\n    afterFit() {\n      callback(this.options.afterFit, [this]);\n    }\n    isHorizontal() {\n      const {\n        axis,\n        position\n      } = this.options;\n      return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n    isFullSize() {\n      return this.options.fullSize;\n    }\n    _convertTicksToLabels(ticks) {\n      this.beforeTickToLabelConversion();\n      this.generateTickLabels(ticks);\n      let i, ilen;\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        if (isNullOrUndef(ticks[i].label)) {\n          ticks.splice(i, 1);\n          ilen--;\n          i--;\n        }\n      }\n      this.afterTickToLabelConversion();\n    }\n    _getLabelSizes() {\n      let labelSizes = this._labelSizes;\n      if (!labelSizes) {\n        const sampleSize = this.options.ticks.sampleSize;\n        let ticks = this.ticks;\n        if (sampleSize < ticks.length) {\n          ticks = sample(ticks, sampleSize);\n        }\n        this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n      }\n      return labelSizes;\n    }\n    _computeLabelSizes(ticks, length) {\n      const {\n        ctx,\n        _longestTextCache: caches\n      } = this;\n      const widths = [];\n      const heights = [];\n      let widestLabelSize = 0;\n      let highestLabelSize = 0;\n      let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n      for (i = 0; i < length; ++i) {\n        label = ticks[i].label;\n        tickFont = this._resolveTickFontOptions(i);\n        ctx.font = fontString = tickFont.string;\n        cache = caches[fontString] = caches[fontString] || {\n          data: {},\n          gc: []\n        };\n        lineHeight = tickFont.lineHeight;\n        width = height = 0;\n        if (!isNullOrUndef(label) && !isArray(label)) {\n          width = _measureText(ctx, cache.data, cache.gc, width, label);\n          height = lineHeight;\n        } else if (isArray(label)) {\n          for (j = 0, jlen = label.length; j < jlen; ++j) {\n            nestedLabel = label[j];\n            if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n              width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n              height += lineHeight;\n            }\n          }\n        }\n        widths.push(width);\n        heights.push(height);\n        widestLabelSize = Math.max(width, widestLabelSize);\n        highestLabelSize = Math.max(height, highestLabelSize);\n      }\n      garbageCollect(caches, length);\n      const widest = widths.indexOf(widestLabelSize);\n      const highest = heights.indexOf(highestLabelSize);\n      const valueAt = idx => ({\n        width: widths[idx] || 0,\n        height: heights[idx] || 0\n      });\n      return {\n        first: valueAt(0),\n        last: valueAt(length - 1),\n        widest: valueAt(widest),\n        highest: valueAt(highest),\n        widths,\n        heights\n      };\n    }\n    getLabelForValue(value) {\n      return value;\n    }\n    getPixelForValue(value, index) {\n      return NaN;\n    }\n    getValueForPixel(pixel) {}\n    getPixelForTick(index) {\n      const ticks = this.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return this.getPixelForValue(ticks[index].value);\n    }\n    getPixelForDecimal(decimal) {\n      if (this._reversePixels) {\n        decimal = 1 - decimal;\n      }\n      const pixel = this._startPixel + decimal * this._length;\n      return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n    getDecimalForPixel(pixel) {\n      const decimal = (pixel - this._startPixel) / this._length;\n      return this._reversePixels ? 1 - decimal : decimal;\n    }\n    getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    }\n    getBaseValue() {\n      const {\n        min,\n        max\n      } = this;\n      return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n    getContext(index) {\n      const ticks = this.ticks || [];\n      if (index >= 0 && index < ticks.length) {\n        const tick = ticks[index];\n        return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n      }\n      return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n    _tickSize() {\n      const optionTicks = this.options.ticks;\n      const rot = toRadians(this.labelRotation);\n      const cos = Math.abs(Math.cos(rot));\n      const sin = Math.abs(Math.sin(rot));\n      const labelSizes = this._getLabelSizes();\n      const padding = optionTicks.autoSkipPadding || 0;\n      const w = labelSizes ? labelSizes.widest.width + padding : 0;\n      const h = labelSizes ? labelSizes.highest.height + padding : 0;\n      return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n    _isVisible() {\n      const display = this.options.display;\n      if (display !== 'auto') {\n        return !!display;\n      }\n      return this.getMatchingVisibleMetas().length > 0;\n    }\n    _computeGridLineItems(chartArea) {\n      const axis = this.axis;\n      const chart = this.chart;\n      const options = this.options;\n      const {\n        grid,\n        position\n      } = options;\n      const offset = grid.offset;\n      const isHorizontal = this.isHorizontal();\n      const ticks = this.ticks;\n      const ticksLength = ticks.length + (offset ? 1 : 0);\n      const tl = getTickMarkLength(grid);\n      const items = [];\n      const borderOpts = grid.setContext(this.getContext());\n      const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n      const axisHalfWidth = axisWidth / 2;\n      const alignBorderValue = function (pixel) {\n        return _alignPixel(chart, pixel, axisWidth);\n      };\n      let borderValue, i, lineValue, alignedLineValue;\n      let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n      if (position === 'top') {\n        borderValue = alignBorderValue(this.bottom);\n        ty1 = this.bottom - tl;\n        ty2 = borderValue - axisHalfWidth;\n        y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n        y2 = chartArea.bottom;\n      } else if (position === 'bottom') {\n        borderValue = alignBorderValue(this.top);\n        y1 = chartArea.top;\n        y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = this.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignBorderValue(this.right);\n        tx1 = this.right - tl;\n        tx2 = borderValue - axisHalfWidth;\n        x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n        x2 = chartArea.right;\n      } else if (position === 'right') {\n        borderValue = alignBorderValue(this.left);\n        x1 = chartArea.left;\n        x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n        tx1 = borderValue + axisHalfWidth;\n        tx2 = this.left + tl;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n        } else if (isObject(position)) {\n          const positionAxisID = Object.keys(position)[0];\n          const value = position[positionAxisID];\n          borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n        y1 = chartArea.top;\n        y2 = chartArea.bottom;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = ty1 + tl;\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n        } else if (isObject(position)) {\n          const positionAxisID = Object.keys(position)[0];\n          const value = position[positionAxisID];\n          borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n        tx1 = borderValue - axisHalfWidth;\n        tx2 = tx1 - tl;\n        x1 = chartArea.left;\n        x2 = chartArea.right;\n      }\n      const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n      const step = Math.max(1, Math.ceil(ticksLength / limit));\n      for (i = 0; i < ticksLength; i += step) {\n        const optsAtIndex = grid.setContext(this.getContext(i));\n        const lineWidth = optsAtIndex.lineWidth;\n        const lineColor = optsAtIndex.color;\n        const borderDash = optsAtIndex.borderDash || [];\n        const borderDashOffset = optsAtIndex.borderDashOffset;\n        const tickWidth = optsAtIndex.tickWidth;\n        const tickColor = optsAtIndex.tickColor;\n        const tickBorderDash = optsAtIndex.tickBorderDash || [];\n        const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n        lineValue = getPixelForGridLine(this, i, offset);\n        if (lineValue === undefined) {\n          continue;\n        }\n        alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n        if (isHorizontal) {\n          tx1 = tx2 = x1 = x2 = alignedLineValue;\n        } else {\n          ty1 = ty2 = y1 = y2 = alignedLineValue;\n        }\n        items.push({\n          tx1,\n          ty1,\n          tx2,\n          ty2,\n          x1,\n          y1,\n          x2,\n          y2,\n          width: lineWidth,\n          color: lineColor,\n          borderDash,\n          borderDashOffset,\n          tickWidth,\n          tickColor,\n          tickBorderDash,\n          tickBorderDashOffset\n        });\n      }\n      this._ticksLength = ticksLength;\n      this._borderValue = borderValue;\n      return items;\n    }\n    _computeLabelItems(chartArea) {\n      const axis = this.axis;\n      const options = this.options;\n      const {\n        position,\n        ticks: optionTicks\n      } = options;\n      const isHorizontal = this.isHorizontal();\n      const ticks = this.ticks;\n      const {\n        align,\n        crossAlign,\n        padding,\n        mirror\n      } = optionTicks;\n      const tl = getTickMarkLength(options.grid);\n      const tickAndPadding = tl + padding;\n      const hTickAndPadding = mirror ? -padding : tickAndPadding;\n      const rotation = -toRadians(this.labelRotation);\n      const items = [];\n      let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n      let textBaseline = 'middle';\n      if (position === 'top') {\n        y = this.bottom - hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'bottom') {\n        y = this.top + hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'left') {\n        const ret = this._getYAxisLabelAlignment(tl);\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (position === 'right') {\n        const ret = this._getYAxisLabelAlignment(tl);\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n        } else if (isObject(position)) {\n          const positionAxisID = Object.keys(position)[0];\n          const value = position[positionAxisID];\n          y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n        }\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n        } else if (isObject(position)) {\n          const positionAxisID = Object.keys(position)[0];\n          const value = position[positionAxisID];\n          x = this.chart.scales[positionAxisID].getPixelForValue(value);\n        }\n        textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n      }\n      if (axis === 'y') {\n        if (align === 'start') {\n          textBaseline = 'top';\n        } else if (align === 'end') {\n          textBaseline = 'bottom';\n        }\n      }\n      const labelSizes = this._getLabelSizes();\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        label = tick.label;\n        const optsAtIndex = optionTicks.setContext(this.getContext(i));\n        pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n        font = this._resolveTickFontOptions(i);\n        lineHeight = font.lineHeight;\n        lineCount = isArray(label) ? label.length : 1;\n        const halfCount = lineCount / 2;\n        const color = optsAtIndex.color;\n        const strokeColor = optsAtIndex.textStrokeColor;\n        const strokeWidth = optsAtIndex.textStrokeWidth;\n        let tickTextAlign = textAlign;\n        if (isHorizontal) {\n          x = pixel;\n          if (textAlign === 'inner') {\n            if (i === ilen - 1) {\n              tickTextAlign = !this.options.reverse ? 'right' : 'left';\n            } else if (i === 0) {\n              tickTextAlign = !this.options.reverse ? 'left' : 'right';\n            } else {\n              tickTextAlign = 'center';\n            }\n          }\n          if (position === 'top') {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = -lineCount * lineHeight + lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n            } else {\n              textOffset = -labelSizes.highest.height + lineHeight / 2;\n            }\n          } else {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n            } else {\n              textOffset = labelSizes.highest.height - lineCount * lineHeight;\n            }\n          }\n          if (mirror) {\n            textOffset *= -1;\n          }\n        } else {\n          y = pixel;\n          textOffset = (1 - lineCount) * lineHeight / 2;\n        }\n        let backdrop;\n        if (optsAtIndex.showLabelBackdrop) {\n          const labelPadding = toPadding(optsAtIndex.backdropPadding);\n          const height = labelSizes.heights[i];\n          const width = labelSizes.widths[i];\n          let top = y + textOffset - labelPadding.top;\n          let left = x - labelPadding.left;\n          switch (textBaseline) {\n            case 'middle':\n              top -= height / 2;\n              break;\n            case 'bottom':\n              top -= height;\n              break;\n          }\n          switch (textAlign) {\n            case 'center':\n              left -= width / 2;\n              break;\n            case 'right':\n              left -= width;\n              break;\n          }\n          backdrop = {\n            left,\n            top,\n            width: width + labelPadding.width,\n            height: height + labelPadding.height,\n            color: optsAtIndex.backdropColor\n          };\n        }\n        items.push({\n          rotation,\n          label,\n          font,\n          color,\n          strokeColor,\n          strokeWidth,\n          textOffset,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop\n        });\n      }\n      return items;\n    }\n    _getXAxisLabelAlignment() {\n      const {\n        position,\n        ticks\n      } = this.options;\n      const rotation = -toRadians(this.labelRotation);\n      if (rotation) {\n        return position === 'top' ? 'left' : 'right';\n      }\n      let align = 'center';\n      if (ticks.align === 'start') {\n        align = 'left';\n      } else if (ticks.align === 'end') {\n        align = 'right';\n      } else if (ticks.align === 'inner') {\n        align = 'inner';\n      }\n      return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n      const {\n        position,\n        ticks: {\n          crossAlign,\n          mirror,\n          padding\n        }\n      } = this.options;\n      const labelSizes = this._getLabelSizes();\n      const tickAndPadding = tl + padding;\n      const widest = labelSizes.widest.width;\n      let textAlign;\n      let x;\n      if (position === 'left') {\n        if (mirror) {\n          x = this.right + padding;\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x += widest;\n          }\n        } else {\n          x = this.right - tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x = this.left;\n          }\n        }\n      } else if (position === 'right') {\n        if (mirror) {\n          x = this.left + padding;\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x -= widest;\n          }\n        } else {\n          x = this.left + tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x = this.right;\n          }\n        }\n      } else {\n        textAlign = 'right';\n      }\n      return {\n        textAlign,\n        x\n      };\n    }\n    _computeLabelArea() {\n      if (this.options.ticks.mirror) {\n        return;\n      }\n      const chart = this.chart;\n      const position = this.options.position;\n      if (position === 'left' || position === 'right') {\n        return {\n          top: 0,\n          left: this.left,\n          bottom: chart.height,\n          right: this.right\n        };\n      }\n      if (position === 'top' || position === 'bottom') {\n        return {\n          top: this.top,\n          left: 0,\n          bottom: this.bottom,\n          right: chart.width\n        };\n      }\n    }\n    drawBackground() {\n      const {\n        ctx,\n        options: {\n          backgroundColor\n        },\n        left,\n        top,\n        width,\n        height\n      } = this;\n      if (backgroundColor) {\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        ctx.fillRect(left, top, width, height);\n        ctx.restore();\n      }\n    }\n    getLineWidthForValue(value) {\n      const grid = this.options.grid;\n      if (!this._isVisible() || !grid.display) {\n        return 0;\n      }\n      const ticks = this.ticks;\n      const index = ticks.findIndex(t => t.value === value);\n      if (index >= 0) {\n        const opts = grid.setContext(this.getContext(index));\n        return opts.lineWidth;\n      }\n      return 0;\n    }\n    drawGrid(chartArea) {\n      const grid = this.options.grid;\n      const ctx = this.ctx;\n      const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n      let i, ilen;\n      const drawLine = (p1, p2, style) => {\n        if (!style.width || !style.color) {\n          return;\n        }\n        ctx.save();\n        ctx.lineWidth = style.width;\n        ctx.strokeStyle = style.color;\n        ctx.setLineDash(style.borderDash || []);\n        ctx.lineDashOffset = style.borderDashOffset;\n        ctx.beginPath();\n        ctx.moveTo(p1.x, p1.y);\n        ctx.lineTo(p2.x, p2.y);\n        ctx.stroke();\n        ctx.restore();\n      };\n      if (grid.display) {\n        for (i = 0, ilen = items.length; i < ilen; ++i) {\n          const item = items[i];\n          if (grid.drawOnChartArea) {\n            drawLine({\n              x: item.x1,\n              y: item.y1\n            }, {\n              x: item.x2,\n              y: item.y2\n            }, item);\n          }\n          if (grid.drawTicks) {\n            drawLine({\n              x: item.tx1,\n              y: item.ty1\n            }, {\n              x: item.tx2,\n              y: item.ty2\n            }, {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            });\n          }\n        }\n      }\n    }\n    drawBorder() {\n      const {\n        chart,\n        ctx,\n        options: {\n          grid\n        }\n      } = this;\n      const borderOpts = grid.setContext(this.getContext());\n      const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n      if (!axisWidth) {\n        return;\n      }\n      const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n      const borderValue = this._borderValue;\n      let x1, x2, y1, y2;\n      if (this.isHorizontal()) {\n        x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n      ctx.save();\n      ctx.lineWidth = borderOpts.borderWidth;\n      ctx.strokeStyle = borderOpts.borderColor;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.restore();\n    }\n    drawLabels(chartArea) {\n      const optionTicks = this.options.ticks;\n      if (!optionTicks.display) {\n        return;\n      }\n      const ctx = this.ctx;\n      const area = this._computeLabelArea();\n      if (area) {\n        clipArea(ctx, area);\n      }\n      const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n      let i, ilen;\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        const tickFont = item.font;\n        const label = item.label;\n        if (item.backdrop) {\n          ctx.fillStyle = item.backdrop.color;\n          ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n        }\n        let y = item.textOffset;\n        renderText(ctx, label, 0, y, tickFont, item);\n      }\n      if (area) {\n        unclipArea(ctx);\n      }\n    }\n    drawTitle() {\n      const {\n        ctx,\n        options: {\n          position,\n          title,\n          reverse\n        }\n      } = this;\n      if (!title.display) {\n        return;\n      }\n      const font = toFont(title.font);\n      const padding = toPadding(title.padding);\n      const align = title.align;\n      let offset = font.lineHeight / 2;\n      if (position === 'bottom' || position === 'center' || isObject(position)) {\n        offset += padding.bottom;\n        if (isArray(title.text)) {\n          offset += font.lineHeight * (title.text.length - 1);\n        }\n      } else {\n        offset += padding.top;\n      }\n      const {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n      } = titleArgs(this, offset, position, align);\n      renderText(ctx, title.text, 0, 0, font, {\n        color: title.color,\n        maxWidth,\n        rotation,\n        textAlign: titleAlign(align, position, reverse),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n    draw(chartArea) {\n      if (!this._isVisible()) {\n        return;\n      }\n      this.drawBackground();\n      this.drawGrid(chartArea);\n      this.drawBorder();\n      this.drawTitle();\n      this.drawLabels(chartArea);\n    }\n    _layers() {\n      const opts = this.options;\n      const tz = opts.ticks && opts.ticks.z || 0;\n      const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n      if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n        return [{\n          z: tz,\n          draw: chartArea => {\n            this.draw(chartArea);\n          }\n        }];\n      }\n      return [{\n        z: gz,\n        draw: chartArea => {\n          this.drawBackground();\n          this.drawGrid(chartArea);\n          this.drawTitle();\n        }\n      }, {\n        z: gz + 1,\n        draw: () => {\n          this.drawBorder();\n        }\n      }, {\n        z: tz,\n        draw: chartArea => {\n          this.drawLabels(chartArea);\n        }\n      }];\n    }\n    getMatchingVisibleMetas(type) {\n      const metas = this.chart.getSortedVisibleDatasetMetas();\n      const axisID = this.axis + 'AxisID';\n      const result = [];\n      let i, ilen;\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        const meta = metas[i];\n        if (meta[axisID] === this.id && (!type || meta.type === type)) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n    _resolveTickFontOptions(index) {\n      const opts = this.options.ticks.setContext(this.getContext(index));\n      return toFont(opts.font);\n    }\n    _maxDigits() {\n      const fontSize = this._resolveTickFontOptions(0).lineHeight;\n      return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n  }\n  class TypedRegistry {\n    constructor(type, scope, override) {\n      this.type = type;\n      this.scope = scope;\n      this.override = override;\n      this.items = Object.create(null);\n    }\n    isForType(type) {\n      return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n    register(item) {\n      const proto = Object.getPrototypeOf(item);\n      let parentScope;\n      if (isIChartComponent(proto)) {\n        parentScope = this.register(proto);\n      }\n      const items = this.items;\n      const id = item.id;\n      const scope = this.scope + '.' + id;\n      if (!id) {\n        throw new Error('class does not have id: ' + item);\n      }\n      if (id in items) {\n        return scope;\n      }\n      items[id] = item;\n      registerDefaults(item, scope, parentScope);\n      if (this.override) {\n        defaults.override(item.id, item.overrides);\n      }\n      return scope;\n    }\n    get(id) {\n      return this.items[id];\n    }\n    unregister(item) {\n      const items = this.items;\n      const id = item.id;\n      const scope = this.scope;\n      if (id in items) {\n        delete items[id];\n      }\n      if (scope && id in defaults[scope]) {\n        delete defaults[scope][id];\n        if (this.override) {\n          delete overrides[id];\n        }\n      }\n    }\n  }\n  function registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n      routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n      defaults.describe(scope, item.descriptors);\n    }\n  }\n  function routeDefaults(scope, routes) {\n    Object.keys(routes).forEach(property => {\n      const propertyParts = property.split('.');\n      const sourceName = propertyParts.pop();\n      const sourceScope = [scope].concat(propertyParts).join('.');\n      const parts = routes[property].split('.');\n      const targetName = parts.pop();\n      const targetScope = parts.join('.');\n      defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n  }\n  function isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n  }\n  class Registry {\n    constructor() {\n      this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n      this.elements = new TypedRegistry(Element, 'elements');\n      this.plugins = new TypedRegistry(Object, 'plugins');\n      this.scales = new TypedRegistry(Scale, 'scales');\n      this._typedRegistries = [this.controllers, this.scales, this.elements];\n    }\n    add(...args) {\n      this._each('register', args);\n    }\n    remove(...args) {\n      this._each('unregister', args);\n    }\n    addControllers(...args) {\n      this._each('register', args, this.controllers);\n    }\n    addElements(...args) {\n      this._each('register', args, this.elements);\n    }\n    addPlugins(...args) {\n      this._each('register', args, this.plugins);\n    }\n    addScales(...args) {\n      this._each('register', args, this.scales);\n    }\n    getController(id) {\n      return this._get(id, this.controllers, 'controller');\n    }\n    getElement(id) {\n      return this._get(id, this.elements, 'element');\n    }\n    getPlugin(id) {\n      return this._get(id, this.plugins, 'plugin');\n    }\n    getScale(id) {\n      return this._get(id, this.scales, 'scale');\n    }\n    removeControllers(...args) {\n      this._each('unregister', args, this.controllers);\n    }\n    removeElements(...args) {\n      this._each('unregister', args, this.elements);\n    }\n    removePlugins(...args) {\n      this._each('unregister', args, this.plugins);\n    }\n    removeScales(...args) {\n      this._each('unregister', args, this.scales);\n    }\n    _each(method, args, typedRegistry) {\n      [...args].forEach(arg => {\n        const reg = typedRegistry || this._getRegistryForType(arg);\n        if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n          this._exec(method, reg, arg);\n        } else {\n          each(arg, item => {\n            const itemReg = typedRegistry || this._getRegistryForType(item);\n            this._exec(method, itemReg, item);\n          });\n        }\n      });\n    }\n    _exec(method, registry, component) {\n      const camelMethod = _capitalize(method);\n      callback(component['before' + camelMethod], [], component);\n      registry[method](component);\n      callback(component['after' + camelMethod], [], component);\n    }\n    _getRegistryForType(type) {\n      for (let i = 0; i < this._typedRegistries.length; i++) {\n        const reg = this._typedRegistries[i];\n        if (reg.isForType(type)) {\n          return reg;\n        }\n      }\n      return this.plugins;\n    }\n    _get(id, typedRegistry, type) {\n      const item = typedRegistry.get(id);\n      if (item === undefined) {\n        throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n      }\n      return item;\n    }\n  }\n  var registry = new Registry();\n  class PluginService {\n    constructor() {\n      this._init = [];\n    }\n    notify(chart, hook, args, filter) {\n      if (hook === 'beforeInit') {\n        this._init = this._createDescriptors(chart, true);\n        this._notify(this._init, chart, 'install');\n      }\n      const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n      const result = this._notify(descriptors, chart, hook, args);\n      if (hook === 'afterDestroy') {\n        this._notify(descriptors, chart, 'stop');\n        this._notify(this._init, chart, 'uninstall');\n      }\n      return result;\n    }\n    _notify(descriptors, chart, hook, args) {\n      args = args || {};\n      for (const descriptor of descriptors) {\n        const plugin = descriptor.plugin;\n        const method = plugin[hook];\n        const params = [chart, args, descriptor.options];\n        if (callback(method, params, plugin) === false && args.cancelable) {\n          return false;\n        }\n      }\n      return true;\n    }\n    invalidate() {\n      if (!isNullOrUndef(this._cache)) {\n        this._oldCache = this._cache;\n        this._cache = undefined;\n      }\n    }\n    _descriptors(chart) {\n      if (this._cache) {\n        return this._cache;\n      }\n      const descriptors = this._cache = this._createDescriptors(chart);\n      this._notifyStateChanges(chart);\n      return descriptors;\n    }\n    _createDescriptors(chart, all) {\n      const config = chart && chart.config;\n      const options = valueOrDefault(config.options && config.options.plugins, {});\n      const plugins = allPlugins(config);\n      return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n    _notifyStateChanges(chart) {\n      const previousDescriptors = this._oldCache || [];\n      const descriptors = this._cache;\n      const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n      this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n      this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n  }\n  function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for (let i = 0; i < keys.length; i++) {\n      plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for (let i = 0; i < local.length; i++) {\n      const plugin = local[i];\n      if (plugins.indexOf(plugin) === -1) {\n        plugins.push(plugin);\n        localIds[plugin.id] = true;\n      }\n    }\n    return {\n      plugins,\n      localIds\n    };\n  }\n  function getOpts(options, all) {\n    if (!all && options === false) {\n      return null;\n    }\n    if (options === true) {\n      return {};\n    }\n    return options;\n  }\n  function createDescriptors(chart, {\n    plugins,\n    localIds\n  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins) {\n      const id = plugin.id;\n      const opts = getOpts(options[id], all);\n      if (opts === null) {\n        continue;\n      }\n      result.push({\n        plugin,\n        options: pluginOpts(chart.config, {\n          plugin,\n          local: localIds[id]\n        }, opts, context)\n      });\n    }\n    return result;\n  }\n  function pluginOpts(config, {\n    plugin,\n    local\n  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n      scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [''], {\n      scriptable: false,\n      indexable: false,\n      allKeys: true\n    });\n  }\n  function getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n  }\n  function getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n      axis = indexAxis;\n    } else if (id === '_value_') {\n      axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n  }\n  function getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n  }\n  function axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n      return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n      return 'y';\n    }\n  }\n  function determineAxis(id, scaleOptions) {\n    if (id === 'x' || id === 'y') {\n      return id;\n    }\n    return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n  }\n  function mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n      scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const firstIDs = Object.create(null);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach(id => {\n      const scaleConf = configScales[id];\n      if (!isObject(scaleConf)) {\n        return console.error(`Invalid scale configuration for scale: ${id}`);\n      }\n      if (scaleConf._proxy) {\n        return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n      }\n      const axis = determineAxis(id, scaleConf);\n      const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n      const defaultScaleOptions = chartDefaults.scales || {};\n      firstIDs[axis] = firstIDs[axis] || id;\n      scales[id] = mergeIf(Object.create(null), [{\n        axis\n      }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n    });\n    config.data.datasets.forEach(dataset => {\n      const type = dataset.type || config.type;\n      const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n      const datasetDefaults = overrides[type] || {};\n      const defaultScaleOptions = datasetDefaults.scales || {};\n      Object.keys(defaultScaleOptions).forEach(defaultID => {\n        const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n        const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n        scales[id] = scales[id] || Object.create(null);\n        mergeIf(scales[id], [{\n          axis\n        }, configScales[id], defaultScaleOptions[defaultID]]);\n      });\n    });\n    Object.keys(scales).forEach(key => {\n      const scale = scales[key];\n      mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n    });\n    return scales;\n  }\n  function initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n  }\n  function initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n  }\n  function initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n  }\n  const keyCache = new Map();\n  const keysCached = new Set();\n  function cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n      keys = generate();\n      keyCache.set(cacheKey, keys);\n      keysCached.add(keys);\n    }\n    return keys;\n  }\n  const addIfFound = (set, obj, key) => {\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n      set.add(opts);\n    }\n  };\n  class Config {\n    constructor(config) {\n      this._config = initConfig(config);\n      this._scopeCache = new Map();\n      this._resolverCache = new Map();\n    }\n    get platform() {\n      return this._config.platform;\n    }\n    get type() {\n      return this._config.type;\n    }\n    set type(type) {\n      this._config.type = type;\n    }\n    get data() {\n      return this._config.data;\n    }\n    set data(data) {\n      this._config.data = initData(data);\n    }\n    get options() {\n      return this._config.options;\n    }\n    set options(options) {\n      this._config.options = options;\n    }\n    get plugins() {\n      return this._config.plugins;\n    }\n    update() {\n      const config = this._config;\n      this.clearCache();\n      initOptions(config);\n    }\n    clearCache() {\n      this._scopeCache.clear();\n      this._resolverCache.clear();\n    }\n    datasetScopeKeys(datasetType) {\n      return cachedKeys(datasetType, () => [[`datasets.${datasetType}`, '']]);\n    }\n    datasetAnimationScopeKeys(datasetType, transition) {\n      return cachedKeys(`${datasetType}.transition.${transition}`, () => [[`datasets.${datasetType}.transitions.${transition}`, `transitions.${transition}`], [`datasets.${datasetType}`, '']]);\n    }\n    datasetElementScopeKeys(datasetType, elementType) {\n      return cachedKeys(`${datasetType}-${elementType}`, () => [[`datasets.${datasetType}.elements.${elementType}`, `datasets.${datasetType}`, `elements.${elementType}`, '']]);\n    }\n    pluginScopeKeys(plugin) {\n      const id = plugin.id;\n      const type = this.type;\n      return cachedKeys(`${type}-plugin-${id}`, () => [[`plugins.${id}`, ...(plugin.additionalOptionScopes || [])]]);\n    }\n    _cachedScopes(mainScope, resetCache) {\n      const _scopeCache = this._scopeCache;\n      let cache = _scopeCache.get(mainScope);\n      if (!cache || resetCache) {\n        cache = new Map();\n        _scopeCache.set(mainScope, cache);\n      }\n      return cache;\n    }\n    getOptionScopes(mainScope, keyLists, resetCache) {\n      const {\n        options,\n        type\n      } = this;\n      const cache = this._cachedScopes(mainScope, resetCache);\n      const cached = cache.get(keyLists);\n      if (cached) {\n        return cached;\n      }\n      const scopes = new Set();\n      keyLists.forEach(keys => {\n        if (mainScope) {\n          scopes.add(mainScope);\n          keys.forEach(key => addIfFound(scopes, mainScope, key));\n        }\n        keys.forEach(key => addIfFound(scopes, options, key));\n        keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n        keys.forEach(key => addIfFound(scopes, defaults, key));\n        keys.forEach(key => addIfFound(scopes, descriptors, key));\n      });\n      const array = Array.from(scopes);\n      if (array.length === 0) {\n        array.push(Object.create(null));\n      }\n      if (keysCached.has(keyLists)) {\n        cache.set(keyLists, array);\n      }\n      return array;\n    }\n    chartOptionScopes() {\n      const {\n        options,\n        type\n      } = this;\n      return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n        type\n      }, defaults, descriptors];\n    }\n    resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n      const result = {\n        $shared: true\n      };\n      const {\n        resolver,\n        subPrefixes\n      } = getResolver(this._resolverCache, scopes, prefixes);\n      let options = resolver;\n      if (needContext(resolver, names)) {\n        result.$shared = false;\n        context = isFunction(context) ? context() : context;\n        const subResolver = this.createResolver(scopes, context, subPrefixes);\n        options = _attachContext(resolver, context, subResolver);\n      }\n      for (const prop of names) {\n        result[prop] = options[prop];\n      }\n      return result;\n    }\n    createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n      const {\n        resolver\n      } = getResolver(this._resolverCache, scopes, prefixes);\n      return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n  }\n  function getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n      cache = new Map();\n      resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n      const resolver = _createResolver(scopes, prefixes);\n      cached = {\n        resolver,\n        subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n      };\n      cache.set(cacheKey, cached);\n    }\n    return cached;\n  }\n  const hasFunction = value => isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n  function needContext(proxy, names) {\n    const {\n      isScriptable,\n      isIndexable\n    } = _descriptors(proxy);\n    for (const prop of names) {\n      const scriptable = isScriptable(prop);\n      const indexable = isIndexable(prop);\n      const value = (indexable || scriptable) && proxy[prop];\n      if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  var version = \"3.9.1\";\n  const KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\n  function positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n  }\n  function compare2Level(l1, l2) {\n    return function (a, b) {\n      return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n  }\n  function onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [context], chart);\n  }\n  function onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [context], chart);\n  }\n  function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n      item = document.getElementById(item);\n    } else if (item && item.length) {\n      item = item[0];\n    }\n    if (item && item.canvas) {\n      item = item.canvas;\n    }\n    return item;\n  }\n  const instances = {};\n  const getChart = key => {\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter(c => c.canvas === canvas).pop();\n  };\n  function moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys) {\n      const intKey = +key;\n      if (intKey >= start) {\n        const value = obj[key];\n        delete obj[key];\n        if (move > 0 || intKey > start) {\n          obj[intKey + move] = value;\n        }\n      }\n    }\n  }\n  function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n      return null;\n    }\n    if (isClick) {\n      return lastEvent;\n    }\n    return e;\n  }\n  class Chart {\n    constructor(item, userConfig) {\n      const config = this.config = new Config(userConfig);\n      const initialCanvas = getCanvas(item);\n      const existingChart = getChart(initialCanvas);\n      if (existingChart) {\n        throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n      }\n      const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n      this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n      this.platform.updateConfig(config);\n      const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n      const canvas = context && context.canvas;\n      const height = canvas && canvas.height;\n      const width = canvas && canvas.width;\n      this.id = uid();\n      this.ctx = context;\n      this.canvas = canvas;\n      this.width = width;\n      this.height = height;\n      this._options = options;\n      this._aspectRatio = this.aspectRatio;\n      this._layers = [];\n      this._metasets = [];\n      this._stacks = undefined;\n      this.boxes = [];\n      this.currentDevicePixelRatio = undefined;\n      this.chartArea = undefined;\n      this._active = [];\n      this._lastEvent = undefined;\n      this._listeners = {};\n      this._responsiveListeners = undefined;\n      this._sortedMetasets = [];\n      this.scales = {};\n      this._plugins = new PluginService();\n      this.$proxies = {};\n      this._hiddenIndices = {};\n      this.attached = false;\n      this._animationsDisabled = undefined;\n      this.$context = undefined;\n      this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n      this._dataChanges = [];\n      instances[this.id] = this;\n      if (!context || !canvas) {\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n      animator.listen(this, 'complete', onAnimationsComplete);\n      animator.listen(this, 'progress', onAnimationProgress);\n      this._initialize();\n      if (this.attached) {\n        this.update();\n      }\n    }\n    get aspectRatio() {\n      const {\n        options: {\n          aspectRatio,\n          maintainAspectRatio\n        },\n        width,\n        height,\n        _aspectRatio\n      } = this;\n      if (!isNullOrUndef(aspectRatio)) {\n        return aspectRatio;\n      }\n      if (maintainAspectRatio && _aspectRatio) {\n        return _aspectRatio;\n      }\n      return height ? width / height : null;\n    }\n    get data() {\n      return this.config.data;\n    }\n    set data(data) {\n      this.config.data = data;\n    }\n    get options() {\n      return this._options;\n    }\n    set options(options) {\n      this.config.options = options;\n    }\n    _initialize() {\n      this.notifyPlugins('beforeInit');\n      if (this.options.responsive) {\n        this.resize();\n      } else {\n        retinaScale(this, this.options.devicePixelRatio);\n      }\n      this.bindEvents();\n      this.notifyPlugins('afterInit');\n      return this;\n    }\n    clear() {\n      clearCanvas(this.canvas, this.ctx);\n      return this;\n    }\n    stop() {\n      animator.stop(this);\n      return this;\n    }\n    resize(width, height) {\n      if (!animator.running(this)) {\n        this._resize(width, height);\n      } else {\n        this._resizeBeforeDraw = {\n          width,\n          height\n        };\n      }\n    }\n    _resize(width, height) {\n      const options = this.options;\n      const canvas = this.canvas;\n      const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n      const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n      const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n      const mode = this.width ? 'resize' : 'attach';\n      this.width = newSize.width;\n      this.height = newSize.height;\n      this._aspectRatio = this.aspectRatio;\n      if (!retinaScale(this, newRatio, true)) {\n        return;\n      }\n      this.notifyPlugins('resize', {\n        size: newSize\n      });\n      callback(options.onResize, [this, newSize], this);\n      if (this.attached) {\n        if (this._doResize(mode)) {\n          this.render();\n        }\n      }\n    }\n    ensureScalesHaveIDs() {\n      const options = this.options;\n      const scalesOptions = options.scales || {};\n      each(scalesOptions, (axisOptions, axisID) => {\n        axisOptions.id = axisID;\n      });\n    }\n    buildOrUpdateScales() {\n      const options = this.options;\n      const scaleOpts = options.scales;\n      const scales = this.scales;\n      const updated = Object.keys(scales).reduce((obj, id) => {\n        obj[id] = false;\n        return obj;\n      }, {});\n      let items = [];\n      if (scaleOpts) {\n        items = items.concat(Object.keys(scaleOpts).map(id => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        }));\n      }\n      each(items, item => {\n        const scaleOptions = item.options;\n        const id = scaleOptions.id;\n        const axis = determineAxis(id, scaleOptions);\n        const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n        if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n        updated[id] = true;\n        let scale = null;\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n        } else {\n          const scaleClass = registry.getScale(scaleType);\n          scale = new scaleClass({\n            id,\n            type: scaleType,\n            ctx: this.ctx,\n            chart: this\n          });\n          scales[scale.id] = scale;\n        }\n        scale.init(scaleOptions, options);\n      });\n      each(updated, (hasUpdated, id) => {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      each(scales, scale => {\n        layouts.configure(this, scale, scale.options);\n        layouts.addBox(this, scale);\n      });\n    }\n    _updateMetasets() {\n      const metasets = this._metasets;\n      const numData = this.data.datasets.length;\n      const numMeta = metasets.length;\n      metasets.sort((a, b) => a.index - b.index);\n      if (numMeta > numData) {\n        for (let i = numData; i < numMeta; ++i) {\n          this._destroyDatasetMeta(i);\n        }\n        metasets.splice(numData, numMeta - numData);\n      }\n      this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n    _removeUnreferencedMetasets() {\n      const {\n        _metasets: metasets,\n        data: {\n          datasets\n        }\n      } = this;\n      if (metasets.length > datasets.length) {\n        delete this._stacks;\n      }\n      metasets.forEach((meta, index) => {\n        if (datasets.filter(x => x === meta._dataset).length === 0) {\n          this._destroyDatasetMeta(index);\n        }\n      });\n    }\n    buildOrUpdateControllers() {\n      const newControllers = [];\n      const datasets = this.data.datasets;\n      let i, ilen;\n      this._removeUnreferencedMetasets();\n      for (i = 0, ilen = datasets.length; i < ilen; i++) {\n        const dataset = datasets[i];\n        let meta = this.getDatasetMeta(i);\n        const type = dataset.type || this.config.type;\n        if (meta.type && meta.type !== type) {\n          this._destroyDatasetMeta(i);\n          meta = this.getDatasetMeta(i);\n        }\n        meta.type = type;\n        meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n        meta.order = dataset.order || 0;\n        meta.index = i;\n        meta.label = '' + dataset.label;\n        meta.visible = this.isDatasetVisible(i);\n        if (meta.controller) {\n          meta.controller.updateIndex(i);\n          meta.controller.linkScales();\n        } else {\n          const ControllerClass = registry.getController(type);\n          const {\n            datasetElementType,\n            dataElementType\n          } = defaults.datasets[type];\n          Object.assign(ControllerClass.prototype, {\n            dataElementType: registry.getElement(dataElementType),\n            datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n          });\n          meta.controller = new ControllerClass(this, i);\n          newControllers.push(meta.controller);\n        }\n      }\n      this._updateMetasets();\n      return newControllers;\n    }\n    _resetElements() {\n      each(this.data.datasets, (dataset, datasetIndex) => {\n        this.getDatasetMeta(datasetIndex).controller.reset();\n      }, this);\n    }\n    reset() {\n      this._resetElements();\n      this.notifyPlugins('reset');\n    }\n    update(mode) {\n      const config = this.config;\n      config.update();\n      const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n      const animsDisabled = this._animationsDisabled = !options.animation;\n      this._updateScales();\n      this._checkEventBindings();\n      this._updateHiddenIndices();\n      this._plugins.invalidate();\n      if (this.notifyPlugins('beforeUpdate', {\n        mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      const newControllers = this.buildOrUpdateControllers();\n      this.notifyPlugins('beforeElementsUpdate');\n      let minPadding = 0;\n      for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n        const {\n          controller\n        } = this.getDatasetMeta(i);\n        const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n        controller.buildOrUpdateElements(reset);\n        minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n      }\n      minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n      this._updateLayout(minPadding);\n      if (!animsDisabled) {\n        each(newControllers, controller => {\n          controller.reset();\n        });\n      }\n      this._updateDatasets(mode);\n      this.notifyPlugins('afterUpdate', {\n        mode\n      });\n      this._layers.sort(compare2Level('z', '_idx'));\n      const {\n        _active,\n        _lastEvent\n      } = this;\n      if (_lastEvent) {\n        this._eventHandler(_lastEvent, true);\n      } else if (_active.length) {\n        this._updateHoverStyles(_active, _active, true);\n      }\n      this.render();\n    }\n    _updateScales() {\n      each(this.scales, scale => {\n        layouts.removeBox(this, scale);\n      });\n      this.ensureScalesHaveIDs();\n      this.buildOrUpdateScales();\n    }\n    _checkEventBindings() {\n      const options = this.options;\n      const existingEvents = new Set(Object.keys(this._listeners));\n      const newEvents = new Set(options.events);\n      if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n        this.unbindEvents();\n        this.bindEvents();\n      }\n    }\n    _updateHiddenIndices() {\n      const {\n        _hiddenIndices\n      } = this;\n      const changes = this._getUniformDataChanges() || [];\n      for (const {\n        method,\n        start,\n        count\n      } of changes) {\n        const move = method === '_removeElements' ? -count : count;\n        moveNumericKeys(_hiddenIndices, start, move);\n      }\n    }\n    _getUniformDataChanges() {\n      const _dataChanges = this._dataChanges;\n      if (!_dataChanges || !_dataChanges.length) {\n        return;\n      }\n      this._dataChanges = [];\n      const datasetCount = this.data.datasets.length;\n      const makeSet = idx => new Set(_dataChanges.filter(c => c[0] === idx).map((c, i) => i + ',' + c.splice(1).join(',')));\n      const changeSet = makeSet(0);\n      for (let i = 1; i < datasetCount; i++) {\n        if (!setsEqual(changeSet, makeSet(i))) {\n          return;\n        }\n      }\n      return Array.from(changeSet).map(c => c.split(',')).map(a => ({\n        method: a[1],\n        start: +a[2],\n        count: +a[3]\n      }));\n    }\n    _updateLayout(minPadding) {\n      if (this.notifyPlugins('beforeLayout', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      layouts.update(this, this.width, this.height, minPadding);\n      const area = this.chartArea;\n      const noArea = area.width <= 0 || area.height <= 0;\n      this._layers = [];\n      each(this.boxes, box => {\n        if (noArea && box.position === 'chartArea') {\n          return;\n        }\n        if (box.configure) {\n          box.configure();\n        }\n        this._layers.push(...box._layers());\n      }, this);\n      this._layers.forEach((item, index) => {\n        item._idx = index;\n      });\n      this.notifyPlugins('afterLayout');\n    }\n    _updateDatasets(mode) {\n      if (this.notifyPlugins('beforeDatasetsUpdate', {\n        mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this.getDatasetMeta(i).controller.configure();\n      }\n      for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this._updateDataset(i, isFunction(mode) ? mode({\n          datasetIndex: i\n        }) : mode);\n      }\n      this.notifyPlugins('afterDatasetsUpdate', {\n        mode\n      });\n    }\n    _updateDataset(index, mode) {\n      const meta = this.getDatasetMeta(index);\n      const args = {\n        meta,\n        index,\n        mode,\n        cancelable: true\n      };\n      if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n        return;\n      }\n      meta.controller._update(mode);\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n      if (this.notifyPlugins('beforeRender', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      if (animator.has(this)) {\n        if (this.attached && !animator.running(this)) {\n          animator.start(this);\n        }\n      } else {\n        this.draw();\n        onAnimationsComplete({\n          chart: this\n        });\n      }\n    }\n    draw() {\n      let i;\n      if (this._resizeBeforeDraw) {\n        const {\n          width,\n          height\n        } = this._resizeBeforeDraw;\n        this._resize(width, height);\n        this._resizeBeforeDraw = null;\n      }\n      this.clear();\n      if (this.width <= 0 || this.height <= 0) {\n        return;\n      }\n      if (this.notifyPlugins('beforeDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      const layers = this._layers;\n      for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n      this._drawDatasets();\n      for (; i < layers.length; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n      this.notifyPlugins('afterDraw');\n    }\n    _getSortedDatasetMetas(filterVisible) {\n      const metasets = this._sortedMetasets;\n      const result = [];\n      let i, ilen;\n      for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n        const meta = metasets[i];\n        if (!filterVisible || meta.visible) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n    getSortedVisibleDatasetMetas() {\n      return this._getSortedDatasetMetas(true);\n    }\n    _drawDatasets() {\n      if (this.notifyPlugins('beforeDatasetsDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      const metasets = this.getSortedVisibleDatasetMetas();\n      for (let i = metasets.length - 1; i >= 0; --i) {\n        this._drawDataset(metasets[i]);\n      }\n      this.notifyPlugins('afterDatasetsDraw');\n    }\n    _drawDataset(meta) {\n      const ctx = this.ctx;\n      const clip = meta._clip;\n      const useClip = !clip.disabled;\n      const area = this.chartArea;\n      const args = {\n        meta,\n        index: meta.index,\n        cancelable: true\n      };\n      if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n        return;\n      }\n      if (useClip) {\n        clipArea(ctx, {\n          left: clip.left === false ? 0 : area.left - clip.left,\n          right: clip.right === false ? this.width : area.right + clip.right,\n          top: clip.top === false ? 0 : area.top - clip.top,\n          bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n        });\n      }\n      meta.controller.draw();\n      if (useClip) {\n        unclipArea(ctx);\n      }\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetDraw', args);\n    }\n    isPointInArea(point) {\n      return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n      const method = Interaction.modes[mode];\n      if (typeof method === 'function') {\n        return method(this, e, options, useFinalPosition);\n      }\n      return [];\n    }\n    getDatasetMeta(datasetIndex) {\n      const dataset = this.data.datasets[datasetIndex];\n      const metasets = this._metasets;\n      let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n      if (!meta) {\n        meta = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          xAxisID: null,\n          yAxisID: null,\n          order: dataset && dataset.order || 0,\n          index: datasetIndex,\n          _dataset: dataset,\n          _parsed: [],\n          _sorted: false\n        };\n        metasets.push(meta);\n      }\n      return meta;\n    }\n    getContext() {\n      return this.$context || (this.$context = createContext(null, {\n        chart: this,\n        type: 'chart'\n      }));\n    }\n    getVisibleDatasetCount() {\n      return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n      const dataset = this.data.datasets[datasetIndex];\n      if (!dataset) {\n        return false;\n      }\n      const meta = this.getDatasetMeta(datasetIndex);\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n      const meta = this.getDatasetMeta(datasetIndex);\n      meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n      this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n      return !this._hiddenIndices[index];\n    }\n    _updateVisibility(datasetIndex, dataIndex, visible) {\n      const mode = visible ? 'show' : 'hide';\n      const meta = this.getDatasetMeta(datasetIndex);\n      const anims = meta.controller._resolveAnimations(undefined, mode);\n      if (defined(dataIndex)) {\n        meta.data[dataIndex].hidden = !visible;\n        this.update();\n      } else {\n        this.setDatasetVisibility(datasetIndex, visible);\n        anims.update(meta, {\n          visible\n        });\n        this.update(ctx => ctx.datasetIndex === datasetIndex ? mode : undefined);\n      }\n    }\n    hide(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n    _destroyDatasetMeta(datasetIndex) {\n      const meta = this._metasets[datasetIndex];\n      if (meta && meta.controller) {\n        meta.controller._destroy();\n      }\n      delete this._metasets[datasetIndex];\n    }\n    _stop() {\n      let i, ilen;\n      this.stop();\n      animator.remove(this);\n      for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n    }\n    destroy() {\n      this.notifyPlugins('beforeDestroy');\n      const {\n        canvas,\n        ctx\n      } = this;\n      this._stop();\n      this.config.clearCache();\n      if (canvas) {\n        this.unbindEvents();\n        clearCanvas(canvas, ctx);\n        this.platform.releaseContext(ctx);\n        this.canvas = null;\n        this.ctx = null;\n      }\n      this.notifyPlugins('destroy');\n      delete instances[this.id];\n      this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n      return this.canvas.toDataURL(...args);\n    }\n    bindEvents() {\n      this.bindUserEvents();\n      if (this.options.responsive) {\n        this.bindResponsiveEvents();\n      } else {\n        this.attached = true;\n      }\n    }\n    bindUserEvents() {\n      const listeners = this._listeners;\n      const platform = this.platform;\n      const _add = (type, listener) => {\n        platform.addEventListener(this, type, listener);\n        listeners[type] = listener;\n      };\n      const listener = (e, x, y) => {\n        e.offsetX = x;\n        e.offsetY = y;\n        this._eventHandler(e);\n      };\n      each(this.options.events, type => _add(type, listener));\n    }\n    bindResponsiveEvents() {\n      if (!this._responsiveListeners) {\n        this._responsiveListeners = {};\n      }\n      const listeners = this._responsiveListeners;\n      const platform = this.platform;\n      const _add = (type, listener) => {\n        platform.addEventListener(this, type, listener);\n        listeners[type] = listener;\n      };\n      const _remove = (type, listener) => {\n        if (listeners[type]) {\n          platform.removeEventListener(this, type, listener);\n          delete listeners[type];\n        }\n      };\n      const listener = (width, height) => {\n        if (this.canvas) {\n          this.resize(width, height);\n        }\n      };\n      let detached;\n      const attached = () => {\n        _remove('attach', attached);\n        this.attached = true;\n        this.resize();\n        _add('resize', listener);\n        _add('detach', detached);\n      };\n      detached = () => {\n        this.attached = false;\n        _remove('resize', listener);\n        this._stop();\n        this._resize(0, 0);\n        _add('attach', attached);\n      };\n      if (platform.isAttached(this.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    }\n    unbindEvents() {\n      each(this._listeners, (listener, type) => {\n        this.platform.removeEventListener(this, type, listener);\n      });\n      this._listeners = {};\n      each(this._responsiveListeners, (listener, type) => {\n        this.platform.removeEventListener(this, type, listener);\n      });\n      this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n      const prefix = enabled ? 'set' : 'remove';\n      let meta, item, i, ilen;\n      if (mode === 'dataset') {\n        meta = this.getDatasetMeta(items[0].datasetIndex);\n        meta.controller['_' + prefix + 'DatasetHoverStyle']();\n      }\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        item = items[i];\n        const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n        if (controller) {\n          controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n        }\n      }\n    }\n    getActiveElements() {\n      return this._active || [];\n    }\n    setActiveElements(activeElements) {\n      const lastActive = this._active || [];\n      const active = activeElements.map(({\n        datasetIndex,\n        index\n      }) => {\n        const meta = this.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('No dataset found at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex,\n          element: meta.data[index],\n          index\n        };\n      });\n      const changed = !_elementsEqual(active, lastActive);\n      if (changed) {\n        this._active = active;\n        this._lastEvent = null;\n        this._updateHoverStyles(active, lastActive);\n      }\n    }\n    notifyPlugins(hook, args, filter) {\n      return this._plugins.notify(this, hook, args, filter);\n    }\n    _updateHoverStyles(active, lastActive, replay) {\n      const hoverOptions = this.options.hover;\n      const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n      const deactivated = diff(lastActive, active);\n      const activated = replay ? active : diff(active, lastActive);\n      if (deactivated.length) {\n        this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n      }\n      if (activated.length && hoverOptions.mode) {\n        this.updateHoverStyle(activated, hoverOptions.mode, true);\n      }\n    }\n    _eventHandler(e, replay) {\n      const args = {\n        event: e,\n        replay,\n        cancelable: true,\n        inChartArea: this.isPointInArea(e)\n      };\n      const eventFilter = plugin => (plugin.options.events || this.options.events).includes(e.native.type);\n      if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n        return;\n      }\n      const changed = this._handleEvent(e, replay, args.inChartArea);\n      args.cancelable = false;\n      this.notifyPlugins('afterEvent', args, eventFilter);\n      if (changed || args.changed) {\n        this.render();\n      }\n      return this;\n    }\n    _handleEvent(e, replay, inChartArea) {\n      const {\n        _active: lastActive = [],\n        options\n      } = this;\n      const useFinalPosition = replay;\n      const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n      const isClick = _isClickEvent(e);\n      const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n      if (inChartArea) {\n        this._lastEvent = null;\n        callback(options.onHover, [e, active, this], this);\n        if (isClick) {\n          callback(options.onClick, [e, active, this], this);\n        }\n      }\n      const changed = !_elementsEqual(active, lastActive);\n      if (changed || replay) {\n        this._active = active;\n        this._updateHoverStyles(active, lastActive, replay);\n      }\n      this._lastEvent = lastEvent;\n      return changed;\n    }\n    _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n      if (e.type === 'mouseout') {\n        return [];\n      }\n      if (!inChartArea) {\n        return lastActive;\n      }\n      const hoverOptions = this.options.hover;\n      return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n  }\n  const invalidatePlugins = () => each(Chart.instances, chart => chart._plugins.invalidate());\n  const enumerable = true;\n  Object.defineProperties(Chart, {\n    defaults: {\n      enumerable,\n      value: defaults\n    },\n    instances: {\n      enumerable,\n      value: instances\n    },\n    overrides: {\n      enumerable,\n      value: overrides\n    },\n    registry: {\n      enumerable,\n      value: registry\n    },\n    version: {\n      enumerable,\n      value: version\n    },\n    getChart: {\n      enumerable,\n      value: getChart\n    },\n    register: {\n      enumerable,\n      value: (...items) => {\n        registry.add(...items);\n        invalidatePlugins();\n      }\n    },\n    unregister: {\n      enumerable,\n      value: (...items) => {\n        registry.remove(...items);\n        invalidatePlugins();\n      }\n    }\n  });\n  function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n  }\n  class DateAdapter {\n    constructor(options) {\n      this.options = options || {};\n    }\n    init(chartOptions) {}\n    formats() {\n      return abstract();\n    }\n    parse(value, format) {\n      return abstract();\n    }\n    format(timestamp, format) {\n      return abstract();\n    }\n    add(timestamp, amount, unit) {\n      return abstract();\n    }\n    diff(a, b, unit) {\n      return abstract();\n    }\n    startOf(timestamp, unit, weekday) {\n      return abstract();\n    }\n    endOf(timestamp, unit) {\n      return abstract();\n    }\n  }\n  DateAdapter.override = function (members) {\n    Object.assign(DateAdapter.prototype, members);\n  };\n  var _adapters = {\n    _date: DateAdapter\n  };\n  function getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n      const visibleMetas = scale.getMatchingVisibleMetas(type);\n      let values = [];\n      for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n        values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n      }\n      scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n    }\n    return scale._cache.$bar;\n  }\n  function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = () => {\n      if (curr === 32767 || curr === -32768) {\n        return;\n      }\n      if (defined(prev)) {\n        min = Math.min(min, Math.abs(curr - prev) || min);\n      }\n      prev = curr;\n    };\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      curr = scale.getPixelForValue(values[i]);\n      updateMinAndPrev();\n    }\n    prev = undefined;\n    for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      updateMinAndPrev();\n    }\n    return min;\n  }\n  function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      size = thickness * stackCount;\n      ratio = 1;\n    }\n    return {\n      chunk: size / stackCount,\n      ratio,\n      start: ruler.pixels[index] - size / 2\n    };\n  }\n  function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n      next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / stackCount,\n      ratio: options.barPercentage,\n      start\n    };\n  }\n  function parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n      barStart = max;\n      barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n      barStart,\n      barEnd,\n      start: startValue,\n      end: endValue,\n      min,\n      max\n    };\n  }\n  function parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n      parseFloatBar(entry, item, vScale, i);\n    } else {\n      item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n  }\n  function parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      entry = data[i];\n      item = {};\n      item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n      parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n  }\n  function isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n  }\n  function barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n      return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n  }\n  function borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n      reverse = properties.base > properties.x;\n      start = 'left';\n      end = 'right';\n    } else {\n      reverse = properties.base < properties.y;\n      start = 'bottom';\n      end = 'top';\n    }\n    if (reverse) {\n      top = 'end';\n      bottom = 'start';\n    } else {\n      top = 'start';\n      bottom = 'end';\n    }\n    return {\n      start,\n      end,\n      reverse,\n      top,\n      bottom\n    };\n  }\n  function setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n      properties.borderSkipped = res;\n      return;\n    }\n    if (edge === true) {\n      properties.borderSkipped = {\n        top: true,\n        right: true,\n        bottom: true,\n        left: true\n      };\n      return;\n    }\n    const {\n      start,\n      end,\n      reverse,\n      top,\n      bottom\n    } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n      properties.enableBorderRadius = true;\n      if ((stack._top || 0) === index) {\n        edge = top;\n      } else if ((stack._bottom || 0) === index) {\n        edge = bottom;\n      } else {\n        res[parseEdge(bottom, start, end, reverse)] = true;\n        edge = top;\n      }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n  }\n  function parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n      edge = swap(edge, a, b);\n      edge = startEnd(edge, b, a);\n    } else {\n      edge = startEnd(edge, a, b);\n    }\n    return edge;\n  }\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n  function startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n  }\n  function setInflateAmount(properties, {\n    inflateAmount\n  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n  }\n  class BarController extends DatasetController {\n    parsePrimitiveData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n    parseArrayData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n    parseObjectData(meta, data, start, count) {\n      const {\n        iScale,\n        vScale\n      } = meta;\n      const {\n        xAxisKey = 'x',\n        yAxisKey = 'y'\n      } = this._parsing;\n      const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n      const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n      const parsed = [];\n      let i, ilen, item, obj;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        obj = data[i];\n        item = {};\n        item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n        parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n      }\n      return parsed;\n    }\n    updateRangeFromParsed(range, scale, parsed, stack) {\n      super.updateRangeFromParsed(range, scale, parsed, stack);\n      const custom = parsed._custom;\n      if (custom && scale === this._cachedMeta.vScale) {\n        range.min = Math.min(range.min, custom.min);\n        range.max = Math.max(range.max, custom.max);\n      }\n    }\n    getMaxOverflow() {\n      return 0;\n    }\n    getLabelAndValue(index) {\n      const meta = this._cachedMeta;\n      const {\n        iScale,\n        vScale\n      } = meta;\n      const parsed = this.getParsed(index);\n      const custom = parsed._custom;\n      const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n      return {\n        label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n        value\n      };\n    }\n    initialize() {\n      this.enableOptionSharing = true;\n      super.initialize();\n      const meta = this._cachedMeta;\n      meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n      const meta = this._cachedMeta;\n      this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n      const reset = mode === 'reset';\n      const {\n        index,\n        _cachedMeta: {\n          vScale\n        }\n      } = this;\n      const base = vScale.getBasePixel();\n      const horizontal = vScale.isHorizontal();\n      const ruler = this._getRuler();\n      const {\n        sharedOptions,\n        includeOptions\n      } = this._getSharedOptions(start, mode);\n      for (let i = start; i < start + count; i++) {\n        const parsed = this.getParsed(i);\n        const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n          base,\n          head: base\n        } : this._calculateBarValuePixels(i);\n        const ipixels = this._calculateBarIndexPixels(i, ruler);\n        const stack = (parsed._stacks || {})[vScale.axis];\n        const properties = {\n          horizontal,\n          base: vpixels.base,\n          enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n          x: horizontal ? vpixels.head : ipixels.center,\n          y: horizontal ? ipixels.center : vpixels.head,\n          height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n          width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n        }\n        const options = properties.options || bars[i].options;\n        setBorderSkipped(properties, options, stack, index);\n        setInflateAmount(properties, options, ruler.ratio);\n        this.updateElement(bars[i], i, properties, mode);\n      }\n    }\n    _getStacks(last, dataIndex) {\n      const {\n        iScale\n      } = this._cachedMeta;\n      const metasets = iScale.getMatchingVisibleMetas(this._type).filter(meta => meta.controller.options.grouped);\n      const stacked = iScale.options.stacked;\n      const stacks = [];\n      const skipNull = meta => {\n        const parsed = meta.controller.getParsed(dataIndex);\n        const val = parsed && parsed[meta.vScale.axis];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          return true;\n        }\n      };\n      for (const meta of metasets) {\n        if (dataIndex !== undefined && skipNull(meta)) {\n          continue;\n        }\n        if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n          stacks.push(meta.stack);\n        }\n        if (meta.index === last) {\n          break;\n        }\n      }\n      if (!stacks.length) {\n        stacks.push(undefined);\n      }\n      return stacks;\n    }\n    _getStackCount(index) {\n      return this._getStacks(undefined, index).length;\n    }\n    _getStackIndex(datasetIndex, name, dataIndex) {\n      const stacks = this._getStacks(datasetIndex, dataIndex);\n      const index = name !== undefined ? stacks.indexOf(name) : -1;\n      return index === -1 ? stacks.length - 1 : index;\n    }\n    _getRuler() {\n      const opts = this.options;\n      const meta = this._cachedMeta;\n      const iScale = meta.iScale;\n      const pixels = [];\n      let i, ilen;\n      for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n        pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n      }\n      const barThickness = opts.barThickness;\n      const min = barThickness || computeMinSampleSize(meta);\n      return {\n        min,\n        pixels,\n        start: iScale._startPixel,\n        end: iScale._endPixel,\n        stackCount: this._getStackCount(),\n        scale: iScale,\n        grouped: opts.grouped,\n        ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n      };\n    }\n    _calculateBarValuePixels(index) {\n      const {\n        _cachedMeta: {\n          vScale,\n          _stacked\n        },\n        options: {\n          base: baseValue,\n          minBarLength\n        }\n      } = this;\n      const actualBase = baseValue || 0;\n      const parsed = this.getParsed(index);\n      const custom = parsed._custom;\n      const floating = isFloatBar(custom);\n      let value = parsed[vScale.axis];\n      let start = 0;\n      let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n      let head, size;\n      if (length !== value) {\n        start = length - value;\n        length = value;\n      }\n      if (floating) {\n        value = custom.barStart;\n        length = custom.barEnd - custom.barStart;\n        if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n          start = 0;\n        }\n        start += value;\n      }\n      const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n      let base = vScale.getPixelForValue(startValue);\n      if (this.chart.getDataVisibility(index)) {\n        head = vScale.getPixelForValue(start + length);\n      } else {\n        head = base;\n      }\n      size = head - base;\n      if (Math.abs(size) < minBarLength) {\n        size = barSign(size, vScale, actualBase) * minBarLength;\n        if (value === actualBase) {\n          base -= size / 2;\n        }\n        const startPixel = vScale.getPixelForDecimal(0);\n        const endPixel = vScale.getPixelForDecimal(1);\n        const min = Math.min(startPixel, endPixel);\n        const max = Math.max(startPixel, endPixel);\n        base = Math.max(Math.min(base, max), min);\n        head = base + size;\n      }\n      if (base === vScale.getPixelForValue(actualBase)) {\n        const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n        base += halfGrid;\n        size -= halfGrid;\n      }\n      return {\n        size,\n        base,\n        head,\n        center: head + size / 2\n      };\n    }\n    _calculateBarIndexPixels(index, ruler) {\n      const scale = ruler.scale;\n      const options = this.options;\n      const skipNull = options.skipNull;\n      const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n      let center, size;\n      if (ruler.grouped) {\n        const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n        const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n        const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n        center = range.start + range.chunk * stackIndex + range.chunk / 2;\n        size = Math.min(maxBarThickness, range.chunk * range.ratio);\n      } else {\n        center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n        size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n      }\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center,\n        size\n      };\n    }\n    draw() {\n      const meta = this._cachedMeta;\n      const vScale = meta.vScale;\n      const rects = meta.data;\n      const ilen = rects.length;\n      let i = 0;\n      for (; i < ilen; ++i) {\n        if (this.getParsed(i)[vScale.axis] !== null) {\n          rects[i].draw(this._ctx);\n        }\n      }\n    }\n  }\n  BarController.id = 'bar';\n  BarController.defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n  BarController.overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true\n      }\n    }\n  };\n  class BubbleController extends DatasetController {\n    initialize() {\n      this.enableOptionSharing = true;\n      super.initialize();\n    }\n    parsePrimitiveData(meta, data, start, count) {\n      const parsed = super.parsePrimitiveData(meta, data, start, count);\n      for (let i = 0; i < parsed.length; i++) {\n        parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n      }\n      return parsed;\n    }\n    parseArrayData(meta, data, start, count) {\n      const parsed = super.parseArrayData(meta, data, start, count);\n      for (let i = 0; i < parsed.length; i++) {\n        const item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n      }\n      return parsed;\n    }\n    parseObjectData(meta, data, start, count) {\n      const parsed = super.parseObjectData(meta, data, start, count);\n      for (let i = 0; i < parsed.length; i++) {\n        const item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n      }\n      return parsed;\n    }\n    getMaxOverflow() {\n      const data = this._cachedMeta.data;\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n    getLabelAndValue(index) {\n      const meta = this._cachedMeta;\n      const {\n        xScale,\n        yScale\n      } = meta;\n      const parsed = this.getParsed(index);\n      const x = xScale.getLabelForValue(parsed.x);\n      const y = yScale.getLabelForValue(parsed.y);\n      const r = parsed._custom;\n      return {\n        label: meta.label,\n        value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n      };\n    }\n    update(mode) {\n      const points = this._cachedMeta.data;\n      this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n      const reset = mode === 'reset';\n      const {\n        iScale,\n        vScale\n      } = this._cachedMeta;\n      const {\n        sharedOptions,\n        includeOptions\n      } = this._getSharedOptions(start, mode);\n      const iAxis = iScale.axis;\n      const vAxis = vScale.axis;\n      for (let i = start; i < start + count; i++) {\n        const point = points[i];\n        const parsed = !reset && this.getParsed(i);\n        const properties = {};\n        const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n        const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel);\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n          if (reset) {\n            properties.options.radius = 0;\n          }\n        }\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n    resolveDataElementOptions(index, mode) {\n      const parsed = this.getParsed(index);\n      let values = super.resolveDataElementOptions(index, mode);\n      if (values.$shared) {\n        values = Object.assign({}, values, {\n          $shared: false\n        });\n      }\n      const radius = values.radius;\n      if (mode !== 'active') {\n        values.radius = 0;\n      }\n      values.radius += valueOrDefault(parsed && parsed._custom, radius);\n      return values;\n    }\n  }\n  BubbleController.id = 'bubble';\n  BubbleController.defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n  BubbleController.overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    },\n    plugins: {\n      tooltip: {\n        callbacks: {\n          title() {\n            return '';\n          }\n        }\n      }\n    }\n  };\n  function getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n      const startAngle = rotation;\n      const endAngle = startAngle + circumference;\n      const startX = Math.cos(startAngle);\n      const startY = Math.sin(startAngle);\n      const endX = Math.cos(endAngle);\n      const endY = Math.sin(endAngle);\n      const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n      const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n      const maxX = calcMax(0, startX, endX);\n      const maxY = calcMax(HALF_PI, startY, endY);\n      const minX = calcMin(PI, startX, endX);\n      const minY = calcMin(PI + HALF_PI, startY, endY);\n      ratioX = (maxX - minX) / 2;\n      ratioY = (maxY - minY) / 2;\n      offsetX = -(maxX + minX) / 2;\n      offsetY = -(maxY + minY) / 2;\n    }\n    return {\n      ratioX,\n      ratioY,\n      offsetX,\n      offsetY\n    };\n  }\n  class DoughnutController extends DatasetController {\n    constructor(chart, datasetIndex) {\n      super(chart, datasetIndex);\n      this.enableOptionSharing = true;\n      this.innerRadius = undefined;\n      this.outerRadius = undefined;\n      this.offsetX = undefined;\n      this.offsetY = undefined;\n    }\n    linkScales() {}\n    parse(start, count) {\n      const data = this.getDataset().data;\n      const meta = this._cachedMeta;\n      if (this._parsing === false) {\n        meta._parsed = data;\n      } else {\n        let getter = i => +data[i];\n        if (isObject(data[start])) {\n          const {\n            key = 'value'\n          } = this._parsing;\n          getter = i => +resolveObjectKey(data[i], key);\n        }\n        let i, ilen;\n        for (i = start, ilen = start + count; i < ilen; ++i) {\n          meta._parsed[i] = getter(i);\n        }\n      }\n    }\n    _getRotation() {\n      return toRadians(this.options.rotation - 90);\n    }\n    _getCircumference() {\n      return toRadians(this.options.circumference);\n    }\n    _getRotationExtents() {\n      let min = TAU;\n      let max = -TAU;\n      for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          const controller = this.chart.getDatasetMeta(i).controller;\n          const rotation = controller._getRotation();\n          const circumference = controller._getCircumference();\n          min = Math.min(min, rotation);\n          max = Math.max(max, rotation + circumference);\n        }\n      }\n      return {\n        rotation: min,\n        circumference: max - min\n      };\n    }\n    update(mode) {\n      const chart = this.chart;\n      const {\n        chartArea\n      } = chart;\n      const meta = this._cachedMeta;\n      const arcs = meta.data;\n      const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n      const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n      const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n      const chartWeight = this._getRingWeight(this.index);\n      const {\n        circumference,\n        rotation\n      } = this._getRotationExtents();\n      const {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n      } = getRatioAndOffset(rotation, circumference, cutout);\n      const maxWidth = (chartArea.width - spacing) / ratioX;\n      const maxHeight = (chartArea.height - spacing) / ratioY;\n      const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n      const outerRadius = toDimension(this.options.radius, maxRadius);\n      const innerRadius = Math.max(outerRadius * cutout, 0);\n      const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n      this.offsetX = offsetX * outerRadius;\n      this.offsetY = offsetY * outerRadius;\n      meta.total = this.calculateTotal();\n      this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n      this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n    _circumference(i, reset) {\n      const opts = this.options;\n      const meta = this._cachedMeta;\n      const circumference = this._getCircumference();\n      if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n        return 0;\n      }\n      return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n      const reset = mode === 'reset';\n      const chart = this.chart;\n      const chartArea = chart.chartArea;\n      const opts = chart.options;\n      const animationOpts = opts.animation;\n      const centerX = (chartArea.left + chartArea.right) / 2;\n      const centerY = (chartArea.top + chartArea.bottom) / 2;\n      const animateScale = reset && animationOpts.animateScale;\n      const innerRadius = animateScale ? 0 : this.innerRadius;\n      const outerRadius = animateScale ? 0 : this.outerRadius;\n      const {\n        sharedOptions,\n        includeOptions\n      } = this._getSharedOptions(start, mode);\n      let startAngle = this._getRotation();\n      let i;\n      for (i = 0; i < start; ++i) {\n        startAngle += this._circumference(i, reset);\n      }\n      for (i = start; i < start + count; ++i) {\n        const circumference = this._circumference(i, reset);\n        const arc = arcs[i];\n        const properties = {\n          x: centerX + this.offsetX,\n          y: centerY + this.offsetY,\n          startAngle,\n          endAngle: startAngle + circumference,\n          circumference,\n          outerRadius,\n          innerRadius\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n        }\n        startAngle += circumference;\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n    calculateTotal() {\n      const meta = this._cachedMeta;\n      const metaData = meta.data;\n      let total = 0;\n      let i;\n      for (i = 0; i < metaData.length; i++) {\n        const value = meta._parsed[i];\n        if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n          total += Math.abs(value);\n        }\n      }\n      return total;\n    }\n    calculateCircumference(value) {\n      const total = this._cachedMeta.total;\n      if (total > 0 && !isNaN(value)) {\n        return TAU * (Math.abs(value) / total);\n      }\n      return 0;\n    }\n    getLabelAndValue(index) {\n      const meta = this._cachedMeta;\n      const chart = this.chart;\n      const labels = chart.data.labels || [];\n      const value = formatNumber(meta._parsed[index], chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value\n      };\n    }\n    getMaxBorderWidth(arcs) {\n      let max = 0;\n      const chart = this.chart;\n      let i, ilen, meta, controller, options;\n      if (!arcs) {\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n            controller = meta.controller;\n            break;\n          }\n        }\n      }\n      if (!arcs) {\n        return 0;\n      }\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        options = controller.resolveDataElementOptions(i);\n        if (options.borderAlign !== 'inner') {\n          max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n        }\n      }\n      return max;\n    }\n    getMaxOffset(arcs) {\n      let max = 0;\n      for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n        const options = this.resolveDataElementOptions(i);\n        max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n      }\n      return max;\n    }\n    _getRingWeightOffset(datasetIndex) {\n      let ringWeightOffset = 0;\n      for (let i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n      return ringWeightOffset;\n    }\n    _getRingWeight(datasetIndex) {\n      return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n    _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n  }\n  DoughnutController.id = 'doughnut';\n  DoughnutController.defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      }\n    },\n    cutout: '50%',\n    rotation: 0,\n    circumference: 360,\n    radius: '100%',\n    spacing: 0,\n    indexAxis: 'r'\n  };\n  DoughnutController.descriptors = {\n    _scriptable: name => name !== 'spacing',\n    _indexable: name => name !== 'spacing'\n  };\n  DoughnutController.overrides = {\n    aspectRatio: 1,\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {\n                labels: {\n                  pointStyle\n                }\n              } = chart.legend.options;\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      },\n      tooltip: {\n        callbacks: {\n          title() {\n            return '';\n          },\n          label(tooltipItem) {\n            let dataLabel = tooltipItem.label;\n            const value = ': ' + tooltipItem.formattedValue;\n            if (isArray(dataLabel)) {\n              dataLabel = dataLabel.slice();\n              dataLabel[0] += value;\n            } else {\n              dataLabel += value;\n            }\n            return dataLabel;\n          }\n        }\n      }\n    }\n  };\n  class LineController extends DatasetController {\n    initialize() {\n      this.enableOptionSharing = true;\n      this.supportsDecimation = true;\n      super.initialize();\n    }\n    update(mode) {\n      const meta = this._cachedMeta;\n      const {\n        dataset: line,\n        data: points = [],\n        _dataset\n      } = meta;\n      const animationsDisabled = this.chart._animationsDisabled;\n      let {\n        start,\n        count\n      } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n      this._drawStart = start;\n      this._drawCount = count;\n      if (_scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n      this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n      const reset = mode === 'reset';\n      const {\n        iScale,\n        vScale,\n        _stacked,\n        _dataset\n      } = this._cachedMeta;\n      const {\n        sharedOptions,\n        includeOptions\n      } = this._getSharedOptions(start, mode);\n      const iAxis = iScale.axis;\n      const vAxis = vScale.axis;\n      const {\n        spanGaps,\n        segment\n      } = this.options;\n      const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      let prevParsed = start > 0 && this.getParsed(start - 1);\n      for (let i = start; i < start + count; ++i) {\n        const point = points[i];\n        const parsed = this.getParsed(i);\n        const properties = directUpdate ? point : {};\n        const nullData = isNullOrUndef(parsed[vAxis]);\n        const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n        prevParsed = parsed;\n      }\n    }\n    getMaxOverflow() {\n      const meta = this._cachedMeta;\n      const dataset = meta.dataset;\n      const border = dataset.options && dataset.options.borderWidth || 0;\n      const data = meta.data || [];\n      if (!data.length) {\n        return border;\n      }\n      const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n      const meta = this._cachedMeta;\n      meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n      super.draw();\n    }\n  }\n  LineController.id = 'line';\n  LineController.defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    showLine: true,\n    spanGaps: false\n  };\n  LineController.overrides = {\n    scales: {\n      _index_: {\n        type: 'category'\n      },\n      _value_: {\n        type: 'linear'\n      }\n    }\n  };\n  class PolarAreaController extends DatasetController {\n    constructor(chart, datasetIndex) {\n      super(chart, datasetIndex);\n      this.innerRadius = undefined;\n      this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n      const meta = this._cachedMeta;\n      const chart = this.chart;\n      const labels = chart.data.labels || [];\n      const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value\n      };\n    }\n    parseObjectData(meta, data, start, count) {\n      return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n      const arcs = this._cachedMeta.data;\n      this._updateRadius();\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n    getMinMax() {\n      const meta = this._cachedMeta;\n      const range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      meta.data.forEach((element, index) => {\n        const parsed = this.getParsed(index).r;\n        if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n          if (parsed < range.min) {\n            range.min = parsed;\n          }\n          if (parsed > range.max) {\n            range.max = parsed;\n          }\n        }\n      });\n      return range;\n    }\n    _updateRadius() {\n      const chart = this.chart;\n      const chartArea = chart.chartArea;\n      const opts = chart.options;\n      const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      const outerRadius = Math.max(minSize / 2, 0);\n      const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n      this.outerRadius = outerRadius - radiusLength * this.index;\n      this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n      const reset = mode === 'reset';\n      const chart = this.chart;\n      const opts = chart.options;\n      const animationOpts = opts.animation;\n      const scale = this._cachedMeta.rScale;\n      const centerX = scale.xCenter;\n      const centerY = scale.yCenter;\n      const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n      let angle = datasetStartAngle;\n      let i;\n      const defaultAngle = 360 / this.countVisibleElements();\n      for (i = 0; i < start; ++i) {\n        angle += this._computeAngle(i, mode, defaultAngle);\n      }\n      for (i = start; i < start + count; i++) {\n        const arc = arcs[i];\n        let startAngle = angle;\n        let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n        let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n        angle = endAngle;\n        if (reset) {\n          if (animationOpts.animateScale) {\n            outerRadius = 0;\n          }\n          if (animationOpts.animateRotate) {\n            startAngle = endAngle = datasetStartAngle;\n          }\n        }\n        const properties = {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius,\n          startAngle,\n          endAngle,\n          options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n        };\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n    countVisibleElements() {\n      const meta = this._cachedMeta;\n      let count = 0;\n      meta.data.forEach((element, index) => {\n        if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n          count++;\n        }\n      });\n      return count;\n    }\n    _computeAngle(index, mode, defaultAngle) {\n      return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n  }\n  PolarAreaController.id = 'polarArea';\n  PolarAreaController.defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      }\n    },\n    indexAxis: 'r',\n    startAngle: 0\n  };\n  PolarAreaController.overrides = {\n    aspectRatio: 1,\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {\n                labels: {\n                  pointStyle\n                }\n              } = chart.legend.options;\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      },\n      tooltip: {\n        callbacks: {\n          title() {\n            return '';\n          },\n          label(context) {\n            return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n          }\n        }\n      }\n    },\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n  class PieController extends DoughnutController {}\n  PieController.id = 'pie';\n  PieController.defaults = {\n    cutout: 0,\n    rotation: 0,\n    circumference: 360,\n    radius: '100%'\n  };\n  class RadarController extends DatasetController {\n    getLabelAndValue(index) {\n      const vScale = this._cachedMeta.vScale;\n      const parsed = this.getParsed(index);\n      return {\n        label: vScale.getLabels()[index],\n        value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n      };\n    }\n    parseObjectData(meta, data, start, count) {\n      return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n      const meta = this._cachedMeta;\n      const line = meta.dataset;\n      const points = meta.data || [];\n      const labels = meta.iScale.getLabels();\n      line.points = points;\n      if (mode !== 'resize') {\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n          options.borderWidth = 0;\n        }\n        const properties = {\n          _loop: true,\n          _fullLoop: labels.length === points.length,\n          options\n        };\n        this.updateElement(line, undefined, properties, mode);\n      }\n      this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n      const scale = this._cachedMeta.rScale;\n      const reset = mode === 'reset';\n      for (let i = start; i < start + count; i++) {\n        const point = points[i];\n        const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n        const x = reset ? scale.xCenter : pointPosition.x;\n        const y = reset ? scale.yCenter : pointPosition.y;\n        const properties = {\n          x,\n          y,\n          angle: pointPosition.angle,\n          skip: isNaN(x) || isNaN(y),\n          options\n        };\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n  }\n  RadarController.id = 'radar';\n  RadarController.defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    }\n  };\n  RadarController.overrides = {\n    aspectRatio: 1,\n    scales: {\n      r: {\n        type: 'radialLinear'\n      }\n    }\n  };\n  class ScatterController extends DatasetController {\n    update(mode) {\n      const meta = this._cachedMeta;\n      const {\n        data: points = []\n      } = meta;\n      const animationsDisabled = this.chart._animationsDisabled;\n      let {\n        start,\n        count\n      } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n      this._drawStart = start;\n      this._drawCount = count;\n      if (_scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n      if (this.options.showLine) {\n        const {\n          dataset: line,\n          _dataset\n        } = meta;\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n          animated: !animationsDisabled,\n          options\n        }, mode);\n      }\n      this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n      const {\n        showLine\n      } = this.options;\n      if (!this.datasetElementType && showLine) {\n        this.datasetElementType = registry.getElement('line');\n      }\n      super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n      const reset = mode === 'reset';\n      const {\n        iScale,\n        vScale,\n        _stacked,\n        _dataset\n      } = this._cachedMeta;\n      const firstOpts = this.resolveDataElementOptions(start, mode);\n      const sharedOptions = this.getSharedOptions(firstOpts);\n      const includeOptions = this.includeOptions(mode, sharedOptions);\n      const iAxis = iScale.axis;\n      const vAxis = vScale.axis;\n      const {\n        spanGaps,\n        segment\n      } = this.options;\n      const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      let prevParsed = start > 0 && this.getParsed(start - 1);\n      for (let i = start; i < start + count; ++i) {\n        const point = points[i];\n        const parsed = this.getParsed(i);\n        const properties = directUpdate ? point : {};\n        const nullData = isNullOrUndef(parsed[vAxis]);\n        const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n        prevParsed = parsed;\n      }\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n    getMaxOverflow() {\n      const meta = this._cachedMeta;\n      const data = meta.data || [];\n      if (!this.options.showLine) {\n        let max = 0;\n        for (let i = data.length - 1; i >= 0; --i) {\n          max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n      }\n      const dataset = meta.dataset;\n      const border = dataset.options && dataset.options.borderWidth || 0;\n      if (!data.length) {\n        return border;\n      }\n      const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }\n  ScatterController.id = 'scatter';\n  ScatterController.defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n  ScatterController.overrides = {\n    interaction: {\n      mode: 'point'\n    },\n    plugins: {\n      tooltip: {\n        callbacks: {\n          title() {\n            return '';\n          },\n          label(item) {\n            return '(' + item.label + ', ' + item.formattedValue + ')';\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n  var controllers = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    BarController: BarController,\n    BubbleController: BubbleController,\n    DoughnutController: DoughnutController,\n    LineController: LineController,\n    PolarAreaController: PolarAreaController,\n    PieController: PieController,\n    RadarController: RadarController,\n    ScatterController: ScatterController\n  });\n  function clipArc(ctx, element, endAngle) {\n    const {\n      startAngle,\n      pixelMargin,\n      x,\n      y,\n      outerRadius,\n      innerRadius\n    } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n      angleMargin = pixelMargin / innerRadius;\n      ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n      ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n  }\n  function toRadiusCorners(value) {\n    return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n  }\n  function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    const computeOuterLimit = val => {\n      const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n      return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n      outerStart: computeOuterLimit(o.outerStart),\n      outerEnd: computeOuterLimit(o.outerEnd),\n      innerStart: _limitValue(o.innerStart, 0, innerLimit),\n      innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n  }\n  function rThetaToXY(r, theta, x, y) {\n    return {\n      x: x + r * Math.cos(theta),\n      y: y + r * Math.sin(theta)\n    };\n  }\n  function pathArc(ctx, element, offset, spacing, end, circular) {\n    const {\n      x,\n      y,\n      startAngle: start,\n      pixelMargin,\n      innerRadius: innerR\n    } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n      const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n      const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n      const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n      const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n      spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const {\n      outerStart,\n      outerEnd,\n      innerStart,\n      innerEnd\n    } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n      ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n      if (outerEnd > 0) {\n        const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n        ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n      }\n      const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n      ctx.lineTo(p4.x, p4.y);\n      if (innerEnd > 0) {\n        const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n        ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n      }\n      ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n      if (innerStart > 0) {\n        const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n        ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n      }\n      const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n      ctx.lineTo(p8.x, p8.y);\n      if (outerStart > 0) {\n        const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n        ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n      }\n    } else {\n      ctx.moveTo(x, y);\n      const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n      const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n      ctx.lineTo(outerStartX, outerStartY);\n      const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n      const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n      ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n  }\n  function drawArc(ctx, element, offset, spacing, circular) {\n    const {\n      fullCircles,\n      startAngle,\n      circumference\n    } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n      pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n      for (let i = 0; i < fullCircles; ++i) {\n        ctx.fill();\n      }\n      if (!isNaN(circumference)) {\n        endAngle = startAngle + circumference % TAU;\n        if (circumference % TAU === 0) {\n          endAngle += TAU;\n        }\n      }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n  }\n  function drawFullCircleBorders(ctx, element, inner) {\n    const {\n      x,\n      y,\n      startAngle,\n      pixelMargin,\n      fullCircles\n    } = element;\n    const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n    const innerRadius = element.innerRadius + pixelMargin;\n    let i;\n    if (inner) {\n      clipArc(ctx, element, startAngle + TAU);\n    }\n    ctx.beginPath();\n    ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n    for (i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n    for (i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n  }\n  function drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n    const {\n      options\n    } = element;\n    const {\n      borderWidth,\n      borderJoinStyle\n    } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n      return;\n    }\n    if (inner) {\n      ctx.lineWidth = borderWidth * 2;\n      ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n      ctx.lineWidth = borderWidth;\n      ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    if (element.fullCircles) {\n      drawFullCircleBorders(ctx, element, inner);\n    }\n    if (inner) {\n      clipArc(ctx, element, endAngle);\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n  class ArcElement extends Element {\n    constructor(cfg) {\n      super();\n      this.options = undefined;\n      this.circumference = undefined;\n      this.startAngle = undefined;\n      this.endAngle = undefined;\n      this.innerRadius = undefined;\n      this.outerRadius = undefined;\n      this.pixelMargin = 0;\n      this.fullCircles = 0;\n      if (cfg) {\n        Object.assign(this, cfg);\n      }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n      const point = this.getProps(['x', 'y'], useFinalPosition);\n      const {\n        angle,\n        distance\n      } = getAngleFromPoint(point, {\n        x: chartX,\n        y: chartY\n      });\n      const {\n        startAngle,\n        endAngle,\n        innerRadius,\n        outerRadius,\n        circumference\n      } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n      const rAdjust = this.options.spacing / 2;\n      const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n      const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n      const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n      return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n      const {\n        x,\n        y,\n        startAngle,\n        endAngle,\n        innerRadius,\n        outerRadius\n      } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n      const {\n        offset,\n        spacing\n      } = this.options;\n      const halfAngle = (startAngle + endAngle) / 2;\n      const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n      return {\n        x: x + Math.cos(halfAngle) * halfRadius,\n        y: y + Math.sin(halfAngle) * halfRadius\n      };\n    }\n    tooltipPosition(useFinalPosition) {\n      return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n      const {\n        options,\n        circumference\n      } = this;\n      const offset = (options.offset || 0) / 2;\n      const spacing = (options.spacing || 0) / 2;\n      const circular = options.circular;\n      this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n      this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n      if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n        return;\n      }\n      ctx.save();\n      let radiusOffset = 0;\n      if (offset) {\n        radiusOffset = offset / 2;\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n        if (this.circumference >= PI) {\n          radiusOffset = offset;\n        }\n      }\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n      drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n      ctx.restore();\n    }\n  }\n  ArcElement.id = 'arc';\n  ArcElement.defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true\n  };\n  ArcElement.defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n  function setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n  }\n  function lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n  }\n  function getLineMethod(options) {\n    if (options.stepped) {\n      return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n      return _bezierCurveTo;\n    }\n    return lineTo;\n  }\n  function pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const {\n      start: paramsStart = 0,\n      end: paramsEnd = count - 1\n    } = params;\n    const {\n      start: segmentStart,\n      end: segmentEnd\n    } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n      count,\n      start,\n      loop: segment.loop,\n      ilen: end < start && !outside ? count + end - start : end - start\n    };\n  }\n  function pathSegment(ctx, line, segment, params) {\n    const {\n      points,\n      options\n    } = line;\n    const {\n      count,\n      start,\n      loop,\n      ilen\n    } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let {\n      move = true,\n      reverse\n    } = params || {};\n    let i, point, prev;\n    for (i = 0; i <= ilen; ++i) {\n      point = points[(start + (reverse ? ilen - i : i)) % count];\n      if (point.skip) {\n        continue;\n      } else if (move) {\n        ctx.moveTo(point.x, point.y);\n        move = false;\n      } else {\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n      }\n      prev = point;\n    }\n    if (loop) {\n      point = points[(start + (reverse ? ilen : 0)) % count];\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n  }\n  function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const {\n      count,\n      start,\n      ilen\n    } = pathVars(points, segment, params);\n    const {\n      move = true,\n      reverse\n    } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = index => (start + (reverse ? ilen - index : index)) % count;\n    const drawX = () => {\n      if (minY !== maxY) {\n        ctx.lineTo(avgX, maxY);\n        ctx.lineTo(avgX, minY);\n        ctx.lineTo(avgX, lastY);\n      }\n    };\n    if (move) {\n      point = points[pointIndex(0)];\n      ctx.moveTo(point.x, point.y);\n    }\n    for (i = 0; i <= ilen; ++i) {\n      point = points[pointIndex(i)];\n      if (point.skip) {\n        continue;\n      }\n      const x = point.x;\n      const y = point.y;\n      const truncX = x | 0;\n      if (truncX === prevX) {\n        if (y < minY) {\n          minY = y;\n        } else if (y > maxY) {\n          maxY = y;\n        }\n        avgX = (countX * avgX + x) / ++countX;\n      } else {\n        drawX();\n        ctx.lineTo(x, y);\n        prevX = truncX;\n        countX = 0;\n        minY = maxY = y;\n      }\n      lastY = y;\n    }\n    drawX();\n  }\n  function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n  }\n  function _getInterpolationMethod(options) {\n    if (options.stepped) {\n      return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n      return _bezierInterpolation;\n    }\n    return _pointInLine;\n  }\n  function strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n      path = line._path = new Path2D();\n      if (line.path(path, start, count)) {\n        path.closePath();\n      }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n  }\n  function strokePathDirect(ctx, line, start, count) {\n    const {\n      segments,\n      options\n    } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments) {\n      setStyle(ctx, options, segment.style);\n      ctx.beginPath();\n      if (segmentMethod(ctx, line, segment, {\n        start,\n        end: start + count - 1\n      })) {\n        ctx.closePath();\n      }\n      ctx.stroke();\n    }\n  }\n  const usePath2D = typeof Path2D === 'function';\n  function draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n      strokePathWithCache(ctx, line, start, count);\n    } else {\n      strokePathDirect(ctx, line, start, count);\n    }\n  }\n  class LineElement extends Element {\n    constructor(cfg) {\n      super();\n      this.animated = true;\n      this.options = undefined;\n      this._chart = undefined;\n      this._loop = undefined;\n      this._fullLoop = undefined;\n      this._path = undefined;\n      this._points = undefined;\n      this._segments = undefined;\n      this._decimated = false;\n      this._pointsUpdated = false;\n      this._datasetIndex = undefined;\n      if (cfg) {\n        Object.assign(this, cfg);\n      }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n      const options = this.options;\n      if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n        const loop = options.spanGaps ? this._loop : this._fullLoop;\n        _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n        this._pointsUpdated = true;\n      }\n    }\n    set points(points) {\n      this._points = points;\n      delete this._segments;\n      delete this._path;\n      this._pointsUpdated = false;\n    }\n    get points() {\n      return this._points;\n    }\n    get segments() {\n      return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n    first() {\n      const segments = this.segments;\n      const points = this.points;\n      return segments.length && points[segments[0].start];\n    }\n    last() {\n      const segments = this.segments;\n      const points = this.points;\n      const count = segments.length;\n      return count && points[segments[count - 1].end];\n    }\n    interpolate(point, property) {\n      const options = this.options;\n      const value = point[property];\n      const points = this.points;\n      const segments = _boundSegments(this, {\n        property,\n        start: value,\n        end: value\n      });\n      if (!segments.length) {\n        return;\n      }\n      const result = [];\n      const _interpolate = _getInterpolationMethod(options);\n      let i, ilen;\n      for (i = 0, ilen = segments.length; i < ilen; ++i) {\n        const {\n          start,\n          end\n        } = segments[i];\n        const p1 = points[start];\n        const p2 = points[end];\n        if (p1 === p2) {\n          result.push(p1);\n          continue;\n        }\n        const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n        const interpolated = _interpolate(p1, p2, t, options.stepped);\n        interpolated[property] = point[property];\n        result.push(interpolated);\n      }\n      return result.length === 1 ? result[0] : result;\n    }\n    pathSegment(ctx, segment, params) {\n      const segmentMethod = _getSegmentMethod(this);\n      return segmentMethod(ctx, this, segment, params);\n    }\n    path(ctx, start, count) {\n      const segments = this.segments;\n      const segmentMethod = _getSegmentMethod(this);\n      let loop = this._loop;\n      start = start || 0;\n      count = count || this.points.length - start;\n      for (const segment of segments) {\n        loop &= segmentMethod(ctx, this, segment, {\n          start,\n          end: start + count - 1\n        });\n      }\n      return !!loop;\n    }\n    draw(ctx, chartArea, start, count) {\n      const options = this.options || {};\n      const points = this.points || [];\n      if (points.length && options.borderWidth) {\n        ctx.save();\n        draw(ctx, this, start, count);\n        ctx.restore();\n      }\n      if (this.animated) {\n        this._pointsUpdated = false;\n        this._path = undefined;\n      }\n    }\n  }\n  LineElement.id = 'line';\n  LineElement.defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0\n  };\n  LineElement.defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n  LineElement.descriptors = {\n    _scriptable: true,\n    _indexable: name => name !== 'borderDash' && name !== 'fill'\n  };\n  function inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const {\n      [axis]: value\n    } = el.getProps([axis], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n  }\n  class PointElement extends Element {\n    constructor(cfg) {\n      super();\n      this.options = undefined;\n      this.parsed = undefined;\n      this.skip = undefined;\n      this.stop = undefined;\n      if (cfg) {\n        Object.assign(this, cfg);\n      }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n      const options = this.options;\n      const {\n        x,\n        y\n      } = this.getProps(['x', 'y'], useFinalPosition);\n      return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n      return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n      return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n      const {\n        x,\n        y\n      } = this.getProps(['x', 'y'], useFinalPosition);\n      return {\n        x,\n        y\n      };\n    }\n    size(options) {\n      options = options || this.options || {};\n      let radius = options.radius || 0;\n      radius = Math.max(radius, radius && options.hoverRadius || 0);\n      const borderWidth = radius && options.borderWidth || 0;\n      return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n      const options = this.options;\n      if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n        return;\n      }\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.fillStyle = options.backgroundColor;\n      drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n      const options = this.options || {};\n      return options.radius + options.hitRadius;\n    }\n  }\n  PointElement.id = 'point';\n  PointElement.defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n  PointElement.defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n  function getBarBounds(bar, useFinalPosition) {\n    const {\n      x,\n      y,\n      base,\n      width,\n      height\n    } = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n      half = height / 2;\n      left = Math.min(x, base);\n      right = Math.max(x, base);\n      top = y - half;\n      bottom = y + half;\n    } else {\n      half = width / 2;\n      left = x - half;\n      right = x + half;\n      top = Math.min(y, base);\n      bottom = Math.max(y, base);\n    }\n    return {\n      left,\n      top,\n      right,\n      bottom\n    };\n  }\n  function skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n  }\n  function parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n      t: skipOrLimit(skip.top, o.top, 0, maxH),\n      r: skipOrLimit(skip.right, o.right, 0, maxW),\n      b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n      l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n  }\n  function parseBorderRadius(bar, maxW, maxH) {\n    const {\n      enableBorderRadius\n    } = bar.getProps(['enableBorderRadius']);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n      topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n      topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n      bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n      bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n  }\n  function boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height,\n        radius\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b,\n        radius: {\n          topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n          topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n          bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n          bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n        }\n      }\n    };\n  }\n  function inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n  }\n  function hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n  }\n  function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n  }\n  function inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n      x: rect.x + x,\n      y: rect.y + y,\n      w: rect.w + w,\n      h: rect.h + h,\n      radius: rect.radius\n    };\n  }\n  class BarElement extends Element {\n    constructor(cfg) {\n      super();\n      this.options = undefined;\n      this.horizontal = undefined;\n      this.base = undefined;\n      this.width = undefined;\n      this.height = undefined;\n      this.inflateAmount = undefined;\n      if (cfg) {\n        Object.assign(this, cfg);\n      }\n    }\n    draw(ctx) {\n      const {\n        inflateAmount,\n        options: {\n          borderColor,\n          backgroundColor\n        }\n      } = this;\n      const {\n        inner,\n        outer\n      } = boundingRects(this);\n      const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n      ctx.save();\n      if (outer.w !== inner.w || outer.h !== inner.h) {\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n        ctx.clip();\n        addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n        ctx.fillStyle = borderColor;\n        ctx.fill('evenodd');\n      }\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(inner, inflateAmount));\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n      return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n      return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n      return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n      const {\n        x,\n        y,\n        base,\n        horizontal\n      } = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n      return {\n        x: horizontal ? (x + base) / 2 : x,\n        y: horizontal ? y : (y + base) / 2\n      };\n    }\n    getRange(axis) {\n      return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n  }\n  BarElement.id = 'bar';\n  BarElement.defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n  BarElement.defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n  var elements = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ArcElement: ArcElement,\n    LineElement: LineElement,\n    PointElement: PointElement,\n    BarElement: BarElement\n  });\n  function lttbDecimation(data, start, count, availableWidth, options) {\n    const samples = options.samples || availableWidth;\n    if (samples >= count) {\n      return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for (i = 0; i < samples - 2; i++) {\n      let avgX = 0;\n      let avgY = 0;\n      let j;\n      const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n      const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n      const avgRangeLength = avgRangeEnd - avgRangeStart;\n      for (j = avgRangeStart; j < avgRangeEnd; j++) {\n        avgX += data[j].x;\n        avgY += data[j].y;\n      }\n      avgX /= avgRangeLength;\n      avgY /= avgRangeLength;\n      const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n      const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n      const {\n        x: pointAx,\n        y: pointAy\n      } = data[a];\n      maxArea = area = -1;\n      for (j = rangeOffs; j < rangeTo; j++) {\n        area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n        if (area > maxArea) {\n          maxArea = area;\n          maxAreaPoint = data[j];\n          nextA = j;\n        }\n      }\n      decimated[sampledIndex++] = maxAreaPoint;\n      a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n  }\n  function minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for (i = start; i < start + count; ++i) {\n      point = data[i];\n      x = (point.x - xMin) / dx * availableWidth;\n      y = point.y;\n      const truncX = x | 0;\n      if (truncX === prevX) {\n        if (y < minY) {\n          minY = y;\n          minIndex = i;\n        } else if (y > maxY) {\n          maxY = y;\n          maxIndex = i;\n        }\n        avgX = (countX * avgX + point.x) / ++countX;\n      } else {\n        const lastIndex = i - 1;\n        if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n          const intermediateIndex1 = Math.min(minIndex, maxIndex);\n          const intermediateIndex2 = Math.max(minIndex, maxIndex);\n          if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n            decimated.push({\n              ...data[intermediateIndex1],\n              x: avgX\n            });\n          }\n          if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n            decimated.push({\n              ...data[intermediateIndex2],\n              x: avgX\n            });\n          }\n        }\n        if (i > 0 && lastIndex !== startIndex) {\n          decimated.push(data[lastIndex]);\n        }\n        decimated.push(point);\n        prevX = truncX;\n        countX = 0;\n        minY = maxY = y;\n        minIndex = maxIndex = startIndex = i;\n      }\n    }\n    return decimated;\n  }\n  function cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n      const data = dataset._data;\n      delete dataset._decimated;\n      delete dataset._data;\n      Object.defineProperty(dataset, 'data', {\n        value: data\n      });\n    }\n  }\n  function cleanDecimatedData(chart) {\n    chart.data.datasets.forEach(dataset => {\n      cleanDecimatedDataset(dataset);\n    });\n  }\n  function getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const {\n      iScale\n    } = meta;\n    const {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n    return {\n      start,\n      count\n    };\n  }\n  var plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n      algorithm: 'min-max',\n      enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options) => {\n      if (!options.enabled) {\n        cleanDecimatedData(chart);\n        return;\n      }\n      const availableWidth = chart.width;\n      chart.data.datasets.forEach((dataset, datasetIndex) => {\n        const {\n          _data,\n          indexAxis\n        } = dataset;\n        const meta = chart.getDatasetMeta(datasetIndex);\n        const data = _data || dataset.data;\n        if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n          return;\n        }\n        if (!meta.controller.supportsDecimation) {\n          return;\n        }\n        const xAxis = chart.scales[meta.xAxisID];\n        if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n          return;\n        }\n        if (chart.options.parsing) {\n          return;\n        }\n        let {\n          start,\n          count\n        } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n        const threshold = options.threshold || 4 * availableWidth;\n        if (count <= threshold) {\n          cleanDecimatedDataset(dataset);\n          return;\n        }\n        if (isNullOrUndef(_data)) {\n          dataset._data = data;\n          delete dataset.data;\n          Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            get: function () {\n              return this._decimated;\n            },\n            set: function (d) {\n              this._data = d;\n            }\n          });\n        }\n        let decimated;\n        switch (options.algorithm) {\n          case 'lttb':\n            decimated = lttbDecimation(data, start, count, availableWidth, options);\n            break;\n          case 'min-max':\n            decimated = minMaxDecimation(data, start, count, availableWidth);\n            break;\n          default:\n            throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n        }\n        dataset._decimated = decimated;\n      });\n    },\n    destroy(chart) {\n      cleanDecimatedData(chart);\n    }\n  };\n  function _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments) {\n      let {\n        start,\n        end\n      } = segment;\n      end = _findSegmentEnd(start, end, points);\n      const bounds = _getBounds(property, points[start], points[end], segment.loop);\n      if (!target.segments) {\n        parts.push({\n          source: segment,\n          target: bounds,\n          start: points[start],\n          end: points[end]\n        });\n        continue;\n      }\n      const targetSegments = _boundSegments(target, bounds);\n      for (const tgt of targetSegments) {\n        const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n        const fillSources = _boundSegment(segment, points, subBounds);\n        for (const fillSource of fillSources) {\n          parts.push({\n            source: fillSource,\n            target: tgt,\n            start: {\n              [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n            },\n            end: {\n              [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n            }\n          });\n        }\n      }\n    }\n    return parts;\n  }\n  function _getBounds(property, first, last, loop) {\n    if (loop) {\n      return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n      start = _normalizeAngle(start);\n      end = _normalizeAngle(end);\n    }\n    return {\n      property,\n      start,\n      end\n    };\n  }\n  function _pointsFromSegments(boundary, line) {\n    const {\n      x = null,\n      y = null\n    } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({\n      start,\n      end\n    }) => {\n      end = _findSegmentEnd(start, end, linePoints);\n      const first = linePoints[start];\n      const last = linePoints[end];\n      if (y !== null) {\n        points.push({\n          x: first.x,\n          y\n        });\n        points.push({\n          x: last.x,\n          y\n        });\n      } else if (x !== null) {\n        points.push({\n          x,\n          y: first.y\n        });\n        points.push({\n          x,\n          y: last.y\n        });\n      }\n    });\n    return points;\n  }\n  function _findSegmentEnd(start, end, points) {\n    for (; end > start; end--) {\n      const point = points[end];\n      if (!isNaN(point.x) && !isNaN(point.y)) {\n        break;\n      }\n    }\n    return end;\n  }\n  function _getEdge(a, b, prop, fn) {\n    if (a && b) {\n      return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n  }\n  function _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n      _loop = true;\n      points = boundary;\n    } else {\n      points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n      points,\n      options: {\n        tension: 0\n      },\n      _loop,\n      _fullLoop: _loop\n    }) : null;\n  }\n  function _shouldApplyFill(source) {\n    return source && source.fill !== false;\n  }\n  function _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [index];\n    let target;\n    if (!propagate) {\n      return fill;\n    }\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isNumberFinite(fill)) {\n        return fill;\n      }\n      target = sources[fill];\n      if (!target) {\n        return false;\n      }\n      if (target.visible) {\n        return fill;\n      }\n      visited.push(fill);\n      fill = target.fill;\n    }\n    return false;\n  }\n  function _decodeFill(line, index, count) {\n    const fill = parseFillOption(line);\n    if (isObject(fill)) {\n      return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n      return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n  }\n  function decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n      pixel = scale.bottom;\n    } else if (fill === 'end') {\n      pixel = scale.top;\n    } else if (isObject(fill)) {\n      pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n      pixel = scale.getBasePixel();\n    }\n    return pixel;\n  }\n  function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n      value = startValue;\n    } else if (fill === 'end') {\n      value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n      value = fill.value;\n    } else {\n      value = scale.getBaseValue();\n    }\n    return value;\n  }\n  function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n      fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n      return false;\n    }\n    if (fill === true) {\n      return 'origin';\n    }\n    return fill;\n  }\n  function _buildStackLine(source) {\n    const {\n      scale,\n      index,\n      line\n    } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n      x: null,\n      y: scale.bottom\n    }, line));\n    for (let i = 0; i < segments.length; i++) {\n      const segment = segments[i];\n      for (let j = segment.start; j <= segment.end; j++) {\n        addPointsBelow(points, sourcePoints[j], linesBelow);\n      }\n    }\n    return new LineElement({\n      points,\n      options: {}\n    });\n  }\n  function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for (let i = 0; i < metas.length; i++) {\n      const meta = metas[i];\n      if (meta.index === index) {\n        break;\n      }\n      if (!meta.hidden) {\n        below.unshift(meta.dataset);\n      }\n    }\n    return below;\n  }\n  function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for (let j = 0; j < linesBelow.length; j++) {\n      const line = linesBelow[j];\n      const {\n        first,\n        last,\n        point\n      } = findPoint(line, sourcePoint, 'x');\n      if (!point || first && last) {\n        continue;\n      }\n      if (first) {\n        postponed.unshift(point);\n      } else {\n        points.push(point);\n        if (!last) {\n          break;\n        }\n      }\n    }\n    points.push(...postponed);\n  }\n  function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n      return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for (let i = 0; i < segments.length; i++) {\n      const segment = segments[i];\n      const firstValue = linePoints[segment.start][property];\n      const lastValue = linePoints[segment.end][property];\n      if (_isBetween(pointValue, firstValue, lastValue)) {\n        first = pointValue === firstValue;\n        last = pointValue === lastValue;\n        break;\n      }\n    }\n    return {\n      first,\n      last,\n      point\n    };\n  }\n  class simpleArc {\n    constructor(opts) {\n      this.x = opts.x;\n      this.y = opts.y;\n      this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n      const {\n        x,\n        y,\n        radius\n      } = this;\n      bounds = bounds || {\n        start: 0,\n        end: TAU\n      };\n      ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n      return !opts.bounds;\n    }\n    interpolate(point) {\n      const {\n        x,\n        y,\n        radius\n      } = this;\n      const angle = point.angle;\n      return {\n        x: x + Math.cos(angle) * radius,\n        y: y + Math.sin(angle) * radius,\n        angle\n      };\n    }\n  }\n  function _getTarget(source) {\n    const {\n      chart,\n      fill,\n      line\n    } = source;\n    if (isNumberFinite(fill)) {\n      return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n      return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n      return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n      return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n  }\n  function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n  }\n  function computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n      return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n  }\n  function computeLinearBoundary(source) {\n    const {\n      scale = {},\n      fill\n    } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n      const horizontal = scale.isHorizontal();\n      return {\n        x: horizontal ? pixel : null,\n        y: horizontal ? null : pixel\n      };\n    }\n    return null;\n  }\n  function computeCircularBoundary(source) {\n    const {\n      scale,\n      fill\n    } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n      const center = scale.getPointPositionForValue(0, start);\n      return new simpleArc({\n        x: center.x,\n        y: center.y,\n        radius: scale.getDistanceFromCenterForValue(value)\n      });\n    }\n    for (let i = 0; i < length; ++i) {\n      target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n  }\n  function _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const {\n      line,\n      scale,\n      axis\n    } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const {\n      above = color,\n      below = color\n    } = fillOption || {};\n    if (target && line.points.length) {\n      clipArea(ctx, area);\n      doFill(ctx, {\n        line,\n        target,\n        above,\n        below,\n        area,\n        scale,\n        axis\n      });\n      unclipArea(ctx);\n    }\n  }\n  function doFill(ctx, cfg) {\n    const {\n      line,\n      target,\n      above,\n      below,\n      area,\n      scale\n    } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n      clipVertical(ctx, target, area.top);\n      fill(ctx, {\n        line,\n        target,\n        color: above,\n        scale,\n        property\n      });\n      ctx.restore();\n      ctx.save();\n      clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n      line,\n      target,\n      color: below,\n      scale,\n      property\n    });\n    ctx.restore();\n  }\n  function clipVertical(ctx, target, clipY) {\n    const {\n      segments,\n      points\n    } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments) {\n      const {\n        start,\n        end\n      } = segment;\n      const firstPoint = points[start];\n      const lastPoint = points[_findSegmentEnd(start, end, points)];\n      if (first) {\n        ctx.moveTo(firstPoint.x, firstPoint.y);\n        first = false;\n      } else {\n        ctx.lineTo(firstPoint.x, clipY);\n        ctx.lineTo(firstPoint.x, firstPoint.y);\n      }\n      lineLoop = !!target.pathSegment(ctx, segment, {\n        move: lineLoop\n      });\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        ctx.lineTo(lastPoint.x, clipY);\n      }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n  }\n  function fill(ctx, cfg) {\n    const {\n      line,\n      target,\n      property,\n      color,\n      scale\n    } = cfg;\n    const segments = _segments(line, target, property);\n    for (const {\n      source: src,\n      target: tgt,\n      start,\n      end\n    } of segments) {\n      const {\n        style: {\n          backgroundColor = color\n        } = {}\n      } = src;\n      const notShape = target !== true;\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n      ctx.beginPath();\n      const lineLoop = !!line.pathSegment(ctx, src);\n      let loop;\n      if (notShape) {\n        if (lineLoop) {\n          ctx.closePath();\n        } else {\n          interpolatedLineTo(ctx, target, end, property);\n        }\n        const targetLoop = !!target.pathSegment(ctx, tgt, {\n          move: lineLoop,\n          reverse: true\n        });\n        loop = lineLoop && targetLoop;\n        if (!loop) {\n          interpolatedLineTo(ctx, target, start, property);\n        }\n      }\n      ctx.closePath();\n      ctx.fill(loop ? 'evenodd' : 'nonzero');\n      ctx.restore();\n    }\n  }\n  function clipBounds(ctx, scale, bounds) {\n    const {\n      top,\n      bottom\n    } = scale.chart.chartArea;\n    const {\n      property,\n      start,\n      end\n    } = bounds || {};\n    if (property === 'x') {\n      ctx.beginPath();\n      ctx.rect(start, top, end - start, bottom - top);\n      ctx.clip();\n    }\n  }\n  function interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n      ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n  }\n  var index = {\n    id: 'filler',\n    afterDatasetsUpdate(chart, _args, options) {\n      const count = (chart.data.datasets || []).length;\n      const sources = [];\n      let meta, i, line, source;\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        line = meta.dataset;\n        source = null;\n        if (line && line.options && line instanceof LineElement) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            index: i,\n            fill: _decodeFill(line, i, count),\n            chart,\n            axis: meta.controller.options.indexAxis,\n            scale: meta.vScale,\n            line\n          };\n        }\n        meta.$filler = source;\n        sources.push(source);\n      }\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n        if (!source || source.fill === false) {\n          continue;\n        }\n        source.fill = _resolveTarget(sources, i, options.propagate);\n      }\n    },\n    beforeDraw(chart, _args, options) {\n      const draw = options.drawTime === 'beforeDraw';\n      const metasets = chart.getSortedVisibleDatasetMetas();\n      const area = chart.chartArea;\n      for (let i = metasets.length - 1; i >= 0; --i) {\n        const source = metasets[i].$filler;\n        if (!source) {\n          continue;\n        }\n        source.line.updateControlPoints(area, source.axis);\n        if (draw && source.fill) {\n          _drawfill(chart.ctx, source, area);\n        }\n      }\n    },\n    beforeDatasetsDraw(chart, _args, options) {\n      if (options.drawTime !== 'beforeDatasetsDraw') {\n        return;\n      }\n      const metasets = chart.getSortedVisibleDatasetMetas();\n      for (let i = metasets.length - 1; i >= 0; --i) {\n        const source = metasets[i].$filler;\n        if (_shouldApplyFill(source)) {\n          _drawfill(chart.ctx, source, chart.chartArea);\n        }\n      }\n    },\n    beforeDatasetDraw(chart, args, options) {\n      const source = args.meta.$filler;\n      if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n        return;\n      }\n      _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n      propagate: true,\n      drawTime: 'beforeDatasetDraw'\n    }\n  };\n  const getBoxSize = (labelOpts, fontSize) => {\n    let {\n      boxHeight = fontSize,\n      boxWidth = fontSize\n    } = labelOpts;\n    if (labelOpts.usePointStyle) {\n      boxHeight = Math.min(boxHeight, fontSize);\n      boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n      boxWidth,\n      boxHeight,\n      itemHeight: Math.max(fontSize, boxHeight)\n    };\n  };\n  const itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n  class Legend extends Element {\n    constructor(config) {\n      super();\n      this._added = false;\n      this.legendHitBoxes = [];\n      this._hoveredItem = null;\n      this.doughnutMode = false;\n      this.chart = config.chart;\n      this.options = config.options;\n      this.ctx = config.ctx;\n      this.legendItems = undefined;\n      this.columnSizes = undefined;\n      this.lineWidths = undefined;\n      this.maxHeight = undefined;\n      this.maxWidth = undefined;\n      this.top = undefined;\n      this.bottom = undefined;\n      this.left = undefined;\n      this.right = undefined;\n      this.height = undefined;\n      this.width = undefined;\n      this._margins = undefined;\n      this.position = undefined;\n      this.weight = undefined;\n      this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins;\n      this.setDimensions();\n      this.buildLabels();\n      this.fit();\n    }\n    setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = this._margins.left;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = this._margins.top;\n        this.bottom = this.height;\n      }\n    }\n    buildLabels() {\n      const labelOpts = this.options.labels || {};\n      let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(item => labelOpts.filter(item, this.chart.data));\n      }\n      if (labelOpts.sort) {\n        legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n      }\n      if (this.options.reverse) {\n        legendItems.reverse();\n      }\n      this.legendItems = legendItems;\n    }\n    fit() {\n      const {\n        options,\n        ctx\n      } = this;\n      if (!options.display) {\n        this.width = this.height = 0;\n        return;\n      }\n      const labelOpts = options.labels;\n      const labelFont = toFont(labelOpts.font);\n      const fontSize = labelFont.size;\n      const titleHeight = this._computeTitleHeight();\n      const {\n        boxWidth,\n        itemHeight\n      } = getBoxSize(labelOpts, fontSize);\n      let width, height;\n      ctx.font = labelFont.string;\n      if (this.isHorizontal()) {\n        width = this.maxWidth;\n        height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      } else {\n        height = this.maxHeight;\n        width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      }\n      this.width = Math.min(width, options.maxWidth || this.maxWidth);\n      this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n    _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n      const {\n        ctx,\n        maxWidth,\n        options: {\n          labels: {\n            padding\n          }\n        }\n      } = this;\n      const hitboxes = this.legendHitBoxes = [];\n      const lineWidths = this.lineWidths = [0];\n      const lineHeight = itemHeight + padding;\n      let totalHeight = titleHeight;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      let row = -1;\n      let top = -lineHeight;\n      this.legendItems.forEach((legendItem, i) => {\n        const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n        if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n          totalHeight += lineHeight;\n          lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n          top += lineHeight;\n          row++;\n        }\n        hitboxes[i] = {\n          left: 0,\n          top,\n          row,\n          width: itemWidth,\n          height: itemHeight\n        };\n        lineWidths[lineWidths.length - 1] += itemWidth + padding;\n      });\n      return totalHeight;\n    }\n    _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n      const {\n        ctx,\n        maxHeight,\n        options: {\n          labels: {\n            padding\n          }\n        }\n      } = this;\n      const hitboxes = this.legendHitBoxes = [];\n      const columnSizes = this.columnSizes = [];\n      const heightLimit = maxHeight - titleHeight;\n      let totalWidth = padding;\n      let currentColWidth = 0;\n      let currentColHeight = 0;\n      let left = 0;\n      let col = 0;\n      this.legendItems.forEach((legendItem, i) => {\n        const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n        if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n          totalWidth += currentColWidth + padding;\n          columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n          });\n          left += currentColWidth + padding;\n          col++;\n          currentColWidth = currentColHeight = 0;\n        }\n        hitboxes[i] = {\n          left,\n          top: currentColHeight,\n          col,\n          width: itemWidth,\n          height: itemHeight\n        };\n        currentColWidth = Math.max(currentColWidth, itemWidth);\n        currentColHeight += itemHeight + padding;\n      });\n      totalWidth += currentColWidth;\n      columnSizes.push({\n        width: currentColWidth,\n        height: currentColHeight\n      });\n      return totalWidth;\n    }\n    adjustHitBoxes() {\n      if (!this.options.display) {\n        return;\n      }\n      const titleHeight = this._computeTitleHeight();\n      const {\n        legendHitBoxes: hitboxes,\n        options: {\n          align,\n          labels: {\n            padding\n          },\n          rtl\n        }\n      } = this;\n      const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n      if (this.isHorizontal()) {\n        let row = 0;\n        let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        for (const hitbox of hitboxes) {\n          if (row !== hitbox.row) {\n            row = hitbox.row;\n            left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n          }\n          hitbox.top += this.top + titleHeight + padding;\n          hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n          left += hitbox.width + padding;\n        }\n      } else {\n        let col = 0;\n        let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        for (const hitbox of hitboxes) {\n          if (hitbox.col !== col) {\n            col = hitbox.col;\n            top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n          }\n          hitbox.top = top;\n          hitbox.left += this.left + padding;\n          hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n          top += hitbox.height + padding;\n        }\n      }\n    }\n    isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n      if (this.options.display) {\n        const ctx = this.ctx;\n        clipArea(ctx, this);\n        this._draw();\n        unclipArea(ctx);\n      }\n    }\n    _draw() {\n      const {\n        options: opts,\n        columnSizes,\n        lineWidths,\n        ctx\n      } = this;\n      const {\n        align,\n        labels: labelOpts\n      } = opts;\n      const defaultColor = defaults.color;\n      const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      const labelFont = toFont(labelOpts.font);\n      const {\n        color: fontColor,\n        padding\n      } = labelOpts;\n      const fontSize = labelFont.size;\n      const halfFontSize = fontSize / 2;\n      let cursor;\n      this.drawTitle();\n      ctx.textAlign = rtlHelper.textAlign('left');\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.font = labelFont.string;\n      const {\n        boxWidth,\n        boxHeight,\n        itemHeight\n      } = getBoxSize(labelOpts, fontSize);\n      const drawLegendBox = function (x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n          return;\n        }\n        ctx.save();\n        const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n        ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n        if (labelOpts.usePointStyle) {\n          const drawOptions = {\n            radius: boxHeight * Math.SQRT2 / 2,\n            pointStyle: legendItem.pointStyle,\n            rotation: legendItem.rotation,\n            borderWidth: lineWidth\n          };\n          const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n          const centerY = y + halfFontSize;\n          drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n        } else {\n          const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n          const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n          const borderRadius = toTRBLCorners(legendItem.borderRadius);\n          ctx.beginPath();\n          if (Object.values(borderRadius).some(v => v !== 0)) {\n            addRoundedRectPath(ctx, {\n              x: xBoxLeft,\n              y: yBoxTop,\n              w: boxWidth,\n              h: boxHeight,\n              radius: borderRadius\n            });\n          } else {\n            ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n          }\n          ctx.fill();\n          if (lineWidth !== 0) {\n            ctx.stroke();\n          }\n        }\n        ctx.restore();\n      };\n      const fillText = function (x, y, legendItem) {\n        renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n          strikethrough: legendItem.hidden,\n          textAlign: rtlHelper.textAlign(legendItem.textAlign)\n        });\n      };\n      const isHorizontal = this.isHorizontal();\n      const titleHeight = this._computeTitleHeight();\n      if (isHorizontal) {\n        cursor = {\n          x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n          y: this.top + padding + titleHeight,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: this.left + padding,\n          y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n          line: 0\n        };\n      }\n      overrideTextDirection(this.ctx, opts.textDirection);\n      const lineHeight = itemHeight + padding;\n      this.legendItems.forEach((legendItem, i) => {\n        ctx.strokeStyle = legendItem.fontColor || fontColor;\n        ctx.fillStyle = legendItem.fontColor || fontColor;\n        const textWidth = ctx.measureText(legendItem.text).width;\n        const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n        const width = boxWidth + halfFontSize + textWidth;\n        let x = cursor.x;\n        let y = cursor.y;\n        rtlHelper.setWidth(this.width);\n        if (isHorizontal) {\n          if (i > 0 && x + width + padding > this.right) {\n            y = cursor.y += lineHeight;\n            cursor.line++;\n            x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n          }\n        } else if (i > 0 && y + lineHeight > this.bottom) {\n          x = cursor.x = x + columnSizes[cursor.line].width + padding;\n          cursor.line++;\n          y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n        }\n        const realX = rtlHelper.x(x);\n        drawLegendBox(realX, y, legendItem);\n        x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n        fillText(rtlHelper.x(x), y, legendItem);\n        if (isHorizontal) {\n          cursor.x += width + padding;\n        } else {\n          cursor.y += lineHeight;\n        }\n      });\n      restoreTextDirection(this.ctx, opts.textDirection);\n    }\n    drawTitle() {\n      const opts = this.options;\n      const titleOpts = opts.title;\n      const titleFont = toFont(titleOpts.font);\n      const titlePadding = toPadding(titleOpts.padding);\n      if (!titleOpts.display) {\n        return;\n      }\n      const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      const ctx = this.ctx;\n      const position = titleOpts.position;\n      const halfFontSize = titleFont.size / 2;\n      const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n      let y;\n      let left = this.left;\n      let maxWidth = this.width;\n      if (this.isHorizontal()) {\n        maxWidth = Math.max(...this.lineWidths);\n        y = this.top + topPaddingPlusHalfFontSize;\n        left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n      } else {\n        const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n        y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n      }\n      const x = _alignStartEnd(position, left, left + maxWidth);\n      ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n      ctx.textBaseline = 'middle';\n      ctx.strokeStyle = titleOpts.color;\n      ctx.fillStyle = titleOpts.color;\n      ctx.font = titleFont.string;\n      renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n    _computeTitleHeight() {\n      const titleOpts = this.options.title;\n      const titleFont = toFont(titleOpts.font);\n      const titlePadding = toPadding(titleOpts.padding);\n      return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n    _getLegendItemAt(x, y) {\n      let i, hitBox, lh;\n      if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n        lh = this.legendHitBoxes;\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n          if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n            return this.legendItems[i];\n          }\n        }\n      }\n      return null;\n    }\n    handleEvent(e) {\n      const opts = this.options;\n      if (!isListened(e.type, opts)) {\n        return;\n      }\n      const hoveredItem = this._getLegendItemAt(e.x, e.y);\n      if (e.type === 'mousemove' || e.type === 'mouseout') {\n        const previous = this._hoveredItem;\n        const sameItem = itemsEqual(previous, hoveredItem);\n        if (previous && !sameItem) {\n          callback(opts.onLeave, [e, previous, this], this);\n        }\n        this._hoveredItem = hoveredItem;\n        if (hoveredItem && !sameItem) {\n          callback(opts.onHover, [e, hoveredItem, this], this);\n        }\n      } else if (hoveredItem) {\n        callback(opts.onClick, [e, hoveredItem, this], this);\n      }\n    }\n  }\n  function isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n      return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n      return true;\n    }\n    return false;\n  }\n  var plugin_legend = {\n    id: 'legend',\n    _element: Legend,\n    start(chart, _args, options) {\n      const legend = chart.legend = new Legend({\n        ctx: chart.ctx,\n        options,\n        chart\n      });\n      layouts.configure(chart, legend, options);\n      layouts.addBox(chart, legend);\n    },\n    stop(chart) {\n      layouts.removeBox(chart, chart.legend);\n      delete chart.legend;\n    },\n    beforeUpdate(chart, _args, options) {\n      const legend = chart.legend;\n      layouts.configure(chart, legend, options);\n      legend.options = options;\n    },\n    afterUpdate(chart) {\n      const legend = chart.legend;\n      legend.buildLabels();\n      legend.adjustHitBoxes();\n    },\n    afterEvent(chart, args) {\n      if (!args.replay) {\n        chart.legend.handleEvent(args.event);\n      }\n    },\n    defaults: {\n      display: true,\n      position: 'top',\n      align: 'center',\n      fullSize: true,\n      reverse: false,\n      weight: 1000,\n      onClick(e, legendItem, legend) {\n        const index = legendItem.datasetIndex;\n        const ci = legend.chart;\n        if (ci.isDatasetVisible(index)) {\n          ci.hide(index);\n          legendItem.hidden = true;\n        } else {\n          ci.show(index);\n          legendItem.hidden = false;\n        }\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        color: ctx => ctx.chart.options.color,\n        boxWidth: 40,\n        padding: 10,\n        generateLabels(chart) {\n          const datasets = chart.data.datasets;\n          const {\n            labels: {\n              usePointStyle,\n              pointStyle,\n              textAlign,\n              color\n            }\n          } = chart.legend.options;\n          return chart._getSortedDatasetMetas().map(meta => {\n            const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n            const borderWidth = toPadding(style.borderWidth);\n            return {\n              text: datasets[meta.index].label,\n              fillStyle: style.backgroundColor,\n              fontColor: color,\n              hidden: !meta.visible,\n              lineCap: style.borderCapStyle,\n              lineDash: style.borderDash,\n              lineDashOffset: style.borderDashOffset,\n              lineJoin: style.borderJoinStyle,\n              lineWidth: (borderWidth.width + borderWidth.height) / 4,\n              strokeStyle: style.borderColor,\n              pointStyle: pointStyle || style.pointStyle,\n              rotation: style.rotation,\n              textAlign: textAlign || style.textAlign,\n              borderRadius: 0,\n              datasetIndex: meta.index\n            };\n          }, this);\n        }\n      },\n      title: {\n        color: ctx => ctx.chart.options.color,\n        display: false,\n        position: 'center',\n        text: ''\n      }\n    },\n    descriptors: {\n      _scriptable: name => !name.startsWith('on'),\n      labels: {\n        _scriptable: name => !['generateLabels', 'filter', 'sort'].includes(name)\n      }\n    }\n  };\n  class Title extends Element {\n    constructor(config) {\n      super();\n      this.chart = config.chart;\n      this.options = config.options;\n      this.ctx = config.ctx;\n      this._padding = undefined;\n      this.top = undefined;\n      this.bottom = undefined;\n      this.left = undefined;\n      this.right = undefined;\n      this.width = undefined;\n      this.height = undefined;\n      this.position = undefined;\n      this.weight = undefined;\n      this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n      const opts = this.options;\n      this.left = 0;\n      this.top = 0;\n      if (!opts.display) {\n        this.width = this.height = this.right = this.bottom = 0;\n        return;\n      }\n      this.width = this.right = maxWidth;\n      this.height = this.bottom = maxHeight;\n      const lineCount = isArray(opts.text) ? opts.text.length : 1;\n      this._padding = toPadding(opts.padding);\n      const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n      if (this.isHorizontal()) {\n        this.height = textSize;\n      } else {\n        this.width = textSize;\n      }\n    }\n    isHorizontal() {\n      const pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n      const {\n        top,\n        left,\n        bottom,\n        right,\n        options\n      } = this;\n      const align = options.align;\n      let rotation = 0;\n      let maxWidth, titleX, titleY;\n      if (this.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        if (options.position === 'left') {\n          titleX = left + offset;\n          titleY = _alignStartEnd(align, bottom, top);\n          rotation = PI * -0.5;\n        } else {\n          titleX = right - offset;\n          titleY = _alignStartEnd(align, top, bottom);\n          rotation = PI * 0.5;\n        }\n        maxWidth = bottom - top;\n      }\n      return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n      };\n    }\n    draw() {\n      const ctx = this.ctx;\n      const opts = this.options;\n      if (!opts.display) {\n        return;\n      }\n      const fontOpts = toFont(opts.font);\n      const lineHeight = fontOpts.lineHeight;\n      const offset = lineHeight / 2 + this._padding.top;\n      const {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n      } = this._drawArgs(offset);\n      renderText(ctx, opts.text, 0, 0, fontOpts, {\n        color: opts.color,\n        maxWidth,\n        rotation,\n        textAlign: _toLeftRightCenter(opts.align),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }\n  function createTitle(chart, titleOpts) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n  var plugin_title = {\n    id: 'title',\n    _element: Title,\n    start(chart, _args, options) {\n      createTitle(chart, options);\n    },\n    stop(chart) {\n      const titleBlock = chart.titleBlock;\n      layouts.removeBox(chart, titleBlock);\n      delete chart.titleBlock;\n    },\n    beforeUpdate(chart, _args, options) {\n      const title = chart.titleBlock;\n      layouts.configure(chart, title, options);\n      title.options = options;\n    },\n    defaults: {\n      align: 'center',\n      display: false,\n      font: {\n        weight: 'bold'\n      },\n      fullSize: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000\n    },\n    defaultRoutes: {\n      color: 'color'\n    },\n    descriptors: {\n      _scriptable: true,\n      _indexable: false\n    }\n  };\n  const map = new WeakMap();\n  var plugin_subtitle = {\n    id: 'subtitle',\n    start(chart, _args, options) {\n      const title = new Title({\n        ctx: chart.ctx,\n        options,\n        chart\n      });\n      layouts.configure(chart, title, options);\n      layouts.addBox(chart, title);\n      map.set(chart, title);\n    },\n    stop(chart) {\n      layouts.removeBox(chart, map.get(chart));\n      map.delete(chart);\n    },\n    beforeUpdate(chart, _args, options) {\n      const title = map.get(chart);\n      layouts.configure(chart, title, options);\n      title.options = options;\n    },\n    defaults: {\n      align: 'center',\n      display: false,\n      font: {\n        weight: 'normal'\n      },\n      fullSize: true,\n      padding: 0,\n      position: 'top',\n      text: '',\n      weight: 1500\n    },\n    defaultRoutes: {\n      color: 'color'\n    },\n    descriptors: {\n      _scriptable: true,\n      _indexable: false\n    }\n  };\n  const positioners = {\n    average(items) {\n      if (!items.length) {\n        return false;\n      }\n      let i, len;\n      let x = 0;\n      let y = 0;\n      let count = 0;\n      for (i = 0, len = items.length; i < len; ++i) {\n        const el = items[i].element;\n        if (el && el.hasValue()) {\n          const pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n    nearest(items, eventPosition) {\n      if (!items.length) {\n        return false;\n      }\n      let x = eventPosition.x;\n      let y = eventPosition.y;\n      let minDistance = Number.POSITIVE_INFINITY;\n      let i, len, nearestElement;\n      for (i = 0, len = items.length; i < len; ++i) {\n        const el = items[i].element;\n        if (el && el.hasValue()) {\n          const center = el.getCenterPoint();\n          const d = distanceBetweenPoints(eventPosition, center);\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n      if (nearestElement) {\n        const tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n      return {\n        x,\n        y\n      };\n    }\n  };\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (isArray(toPush)) {\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n    return base;\n  }\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n    return str;\n  }\n  function createTooltipItem(chart, item) {\n    const {\n      element,\n      datasetIndex,\n      index\n    } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const {\n      label,\n      value\n    } = controller.getLabelAndValue(index);\n    return {\n      chart,\n      label,\n      parsed: controller.getParsed(index),\n      raw: chart.data.datasets[datasetIndex].data[index],\n      formattedValue: value,\n      dataset: controller.getDataset(),\n      dataIndex: index,\n      datasetIndex,\n      element\n    };\n  }\n  function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const {\n      body,\n      footer,\n      title\n    } = tooltip;\n    const {\n      boxWidth,\n      boxHeight\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n      height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n      const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n      height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n      height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function (line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, bodyItem => {\n      each(bodyItem.before, maxLineWidth);\n      each(bodyItem.lines, maxLineWidth);\n      each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n      width,\n      height\n    };\n  }\n  function determineYAlign(chart, size) {\n    const {\n      y,\n      height\n    } = size;\n    if (y < height / 2) {\n      return 'top';\n    } else if (y > chart.height - height / 2) {\n      return 'bottom';\n    }\n    return 'center';\n  }\n  function doesNotFitWithAlign(xAlign, chart, options, size) {\n    const {\n      x,\n      width\n    } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n      return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n      return true;\n    }\n  }\n  function determineXAlign(chart, options, size, yAlign) {\n    const {\n      x,\n      width\n    } = size;\n    const {\n      width: chartWidth,\n      chartArea: {\n        left,\n        right\n      }\n    } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n      xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n      xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n      xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n      xAlign = 'center';\n    }\n    return xAlign;\n  }\n  function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n      xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n      yAlign\n    };\n  }\n  function alignX(size, xAlign) {\n    let {\n      x,\n      width\n    } = size;\n    if (xAlign === 'right') {\n      x -= width;\n    } else if (xAlign === 'center') {\n      x -= width / 2;\n    }\n    return x;\n  }\n  function alignY(size, yAlign, paddingAndSize) {\n    let {\n      y,\n      height\n    } = size;\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= height + paddingAndSize;\n    } else {\n      y -= height / 2;\n    }\n    return y;\n  }\n  function getBackgroundPoint(options, size, alignment, chart) {\n    const {\n      caretSize,\n      caretPadding,\n      cornerRadius\n    } = options;\n    const {\n      xAlign,\n      yAlign\n    } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n      x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n      x: _limitValue(x, 0, chart.width - size.width),\n      y: _limitValue(y, 0, chart.height - size.height)\n    };\n  }\n  function getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n  }\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n  function createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n      tooltip,\n      tooltipItems,\n      type: 'tooltip'\n    });\n  }\n  function overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n  }\n  class Tooltip extends Element {\n    constructor(config) {\n      super();\n      this.opacity = 0;\n      this._active = [];\n      this._eventPosition = undefined;\n      this._size = undefined;\n      this._cachedAnimations = undefined;\n      this._tooltipItems = [];\n      this.$animations = undefined;\n      this.$context = undefined;\n      this.chart = config.chart || config._chart;\n      this._chart = this.chart;\n      this.options = config.options;\n      this.dataPoints = undefined;\n      this.title = undefined;\n      this.beforeBody = undefined;\n      this.body = undefined;\n      this.afterBody = undefined;\n      this.footer = undefined;\n      this.xAlign = undefined;\n      this.yAlign = undefined;\n      this.x = undefined;\n      this.y = undefined;\n      this.height = undefined;\n      this.width = undefined;\n      this.caretX = undefined;\n      this.caretY = undefined;\n      this.labelColors = undefined;\n      this.labelPointStyles = undefined;\n      this.labelTextColors = undefined;\n    }\n    initialize(options) {\n      this.options = options;\n      this._cachedAnimations = undefined;\n      this.$context = undefined;\n    }\n    _resolveAnimations() {\n      const cached = this._cachedAnimations;\n      if (cached) {\n        return cached;\n      }\n      const chart = this.chart;\n      const options = this.options.setContext(this.getContext());\n      const opts = options.enabled && chart.options.animation && options.animations;\n      const animations = new Animations(this.chart, opts);\n      if (opts._cacheable) {\n        this._cachedAnimations = Object.freeze(animations);\n      }\n      return animations;\n    }\n    getContext() {\n      return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n      const {\n        callbacks\n      } = options;\n      const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n      const title = callbacks.title.apply(this, [context]);\n      const afterTitle = callbacks.afterTitle.apply(this, [context]);\n      let lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n    }\n    getBody(tooltipItems, options) {\n      const {\n        callbacks\n      } = options;\n      const bodyItems = [];\n      each(tooltipItems, context => {\n        const bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        const scoped = overrideCallbacks(callbacks, context);\n        pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n        pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n        pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n    }\n    getFooter(tooltipItems, options) {\n      const {\n        callbacks\n      } = options;\n      const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n      const footer = callbacks.footer.apply(this, [tooltipItems]);\n      const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n      let lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    }\n    _createItems(options) {\n      const active = this._active;\n      const data = this.chart.data;\n      const labelColors = [];\n      const labelPointStyles = [];\n      const labelTextColors = [];\n      let tooltipItems = [];\n      let i, len;\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(this.chart, active[i]));\n      }\n      if (options.filter) {\n        tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n      }\n      if (options.itemSort) {\n        tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n      }\n      each(tooltipItems, context => {\n        const scoped = overrideCallbacks(options.callbacks, context);\n        labelColors.push(scoped.labelColor.call(this, context));\n        labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n        labelTextColors.push(scoped.labelTextColor.call(this, context));\n      });\n      this.labelColors = labelColors;\n      this.labelPointStyles = labelPointStyles;\n      this.labelTextColors = labelTextColors;\n      this.dataPoints = tooltipItems;\n      return tooltipItems;\n    }\n    update(changed, replay) {\n      const options = this.options.setContext(this.getContext());\n      const active = this._active;\n      let properties;\n      let tooltipItems = [];\n      if (!active.length) {\n        if (this.opacity !== 0) {\n          properties = {\n            opacity: 0\n          };\n        }\n      } else {\n        const position = positioners[options.position].call(this, active, this._eventPosition);\n        tooltipItems = this._createItems(options);\n        this.title = this.getTitle(tooltipItems, options);\n        this.beforeBody = this.getBeforeBody(tooltipItems, options);\n        this.body = this.getBody(tooltipItems, options);\n        this.afterBody = this.getAfterBody(tooltipItems, options);\n        this.footer = this.getFooter(tooltipItems, options);\n        const size = this._size = getTooltipSize(this, options);\n        const positionAndSize = Object.assign({}, position, size);\n        const alignment = determineAlignment(this.chart, options, positionAndSize);\n        const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        properties = {\n          opacity: 1,\n          x: backgroundPoint.x,\n          y: backgroundPoint.y,\n          width: size.width,\n          height: size.height,\n          caretX: position.x,\n          caretY: position.y\n        };\n      }\n      this._tooltipItems = tooltipItems;\n      this.$context = undefined;\n      if (properties) {\n        this._resolveAnimations().update(this, properties);\n      }\n      if (changed && options.external) {\n        options.external.call(this, {\n          chart: this.chart,\n          tooltip: this,\n          replay\n        });\n      }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n      const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n      const {\n        xAlign,\n        yAlign\n      } = this;\n      const {\n        caretSize,\n        cornerRadius\n      } = options;\n      const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n      } = toTRBLCorners(cornerRadius);\n      const {\n        x: ptX,\n        y: ptY\n      } = tooltipPoint;\n      const {\n        width,\n        height\n      } = size;\n      let x1, x2, x3, y1, y2, y3;\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n        x3 = x1;\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n        } else {\n          x2 = this.caretX;\n        }\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          x1 = x2 + caretSize;\n          x3 = x2 - caretSize;\n        }\n        y3 = y1;\n      }\n      return {\n        x1,\n        x2,\n        x3,\n        y1,\n        y2,\n        y3\n      };\n    }\n    drawTitle(pt, ctx, options) {\n      const title = this.title;\n      const length = title.length;\n      let titleFont, titleSpacing, i;\n      if (length) {\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.titleAlign, options);\n        ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n        ctx.textBaseline = 'middle';\n        titleFont = toFont(options.titleFont);\n        titleSpacing = options.titleSpacing;\n        ctx.fillStyle = options.titleColor;\n        ctx.font = titleFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n          pt.y += titleFont.lineHeight + titleSpacing;\n          if (i + 1 === length) {\n            pt.y += options.titleMarginBottom - titleSpacing;\n          }\n        }\n      }\n    }\n    _drawColorBox(ctx, pt, i, rtlHelper, options) {\n      const labelColors = this.labelColors[i];\n      const labelPointStyle = this.labelPointStyles[i];\n      const {\n        boxHeight,\n        boxWidth,\n        boxPadding\n      } = options;\n      const bodyFont = toFont(options.bodyFont);\n      const colorX = getAlignedX(this, 'left', options);\n      const rtlColorX = rtlHelper.x(colorX);\n      const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n      const colorY = pt.y + yOffSet;\n      if (options.usePointStyle) {\n        const drawOptions = {\n          radius: Math.min(boxWidth, boxHeight) / 2,\n          pointStyle: labelPointStyle.pointStyle,\n          rotation: labelPointStyle.rotation,\n          borderWidth: 1\n        };\n        const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n        const centerY = colorY + boxHeight / 2;\n        ctx.strokeStyle = options.multiKeyBackground;\n        ctx.fillStyle = options.multiKeyBackground;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.fillStyle = labelColors.backgroundColor;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : labelColors.borderWidth || 1;\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.setLineDash(labelColors.borderDash || []);\n        ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n        const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n        const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n        const borderRadius = toTRBLCorners(labelColors.borderRadius);\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          ctx.beginPath();\n          ctx.fillStyle = options.multiKeyBackground;\n          addRoundedRectPath(ctx, {\n            x: outerX,\n            y: colorY,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n          ctx.fill();\n          ctx.stroke();\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.beginPath();\n          addRoundedRectPath(ctx, {\n            x: innerX,\n            y: colorY + 1,\n            w: boxWidth - 2,\n            h: boxHeight - 2,\n            radius: borderRadius\n          });\n          ctx.fill();\n        } else {\n          ctx.fillStyle = options.multiKeyBackground;\n          ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n        }\n      }\n      ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n      const {\n        body\n      } = this;\n      const {\n        bodySpacing,\n        bodyAlign,\n        displayColors,\n        boxHeight,\n        boxWidth,\n        boxPadding\n      } = options;\n      const bodyFont = toFont(options.bodyFont);\n      let bodyLineHeight = bodyFont.lineHeight;\n      let xLinePadding = 0;\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      const fillLineOfText = function (line) {\n        ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n        pt.y += bodyLineHeight + bodySpacing;\n      };\n      const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n      let bodyItem, textColor, lines, i, j, ilen, jlen;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'middle';\n      ctx.font = bodyFont.string;\n      pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n      ctx.fillStyle = options.bodyColor;\n      each(this.beforeBody, fillLineOfText);\n      xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n      for (i = 0, ilen = body.length; i < ilen; ++i) {\n        bodyItem = body[i];\n        textColor = this.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        each(bodyItem.before, fillLineOfText);\n        lines = bodyItem.lines;\n        if (displayColors && lines.length) {\n          this._drawColorBox(ctx, pt, i, rtlHelper, options);\n          bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n        }\n        for (j = 0, jlen = lines.length; j < jlen; ++j) {\n          fillLineOfText(lines[j]);\n          bodyLineHeight = bodyFont.lineHeight;\n        }\n        each(bodyItem.after, fillLineOfText);\n      }\n      xLinePadding = 0;\n      bodyLineHeight = bodyFont.lineHeight;\n      each(this.afterBody, fillLineOfText);\n      pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n      const footer = this.footer;\n      const length = footer.length;\n      let footerFont, i;\n      if (length) {\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.footerAlign, options);\n        pt.y += options.footerMarginTop;\n        ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n        ctx.textBaseline = 'middle';\n        footerFont = toFont(options.footerFont);\n        ctx.fillStyle = options.footerColor;\n        ctx.font = footerFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n          pt.y += footerFont.lineHeight + options.footerSpacing;\n        }\n      }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n      const {\n        xAlign,\n        yAlign\n      } = this;\n      const {\n        x,\n        y\n      } = pt;\n      const {\n        width,\n        height\n      } = tooltipSize;\n      const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n      } = toTRBLCorners(options.cornerRadius);\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.beginPath();\n      ctx.moveTo(x + topLeft, y);\n      if (yAlign === 'top') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width - topRight, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width, y + height - bottomRight);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + bottomLeft, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x, y + topLeft);\n      ctx.quadraticCurveTo(x, y, x + topLeft, y);\n      ctx.closePath();\n      ctx.fill();\n      if (options.borderWidth > 0) {\n        ctx.stroke();\n      }\n    }\n    _updateAnimationTarget(options) {\n      const chart = this.chart;\n      const anims = this.$animations;\n      const animX = anims && anims.x;\n      const animY = anims && anims.y;\n      if (animX || animY) {\n        const position = positioners[options.position].call(this, this._active, this._eventPosition);\n        if (!position) {\n          return;\n        }\n        const size = this._size = getTooltipSize(this, options);\n        const positionAndSize = Object.assign({}, position, this._size);\n        const alignment = determineAlignment(chart, options, positionAndSize);\n        const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n        if (animX._to !== point.x || animY._to !== point.y) {\n          this.xAlign = alignment.xAlign;\n          this.yAlign = alignment.yAlign;\n          this.width = size.width;\n          this.height = size.height;\n          this.caretX = position.x;\n          this.caretY = position.y;\n          this._resolveAnimations().update(this, point);\n        }\n      }\n    }\n    _willRender() {\n      return !!this.opacity;\n    }\n    draw(ctx) {\n      const options = this.options.setContext(this.getContext());\n      let opacity = this.opacity;\n      if (!opacity) {\n        return;\n      }\n      this._updateAnimationTarget(options);\n      const tooltipSize = {\n        width: this.width,\n        height: this.height\n      };\n      const pt = {\n        x: this.x,\n        y: this.y\n      };\n      opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n      const padding = toPadding(options.padding);\n      const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n      if (options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        this.drawBackground(pt, ctx, tooltipSize, options);\n        overrideTextDirection(ctx, options.textDirection);\n        pt.y += padding.top;\n        this.drawTitle(pt, ctx, options);\n        this.drawBody(pt, ctx, options);\n        this.drawFooter(pt, ctx, options);\n        restoreTextDirection(ctx, options.textDirection);\n        ctx.restore();\n      }\n    }\n    getActiveElements() {\n      return this._active || [];\n    }\n    setActiveElements(activeElements, eventPosition) {\n      const lastActive = this._active;\n      const active = activeElements.map(({\n        datasetIndex,\n        index\n      }) => {\n        const meta = this.chart.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('Cannot find a dataset at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex,\n          element: meta.data[index],\n          index\n        };\n      });\n      const changed = !_elementsEqual(lastActive, active);\n      const positionChanged = this._positionChanged(active, eventPosition);\n      if (changed || positionChanged) {\n        this._active = active;\n        this._eventPosition = eventPosition;\n        this._ignoreReplayEvents = true;\n        this.update(true);\n      }\n    }\n    handleEvent(e, replay, inChartArea = true) {\n      if (replay && this._ignoreReplayEvents) {\n        return false;\n      }\n      this._ignoreReplayEvents = false;\n      const options = this.options;\n      const lastActive = this._active || [];\n      const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n      const positionChanged = this._positionChanged(active, e);\n      const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n      if (changed) {\n        this._active = active;\n        if (options.enabled || options.external) {\n          this._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          this.update(true, replay);\n        }\n      }\n      return changed;\n    }\n    _getActiveElements(e, lastActive, replay, inChartArea) {\n      const options = this.options;\n      if (e.type === 'mouseout') {\n        return [];\n      }\n      if (!inChartArea) {\n        return lastActive;\n      }\n      const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n      return active;\n    }\n    _positionChanged(active, e) {\n      const {\n        caretX,\n        caretY,\n        options\n      } = this;\n      const position = positioners[options.position].call(this, active, e);\n      return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n  }\n  Tooltip.positioners = positioners;\n  var plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit(chart, _args, options) {\n      if (options) {\n        chart.tooltip = new Tooltip({\n          chart,\n          options\n        });\n      }\n    },\n    beforeUpdate(chart, _args, options) {\n      if (chart.tooltip) {\n        chart.tooltip.initialize(options);\n      }\n    },\n    reset(chart, _args, options) {\n      if (chart.tooltip) {\n        chart.tooltip.initialize(options);\n      }\n    },\n    afterDraw(chart) {\n      const tooltip = chart.tooltip;\n      if (tooltip && tooltip._willRender()) {\n        const args = {\n          tooltip\n        };\n        if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n          return;\n        }\n        tooltip.draw(chart.ctx);\n        chart.notifyPlugins('afterTooltipDraw', args);\n      }\n    },\n    afterEvent(chart, args) {\n      if (chart.tooltip) {\n        const useFinalPosition = args.replay;\n        if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n          args.changed = true;\n        }\n      }\n    },\n    defaults: {\n      enabled: true,\n      external: null,\n      position: 'average',\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleColor: '#fff',\n      titleFont: {\n        weight: 'bold'\n      },\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleAlign: 'left',\n      bodyColor: '#fff',\n      bodySpacing: 2,\n      bodyFont: {},\n      bodyAlign: 'left',\n      footerColor: '#fff',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFont: {\n        weight: 'bold'\n      },\n      footerAlign: 'left',\n      padding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      boxHeight: (ctx, opts) => opts.bodyFont.size,\n      boxWidth: (ctx, opts) => opts.bodyFont.size,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      boxPadding: 0,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      animation: {\n        duration: 400,\n        easing: 'easeOutQuart'\n      },\n      animations: {\n        numbers: {\n          type: 'number',\n          properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n        },\n        opacity: {\n          easing: 'linear',\n          duration: 200\n        }\n      },\n      callbacks: {\n        beforeTitle: noop,\n        title(tooltipItems) {\n          if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n              return item.dataset.label || '';\n            } else if (item.label) {\n              return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n              return labels[item.dataIndex];\n            }\n          }\n          return '';\n        },\n        afterTitle: noop,\n        beforeBody: noop,\n        beforeLabel: noop,\n        label(tooltipItem) {\n          if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n          }\n          let label = tooltipItem.dataset.label || '';\n          if (label) {\n            label += ': ';\n          }\n          const value = tooltipItem.formattedValue;\n          if (!isNullOrUndef(value)) {\n            label += value;\n          }\n          return label;\n        },\n        labelColor(tooltipItem) {\n          const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n          const options = meta.controller.getStyle(tooltipItem.dataIndex);\n          return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n          };\n        },\n        labelTextColor() {\n          return this.options.bodyColor;\n        },\n        labelPointStyle(tooltipItem) {\n          const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n          const options = meta.controller.getStyle(tooltipItem.dataIndex);\n          return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n          };\n        },\n        afterLabel: noop,\n        afterBody: noop,\n        beforeFooter: noop,\n        footer: noop,\n        afterFooter: noop\n      }\n    },\n    defaultRoutes: {\n      bodyFont: 'font',\n      footerFont: 'font',\n      titleFont: 'font'\n    },\n    descriptors: {\n      _scriptable: name => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n      _indexable: false,\n      callbacks: {\n        _scriptable: false,\n        _indexable: false\n      },\n      animation: {\n        _fallback: false\n      },\n      animations: {\n        _fallback: 'animation'\n      }\n    },\n    additionalOptionScopes: ['interaction']\n  };\n  var plugins = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    Decimation: plugin_decimation,\n    Filler: index,\n    Legend: plugin_legend,\n    SubTitle: plugin_subtitle,\n    Title: plugin_title,\n    Tooltip: plugin_tooltip\n  });\n  const addIfString = (labels, raw, index, addedLabels) => {\n    if (typeof raw === 'string') {\n      index = labels.push(raw) - 1;\n      addedLabels.unshift({\n        index,\n        label: raw\n      });\n    } else if (isNaN(raw)) {\n      index = null;\n    }\n    return index;\n  };\n  function findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n      return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n  }\n  const validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n  class CategoryScale extends Scale {\n    constructor(cfg) {\n      super(cfg);\n      this._startValue = undefined;\n      this._valueRange = 0;\n      this._addedLabels = [];\n    }\n    init(scaleOptions) {\n      const added = this._addedLabels;\n      if (added.length) {\n        const labels = this.getLabels();\n        for (const {\n          index,\n          label\n        } of added) {\n          if (labels[index] === label) {\n            labels.splice(index, 1);\n          }\n        }\n        this._addedLabels = [];\n      }\n      super.init(scaleOptions);\n    }\n    parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n      const labels = this.getLabels();\n      index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n      return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n      const {\n        minDefined,\n        maxDefined\n      } = this.getUserBounds();\n      let {\n        min,\n        max\n      } = this.getMinMax(true);\n      if (this.options.bounds === 'ticks') {\n        if (!minDefined) {\n          min = 0;\n        }\n        if (!maxDefined) {\n          max = this.getLabels().length - 1;\n        }\n      }\n      this.min = min;\n      this.max = max;\n    }\n    buildTicks() {\n      const min = this.min;\n      const max = this.max;\n      const offset = this.options.offset;\n      const ticks = [];\n      let labels = this.getLabels();\n      labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n      this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n      this._startValue = this.min - (offset ? 0.5 : 0);\n      for (let value = min; value <= max; value++) {\n        ticks.push({\n          value\n        });\n      }\n      return ticks;\n    }\n    getLabelForValue(value) {\n      const labels = this.getLabels();\n      if (value >= 0 && value < labels.length) {\n        return labels[value];\n      }\n      return value;\n    }\n    configure() {\n      super.configure();\n      if (!this.isHorizontal()) {\n        this._reversePixels = !this._reversePixels;\n      }\n    }\n    getPixelForValue(value) {\n      if (typeof value !== 'number') {\n        value = this.parse(value);\n      }\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n      const ticks = this.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n      return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n      return this.bottom;\n    }\n  }\n  CategoryScale.id = 'category';\n  CategoryScale.defaults = {\n    ticks: {\n      callback: CategoryScale.prototype.getLabelForValue\n    }\n  };\n  function generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const {\n      bounds,\n      step,\n      min,\n      max,\n      precision,\n      count,\n      maxTicks,\n      maxDigits,\n      includeBounds\n    } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const {\n      min: rmin,\n      max: rmax\n    } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n      return [{\n        value: rmin\n      }, {\n        value: rmax\n      }];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n      spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n      niceMin = Math.floor(rmin / spacing) * spacing;\n      niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n      niceMin = rmin;\n      niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n      numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n      spacing = (max - min) / numSpaces;\n      niceMin = min;\n      niceMax = max;\n    } else if (countDefined) {\n      niceMin = minDefined ? min : niceMin;\n      niceMax = maxDefined ? max : niceMax;\n      numSpaces = count - 1;\n      spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n      numSpaces = (niceMax - niceMin) / spacing;\n      if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n        numSpaces = Math.round(numSpaces);\n      } else {\n        numSpaces = Math.ceil(numSpaces);\n      }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n      if (includeBounds && niceMin !== min) {\n        ticks.push({\n          value: min\n        });\n        if (niceMin < min) {\n          j++;\n        }\n        if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n          j++;\n        }\n      } else if (niceMin < min) {\n        j++;\n      }\n    }\n    for (; j < numSpaces; ++j) {\n      ticks.push({\n        value: Math.round((niceMin + j * spacing) * factor) / factor\n      });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n      if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n        ticks[ticks.length - 1].value = max;\n      } else {\n        ticks.push({\n          value: max\n        });\n      }\n    } else if (!maxDefined || niceMax === max) {\n      ticks.push({\n        value: niceMax\n      });\n    }\n    return ticks;\n  }\n  function relativeLabelSize(value, minSpacing, {\n    horizontal,\n    minRotation\n  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n  }\n  class LinearScaleBase extends Scale {\n    constructor(cfg) {\n      super(cfg);\n      this.start = undefined;\n      this.end = undefined;\n      this._startValue = undefined;\n      this._endValue = undefined;\n      this._valueRange = 0;\n    }\n    parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n      if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n        return null;\n      }\n      return +raw;\n    }\n    handleTickRangeOptions() {\n      const {\n        beginAtZero\n      } = this.options;\n      const {\n        minDefined,\n        maxDefined\n      } = this.getUserBounds();\n      let {\n        min,\n        max\n      } = this;\n      const setMin = v => min = minDefined ? min : v;\n      const setMax = v => max = maxDefined ? max : v;\n      if (beginAtZero) {\n        const minSign = sign(min);\n        const maxSign = sign(max);\n        if (minSign < 0 && maxSign < 0) {\n          setMax(0);\n        } else if (minSign > 0 && maxSign > 0) {\n          setMin(0);\n        }\n      }\n      if (min === max) {\n        let offset = 1;\n        if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n          offset = Math.abs(max * 0.05);\n        }\n        setMax(max + offset);\n        if (!beginAtZero) {\n          setMin(min - offset);\n        }\n      }\n      this.min = min;\n      this.max = max;\n    }\n    getTickLimit() {\n      const tickOpts = this.options.ticks;\n      let {\n        maxTicksLimit,\n        stepSize\n      } = tickOpts;\n      let maxTicks;\n      if (stepSize) {\n        maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n        if (maxTicks > 1000) {\n          console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n          maxTicks = 1000;\n        }\n      } else {\n        maxTicks = this.computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n      return maxTicks;\n    }\n    computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n      const opts = this.options;\n      const tickOpts = opts.ticks;\n      let maxTicks = this.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      const numericGeneratorOptions = {\n        maxTicks,\n        bounds: opts.bounds,\n        min: opts.min,\n        max: opts.max,\n        precision: tickOpts.precision,\n        step: tickOpts.stepSize,\n        count: tickOpts.count,\n        maxDigits: this._maxDigits(),\n        horizontal: this.isHorizontal(),\n        minRotation: tickOpts.minRotation || 0,\n        includeBounds: tickOpts.includeBounds !== false\n      };\n      const dataRange = this._range || this;\n      const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n      return ticks;\n    }\n    configure() {\n      const ticks = this.ticks;\n      let start = this.min;\n      let end = this.max;\n      super.configure();\n      if (this.options.offset && ticks.length) {\n        const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n        start -= offset;\n        end += offset;\n      }\n      this._startValue = start;\n      this._endValue = end;\n      this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n      return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n  }\n  class LinearScale extends LinearScaleBase {\n    determineDataLimits() {\n      const {\n        min,\n        max\n      } = this.getMinMax(true);\n      this.min = isNumberFinite(min) ? min : 0;\n      this.max = isNumberFinite(max) ? max : 1;\n      this.handleTickRangeOptions();\n    }\n    computeTickLimit() {\n      const horizontal = this.isHorizontal();\n      const length = horizontal ? this.width : this.height;\n      const minRotation = toRadians(this.options.ticks.minRotation);\n      const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n      const tickFont = this._resolveTickFontOptions(0);\n      return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n      return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n  }\n  LinearScale.id = 'linear';\n  LinearScale.defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n  function isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n    return remain === 1;\n  }\n  function generateTicks(generationOptions, dataRange) {\n    const endExp = Math.floor(log10(dataRange.max));\n    const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    const ticks = [];\n    let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n    let exp = Math.floor(log10(tickVal));\n    let significand = Math.floor(tickVal / Math.pow(10, exp));\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    do {\n      ticks.push({\n        value: tickVal,\n        major: isMajor(tickVal)\n      });\n      ++significand;\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n    const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n    ticks.push({\n      value: lastTick,\n      major: isMajor(tickVal)\n    });\n    return ticks;\n  }\n  class LogarithmicScale extends Scale {\n    constructor(cfg) {\n      super(cfg);\n      this.start = undefined;\n      this.end = undefined;\n      this._startValue = undefined;\n      this._valueRange = 0;\n    }\n    parse(raw, index) {\n      const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n      if (value === 0) {\n        this._zero = true;\n        return undefined;\n      }\n      return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n      const {\n        min,\n        max\n      } = this.getMinMax(true);\n      this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n      this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n      if (this.options.beginAtZero) {\n        this._zero = true;\n      }\n      this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n      const {\n        minDefined,\n        maxDefined\n      } = this.getUserBounds();\n      let min = this.min;\n      let max = this.max;\n      const setMin = v => min = minDefined ? min : v;\n      const setMax = v => max = maxDefined ? max : v;\n      const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n      if (min === max) {\n        if (min <= 0) {\n          setMin(1);\n          setMax(10);\n        } else {\n          setMin(exp(min, -1));\n          setMax(exp(max, +1));\n        }\n      }\n      if (min <= 0) {\n        setMin(exp(max, -1));\n      }\n      if (max <= 0) {\n        setMax(exp(min, +1));\n      }\n      if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n        setMin(exp(min, -1));\n      }\n      this.min = min;\n      this.max = max;\n    }\n    buildTicks() {\n      const opts = this.options;\n      const generationOptions = {\n        min: this._userMin,\n        max: this._userMax\n      };\n      const ticks = generateTicks(generationOptions, this);\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n      return ticks;\n    }\n    getLabelForValue(value) {\n      return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n    configure() {\n      const start = this.min;\n      super.configure();\n      this._startValue = log10(start);\n      this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n      if (value === undefined || value === 0) {\n        value = this.min;\n      }\n      if (value === null || isNaN(value)) {\n        return NaN;\n      }\n      return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n      const decimal = this.getDecimalForPixel(pixel);\n      return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n  }\n  LogarithmicScale.id = 'logarithmic';\n  LogarithmicScale.defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n  function getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n      const padding = toPadding(tickOpts.backdropPadding);\n      return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n  }\n  function measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [label];\n    return {\n      w: _longestText(ctx, font.string, label),\n      h: label.length * font.lineHeight\n    };\n  }\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  function fitWithPointLabels(scale) {\n    const orig = {\n      l: scale.left + scale._padding.left,\n      r: scale.right - scale._padding.right,\n      t: scale.top + scale._padding.top,\n      b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for (let i = 0; i < valueCount; i++) {\n      const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n      padding[i] = opts.padding;\n      const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n      const plFont = toFont(opts.font);\n      const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n      labelSizes[i] = textSize;\n      const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n      const angle = Math.round(toDegrees(angleRadians));\n      const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n      updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n  }\n  function updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n      x = (orig.l - hLimits.start) / sin;\n      limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n      x = (hLimits.end - orig.r) / sin;\n      limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n      y = (orig.t - vLimits.start) / cos;\n      limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n      y = (vLimits.end - orig.b) / cos;\n      limits.b = Math.max(limits.b, orig.b + y);\n    }\n  }\n  function buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const extra = getTickBackdropHeight(opts) / 2;\n    const outerDistance = scale.drawingArea;\n    const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n    for (let i = 0; i < valueCount; i++) {\n      const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n      const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n      const size = labelSizes[i];\n      const y = yForAngle(pointLabelPosition.y, size.h, angle);\n      const textAlign = getTextAlignForAngle(angle);\n      const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n      items.push({\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n      });\n    }\n    return items;\n  }\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n    return 'right';\n  }\n  function leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n      x -= w;\n    } else if (align === 'center') {\n      x -= w / 2;\n    }\n    return x;\n  }\n  function yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n      y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n      y -= h;\n    }\n    return y;\n  }\n  function drawPointLabels(scale, labelCount) {\n    const {\n      ctx,\n      options: {\n        pointLabels\n      }\n    } = scale;\n    for (let i = labelCount - 1; i >= 0; i--) {\n      const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n      const plFont = toFont(optsAtIndex.font);\n      const {\n        x,\n        y,\n        textAlign,\n        left,\n        top,\n        right,\n        bottom\n      } = scale._pointLabelItems[i];\n      const {\n        backdropColor\n      } = optsAtIndex;\n      if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          ctx.beginPath();\n          addRoundedRectPath(ctx, {\n            x: backdropLeft,\n            y: backdropTop,\n            w: backdropWidth,\n            h: backdropHeight,\n            radius: borderRadius\n          });\n          ctx.fill();\n        } else {\n          ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n      }\n      renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      });\n    }\n  }\n  function pathRadiusLine(scale, radius, circular, labelCount) {\n    const {\n      ctx\n    } = scale;\n    if (circular) {\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n      let pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n      for (let i = 1; i < labelCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n  }\n  function drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const {\n      color,\n      lineWidth\n    } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n      return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(gridLineOpts.borderDash);\n    ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n  function createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n      label,\n      index,\n      type: 'pointLabel'\n    });\n  }\n  class RadialLinearScale extends LinearScaleBase {\n    constructor(cfg) {\n      super(cfg);\n      this.xCenter = undefined;\n      this.yCenter = undefined;\n      this.drawingArea = undefined;\n      this._pointLabels = [];\n      this._pointLabelItems = [];\n    }\n    setDimensions() {\n      const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n      const w = this.width = this.maxWidth - padding.width;\n      const h = this.height = this.maxHeight - padding.height;\n      this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n      this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n      this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n      const {\n        min,\n        max\n      } = this.getMinMax(false);\n      this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n      this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n      this.handleTickRangeOptions();\n    }\n    computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n      LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n      this._pointLabels = this.getLabels().map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      }).filter((v, i) => this.chart.getDataVisibility(i));\n    }\n    fit() {\n      const opts = this.options;\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        this.setCenterPoint(0, 0, 0, 0);\n      }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n      this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n      this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n      const angleMultiplier = TAU / (this._pointLabels.length || 1);\n      const startAngle = this.options.startAngle || 0;\n      return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n      if (isNullOrUndef(value)) {\n        return NaN;\n      }\n      const scalingFactor = this.drawingArea / (this.max - this.min);\n      if (this.options.reverse) {\n        return (this.max - value) * scalingFactor;\n      }\n      return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n      if (isNullOrUndef(distance)) {\n        return NaN;\n      }\n      const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n      return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n      const pointLabels = this._pointLabels || [];\n      if (index >= 0 && index < pointLabels.length) {\n        const pointLabel = pointLabels[index];\n        return createPointLabelContext(this.getContext(), index, pointLabel);\n      }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n      const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n      return {\n        x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n        y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n        angle\n      };\n    }\n    getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n      return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n      const {\n        left,\n        top,\n        right,\n        bottom\n      } = this._pointLabelItems[index];\n      return {\n        left,\n        top,\n        right,\n        bottom\n      };\n    }\n    drawBackground() {\n      const {\n        backgroundColor,\n        grid: {\n          circular\n        }\n      } = this.options;\n      if (backgroundColor) {\n        const ctx = this.ctx;\n        ctx.save();\n        ctx.beginPath();\n        pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n        ctx.closePath();\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n    drawGrid() {\n      const ctx = this.ctx;\n      const opts = this.options;\n      const {\n        angleLines,\n        grid\n      } = opts;\n      const labelCount = this._pointLabels.length;\n      let i, offset, position;\n      if (opts.pointLabels.display) {\n        drawPointLabels(this, labelCount);\n      }\n      if (grid.display) {\n        this.ticks.forEach((tick, index) => {\n          if (index !== 0) {\n            offset = this.getDistanceFromCenterForValue(tick.value);\n            const optsAtIndex = grid.setContext(this.getContext(index - 1));\n            drawRadiusLine(this, optsAtIndex, offset, labelCount);\n          }\n        });\n      }\n      if (angleLines.display) {\n        ctx.save();\n        for (i = labelCount - 1; i >= 0; i--) {\n          const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n          const {\n            color,\n            lineWidth\n          } = optsAtIndex;\n          if (!lineWidth || !color) {\n            continue;\n          }\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = color;\n          ctx.setLineDash(optsAtIndex.borderDash);\n          ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n          offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n          position = this.getPointPosition(i, offset);\n          ctx.beginPath();\n          ctx.moveTo(this.xCenter, this.yCenter);\n          ctx.lineTo(position.x, position.y);\n          ctx.stroke();\n        }\n        ctx.restore();\n      }\n    }\n    drawBorder() {}\n    drawLabels() {\n      const ctx = this.ctx;\n      const opts = this.options;\n      const tickOpts = opts.ticks;\n      if (!tickOpts.display) {\n        return;\n      }\n      const startAngle = this.getIndexAngle(0);\n      let offset, width;\n      ctx.save();\n      ctx.translate(this.xCenter, this.yCenter);\n      ctx.rotate(startAngle);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      this.ticks.forEach((tick, index) => {\n        if (index === 0 && !opts.reverse) {\n          return;\n        }\n        const optsAtIndex = tickOpts.setContext(this.getContext(index));\n        const tickFont = toFont(optsAtIndex.font);\n        offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n        if (optsAtIndex.showLabelBackdrop) {\n          ctx.font = tickFont.string;\n          width = ctx.measureText(tick.label).width;\n          ctx.fillStyle = optsAtIndex.backdropColor;\n          const padding = toPadding(optsAtIndex.backdropPadding);\n          ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n        }\n        renderText(ctx, tick.label, 0, -offset, tickFont, {\n          color: optsAtIndex.color\n        });\n      });\n      ctx.restore();\n    }\n    drawTitle() {}\n  }\n  RadialLinearScale.id = 'radialLinear';\n  RadialLinearScale.defaults = {\n    display: true,\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    grid: {\n      circular: false\n    },\n    startAngle: 0,\n    ticks: {\n      showLabelBackdrop: true,\n      callback: Ticks.formatters.numeric\n    },\n    pointLabels: {\n      backdropColor: undefined,\n      backdropPadding: 2,\n      display: true,\n      font: {\n        size: 10\n      },\n      callback(label) {\n        return label;\n      },\n      padding: 5,\n      centerPointLabels: false\n    }\n  };\n  RadialLinearScale.defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n  RadialLinearScale.descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n  const INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: 1000\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: 60\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: 60\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: 24\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: 30\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: 4\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: 12\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: 4\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  const UNITS = Object.keys(INTERVALS);\n  function sorter(a, b) {\n    return a - b;\n  }\n  function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n      return null;\n    }\n    const adapter = scale._adapter;\n    const {\n      parser,\n      round,\n      isoWeekday\n    } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n      value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n      value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n      return null;\n    }\n    if (round) {\n      value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n  }\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      const interval = INTERVALS[UNITS[i]];\n      const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n    return UNITS[ilen - 1];\n  }\n  function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n      const unit = UNITS[i];\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n        return unit;\n      }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n  function determineMajorUnit(unit) {\n    for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n      ticks[time] = true;\n    } else if (timestamps.length) {\n      const {\n        lo,\n        hi\n      } = _lookup(timestamps, time);\n      const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n      ticks[timestamp] = true;\n    }\n  }\n  function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n      index = map[major];\n      if (index >= 0) {\n        ticks[index].major = true;\n      }\n    }\n    return ticks;\n  }\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n    const map = {};\n    const ilen = values.length;\n    let i, value;\n    for (i = 0; i < ilen; ++i) {\n      value = values[i];\n      map[value] = i;\n      ticks.push({\n        value,\n        major: false\n      });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n  }\n  class TimeScale extends Scale {\n    constructor(props) {\n      super(props);\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n      this._unit = 'day';\n      this._majorUnit = undefined;\n      this._offsets = {};\n      this._normalized = false;\n      this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts) {\n      const time = scaleOpts.time || (scaleOpts.time = {});\n      const adapter = this._adapter = new _adapters._date(scaleOpts.adapters.date);\n      adapter.init(opts);\n      mergeIf(time.displayFormats, adapter.formats());\n      this._parseOpts = {\n        parser: time.parser,\n        round: time.round,\n        isoWeekday: time.isoWeekday\n      };\n      super.init(scaleOpts);\n      this._normalized = opts.normalized;\n    }\n    parse(raw, index) {\n      if (raw === undefined) {\n        return null;\n      }\n      return parse(this, raw);\n    }\n    beforeLayout() {\n      super.beforeLayout();\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n    }\n    determineDataLimits() {\n      const options = this.options;\n      const adapter = this._adapter;\n      const unit = options.time.unit || 'day';\n      let {\n        min,\n        max,\n        minDefined,\n        maxDefined\n      } = this.getUserBounds();\n      function _applyBounds(bounds) {\n        if (!minDefined && !isNaN(bounds.min)) {\n          min = Math.min(min, bounds.min);\n        }\n        if (!maxDefined && !isNaN(bounds.max)) {\n          max = Math.max(max, bounds.max);\n        }\n      }\n      if (!minDefined || !maxDefined) {\n        _applyBounds(this._getLabelBounds());\n        if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n          _applyBounds(this.getMinMax(false));\n        }\n      }\n      min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n      max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n      this.min = Math.min(min, max - 1);\n      this.max = Math.max(min + 1, max);\n    }\n    _getLabelBounds() {\n      const arr = this.getLabelTimestamps();\n      let min = Number.POSITIVE_INFINITY;\n      let max = Number.NEGATIVE_INFINITY;\n      if (arr.length) {\n        min = arr[0];\n        max = arr[arr.length - 1];\n      }\n      return {\n        min,\n        max\n      };\n    }\n    buildTicks() {\n      const options = this.options;\n      const timeOpts = options.time;\n      const tickOpts = options.ticks;\n      const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n      if (options.bounds === 'ticks' && timestamps.length) {\n        this.min = this._userMin || timestamps[0];\n        this.max = this._userMax || timestamps[timestamps.length - 1];\n      }\n      const min = this.min;\n      const max = this.max;\n      const ticks = _filterBetween(timestamps, min, max);\n      this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n      this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n      this.initOffsets(timestamps);\n      if (options.reverse) {\n        ticks.reverse();\n      }\n      return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n      if (this.options.offsetAfterAutoskip) {\n        this.initOffsets(this.ticks.map(tick => +tick.value));\n      }\n    }\n    initOffsets(timestamps) {\n      let start = 0;\n      let end = 0;\n      let first, last;\n      if (this.options.offset && timestamps.length) {\n        first = this.getDecimalForValue(timestamps[0]);\n        if (timestamps.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n        }\n        last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n        if (timestamps.length === 1) {\n          end = last;\n        } else {\n          end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n        }\n      }\n      const limit = timestamps.length < 3 ? 0.5 : 0.25;\n      start = _limitValue(start, 0, limit);\n      end = _limitValue(end, 0, limit);\n      this._offsets = {\n        start,\n        end,\n        factor: 1 / (start + 1 + end)\n      };\n    }\n    _generate() {\n      const adapter = this._adapter;\n      const min = this.min;\n      const max = this.max;\n      const options = this.options;\n      const timeOpts = options.time;\n      const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n      const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n      const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n      const hasWeekday = isNumber(weekday) || weekday === true;\n      const ticks = {};\n      let first = min;\n      let time, count;\n      if (hasWeekday) {\n        first = +adapter.startOf(first, 'isoWeek', weekday);\n      }\n      first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n      if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n        throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n      }\n      const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n      for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n        addTick(ticks, time, timestamps);\n      }\n      if (time === max || options.bounds === 'ticks' || count === 1) {\n        addTick(ticks, time, timestamps);\n      }\n      return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n    }\n    getLabelForValue(value) {\n      const adapter = this._adapter;\n      const timeOpts = this.options.time;\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(value, timeOpts.tooltipFormat);\n      }\n      return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n    _tickFormatFunction(time, index, ticks, format) {\n      const options = this.options;\n      const formats = options.time.displayFormats;\n      const unit = this._unit;\n      const majorUnit = this._majorUnit;\n      const minorFormat = unit && formats[unit];\n      const majorFormat = majorUnit && formats[majorUnit];\n      const tick = ticks[index];\n      const major = majorUnit && majorFormat && tick && tick.major;\n      const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n      const formatter = options.ticks.callback;\n      return formatter ? callback(formatter, [label, index, ticks], this) : label;\n    }\n    generateTickLabels(ticks) {\n      let i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        tick.label = this._tickFormatFunction(tick.value, i, ticks);\n      }\n    }\n    getDecimalForValue(value) {\n      return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n    getPixelForValue(value) {\n      const offsets = this._offsets;\n      const pos = this.getDecimalForValue(value);\n      return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n    getValueForPixel(pixel) {\n      const offsets = this._offsets;\n      const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return this.min + pos * (this.max - this.min);\n    }\n    _getLabelSize(label) {\n      const ticksOpts = this.options.ticks;\n      const tickLabelWidth = this.ctx.measureText(label).width;\n      const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n      const cosRotation = Math.cos(angle);\n      const sinRotation = Math.sin(angle);\n      const tickFontSize = this._resolveTickFontOptions(0).size;\n      return {\n        w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n        h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n      };\n    }\n    _getLabelCapacity(exampleTime) {\n      const timeOpts = this.options.time;\n      const displayFormats = timeOpts.displayFormats;\n      const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n      const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n      const size = this._getLabelSize(exampleLabel);\n      const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n      return capacity > 0 ? capacity : 1;\n    }\n    getDataTimestamps() {\n      let timestamps = this._cache.data || [];\n      let i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      const metas = this.getMatchingVisibleMetas();\n      if (this._normalized && metas.length) {\n        return this._cache.data = metas[0].controller.getAllParsedValues(this);\n      }\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n      }\n      return this._cache.data = this.normalize(timestamps);\n    }\n    getLabelTimestamps() {\n      const timestamps = this._cache.labels || [];\n      let i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      const labels = this.getLabels();\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        timestamps.push(parse(this, labels[i]));\n      }\n      return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n    normalize(values) {\n      return _arrayUnique(values.sort(sorter));\n    }\n  }\n  TimeScale.id = 'time';\n  TimeScale.defaults = {\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      unit: false,\n      round: false,\n      isoWeekday: false,\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  function interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n      if (val >= table[lo].pos && val <= table[hi].pos) {\n        ({\n          lo,\n          hi\n        } = _lookupByKey(table, 'pos', val));\n      }\n      ({\n        pos: prevSource,\n        time: prevTarget\n      } = table[lo]);\n      ({\n        pos: nextSource,\n        time: nextTarget\n      } = table[hi]);\n    } else {\n      if (val >= table[lo].time && val <= table[hi].time) {\n        ({\n          lo,\n          hi\n        } = _lookupByKey(table, 'time', val));\n      }\n      ({\n        time: prevSource,\n        pos: prevTarget\n      } = table[lo]);\n      ({\n        time: nextSource,\n        pos: nextTarget\n      } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n  }\n  class TimeSeriesScale extends TimeScale {\n    constructor(props) {\n      super(props);\n      this._table = [];\n      this._minPos = undefined;\n      this._tableRange = undefined;\n    }\n    initOffsets() {\n      const timestamps = this._getTimestampsForTable();\n      const table = this._table = this.buildLookupTable(timestamps);\n      this._minPos = interpolate(table, this.min);\n      this._tableRange = interpolate(table, this.max) - this._minPos;\n      super.initOffsets(timestamps);\n    }\n    buildLookupTable(timestamps) {\n      const {\n        min,\n        max\n      } = this;\n      const items = [];\n      const table = [];\n      let i, ilen, prev, curr, next;\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        curr = timestamps[i];\n        if (curr >= min && curr <= max) {\n          items.push(curr);\n        }\n      }\n      if (items.length < 2) {\n        return [{\n          time: min,\n          pos: 0\n        }, {\n          time: max,\n          pos: 1\n        }];\n      }\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        next = items[i + 1];\n        prev = items[i - 1];\n        curr = items[i];\n        if (Math.round((next + prev) / 2) !== curr) {\n          table.push({\n            time: curr,\n            pos: i / (ilen - 1)\n          });\n        }\n      }\n      return table;\n    }\n    _getTimestampsForTable() {\n      let timestamps = this._cache.all || [];\n      if (timestamps.length) {\n        return timestamps;\n      }\n      const data = this.getDataTimestamps();\n      const label = this.getLabelTimestamps();\n      if (data.length && label.length) {\n        timestamps = this.normalize(data.concat(label));\n      } else {\n        timestamps = data.length ? data : label;\n      }\n      timestamps = this._cache.all = timestamps;\n      return timestamps;\n    }\n    getDecimalForValue(value) {\n      return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n    getValueForPixel(pixel) {\n      const offsets = this._offsets;\n      const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n  }\n  TimeSeriesScale.id = 'timeseries';\n  TimeSeriesScale.defaults = TimeScale.defaults;\n  var scales = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    CategoryScale: CategoryScale,\n    LinearScale: LinearScale,\n    LogarithmicScale: LogarithmicScale,\n    RadialLinearScale: RadialLinearScale,\n    TimeScale: TimeScale,\n    TimeSeriesScale: TimeSeriesScale\n  });\n  Chart.register(controllers, scales, elements, plugins);\n  Chart.helpers = {\n    ...helpers\n  };\n  Chart._adapters = _adapters;\n  Chart.Animation = Animation;\n  Chart.Animations = Animations;\n  Chart.animator = animator;\n  Chart.controllers = registry.controllers.items;\n  Chart.DatasetController = DatasetController;\n  Chart.Element = Element;\n  Chart.elements = elements;\n  Chart.Interaction = Interaction;\n  Chart.layouts = layouts;\n  Chart.platforms = platforms;\n  Chart.Scale = Scale;\n  Chart.Ticks = Ticks;\n  Object.assign(Chart, controllers, scales, elements, plugins, platforms);\n  Chart.Chart = Chart;\n  if (typeof window !== 'undefined') {\n    window.Chart = Chart;\n  }\n  return Chart;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","globalThis","self","Chart","noop","uid","id","isNullOrUndef","value","isArray","Array","type","Object","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone$1","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","_deprecated","scope","previous","current","undefined","console","warn","keyResolvers","v","x","o","y","resolveObjectKey","obj","resolver","_getKeyResolver","_splitKey","parts","split","tmp","part","push","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","_isClickEvent","e","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","round","almostEquals","niceRange","pow","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNumber","n","isNaN","epsilon","abs","almostWhole","rounded","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","hi","lo","mid","_lookupByKey","last","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","add","from","fontString","pixelSize","fontStyle","fontFamily","requestAnimFrame","window","requestAnimationFrame","throttled","updateFn","updateArgs","ticking","rest","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","Animator","constructor","_request","_charts","Map","_running","_lastDate","_notify","chart","anims","date","callbacks","numSteps","duration","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","get","complete","progress","listen","event","cb","reduce","acc","cur","_duration","stop","cancel","remove","delete","animator","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","d","f","hex","h1","h2","eq","isShort","r","g","hexParse","ret","alpha","hexString","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","hueValue","rgb2hsl","calln","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","map$2","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","interpolate$1","rgb1","rgb2","t","modHSL","ratio","clone","proto","fromObject","input","functionParse","Color","_rgb","_valid","valid","mix","color","weight","c1","c2","w2","w1","interpolate","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","index_esm","isPatternOrGradient","getHoverColor","overrides","descriptors","getScope$1","node","root","Defaults","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","defaults","_scriptable","startsWith","_indexable","_fallback","_isDomSupported","document","_getParentNode","domNode","parent","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","width","height","top","bottom","useOffsetPos","shadowRoot","getCanvasPosition","canvas","touches","offsetX","offsetY","box","rect","getBoundingClientRect","clientX","clientY","getRelativePosition","evt","currentDevicePixelRatio","borderBox","boxSizing","paddings","borders","xOffset","yOffset","getContainerSize","maxWidth","maxHeight","container","clientWidth","clientHeight","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","matches","match","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","halfWidth","clearCanvas","getContext","resetTransform","clearRect","drawPoint","drawPointLegend","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","sin","cos","lineTo","SQRT1_2","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","opts","lines","strokeWidth","strokeColor","line","setRenderOpts","strokeStyle","lineWidth","strokeText","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","_createResolver","scopes","prefixes","rootScopes","fallback","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","prop","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","includes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","resolve","_resolveScriptable","_resolveArray","Error","join","createSubResolver","arr","filter","resolveFallback","getScope","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","delta","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","atEdge","elasticIn","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","formatNumber","num","format","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","numberOrZero","_readValueToProps","props","objProps","read","toTRBL","toTRBLCorners","toPadding","toFont","inputs","info","cacheable","_addGrace","minmax","grace","beginAtZero","change","keepZero","createContext","parentContext","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","bounds","startBound","endBound","_boundSegment","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","helpers","freeze","__proto__","easingEffects","binarySearch","metaset","controller","_cachedMeta","lookupMethod","_reversePixels","_sharedOptions","getRange","evaluateInteractionItems","position","handler","metasets","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","chartArea","inRange","getNearestRadialItems","startAngle","endAngle","getProps","getNearestCartesianItems","distanceMetric","minDistance","center","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","dataset","getDatasetMeta","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stack","stackWeight","horizontal","isHorizontal","buildStacks","layouts","stacks","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","factor","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","update","setBoxDims","placeBoxes","userPadding","padding","autoPadding","addBox","_layers","z","removeBox","layoutItem","configure","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","display","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","config","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","resize","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","platforms","interpolators","boolean","c0","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","_target","_prop","_from","_to","_promises","active","elapsed","remain","wait","promises","Promise","rej","resolved","numbers","colors","animationOptions","properties","show","animations","visible","hide","Animations","_properties","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","toClip","disabled","getSortedDatasetIndices","filterVisible","_getSortedDatasetMetas","applyStack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","stacked","getStackKey","indexScale","valueScale","NEGATIVE_INFINITY","getOrCreateStack","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","shift","createDatasetContext","createDataContext","dataIndex","raw","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_data","_objectData","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","Element","tooltipPosition","hasValue","final","defaultRoutes","formatters","numeric","tickValue","ticks","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","offset","grid","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","title","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","spacing","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","_length","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","diff","reverseAlign","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","nestedLabel","_resolveTickFontOptions","valueAt","idx","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBasePixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","backdrop","labelPadding","_computeLabelArea","drawBackground","fillRect","getLineWidthForValue","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","lastLineWidth","drawLabels","drawTitle","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","getDataVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","invalidatePlugins","abstract","DateAdapter","chartOptions","formats","timestamp","amount","unit","startOf","weekday","endOf","members","_adapters","_date","getAllScaleValues","$bar","visibleMetas","computeMinSampleSize","curr","updateMinAndPrev","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","borderProps","setBorderSkipped","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","bars","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","_getStacks","grouped","skipNull","_getStackCount","_getStackIndex","baseValue","minBarLength","floating","halfGrid","maxBarThickness","Infinity","stackIndex","rects","_index_","_value_","BubbleController","tooltip","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","legendItem","tooltipItem","dataLabel","formattedValue","LineController","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","border","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","cutoutPercentage","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","circular","pointLabels","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","refRect","BarElement","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","adapters","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/expense-tracker/node_modules/chart.js/dist/chart.js"],"sourcesContent":["/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\ntypeof define === 'function' && define.amd ? define(factory) :\n(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Chart = factory());\n})(this, (function () { 'use strict';\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst keyResolvers = {\n  '': v => v,\n  x: o => o.x,\n  y: o => o.y\n};\nfunction resolveObjectKey(obj, key) {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\nfunction _getKeyResolver(key) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\nfunction _splitKey(key) {\n  const parts = key.split('.');\n  const keys = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value, last) =>\n  _lookup(table, value, last\n    ? index => table[index][key] <= value\n    : index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\nfunction _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map$2 = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map$2);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map$2[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate$1(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate$1(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n  return false;\n}\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(e, canvas) {\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  if ('native' in evt) {\n    return evt;\n  }\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nvar helpers = /*#__PURE__*/Object.freeze({\n__proto__: null,\neasingEffects: effects,\nisPatternOrGradient: isPatternOrGradient,\ncolor: color,\ngetHoverColor: getHoverColor,\nnoop: noop,\nuid: uid,\nisNullOrUndef: isNullOrUndef,\nisArray: isArray,\nisObject: isObject,\nisFinite: isNumberFinite,\nfiniteOrDefault: finiteOrDefault,\nvalueOrDefault: valueOrDefault,\ntoPercentage: toPercentage,\ntoDimension: toDimension,\ncallback: callback,\neach: each,\n_elementsEqual: _elementsEqual,\nclone: clone$1,\n_merger: _merger,\nmerge: merge,\nmergeIf: mergeIf,\n_mergerIf: _mergerIf,\n_deprecated: _deprecated,\nresolveObjectKey: resolveObjectKey,\n_splitKey: _splitKey,\n_capitalize: _capitalize,\ndefined: defined,\nisFunction: isFunction,\nsetsEqual: setsEqual,\n_isClickEvent: _isClickEvent,\ntoFontString: toFontString,\n_measureText: _measureText,\n_longestText: _longestText,\n_alignPixel: _alignPixel,\nclearCanvas: clearCanvas,\ndrawPoint: drawPoint,\ndrawPointLegend: drawPointLegend,\n_isPointInArea: _isPointInArea,\nclipArea: clipArea,\nunclipArea: unclipArea,\n_steppedLineTo: _steppedLineTo,\n_bezierCurveTo: _bezierCurveTo,\nrenderText: renderText,\naddRoundedRectPath: addRoundedRectPath,\n_lookup: _lookup,\n_lookupByKey: _lookupByKey,\n_rlookupByKey: _rlookupByKey,\n_filterBetween: _filterBetween,\nlistenArrayEvents: listenArrayEvents,\nunlistenArrayEvents: unlistenArrayEvents,\n_arrayUnique: _arrayUnique,\n_createResolver: _createResolver,\n_attachContext: _attachContext,\n_descriptors: _descriptors,\n_parseObjectDataRadialScale: _parseObjectDataRadialScale,\nsplineCurve: splineCurve,\nsplineCurveMonotone: splineCurveMonotone,\n_updateBezierControlPoints: _updateBezierControlPoints,\n_isDomSupported: _isDomSupported,\n_getParentNode: _getParentNode,\ngetStyle: getStyle,\ngetRelativePosition: getRelativePosition,\ngetMaximumSize: getMaximumSize,\nretinaScale: retinaScale,\nsupportsEventListenerOptions: supportsEventListenerOptions,\nreadUsedSize: readUsedSize,\nfontString: fontString,\nrequestAnimFrame: requestAnimFrame,\nthrottled: throttled,\ndebounce: debounce,\n_toLeftRightCenter: _toLeftRightCenter,\n_alignStartEnd: _alignStartEnd,\n_textX: _textX,\n_getStartAndCountOfVisiblePoints: _getStartAndCountOfVisiblePoints,\n_scaleRangesChanged: _scaleRangesChanged,\n_pointInLine: _pointInLine,\n_steppedInterpolation: _steppedInterpolation,\n_bezierInterpolation: _bezierInterpolation,\nformatNumber: formatNumber,\ntoLineHeight: toLineHeight,\n_readValueToProps: _readValueToProps,\ntoTRBL: toTRBL,\ntoTRBLCorners: toTRBLCorners,\ntoPadding: toPadding,\ntoFont: toFont,\nresolve: resolve,\n_addGrace: _addGrace,\ncreateContext: createContext,\nPI: PI,\nTAU: TAU,\nPITAU: PITAU,\nINFINITY: INFINITY,\nRAD_PER_DEG: RAD_PER_DEG,\nHALF_PI: HALF_PI,\nQUARTER_PI: QUARTER_PI,\nTWO_THIRDS_PI: TWO_THIRDS_PI,\nlog10: log10,\nsign: sign,\nniceNum: niceNum,\n_factorize: _factorize,\nisNumber: isNumber,\nalmostEquals: almostEquals,\nalmostWhole: almostWhole,\n_setMinAndMaxByKey: _setMinAndMaxByKey,\ntoRadians: toRadians,\ntoDegrees: toDegrees,\n_decimalPlaces: _decimalPlaces,\ngetAngleFromPoint: getAngleFromPoint,\ndistanceBetweenPoints: distanceBetweenPoints,\n_angleDiff: _angleDiff,\n_normalizeAngle: _normalizeAngle,\n_angleBetween: _angleBetween,\n_limitValue: _limitValue,\n_int16Range: _int16Range,\n_isBetween: _isBetween,\ngetRtlAdapter: getRtlAdapter,\noverrideTextDirection: overrideTextDirection,\nrestoreTextDirection: restoreTextDirection,\n_boundSegment: _boundSegment,\n_boundSegments: _boundSegments,\n_computeSegments: _computeSegments\n});\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nvar platforms = /*#__PURE__*/Object.freeze({\n__proto__: null,\n_detectPlatform: _detectPlatform,\nBasePlatform: BasePlatform,\nBasicPlatform: BasicPlatform,\nDomPlatform: DomPlatform\n});\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndex.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {plugins, localIds};\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.9.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  init(chartOptions) {}\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar _adapters = {\n  _date: DateAdapter\n};\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends DatasetController {\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    if (this.options.showLine) {\n      const {dataset: line, _dataset} = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    this.updateElements(points, start, count, mode);\n  }\n  addElements() {\n    const {showLine} = this.options;\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = registry.getElement('line');\n    }\n    super.addElements();\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new _adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nChart.register(controllers, scales, elements, plugins);\nChart.helpers = {...helpers};\nChart._adapters = _adapters;\nChart.Animation = Animation;\nChart.Animations = Animations;\nChart.animator = animator;\nChart.controllers = registry.controllers.items;\nChart.DatasetController = DatasetController;\nChart.Element = Element;\nChart.elements = elements;\nChart.Interaction = Interaction;\nChart.layouts = layouts;\nChart.platforms = platforms;\nChart.Scale = Scale;\nChart.Ticks = Ticks;\nObject.assign(Chart, controllers, scales, elements, plugins, platforms);\nChart.Chart = Chart;\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n}\n\nreturn Chart;\n\n}));\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,UAAUA,MAAM,EAAEC,OAAO,EAAE;EAC5B,OAAOC,OAAO,KAAK,QAAQ,IAAI,OAAOC,MAAM,KAAK,WAAW,GAAGA,MAAM,CAACD,OAAO,GAAGD,OAAO,CAAC,CAAC,GACzF,OAAOG,MAAM,KAAK,UAAU,IAAIA,MAAM,CAACC,GAAG,GAAGD,MAAM,CAACH,OAAO,CAAC,IAC3DD,MAAM,GAAG,OAAOM,UAAU,KAAK,WAAW,GAAGA,UAAU,GAAGN,MAAM,IAAIO,IAAI,EAAEP,MAAM,CAACQ,KAAK,GAAGP,OAAO,CAAC,CAAC,CAAC;AACpG,CAAC,EAAE,IAAI,EAAG,YAAY;EAAE,YAAY;;EAEpC,SAASQ,IAAIA,CAAA,EAAG,CAAC;EACjB,MAAMC,GAAG,GAAI,YAAW;IACtB,IAAIC,EAAE,GAAG,CAAC;IACV,OAAO,YAAW;MAChB,OAAOA,EAAE,EAAE;IACb,CAAC;EACH,CAAC,CAAC,CAAE;EACJ,SAASC,aAAaA,CAACC,KAAK,EAAE;IAC5B,OAAOA,KAAK,KAAK,IAAI,IAAI,OAAOA,KAAK,KAAK,WAAW;EACvD;EACA,SAASC,OAAOA,CAACD,KAAK,EAAE;IACtB,IAAIE,KAAK,CAACD,OAAO,IAAIC,KAAK,CAACD,OAAO,CAACD,KAAK,CAAC,EAAE;MACzC,OAAO,IAAI;IACb;IACA,MAAMG,IAAI,GAAGC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACP,KAAK,CAAC;IAClD,IAAIG,IAAI,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,SAAS,IAAIL,IAAI,CAACK,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;MACjE,OAAO,IAAI;IACb;IACA,OAAO,KAAK;EACd;EACA,SAASC,QAAQA,CAACT,KAAK,EAAE;IACvB,OAAOA,KAAK,KAAK,IAAI,IAAII,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACP,KAAK,CAAC,KAAK,iBAAiB;EACtF;EACA,MAAMU,cAAc,GAAIV,KAAK,IAAK,CAAC,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,YAAYW,MAAM,KAAKC,QAAQ,CAAC,CAACZ,KAAK,CAAC;EAC5G,SAASa,eAAeA,CAACb,KAAK,EAAEc,YAAY,EAAE;IAC5C,OAAOJ,cAAc,CAACV,KAAK,CAAC,GAAGA,KAAK,GAAGc,YAAY;EACrD;EACA,SAASC,cAAcA,CAACf,KAAK,EAAEc,YAAY,EAAE;IAC3C,OAAO,OAAOd,KAAK,KAAK,WAAW,GAAGc,YAAY,GAAGd,KAAK;EAC5D;EACA,MAAMgB,YAAY,GAAGA,CAAChB,KAAK,EAAEiB,SAAS,KACpC,OAAOjB,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACkB,QAAQ,CAAC,GAAG,CAAC,GAC9CC,UAAU,CAACnB,KAAK,CAAC,GAAG,GAAG,GACrBA,KAAK,GAAGiB,SAAS;EACvB,MAAMG,WAAW,GAAGA,CAACpB,KAAK,EAAEiB,SAAS,KACnC,OAAOjB,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACkB,QAAQ,CAAC,GAAG,CAAC,GAC9CC,UAAU,CAACnB,KAAK,CAAC,GAAG,GAAG,GAAGiB,SAAS,GACjC,CAACjB,KAAK;EACZ,SAASqB,QAAQA,CAACC,EAAE,EAAEC,IAAI,EAAEC,OAAO,EAAE;IACnC,IAAIF,EAAE,IAAI,OAAOA,EAAE,CAACf,IAAI,KAAK,UAAU,EAAE;MACvC,OAAOe,EAAE,CAACG,KAAK,CAACD,OAAO,EAAED,IAAI,CAAC;IAChC;EACF;EACA,SAASG,IAAIA,CAACC,QAAQ,EAAEL,EAAE,EAAEE,OAAO,EAAEI,OAAO,EAAE;IAC5C,IAAIC,CAAC,EAAEC,GAAG,EAAEC,IAAI;IAChB,IAAI9B,OAAO,CAAC0B,QAAQ,CAAC,EAAE;MACrBG,GAAG,GAAGH,QAAQ,CAACK,MAAM;MACrB,IAAIJ,OAAO,EAAE;QACX,KAAKC,CAAC,GAAGC,GAAG,GAAG,CAAC,EAAED,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;UAC7BP,EAAE,CAACf,IAAI,CAACiB,OAAO,EAAEG,QAAQ,CAACE,CAAC,CAAC,EAAEA,CAAC,CAAC;QAClC;MACF,CAAC,MAAM;QACL,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;UACxBP,EAAE,CAACf,IAAI,CAACiB,OAAO,EAAEG,QAAQ,CAACE,CAAC,CAAC,EAAEA,CAAC,CAAC;QAClC;MACF;IACF,CAAC,MAAM,IAAIpB,QAAQ,CAACkB,QAAQ,CAAC,EAAE;MAC7BI,IAAI,GAAG3B,MAAM,CAAC2B,IAAI,CAACJ,QAAQ,CAAC;MAC5BG,GAAG,GAAGC,IAAI,CAACC,MAAM;MACjB,KAAKH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;QACxBP,EAAE,CAACf,IAAI,CAACiB,OAAO,EAAEG,QAAQ,CAACI,IAAI,CAACF,CAAC,CAAC,CAAC,EAAEE,IAAI,CAACF,CAAC,CAAC,CAAC;MAC9C;IACF;EACF;EACA,SAASI,cAAcA,CAACC,EAAE,EAAEC,EAAE,EAAE;IAC9B,IAAIN,CAAC,EAAEO,IAAI,EAAEC,EAAE,EAAEC,EAAE;IACnB,IAAI,CAACJ,EAAE,IAAI,CAACC,EAAE,IAAID,EAAE,CAACF,MAAM,KAAKG,EAAE,CAACH,MAAM,EAAE;MACzC,OAAO,KAAK;IACd;IACA,KAAKH,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAGF,EAAE,CAACF,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;MAC3CQ,EAAE,GAAGH,EAAE,CAACL,CAAC,CAAC;MACVS,EAAE,GAAGH,EAAE,CAACN,CAAC,CAAC;MACV,IAAIQ,EAAE,CAACE,YAAY,KAAKD,EAAE,CAACC,YAAY,IAAIF,EAAE,CAACG,KAAK,KAAKF,EAAE,CAACE,KAAK,EAAE;QAChE,OAAO,KAAK;MACd;IACF;IACA,OAAO,IAAI;EACb;EACA,SAASC,OAAOA,CAACC,MAAM,EAAE;IACvB,IAAIzC,OAAO,CAACyC,MAAM,CAAC,EAAE;MACnB,OAAOA,MAAM,CAACC,GAAG,CAACF,OAAO,CAAC;IAC5B;IACA,IAAIhC,QAAQ,CAACiC,MAAM,CAAC,EAAE;MACpB,MAAME,MAAM,GAAGxC,MAAM,CAACyC,MAAM,CAAC,IAAI,CAAC;MAClC,MAAMd,IAAI,GAAG3B,MAAM,CAAC2B,IAAI,CAACW,MAAM,CAAC;MAChC,MAAMI,IAAI,GAAGf,IAAI,CAACC,MAAM;MACxB,IAAIe,CAAC,GAAG,CAAC;MACT,OAAOA,CAAC,GAAGD,IAAI,EAAE,EAAEC,CAAC,EAAE;QACpBH,MAAM,CAACb,IAAI,CAACgB,CAAC,CAAC,CAAC,GAAGN,OAAO,CAACC,MAAM,CAACX,IAAI,CAACgB,CAAC,CAAC,CAAC,CAAC;MAC5C;MACA,OAAOH,MAAM;IACf;IACA,OAAOF,MAAM;EACf;EACA,SAASM,UAAUA,CAACC,GAAG,EAAE;IACvB,OAAO,CAAC,WAAW,EAAE,WAAW,EAAE,aAAa,CAAC,CAACC,OAAO,CAACD,GAAG,CAAC,KAAK,CAAC,CAAC;EACtE;EACA,SAASE,OAAOA,CAACF,GAAG,EAAEL,MAAM,EAAEF,MAAM,EAAEU,OAAO,EAAE;IAC7C,IAAI,CAACJ,UAAU,CAACC,GAAG,CAAC,EAAE;MACpB;IACF;IACA,MAAMI,IAAI,GAAGT,MAAM,CAACK,GAAG,CAAC;IACxB,MAAMK,IAAI,GAAGZ,MAAM,CAACO,GAAG,CAAC;IACxB,IAAIxC,QAAQ,CAAC4C,IAAI,CAAC,IAAI5C,QAAQ,CAAC6C,IAAI,CAAC,EAAE;MACpCC,KAAK,CAACF,IAAI,EAAEC,IAAI,EAAEF,OAAO,CAAC;IAC5B,CAAC,MAAM;MACLR,MAAM,CAACK,GAAG,CAAC,GAAGR,OAAO,CAACa,IAAI,CAAC;IAC7B;EACF;EACA,SAASC,KAAKA,CAACX,MAAM,EAAEF,MAAM,EAAEU,OAAO,EAAE;IACtC,MAAMI,OAAO,GAAGvD,OAAO,CAACyC,MAAM,CAAC,GAAGA,MAAM,GAAG,CAACA,MAAM,CAAC;IACnD,MAAMN,IAAI,GAAGoB,OAAO,CAACxB,MAAM;IAC3B,IAAI,CAACvB,QAAQ,CAACmC,MAAM,CAAC,EAAE;MACrB,OAAOA,MAAM;IACf;IACAQ,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;IACvB,MAAMK,MAAM,GAAGL,OAAO,CAACK,MAAM,IAAIN,OAAO;IACxC,KAAK,IAAItB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;MAC7Ba,MAAM,GAAGc,OAAO,CAAC3B,CAAC,CAAC;MACnB,IAAI,CAACpB,QAAQ,CAACiC,MAAM,CAAC,EAAE;QACrB;MACF;MACA,MAAMX,IAAI,GAAG3B,MAAM,CAAC2B,IAAI,CAACW,MAAM,CAAC;MAChC,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAED,IAAI,GAAGf,IAAI,CAACC,MAAM,EAAEe,CAAC,GAAGD,IAAI,EAAE,EAAEC,CAAC,EAAE;QACjDU,MAAM,CAAC1B,IAAI,CAACgB,CAAC,CAAC,EAAEH,MAAM,EAAEF,MAAM,EAAEU,OAAO,CAAC;MAC1C;IACF;IACA,OAAOR,MAAM;EACf;EACA,SAASc,OAAOA,CAACd,MAAM,EAAEF,MAAM,EAAE;IAC/B,OAAOa,KAAK,CAACX,MAAM,EAAEF,MAAM,EAAE;MAACe,MAAM,EAAEE;IAAS,CAAC,CAAC;EACnD;EACA,SAASA,SAASA,CAACV,GAAG,EAAEL,MAAM,EAAEF,MAAM,EAAE;IACtC,IAAI,CAACM,UAAU,CAACC,GAAG,CAAC,EAAE;MACpB;IACF;IACA,MAAMI,IAAI,GAAGT,MAAM,CAACK,GAAG,CAAC;IACxB,MAAMK,IAAI,GAAGZ,MAAM,CAACO,GAAG,CAAC;IACxB,IAAIxC,QAAQ,CAAC4C,IAAI,CAAC,IAAI5C,QAAQ,CAAC6C,IAAI,CAAC,EAAE;MACpCI,OAAO,CAACL,IAAI,EAAEC,IAAI,CAAC;IACrB,CAAC,MAAM,IAAI,CAAClD,MAAM,CAACC,SAAS,CAACuD,cAAc,CAACrD,IAAI,CAACqC,MAAM,EAAEK,GAAG,CAAC,EAAE;MAC7DL,MAAM,CAACK,GAAG,CAAC,GAAGR,OAAO,CAACa,IAAI,CAAC;IAC7B;EACF;EACA,SAASO,WAAWA,CAACC,KAAK,EAAE9D,KAAK,EAAE+D,QAAQ,EAAEC,OAAO,EAAE;IACpD,IAAIhE,KAAK,KAAKiE,SAAS,EAAE;MACvBC,OAAO,CAACC,IAAI,CAACL,KAAK,GAAG,KAAK,GAAGC,QAAQ,GACtC,+BAA+B,GAAGC,OAAO,GAAG,WAAW,CAAC;IACzD;EACF;EACA,MAAMI,YAAY,GAAG;IACnB,EAAE,EAAEC,CAAC,IAAIA,CAAC;IACVC,CAAC,EAAEC,CAAC,IAAIA,CAAC,CAACD,CAAC;IACXE,CAAC,EAAED,CAAC,IAAIA,CAAC,CAACC;EACZ,CAAC;EACD,SAASC,gBAAgBA,CAACC,GAAG,EAAEzB,GAAG,EAAE;IAClC,MAAM0B,QAAQ,GAAGP,YAAY,CAACnB,GAAG,CAAC,KAAKmB,YAAY,CAACnB,GAAG,CAAC,GAAG2B,eAAe,CAAC3B,GAAG,CAAC,CAAC;IAChF,OAAO0B,QAAQ,CAACD,GAAG,CAAC;EACtB;EACA,SAASE,eAAeA,CAAC3B,GAAG,EAAE;IAC5B,MAAMlB,IAAI,GAAG8C,SAAS,CAAC5B,GAAG,CAAC;IAC3B,OAAOyB,GAAG,IAAI;MACZ,KAAK,MAAM3B,CAAC,IAAIhB,IAAI,EAAE;QACpB,IAAIgB,CAAC,KAAK,EAAE,EAAE;UACZ;QACF;QACA2B,GAAG,GAAGA,GAAG,IAAIA,GAAG,CAAC3B,CAAC,CAAC;MACrB;MACA,OAAO2B,GAAG;IACZ,CAAC;EACH;EACA,SAASG,SAASA,CAAC5B,GAAG,EAAE;IACtB,MAAM6B,KAAK,GAAG7B,GAAG,CAAC8B,KAAK,CAAC,GAAG,CAAC;IAC5B,MAAMhD,IAAI,GAAG,EAAE;IACf,IAAIiD,GAAG,GAAG,EAAE;IACZ,KAAK,MAAMC,IAAI,IAAIH,KAAK,EAAE;MACxBE,GAAG,IAAIC,IAAI;MACX,IAAID,GAAG,CAAC9D,QAAQ,CAAC,IAAI,CAAC,EAAE;QACtB8D,GAAG,GAAGA,GAAG,CAACxE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG;MAC9B,CAAC,MAAM;QACLuB,IAAI,CAACmD,IAAI,CAACF,GAAG,CAAC;QACdA,GAAG,GAAG,EAAE;MACV;IACF;IACA,OAAOjD,IAAI;EACb;EACA,SAASoD,WAAWA,CAACC,GAAG,EAAE;IACxB,OAAOA,GAAG,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,GAAG,CAAC5E,KAAK,CAAC,CAAC,CAAC;EACnD;EACA,MAAM+E,OAAO,GAAIvF,KAAK,IAAK,OAAOA,KAAK,KAAK,WAAW;EACvD,MAAMwF,UAAU,GAAIxF,KAAK,IAAK,OAAOA,KAAK,KAAK,UAAU;EACzD,MAAMyF,SAAS,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAK;IAC1B,IAAID,CAAC,CAACE,IAAI,KAAKD,CAAC,CAACC,IAAI,EAAE;MACrB,OAAO,KAAK;IACd;IACA,KAAK,MAAMC,IAAI,IAAIH,CAAC,EAAE;MACpB,IAAI,CAACC,CAAC,CAACG,GAAG,CAACD,IAAI,CAAC,EAAE;QAChB,OAAO,KAAK;MACd;IACF;IACA,OAAO,IAAI;EACb,CAAC;EACD,SAASE,aAAaA,CAACC,CAAC,EAAE;IACxB,OAAOA,CAAC,CAAC7F,IAAI,KAAK,SAAS,IAAI6F,CAAC,CAAC7F,IAAI,KAAK,OAAO,IAAI6F,CAAC,CAAC7F,IAAI,KAAK,aAAa;EAC/E;EAEA,MAAM8F,EAAE,GAAGC,IAAI,CAACD,EAAE;EAClB,MAAME,GAAG,GAAG,CAAC,GAAGF,EAAE;EAClB,MAAMG,KAAK,GAAGD,GAAG,GAAGF,EAAE;EACtB,MAAMI,QAAQ,GAAG1F,MAAM,CAAC2F,iBAAiB;EACzC,MAAMC,WAAW,GAAGN,EAAE,GAAG,GAAG;EAC5B,MAAMO,OAAO,GAAGP,EAAE,GAAG,CAAC;EACtB,MAAMQ,UAAU,GAAGR,EAAE,GAAG,CAAC;EACzB,MAAMS,aAAa,GAAGT,EAAE,GAAG,CAAC,GAAG,CAAC;EAChC,MAAMU,KAAK,GAAGT,IAAI,CAACS,KAAK;EACxB,MAAMC,IAAI,GAAGV,IAAI,CAACU,IAAI;EACtB,SAASC,OAAOA,CAACC,KAAK,EAAE;IACtB,MAAMC,YAAY,GAAGb,IAAI,CAACc,KAAK,CAACF,KAAK,CAAC;IACtCA,KAAK,GAAGG,YAAY,CAACH,KAAK,EAAEC,YAAY,EAAED,KAAK,GAAG,IAAI,CAAC,GAAGC,YAAY,GAAGD,KAAK;IAC9E,MAAMI,SAAS,GAAGhB,IAAI,CAACiB,GAAG,CAAC,EAAE,EAAEjB,IAAI,CAACkB,KAAK,CAACT,KAAK,CAACG,KAAK,CAAC,CAAC,CAAC;IACxD,MAAMO,QAAQ,GAAGP,KAAK,GAAGI,SAAS;IAClC,MAAMI,YAAY,GAAGD,QAAQ,IAAI,CAAC,GAAG,CAAC,GAAGA,QAAQ,IAAI,CAAC,GAAG,CAAC,GAAGA,QAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE;IACnF,OAAOC,YAAY,GAAGJ,SAAS;EACjC;EACA,SAASK,UAAUA,CAACvH,KAAK,EAAE;IACzB,MAAMwH,MAAM,GAAG,EAAE;IACjB,MAAMC,IAAI,GAAGvB,IAAI,CAACuB,IAAI,CAACzH,KAAK,CAAC;IAC7B,IAAI6B,CAAC;IACL,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4F,IAAI,EAAE5F,CAAC,EAAE,EAAE;MACzB,IAAI7B,KAAK,GAAG6B,CAAC,KAAK,CAAC,EAAE;QACnB2F,MAAM,CAACtC,IAAI,CAACrD,CAAC,CAAC;QACd2F,MAAM,CAACtC,IAAI,CAAClF,KAAK,GAAG6B,CAAC,CAAC;MACxB;IACF;IACA,IAAI4F,IAAI,MAAMA,IAAI,GAAG,CAAC,CAAC,EAAE;MACvBD,MAAM,CAACtC,IAAI,CAACuC,IAAI,CAAC;IACnB;IACAD,MAAM,CAACE,IAAI,CAAC,CAAChC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,CAAC,CAACgC,GAAG,CAAC,CAAC;IAClC,OAAOH,MAAM;EACf;EACA,SAASI,QAAQA,CAACC,CAAC,EAAE;IACnB,OAAO,CAACC,KAAK,CAAC3G,UAAU,CAAC0G,CAAC,CAAC,CAAC,IAAIjH,QAAQ,CAACiH,CAAC,CAAC;EAC7C;EACA,SAASZ,YAAYA,CAAC3C,CAAC,EAAEE,CAAC,EAAEuD,OAAO,EAAE;IACnC,OAAO7B,IAAI,CAAC8B,GAAG,CAAC1D,CAAC,GAAGE,CAAC,CAAC,GAAGuD,OAAO;EAClC;EACA,SAASE,WAAWA,CAAC3D,CAAC,EAAEyD,OAAO,EAAE;IAC/B,MAAMG,OAAO,GAAGhC,IAAI,CAACc,KAAK,CAAC1C,CAAC,CAAC;IAC7B,OAAS4D,OAAO,GAAGH,OAAO,IAAKzD,CAAC,IAAO4D,OAAO,GAAGH,OAAO,IAAKzD,CAAE;EACjE;EACA,SAAS6D,kBAAkBA,CAACC,KAAK,EAAExF,MAAM,EAAEyF,QAAQ,EAAE;IACnD,IAAIxG,CAAC,EAAEO,IAAI,EAAEpC,KAAK;IAClB,KAAK6B,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAGgG,KAAK,CAACpG,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAEP,CAAC,EAAE,EAAE;MAC9C7B,KAAK,GAAGoI,KAAK,CAACvG,CAAC,CAAC,CAACwG,QAAQ,CAAC;MAC1B,IAAI,CAACP,KAAK,CAAC9H,KAAK,CAAC,EAAE;QACjB4C,MAAM,CAAC0F,GAAG,GAAGpC,IAAI,CAACoC,GAAG,CAAC1F,MAAM,CAAC0F,GAAG,EAAEtI,KAAK,CAAC;QACxC4C,MAAM,CAAC2F,GAAG,GAAGrC,IAAI,CAACqC,GAAG,CAAC3F,MAAM,CAAC2F,GAAG,EAAEvI,KAAK,CAAC;MAC1C;IACF;EACF;EACA,SAASwI,SAASA,CAACC,OAAO,EAAE;IAC1B,OAAOA,OAAO,IAAIxC,EAAE,GAAG,GAAG,CAAC;EAC7B;EACA,SAASyC,SAASA,CAACC,OAAO,EAAE;IAC1B,OAAOA,OAAO,IAAI,GAAG,GAAG1C,EAAE,CAAC;EAC7B;EACA,SAAS2C,cAAcA,CAACtE,CAAC,EAAE;IACzB,IAAI,CAAC5D,cAAc,CAAC4D,CAAC,CAAC,EAAE;MACtB;IACF;IACA,IAAI0B,CAAC,GAAG,CAAC;IACT,IAAI6C,CAAC,GAAG,CAAC;IACT,OAAO3C,IAAI,CAACc,KAAK,CAAC1C,CAAC,GAAG0B,CAAC,CAAC,GAAGA,CAAC,KAAK1B,CAAC,EAAE;MAClC0B,CAAC,IAAI,EAAE;MACP6C,CAAC,EAAE;IACL;IACA,OAAOA,CAAC;EACV;EACA,SAASC,iBAAiBA,CAACC,WAAW,EAAEC,UAAU,EAAE;IAClD,MAAMC,mBAAmB,GAAGD,UAAU,CAAC1E,CAAC,GAAGyE,WAAW,CAACzE,CAAC;IACxD,MAAM4E,mBAAmB,GAAGF,UAAU,CAACxE,CAAC,GAAGuE,WAAW,CAACvE,CAAC;IACxD,MAAM2E,wBAAwB,GAAGjD,IAAI,CAACuB,IAAI,CAACwB,mBAAmB,GAAGA,mBAAmB,GAAGC,mBAAmB,GAAGA,mBAAmB,CAAC;IACjI,IAAIE,KAAK,GAAGlD,IAAI,CAACmD,KAAK,CAACH,mBAAmB,EAAED,mBAAmB,CAAC;IAChE,IAAIG,KAAK,GAAI,CAAC,GAAG,GAAGnD,EAAG,EAAE;MACvBmD,KAAK,IAAIjD,GAAG;IACd;IACA,OAAO;MACLiD,KAAK;MACLE,QAAQ,EAAEH;IACZ,CAAC;EACH;EACA,SAASI,qBAAqBA,CAACC,GAAG,EAAEC,GAAG,EAAE;IACvC,OAAOvD,IAAI,CAACuB,IAAI,CAACvB,IAAI,CAACiB,GAAG,CAACsC,GAAG,CAACnF,CAAC,GAAGkF,GAAG,CAAClF,CAAC,EAAE,CAAC,CAAC,GAAG4B,IAAI,CAACiB,GAAG,CAACsC,GAAG,CAACjF,CAAC,GAAGgF,GAAG,CAAChF,CAAC,EAAE,CAAC,CAAC,CAAC;EAC3E;EACA,SAASkF,UAAUA,CAAChE,CAAC,EAAEC,CAAC,EAAE;IACxB,OAAO,CAACD,CAAC,GAAGC,CAAC,GAAGS,KAAK,IAAID,GAAG,GAAGF,EAAE;EACnC;EACA,SAAS0D,eAAeA,CAACjE,CAAC,EAAE;IAC1B,OAAO,CAACA,CAAC,GAAGS,GAAG,GAAGA,GAAG,IAAIA,GAAG;EAC9B;EACA,SAASyD,aAAaA,CAACR,KAAK,EAAES,KAAK,EAAEC,GAAG,EAAEC,qBAAqB,EAAE;IAC/D,MAAMrE,CAAC,GAAGiE,eAAe,CAACP,KAAK,CAAC;IAChC,MAAMY,CAAC,GAAGL,eAAe,CAACE,KAAK,CAAC;IAChC,MAAM7D,CAAC,GAAG2D,eAAe,CAACG,GAAG,CAAC;IAC9B,MAAMG,YAAY,GAAGN,eAAe,CAACK,CAAC,GAAGtE,CAAC,CAAC;IAC3C,MAAMwE,UAAU,GAAGP,eAAe,CAAC3D,CAAC,GAAGN,CAAC,CAAC;IACzC,MAAMyE,YAAY,GAAGR,eAAe,CAACjE,CAAC,GAAGsE,CAAC,CAAC;IAC3C,MAAMI,UAAU,GAAGT,eAAe,CAACjE,CAAC,GAAGM,CAAC,CAAC;IACzC,OAAON,CAAC,KAAKsE,CAAC,IAAItE,CAAC,KAAKM,CAAC,IAAK+D,qBAAqB,IAAIC,CAAC,KAAKhE,CAAE,IACzDiE,YAAY,GAAGC,UAAU,IAAIC,YAAY,GAAGC,UAAW;EAC/D;EACA,SAASC,WAAWA,CAACrK,KAAK,EAAEsI,GAAG,EAAEC,GAAG,EAAE;IACpC,OAAOrC,IAAI,CAACqC,GAAG,CAACD,GAAG,EAAEpC,IAAI,CAACoC,GAAG,CAACC,GAAG,EAAEvI,KAAK,CAAC,CAAC;EAC5C;EACA,SAASsK,WAAWA,CAACtK,KAAK,EAAE;IAC1B,OAAOqK,WAAW,CAACrK,KAAK,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;EAC1C;EACA,SAASuK,UAAUA,CAACvK,KAAK,EAAE6J,KAAK,EAAEC,GAAG,EAAE/B,OAAO,GAAG,IAAI,EAAE;IACrD,OAAO/H,KAAK,IAAIkG,IAAI,CAACoC,GAAG,CAACuB,KAAK,EAAEC,GAAG,CAAC,GAAG/B,OAAO,IAAI/H,KAAK,IAAIkG,IAAI,CAACqC,GAAG,CAACsB,KAAK,EAAEC,GAAG,CAAC,GAAG/B,OAAO;EAC3F;EAEA,SAASyC,OAAOA,CAACC,KAAK,EAAEzK,KAAK,EAAE0K,GAAG,EAAE;IAClCA,GAAG,GAAGA,GAAG,KAAMlI,KAAK,IAAKiI,KAAK,CAACjI,KAAK,CAAC,GAAGxC,KAAK,CAAC;IAC9C,IAAI2K,EAAE,GAAGF,KAAK,CAACzI,MAAM,GAAG,CAAC;IACzB,IAAI4I,EAAE,GAAG,CAAC;IACV,IAAIC,GAAG;IACP,OAAOF,EAAE,GAAGC,EAAE,GAAG,CAAC,EAAE;MAClBC,GAAG,GAAID,EAAE,GAAGD,EAAE,IAAK,CAAC;MACpB,IAAID,GAAG,CAACG,GAAG,CAAC,EAAE;QACZD,EAAE,GAAGC,GAAG;MACV,CAAC,MAAM;QACLF,EAAE,GAAGE,GAAG;MACV;IACF;IACA,OAAO;MAACD,EAAE;MAAED;IAAE,CAAC;EACjB;EACA,MAAMG,YAAY,GAAGA,CAACL,KAAK,EAAExH,GAAG,EAAEjD,KAAK,EAAE+K,IAAI,KAC3CP,OAAO,CAACC,KAAK,EAAEzK,KAAK,EAAE+K,IAAI,GACtBvI,KAAK,IAAIiI,KAAK,CAACjI,KAAK,CAAC,CAACS,GAAG,CAAC,IAAIjD,KAAK,GACnCwC,KAAK,IAAIiI,KAAK,CAACjI,KAAK,CAAC,CAACS,GAAG,CAAC,GAAGjD,KAAK,CAAC;EACzC,MAAMgL,aAAa,GAAGA,CAACP,KAAK,EAAExH,GAAG,EAAEjD,KAAK,KACtCwK,OAAO,CAACC,KAAK,EAAEzK,KAAK,EAAEwC,KAAK,IAAIiI,KAAK,CAACjI,KAAK,CAAC,CAACS,GAAG,CAAC,IAAIjD,KAAK,CAAC;EAC5D,SAASiL,cAAcA,CAACC,MAAM,EAAE5C,GAAG,EAAEC,GAAG,EAAE;IACxC,IAAIsB,KAAK,GAAG,CAAC;IACb,IAAIC,GAAG,GAAGoB,MAAM,CAAClJ,MAAM;IACvB,OAAO6H,KAAK,GAAGC,GAAG,IAAIoB,MAAM,CAACrB,KAAK,CAAC,GAAGvB,GAAG,EAAE;MACzCuB,KAAK,EAAE;IACT;IACA,OAAOC,GAAG,GAAGD,KAAK,IAAIqB,MAAM,CAACpB,GAAG,GAAG,CAAC,CAAC,GAAGvB,GAAG,EAAE;MAC3CuB,GAAG,EAAE;IACP;IACA,OAAOD,KAAK,GAAG,CAAC,IAAIC,GAAG,GAAGoB,MAAM,CAAClJ,MAAM,GACnCkJ,MAAM,CAAC1K,KAAK,CAACqJ,KAAK,EAAEC,GAAG,CAAC,GACxBoB,MAAM;EACZ;EACA,MAAMC,WAAW,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC;EACjE,SAASC,iBAAiBA,CAAChD,KAAK,EAAEiD,QAAQ,EAAE;IAC1C,IAAIjD,KAAK,CAACkD,QAAQ,EAAE;MAClBlD,KAAK,CAACkD,QAAQ,CAACC,SAAS,CAACrG,IAAI,CAACmG,QAAQ,CAAC;MACvC;IACF;IACAjL,MAAM,CAACoL,cAAc,CAACpD,KAAK,EAAE,UAAU,EAAE;MACvCqD,YAAY,EAAE,IAAI;MAClBC,UAAU,EAAE,KAAK;MACjB1L,KAAK,EAAE;QACLuL,SAAS,EAAE,CAACF,QAAQ;MACtB;IACF,CAAC,CAAC;IACFF,WAAW,CAACQ,OAAO,CAAE1I,GAAG,IAAK;MAC3B,MAAM2I,MAAM,GAAG,SAAS,GAAGzG,WAAW,CAAClC,GAAG,CAAC;MAC3C,MAAM4I,IAAI,GAAGzD,KAAK,CAACnF,GAAG,CAAC;MACvB7C,MAAM,CAACoL,cAAc,CAACpD,KAAK,EAAEnF,GAAG,EAAE;QAChCwI,YAAY,EAAE,IAAI;QAClBC,UAAU,EAAE,KAAK;QACjB1L,KAAKA,CAAC,GAAGuB,IAAI,EAAE;UACb,MAAMuK,GAAG,GAAGD,IAAI,CAACpK,KAAK,CAAC,IAAI,EAAEF,IAAI,CAAC;UAClC6G,KAAK,CAACkD,QAAQ,CAACC,SAAS,CAACI,OAAO,CAAEI,MAAM,IAAK;YAC3C,IAAI,OAAOA,MAAM,CAACH,MAAM,CAAC,KAAK,UAAU,EAAE;cACxCG,MAAM,CAACH,MAAM,CAAC,CAAC,GAAGrK,IAAI,CAAC;YACzB;UACF,CAAC,CAAC;UACF,OAAOuK,GAAG;QACZ;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EACA,SAASE,mBAAmBA,CAAC5D,KAAK,EAAEiD,QAAQ,EAAE;IAC5C,MAAMY,IAAI,GAAG7D,KAAK,CAACkD,QAAQ;IAC3B,IAAI,CAACW,IAAI,EAAE;MACT;IACF;IACA,MAAMV,SAAS,GAAGU,IAAI,CAACV,SAAS;IAChC,MAAM/I,KAAK,GAAG+I,SAAS,CAACrI,OAAO,CAACmI,QAAQ,CAAC;IACzC,IAAI7I,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB+I,SAAS,CAACW,MAAM,CAAC1J,KAAK,EAAE,CAAC,CAAC;IAC5B;IACA,IAAI+I,SAAS,CAACvJ,MAAM,GAAG,CAAC,EAAE;MACxB;IACF;IACAmJ,WAAW,CAACQ,OAAO,CAAE1I,GAAG,IAAK;MAC3B,OAAOmF,KAAK,CAACnF,GAAG,CAAC;IACnB,CAAC,CAAC;IACF,OAAOmF,KAAK,CAACkD,QAAQ;EACvB;EACA,SAASa,YAAYA,CAACC,KAAK,EAAE;IAC3B,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAAC,CAAC;IACrB,IAAIzK,CAAC,EAAEO,IAAI;IACX,KAAKP,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAGgK,KAAK,CAACpK,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;MAC9CwK,GAAG,CAACE,GAAG,CAACH,KAAK,CAACvK,CAAC,CAAC,CAAC;IACnB;IACA,IAAIwK,GAAG,CAACzG,IAAI,KAAKxD,IAAI,EAAE;MACrB,OAAOgK,KAAK;IACd;IACA,OAAOlM,KAAK,CAACsM,IAAI,CAACH,GAAG,CAAC;EACxB;EAEA,SAASI,UAAUA,CAACC,SAAS,EAAEC,SAAS,EAAEC,UAAU,EAAE;IACpD,OAAOD,SAAS,GAAG,GAAG,GAAGD,SAAS,GAAG,KAAK,GAAGE,UAAU;EACzD;EACA,MAAMC,gBAAgB,GAAI,YAAW;IACnC,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;MACjC,OAAO,UAASzL,QAAQ,EAAE;QACxB,OAAOA,QAAQ,CAAC,CAAC;MACnB,CAAC;IACH;IACA,OAAOyL,MAAM,CAACC,qBAAqB;EACrC,CAAC,CAAC,CAAE;EACJ,SAASC,SAASA,CAAC1L,EAAE,EAAEE,OAAO,EAAEyL,QAAQ,EAAE;IACxC,MAAMC,UAAU,GAAGD,QAAQ,KAAM1L,IAAI,IAAKrB,KAAK,CAACG,SAAS,CAACG,KAAK,CAACD,IAAI,CAACgB,IAAI,CAAC,CAAC;IAC3E,IAAI4L,OAAO,GAAG,KAAK;IACnB,IAAI5L,IAAI,GAAG,EAAE;IACb,OAAO,UAAS,GAAG6L,IAAI,EAAE;MACvB7L,IAAI,GAAG2L,UAAU,CAACE,IAAI,CAAC;MACvB,IAAI,CAACD,OAAO,EAAE;QACZA,OAAO,GAAG,IAAI;QACdN,gBAAgB,CAACtM,IAAI,CAACuM,MAAM,EAAE,MAAM;UAClCK,OAAO,GAAG,KAAK;UACf7L,EAAE,CAACG,KAAK,CAACD,OAAO,EAAED,IAAI,CAAC;QACzB,CAAC,CAAC;MACJ;IACF,CAAC;EACH;EACA,SAAS8L,QAAQA,CAAC/L,EAAE,EAAEgM,KAAK,EAAE;IAC3B,IAAIC,OAAO;IACX,OAAO,UAAS,GAAGhM,IAAI,EAAE;MACvB,IAAI+L,KAAK,EAAE;QACTE,YAAY,CAACD,OAAO,CAAC;QACrBA,OAAO,GAAGE,UAAU,CAACnM,EAAE,EAAEgM,KAAK,EAAE/L,IAAI,CAAC;MACvC,CAAC,MAAM;QACLD,EAAE,CAACG,KAAK,CAAC,IAAI,EAAEF,IAAI,CAAC;MACtB;MACA,OAAO+L,KAAK;IACd,CAAC;EACH;EACA,MAAMI,kBAAkB,GAAIC,KAAK,IAAKA,KAAK,KAAK,OAAO,GAAG,MAAM,GAAGA,KAAK,KAAK,KAAK,GAAG,OAAO,GAAG,QAAQ;EACvG,MAAMC,cAAc,GAAGA,CAACD,KAAK,EAAE9D,KAAK,EAAEC,GAAG,KAAK6D,KAAK,KAAK,OAAO,GAAG9D,KAAK,GAAG8D,KAAK,KAAK,KAAK,GAAG7D,GAAG,GAAG,CAACD,KAAK,GAAGC,GAAG,IAAI,CAAC;EACnH,MAAM+D,MAAM,GAAGA,CAACF,KAAK,EAAEG,IAAI,EAAEC,KAAK,EAAEC,GAAG,KAAK;IAC1C,MAAMC,KAAK,GAAGD,GAAG,GAAG,MAAM,GAAG,OAAO;IACpC,OAAOL,KAAK,KAAKM,KAAK,GAAGF,KAAK,GAAGJ,KAAK,KAAK,QAAQ,GAAG,CAACG,IAAI,GAAGC,KAAK,IAAI,CAAC,GAAGD,IAAI;EACjF,CAAC;EACD,SAASI,gCAAgCA,CAACC,IAAI,EAAEC,MAAM,EAAEC,kBAAkB,EAAE;IAC1E,MAAMC,UAAU,GAAGF,MAAM,CAACpM,MAAM;IAChC,IAAI6H,KAAK,GAAG,CAAC;IACb,IAAI0E,KAAK,GAAGD,UAAU;IACtB,IAAIH,IAAI,CAACK,OAAO,EAAE;MAChB,MAAM;QAACC,MAAM;QAAEC;MAAO,CAAC,GAAGP,IAAI;MAC9B,MAAMQ,IAAI,GAAGF,MAAM,CAACE,IAAI;MACxB,MAAM;QAACrG,GAAG;QAAEC,GAAG;QAAEqG,UAAU;QAAEC;MAAU,CAAC,GAAGJ,MAAM,CAACK,aAAa,CAAC,CAAC;MACjE,IAAIF,UAAU,EAAE;QACd/E,KAAK,GAAGQ,WAAW,CAACnE,IAAI,CAACoC,GAAG,CAC1BwC,YAAY,CAAC4D,OAAO,EAAED,MAAM,CAACE,IAAI,EAAErG,GAAG,CAAC,CAACsC,EAAE,EAC1CyD,kBAAkB,GAAGC,UAAU,GAAGxD,YAAY,CAACsD,MAAM,EAAEO,IAAI,EAAEF,MAAM,CAACM,gBAAgB,CAACzG,GAAG,CAAC,CAAC,CAACsC,EAAE,CAAC,EAChG,CAAC,EAAE0D,UAAU,GAAG,CAAC,CAAC;MACpB;MACA,IAAIO,UAAU,EAAE;QACdN,KAAK,GAAGlE,WAAW,CAACnE,IAAI,CAACqC,GAAG,CAC1BuC,YAAY,CAAC4D,OAAO,EAAED,MAAM,CAACE,IAAI,EAAEpG,GAAG,EAAE,IAAI,CAAC,CAACoC,EAAE,GAAG,CAAC,EACpD0D,kBAAkB,GAAG,CAAC,GAAGvD,YAAY,CAACsD,MAAM,EAAEO,IAAI,EAAEF,MAAM,CAACM,gBAAgB,CAACxG,GAAG,CAAC,EAAE,IAAI,CAAC,CAACoC,EAAE,GAAG,CAAC,CAAC,EACjGd,KAAK,EAAEyE,UAAU,CAAC,GAAGzE,KAAK;MAC5B,CAAC,MAAM;QACL0E,KAAK,GAAGD,UAAU,GAAGzE,KAAK;MAC5B;IACF;IACA,OAAO;MAACA,KAAK;MAAE0E;IAAK,CAAC;EACvB;EACA,SAASS,mBAAmBA,CAACb,IAAI,EAAE;IACjC,MAAM;MAACc,MAAM;MAAEC,MAAM;MAAEC;IAAY,CAAC,GAAGhB,IAAI;IAC3C,MAAMiB,SAAS,GAAG;MAChBC,IAAI,EAAEJ,MAAM,CAAC3G,GAAG;MAChBgH,IAAI,EAAEL,MAAM,CAAC1G,GAAG;MAChBgH,IAAI,EAAEL,MAAM,CAAC5G,GAAG;MAChBkH,IAAI,EAAEN,MAAM,CAAC3G;IACf,CAAC;IACD,IAAI,CAAC4G,YAAY,EAAE;MACjBhB,IAAI,CAACgB,YAAY,GAAGC,SAAS;MAC7B,OAAO,IAAI;IACb;IACA,MAAMK,OAAO,GAAGN,YAAY,CAACE,IAAI,KAAKJ,MAAM,CAAC3G,GAAG,IAC7C6G,YAAY,CAACG,IAAI,KAAKL,MAAM,CAAC1G,GAAG,IAChC4G,YAAY,CAACI,IAAI,KAAKL,MAAM,CAAC5G,GAAG,IAChC6G,YAAY,CAACK,IAAI,KAAKN,MAAM,CAAC3G,GAAG;IACnCnI,MAAM,CAACsP,MAAM,CAACP,YAAY,EAAEC,SAAS,CAAC;IACtC,OAAOK,OAAO;EAChB;EAEA,MAAME,QAAQ,CAAC;IACbC,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACC,QAAQ,GAAG,IAAI;MACpB,IAAI,CAACC,OAAO,GAAG,IAAIC,GAAG,CAAC,CAAC;MACxB,IAAI,CAACC,QAAQ,GAAG,KAAK;MACrB,IAAI,CAACC,SAAS,GAAGhM,SAAS;IAC5B;IACAiM,OAAOA,CAACC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAElQ,IAAI,EAAE;MAChC,MAAMmQ,SAAS,GAAGF,KAAK,CAAC7E,SAAS,CAACpL,IAAI,CAAC;MACvC,MAAMoQ,QAAQ,GAAGH,KAAK,CAACI,QAAQ;MAC/BF,SAAS,CAAC3E,OAAO,CAACrK,EAAE,IAAIA,EAAE,CAAC;QACzB6O,KAAK;QACLM,OAAO,EAAEL,KAAK,CAACK,OAAO;QACtBF,QAAQ;QACRG,WAAW,EAAExK,IAAI,CAACoC,GAAG,CAAC+H,IAAI,GAAGD,KAAK,CAACvG,KAAK,EAAE0G,QAAQ;MACpD,CAAC,CAAC,CAAC;IACL;IACAI,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAACd,QAAQ,EAAE;QACjB;MACF;MACA,IAAI,CAACG,QAAQ,GAAG,IAAI;MACpB,IAAI,CAACH,QAAQ,GAAGhD,gBAAgB,CAACtM,IAAI,CAACuM,MAAM,EAAE,MAAM;QAClD,IAAI,CAAC8D,OAAO,CAAC,CAAC;QACd,IAAI,CAACf,QAAQ,GAAG,IAAI;QACpB,IAAI,IAAI,CAACG,QAAQ,EAAE;UACjB,IAAI,CAACW,QAAQ,CAAC,CAAC;QACjB;MACF,CAAC,CAAC;IACJ;IACAC,OAAOA,CAACP,IAAI,GAAGQ,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;MACzB,IAAIC,SAAS,GAAG,CAAC;MACjB,IAAI,CAACjB,OAAO,CAACnE,OAAO,CAAC,CAACyE,KAAK,EAAED,KAAK,KAAK;QACrC,IAAI,CAACC,KAAK,CAACY,OAAO,IAAI,CAACZ,KAAK,CAAChE,KAAK,CAACpK,MAAM,EAAE;UACzC;QACF;QACA,MAAMoK,KAAK,GAAGgE,KAAK,CAAChE,KAAK;QACzB,IAAIvK,CAAC,GAAGuK,KAAK,CAACpK,MAAM,GAAG,CAAC;QACxB,IAAIiP,IAAI,GAAG,KAAK;QAChB,IAAIpL,IAAI;QACR,OAAOhE,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;UAClBgE,IAAI,GAAGuG,KAAK,CAACvK,CAAC,CAAC;UACf,IAAIgE,IAAI,CAACqL,OAAO,EAAE;YAChB,IAAIrL,IAAI,CAACsL,MAAM,GAAGf,KAAK,CAACI,QAAQ,EAAE;cAChCJ,KAAK,CAACI,QAAQ,GAAG3K,IAAI,CAACsL,MAAM;YAC9B;YACAtL,IAAI,CAACuL,IAAI,CAACf,IAAI,CAAC;YACfY,IAAI,GAAG,IAAI;UACb,CAAC,MAAM;YACL7E,KAAK,CAACvK,CAAC,CAAC,GAAGuK,KAAK,CAACA,KAAK,CAACpK,MAAM,GAAG,CAAC,CAAC;YAClCoK,KAAK,CAACzE,GAAG,CAAC,CAAC;UACb;QACF;QACA,IAAIsJ,IAAI,EAAE;UACRd,KAAK,CAACc,IAAI,CAAC,CAAC;UACZ,IAAI,CAACf,OAAO,CAACC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAE,UAAU,CAAC;QAC9C;QACA,IAAI,CAACjE,KAAK,CAACpK,MAAM,EAAE;UACjBoO,KAAK,CAACY,OAAO,GAAG,KAAK;UACrB,IAAI,CAACd,OAAO,CAACC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAE,UAAU,CAAC;UAC5CD,KAAK,CAACK,OAAO,GAAG,KAAK;QACvB;QACAM,SAAS,IAAI3E,KAAK,CAACpK,MAAM;MAC3B,CAAC,CAAC;MACF,IAAI,CAACiO,SAAS,GAAGI,IAAI;MACrB,IAAIU,SAAS,KAAK,CAAC,EAAE;QACnB,IAAI,CAACf,QAAQ,GAAG,KAAK;MACvB;IACF;IACAqB,SAASA,CAAClB,KAAK,EAAE;MACf,MAAMmB,MAAM,GAAG,IAAI,CAACxB,OAAO;MAC3B,IAAIM,KAAK,GAAGkB,MAAM,CAACC,GAAG,CAACpB,KAAK,CAAC;MAC7B,IAAI,CAACC,KAAK,EAAE;QACVA,KAAK,GAAG;UACNY,OAAO,EAAE,KAAK;UACdP,OAAO,EAAE,IAAI;UACbrE,KAAK,EAAE,EAAE;UACTb,SAAS,EAAE;YACTiG,QAAQ,EAAE,EAAE;YACZC,QAAQ,EAAE;UACZ;QACF,CAAC;QACDH,MAAM,CAACjF,GAAG,CAAC8D,KAAK,EAAEC,KAAK,CAAC;MAC1B;MACA,OAAOA,KAAK;IACd;IACAsB,MAAMA,CAACvB,KAAK,EAAEwB,KAAK,EAAEC,EAAE,EAAE;MACvB,IAAI,CAACP,SAAS,CAAClB,KAAK,CAAC,CAAC5E,SAAS,CAACoG,KAAK,CAAC,CAACzM,IAAI,CAAC0M,EAAE,CAAC;IACjD;IACArF,GAAGA,CAAC4D,KAAK,EAAE/D,KAAK,EAAE;MAChB,IAAI,CAACA,KAAK,IAAI,CAACA,KAAK,CAACpK,MAAM,EAAE;QAC3B;MACF;MACA,IAAI,CAACqP,SAAS,CAAClB,KAAK,CAAC,CAAC/D,KAAK,CAAClH,IAAI,CAAC,GAAGkH,KAAK,CAAC;IAC5C;IACAtG,GAAGA,CAACqK,KAAK,EAAE;MACT,OAAO,IAAI,CAACkB,SAAS,CAAClB,KAAK,CAAC,CAAC/D,KAAK,CAACpK,MAAM,GAAG,CAAC;IAC/C;IACA6H,KAAKA,CAACsG,KAAK,EAAE;MACX,MAAMC,KAAK,GAAG,IAAI,CAACN,OAAO,CAACyB,GAAG,CAACpB,KAAK,CAAC;MACrC,IAAI,CAACC,KAAK,EAAE;QACV;MACF;MACAA,KAAK,CAACY,OAAO,GAAG,IAAI;MACpBZ,KAAK,CAACvG,KAAK,GAAGgH,IAAI,CAACC,GAAG,CAAC,CAAC;MACxBV,KAAK,CAACI,QAAQ,GAAGJ,KAAK,CAAChE,KAAK,CAACyF,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK7L,IAAI,CAACqC,GAAG,CAACuJ,GAAG,EAAEC,GAAG,CAACC,SAAS,CAAC,EAAE,CAAC,CAAC;MAClF,IAAI,CAACrB,QAAQ,CAAC,CAAC;IACjB;IACAK,OAAOA,CAACb,KAAK,EAAE;MACb,IAAI,CAAC,IAAI,CAACH,QAAQ,EAAE;QAClB,OAAO,KAAK;MACd;MACA,MAAMI,KAAK,GAAG,IAAI,CAACN,OAAO,CAACyB,GAAG,CAACpB,KAAK,CAAC;MACrC,IAAI,CAACC,KAAK,IAAI,CAACA,KAAK,CAACY,OAAO,IAAI,CAACZ,KAAK,CAAChE,KAAK,CAACpK,MAAM,EAAE;QACnD,OAAO,KAAK;MACd;MACA,OAAO,IAAI;IACb;IACAiQ,IAAIA,CAAC9B,KAAK,EAAE;MACV,MAAMC,KAAK,GAAG,IAAI,CAACN,OAAO,CAACyB,GAAG,CAACpB,KAAK,CAAC;MACrC,IAAI,CAACC,KAAK,IAAI,CAACA,KAAK,CAAChE,KAAK,CAACpK,MAAM,EAAE;QACjC;MACF;MACA,MAAMoK,KAAK,GAAGgE,KAAK,CAAChE,KAAK;MACzB,IAAIvK,CAAC,GAAGuK,KAAK,CAACpK,MAAM,GAAG,CAAC;MACxB,OAAOH,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;QAClBuK,KAAK,CAACvK,CAAC,CAAC,CAACqQ,MAAM,CAAC,CAAC;MACnB;MACA9B,KAAK,CAAChE,KAAK,GAAG,EAAE;MAChB,IAAI,CAAC8D,OAAO,CAACC,KAAK,EAAEC,KAAK,EAAES,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,UAAU,CAAC;IACpD;IACAqB,MAAMA,CAAChC,KAAK,EAAE;MACZ,OAAO,IAAI,CAACL,OAAO,CAACsC,MAAM,CAACjC,KAAK,CAAC;IACnC;EACF;EACA,IAAIkC,QAAQ,GAAG,IAAI1C,QAAQ,CAAC,CAAC;;EAE7B;AACA;AACA;AACA;AACA;AACA;EACA,SAAS3I,KAAKA,CAAC3C,CAAC,EAAE;IAChB,OAAOA,CAAC,GAAG,GAAG,GAAG,CAAC;EACpB;EACA,MAAMiO,GAAG,GAAGA,CAACjO,CAAC,EAAEkO,CAAC,EAAEC,CAAC,KAAKtM,IAAI,CAACqC,GAAG,CAACrC,IAAI,CAACoC,GAAG,CAACjE,CAAC,EAAEmO,CAAC,CAAC,EAAED,CAAC,CAAC;EACpD,SAASE,GAAGA,CAACpO,CAAC,EAAE;IACd,OAAOiO,GAAG,CAACtL,KAAK,CAAC3C,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;EACrC;EACA,SAASqO,GAAGA,CAACrO,CAAC,EAAE;IACd,OAAOiO,GAAG,CAACtL,KAAK,CAAC3C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;EACpC;EACA,SAASsO,GAAGA,CAACtO,CAAC,EAAE;IACd,OAAOiO,GAAG,CAACtL,KAAK,CAAC3C,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;EACzC;EACA,SAASuO,GAAGA,CAACvO,CAAC,EAAE;IACd,OAAOiO,GAAG,CAACtL,KAAK,CAAC3C,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;EACpC;EACA,MAAMwO,KAAK,GAAG;IAAC,CAAC,EAAE,CAAC;IAAE,CAAC,EAAE,CAAC;IAAE,CAAC,EAAE,CAAC;IAAE,CAAC,EAAE,CAAC;IAAE,CAAC,EAAE,CAAC;IAAE,CAAC,EAAE,CAAC;IAAE,CAAC,EAAE,CAAC;IAAE,CAAC,EAAE,CAAC;IAAE,CAAC,EAAE,CAAC;IAAE,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE,EAAE;IAAEzN,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE,EAAE;IAAEyN,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE,EAAE;IAAErN,CAAC,EAAE,EAAE;IAAEsN,CAAC,EAAE;EAAE,CAAC;EAC9J,MAAMC,GAAG,GAAG,CAAC,GAAG,kBAAkB,CAAC;EACnC,MAAMC,EAAE,GAAG7N,CAAC,IAAI4N,GAAG,CAAC5N,CAAC,GAAG,GAAG,CAAC;EAC5B,MAAM8N,EAAE,GAAG9N,CAAC,IAAI4N,GAAG,CAAC,CAAC5N,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,GAAG4N,GAAG,CAAC5N,CAAC,GAAG,GAAG,CAAC;EACnD,MAAM+N,EAAE,GAAG/N,CAAC,IAAK,CAACA,CAAC,GAAG,IAAI,KAAK,CAAC,MAAOA,CAAC,GAAG,GAAG,CAAC;EAC/C,MAAMgO,OAAO,GAAGtP,CAAC,IAAIqP,EAAE,CAACrP,CAAC,CAACuP,CAAC,CAAC,IAAIF,EAAE,CAACrP,CAAC,CAACwP,CAAC,CAAC,IAAIH,EAAE,CAACrP,CAAC,CAACsB,CAAC,CAAC,IAAI+N,EAAE,CAACrP,CAAC,CAACqB,CAAC,CAAC;EAC7D,SAASoO,QAAQA,CAAC1O,GAAG,EAAE;IACrB,IAAItD,GAAG,GAAGsD,GAAG,CAACpD,MAAM;IACpB,IAAI+R,GAAG;IACP,IAAI3O,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;MAClB,IAAItD,GAAG,KAAK,CAAC,IAAIA,GAAG,KAAK,CAAC,EAAE;QAC1BiS,GAAG,GAAG;UACJH,CAAC,EAAE,GAAG,GAAGf,KAAK,CAACzN,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;UAC3ByO,CAAC,EAAE,GAAG,GAAGhB,KAAK,CAACzN,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;UAC3BO,CAAC,EAAE,GAAG,GAAGkN,KAAK,CAACzN,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;UAC3BM,CAAC,EAAE5D,GAAG,KAAK,CAAC,GAAG+Q,KAAK,CAACzN,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG;QACtC,CAAC;MACH,CAAC,MAAM,IAAItD,GAAG,KAAK,CAAC,IAAIA,GAAG,KAAK,CAAC,EAAE;QACjCiS,GAAG,GAAG;UACJH,CAAC,EAAEf,KAAK,CAACzN,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAGyN,KAAK,CAACzN,GAAG,CAAC,CAAC,CAAC,CAAC;UACrCyO,CAAC,EAAEhB,KAAK,CAACzN,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAGyN,KAAK,CAACzN,GAAG,CAAC,CAAC,CAAC,CAAC;UACrCO,CAAC,EAAEkN,KAAK,CAACzN,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAGyN,KAAK,CAACzN,GAAG,CAAC,CAAC,CAAC,CAAC;UACrCM,CAAC,EAAE5D,GAAG,KAAK,CAAC,GAAI+Q,KAAK,CAACzN,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAGyN,KAAK,CAACzN,GAAG,CAAC,CAAC,CAAC,CAAC,GAAI;QACxD,CAAC;MACH;IACF;IACA,OAAO2O,GAAG;EACZ;EACA,MAAMC,KAAK,GAAGA,CAACtO,CAAC,EAAE4N,CAAC,KAAK5N,CAAC,GAAG,GAAG,GAAG4N,CAAC,CAAC5N,CAAC,CAAC,GAAG,EAAE;EAC3C,SAASuO,SAASA,CAAC5P,CAAC,EAAE;IACpB,IAAIiP,CAAC,GAAGK,OAAO,CAACtP,CAAC,CAAC,GAAGmP,EAAE,GAAGC,EAAE;IAC5B,OAAOpP,CAAC,GACJ,GAAG,GAAGiP,CAAC,CAACjP,CAAC,CAACuP,CAAC,CAAC,GAAGN,CAAC,CAACjP,CAAC,CAACwP,CAAC,CAAC,GAAGP,CAAC,CAACjP,CAAC,CAACsB,CAAC,CAAC,GAAGqO,KAAK,CAAC3P,CAAC,CAACqB,CAAC,EAAE4N,CAAC,CAAC,GAC9CrP,SAAS;EACf;EACA,MAAMiQ,MAAM,GAAG,8GAA8G;EAC7H,SAASC,QAAQA,CAAC3B,CAAC,EAAExI,CAAC,EAAEuI,CAAC,EAAE;IACzB,MAAM7M,CAAC,GAAGsE,CAAC,GAAG9D,IAAI,CAACoC,GAAG,CAACiK,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC;IAChC,MAAMe,CAAC,GAAGA,CAACzL,CAAC,EAAE9E,CAAC,GAAG,CAAC8E,CAAC,GAAG2K,CAAC,GAAG,EAAE,IAAI,EAAE,KAAKD,CAAC,GAAG7M,CAAC,GAAGQ,IAAI,CAACqC,GAAG,CAACrC,IAAI,CAACoC,GAAG,CAACvF,CAAC,GAAG,CAAC,EAAE,CAAC,GAAGA,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACvF,OAAO,CAACuQ,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3B;EACA,SAASc,QAAQA,CAAC5B,CAAC,EAAExI,CAAC,EAAE3F,CAAC,EAAE;IACzB,MAAMiP,CAAC,GAAGA,CAACzL,CAAC,EAAE9E,CAAC,GAAG,CAAC8E,CAAC,GAAG2K,CAAC,GAAG,EAAE,IAAI,CAAC,KAAKnO,CAAC,GAAGA,CAAC,GAAG2F,CAAC,GAAG9D,IAAI,CAACqC,GAAG,CAACrC,IAAI,CAACoC,GAAG,CAACvF,CAAC,EAAE,CAAC,GAAGA,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrF,OAAO,CAACuQ,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3B;EACA,SAASe,QAAQA,CAAC7B,CAAC,EAAE8B,CAAC,EAAE3O,CAAC,EAAE;IACzB,MAAM4O,GAAG,GAAGJ,QAAQ,CAAC3B,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;IAC/B,IAAI3Q,CAAC;IACL,IAAIyS,CAAC,GAAG3O,CAAC,GAAG,CAAC,EAAE;MACb9D,CAAC,GAAG,CAAC,IAAIyS,CAAC,GAAG3O,CAAC,CAAC;MACf2O,CAAC,IAAIzS,CAAC;MACN8D,CAAC,IAAI9D,CAAC;IACR;IACA,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MACtB0S,GAAG,CAAC1S,CAAC,CAAC,IAAI,CAAC,GAAGyS,CAAC,GAAG3O,CAAC;MACnB4O,GAAG,CAAC1S,CAAC,CAAC,IAAIyS,CAAC;IACb;IACA,OAAOC,GAAG;EACZ;EACA,SAASC,QAAQA,CAACZ,CAAC,EAAEC,CAAC,EAAElO,CAAC,EAAE0N,CAAC,EAAE9K,GAAG,EAAE;IACjC,IAAIqL,CAAC,KAAKrL,GAAG,EAAE;MACb,OAAQ,CAACsL,CAAC,GAAGlO,CAAC,IAAI0N,CAAC,IAAKQ,CAAC,GAAGlO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACxC;IACA,IAAIkO,CAAC,KAAKtL,GAAG,EAAE;MACb,OAAO,CAAC5C,CAAC,GAAGiO,CAAC,IAAIP,CAAC,GAAG,CAAC;IACxB;IACA,OAAO,CAACO,CAAC,GAAGC,CAAC,IAAIR,CAAC,GAAG,CAAC;EACxB;EACA,SAASoB,OAAOA,CAACpQ,CAAC,EAAE;IAClB,MAAMyC,KAAK,GAAG,GAAG;IACjB,MAAM8M,CAAC,GAAGvP,CAAC,CAACuP,CAAC,GAAG9M,KAAK;IACrB,MAAM+M,CAAC,GAAGxP,CAAC,CAACwP,CAAC,GAAG/M,KAAK;IACrB,MAAMnB,CAAC,GAAGtB,CAAC,CAACsB,CAAC,GAAGmB,KAAK;IACrB,MAAMyB,GAAG,GAAGrC,IAAI,CAACqC,GAAG,CAACqL,CAAC,EAAEC,CAAC,EAAElO,CAAC,CAAC;IAC7B,MAAM2C,GAAG,GAAGpC,IAAI,CAACoC,GAAG,CAACsL,CAAC,EAAEC,CAAC,EAAElO,CAAC,CAAC;IAC7B,MAAM4M,CAAC,GAAG,CAAChK,GAAG,GAAGD,GAAG,IAAI,CAAC;IACzB,IAAIkK,CAAC,EAAExI,CAAC,EAAEqJ,CAAC;IACX,IAAI9K,GAAG,KAAKD,GAAG,EAAE;MACf+K,CAAC,GAAG9K,GAAG,GAAGD,GAAG;MACb0B,CAAC,GAAGuI,CAAC,GAAG,GAAG,GAAGc,CAAC,IAAI,CAAC,GAAG9K,GAAG,GAAGD,GAAG,CAAC,GAAG+K,CAAC,IAAI9K,GAAG,GAAGD,GAAG,CAAC;MACnDkK,CAAC,GAAGgC,QAAQ,CAACZ,CAAC,EAAEC,CAAC,EAAElO,CAAC,EAAE0N,CAAC,EAAE9K,GAAG,CAAC;MAC7BiK,CAAC,GAAGA,CAAC,GAAG,EAAE,GAAG,GAAG;IAClB;IACA,OAAO,CAACA,CAAC,GAAG,CAAC,EAAExI,CAAC,IAAI,CAAC,EAAEuI,CAAC,CAAC;EAC3B;EACA,SAASmC,KAAKA,CAACpB,CAAC,EAAE5N,CAAC,EAAEC,CAAC,EAAEyN,CAAC,EAAE;IACzB,OAAO,CACLlT,KAAK,CAACD,OAAO,CAACyF,CAAC,CAAC,GACZ4N,CAAC,CAAC5N,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,CAAC,GACnB4N,CAAC,CAAC5N,CAAC,EAAEC,CAAC,EAAEyN,CAAC,CAAC,EACdzQ,GAAG,CAAC+P,GAAG,CAAC;EACZ;EACA,SAASiC,OAAOA,CAACnC,CAAC,EAAExI,CAAC,EAAEuI,CAAC,EAAE;IACxB,OAAOmC,KAAK,CAACP,QAAQ,EAAE3B,CAAC,EAAExI,CAAC,EAAEuI,CAAC,CAAC;EACjC;EACA,SAASqC,OAAOA,CAACpC,CAAC,EAAE8B,CAAC,EAAE3O,CAAC,EAAE;IACxB,OAAO+O,KAAK,CAACL,QAAQ,EAAE7B,CAAC,EAAE8B,CAAC,EAAE3O,CAAC,CAAC;EACjC;EACA,SAASkP,OAAOA,CAACrC,CAAC,EAAExI,CAAC,EAAE3F,CAAC,EAAE;IACxB,OAAOqQ,KAAK,CAACN,QAAQ,EAAE5B,CAAC,EAAExI,CAAC,EAAE3F,CAAC,CAAC;EACjC;EACA,SAASyQ,GAAGA,CAACtC,CAAC,EAAE;IACd,OAAO,CAACA,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG;EAC9B;EACA,SAASuC,QAAQA,CAAC3P,GAAG,EAAE;IACrB,MAAM4P,CAAC,GAAGd,MAAM,CAACe,IAAI,CAAC7P,GAAG,CAAC;IAC1B,IAAIM,CAAC,GAAG,GAAG;IACX,IAAIrB,CAAC;IACL,IAAI,CAAC2Q,CAAC,EAAE;MACN;IACF;IACA,IAAIA,CAAC,CAAC,CAAC,CAAC,KAAK3Q,CAAC,EAAE;MACdqB,CAAC,GAAGsP,CAAC,CAAC,CAAC,CAAC,GAAGvC,GAAG,CAAC,CAACuC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGtC,GAAG,CAAC,CAACsC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC;IACA,MAAMxC,CAAC,GAAGsC,GAAG,CAAC,CAACE,CAAC,CAAC,CAAC,CAAC,CAAC;IACpB,MAAME,EAAE,GAAG,CAACF,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;IACtB,MAAMG,EAAE,GAAG,CAACH,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;IACtB,IAAIA,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE;MAClB3Q,CAAC,GAAGuQ,OAAO,CAACpC,CAAC,EAAE0C,EAAE,EAAEC,EAAE,CAAC;IACxB,CAAC,MAAM,IAAIH,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE;MACzB3Q,CAAC,GAAGwQ,OAAO,CAACrC,CAAC,EAAE0C,EAAE,EAAEC,EAAE,CAAC;IACxB,CAAC,MAAM;MACL9Q,CAAC,GAAGsQ,OAAO,CAACnC,CAAC,EAAE0C,EAAE,EAAEC,EAAE,CAAC;IACxB;IACA,OAAO;MACLvB,CAAC,EAAEvP,CAAC,CAAC,CAAC,CAAC;MACPwP,CAAC,EAAExP,CAAC,CAAC,CAAC,CAAC;MACPsB,CAAC,EAAEtB,CAAC,CAAC,CAAC,CAAC;MACPqB,CAAC,EAAEA;IACL,CAAC;EACH;EACA,SAAS0P,MAAMA,CAAC/Q,CAAC,EAAEgR,GAAG,EAAE;IACtB,IAAI7C,CAAC,GAAGiC,OAAO,CAACpQ,CAAC,CAAC;IAClBmO,CAAC,CAAC,CAAC,CAAC,GAAGsC,GAAG,CAACtC,CAAC,CAAC,CAAC,CAAC,GAAG6C,GAAG,CAAC;IACtB7C,CAAC,GAAGmC,OAAO,CAACnC,CAAC,CAAC;IACdnO,CAAC,CAACuP,CAAC,GAAGpB,CAAC,CAAC,CAAC,CAAC;IACVnO,CAAC,CAACwP,CAAC,GAAGrB,CAAC,CAAC,CAAC,CAAC;IACVnO,CAAC,CAACsB,CAAC,GAAG6M,CAAC,CAAC,CAAC,CAAC;EACZ;EACA,SAAS8C,SAASA,CAACjR,CAAC,EAAE;IACpB,IAAI,CAACA,CAAC,EAAE;MACN;IACF;IACA,MAAMqB,CAAC,GAAG+O,OAAO,CAACpQ,CAAC,CAAC;IACpB,MAAMmO,CAAC,GAAG9M,CAAC,CAAC,CAAC,CAAC;IACd,MAAMsE,CAAC,GAAG4I,GAAG,CAAClN,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,MAAM6M,CAAC,GAAGK,GAAG,CAAClN,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,OAAOrB,CAAC,CAACqB,CAAC,GAAG,GAAG,GACX,QAAO8M,CAAE,KAAIxI,CAAE,MAAKuI,CAAE,MAAKI,GAAG,CAACtO,CAAC,CAACqB,CAAC,CAAE,GAAE,GACtC,OAAM8M,CAAE,KAAIxI,CAAE,MAAKuI,CAAE,IAAG;EAC/B;EACA,MAAMgD,KAAK,GAAG;IACZjR,CAAC,EAAE,MAAM;IACTkR,CAAC,EAAE,OAAO;IACVC,CAAC,EAAE,IAAI;IACPC,CAAC,EAAE,KAAK;IACRC,CAAC,EAAE,IAAI;IACPC,CAAC,EAAE,QAAQ;IACXC,CAAC,EAAE,OAAO;IACV/C,CAAC,EAAE,IAAI;IACPgD,CAAC,EAAE,IAAI;IACPC,CAAC,EAAE,IAAI;IACPhD,CAAC,EAAE,IAAI;IACPC,CAAC,EAAE,OAAO;IACVC,CAAC,EAAE,OAAO;IACV+C,CAAC,EAAE,IAAI;IACPC,CAAC,EAAE,UAAU;IACb/C,CAAC,EAAE,IAAI;IACPgD,CAAC,EAAE,IAAI;IACPC,CAAC,EAAE,IAAI;IACPC,CAAC,EAAE,IAAI;IACPC,CAAC,EAAE,IAAI;IACPC,CAAC,EAAE,OAAO;IACVnD,CAAC,EAAE,IAAI;IACPoD,CAAC,EAAE,IAAI;IACPC,CAAC,EAAE,MAAM;IACTC,CAAC,EAAE,IAAI;IACPC,CAAC,EAAE,OAAO;IACVC,CAAC,EAAE;EACL,CAAC;EACD,MAAMC,OAAO,GAAG;IACdC,MAAM,EAAE,QAAQ;IAChBC,WAAW,EAAE,QAAQ;IACrBC,IAAI,EAAE,MAAM;IACZC,SAAS,EAAE,QAAQ;IACnBC,IAAI,EAAE,QAAQ;IACdC,KAAK,EAAE,QAAQ;IACfC,MAAM,EAAE,QAAQ;IAChBC,KAAK,EAAE,GAAG;IACVC,YAAY,EAAE,QAAQ;IACtBC,EAAE,EAAE,IAAI;IACRC,OAAO,EAAE,QAAQ;IACjBC,IAAI,EAAE,QAAQ;IACdC,SAAS,EAAE,QAAQ;IACnBC,MAAM,EAAE,QAAQ;IAChBC,QAAQ,EAAE,QAAQ;IAClBC,OAAO,EAAE,QAAQ;IACjBC,GAAG,EAAE,QAAQ;IACbC,WAAW,EAAE,QAAQ;IACrBC,OAAO,EAAE,QAAQ;IACjBC,OAAO,EAAE,QAAQ;IACjBC,IAAI,EAAE,MAAM;IACZC,GAAG,EAAE,IAAI;IACTC,KAAK,EAAE,MAAM;IACbC,OAAO,EAAE,QAAQ;IACjBC,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE,MAAM;IACZC,IAAI,EAAE,QAAQ;IACdC,MAAM,EAAE,QAAQ;IAChBC,OAAO,EAAE,QAAQ;IACjBC,QAAQ,EAAE,QAAQ;IAClBC,MAAM,EAAE,QAAQ;IAChBC,KAAK,EAAE,QAAQ;IACfC,GAAG,EAAE,QAAQ;IACbC,MAAM,EAAE,QAAQ;IAChBC,MAAM,EAAE,QAAQ;IAChBC,IAAI,EAAE,QAAQ;IACdC,KAAK,EAAE,QAAQ;IACfC,KAAK,EAAE,QAAQ;IACfC,GAAG,EAAE,MAAM;IACXC,MAAM,EAAE,QAAQ;IAChBC,MAAM,EAAE,QAAQ;IAChBC,QAAQ,EAAE,MAAM;IAChBC,MAAM,EAAE,QAAQ;IAChBC,MAAM,EAAE,QAAQ;IAChBC,QAAQ,EAAE,QAAQ;IAClBC,QAAQ,EAAE,QAAQ;IAClBC,QAAQ,EAAE,QAAQ;IAClBC,QAAQ,EAAE,QAAQ;IAClBC,MAAM,EAAE,QAAQ;IAChBC,OAAO,EAAE,QAAQ;IACjBC,SAAS,EAAE,QAAQ;IACnBC,GAAG,EAAE,QAAQ;IACbC,MAAM,EAAE,QAAQ;IAChBC,GAAG,EAAE,QAAQ;IACbC,GAAG,EAAE,MAAM;IACXC,KAAK,EAAE,QAAQ;IACfC,GAAG,EAAE,QAAQ;IACbC,OAAO,EAAE,QAAQ;IACjBC,MAAM,EAAE,QAAQ;IAChBC,OAAO,EAAE,QAAQ;IACjBC,KAAK,EAAE,QAAQ;IACfC,IAAI,EAAE,QAAQ;IACdC,KAAK,EAAE,QAAQ;IACfC,MAAM,EAAE,QAAQ;IAChBC,SAAS,EAAE,QAAQ;IACnBC,OAAO,EAAE,QAAQ;IACjBC,UAAU,EAAE,QAAQ;IACpBC,GAAG,EAAE,QAAQ;IACbC,IAAI,EAAE,QAAQ;IACdC,KAAK,EAAE,QAAQ;IACfC,SAAS,EAAE,QAAQ;IACnBC,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE,QAAQ;IACdC,MAAM,EAAE,QAAQ;IAChBC,MAAM,EAAE,QAAQ;IAChBC,MAAM,EAAE,QAAQ;IAChBC,KAAK,EAAE,QAAQ;IACfC,KAAK,EAAE,QAAQ;IACfC,OAAO,EAAE,QAAQ;IACjBC,GAAG,EAAE,QAAQ;IACbC,IAAI,EAAE,MAAM;IACZC,OAAO,EAAE,QAAQ;IACjBC,GAAG,EAAE,QAAQ;IACbC,MAAM,EAAE,QAAQ;IAChBC,KAAK,EAAE,QAAQ;IACfC,UAAU,EAAE,QAAQ;IACpBC,GAAG,EAAE,IAAI;IACTC,KAAK,EAAE,QAAQ;IACfC,MAAM,EAAE,QAAQ;IAChBC,MAAM,EAAE,QAAQ;IAChBC,IAAI,EAAE,QAAQ;IACdC,SAAS,EAAE,MAAM;IACjBC,GAAG,EAAE,QAAQ;IACbC,QAAQ,EAAE,QAAQ;IAClBC,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAE,QAAQ;IACjBC,QAAQ,EAAE,QAAQ;IAClBC,OAAO,EAAE,QAAQ;IACjBC,UAAU,EAAE,QAAQ;IACpBC,IAAI,EAAE,IAAI;IACVC,MAAM,EAAE,QAAQ;IAChBC,IAAI,EAAE,QAAQ;IACdC,OAAO,EAAE,QAAQ;IACjBC,KAAK,EAAE,QAAQ;IACfC,OAAO,EAAE,QAAQ;IACjBC,IAAI,EAAE,QAAQ;IACdC,SAAS,EAAE,QAAQ;IACnBC,MAAM,EAAE,QAAQ;IAChBC,KAAK,EAAE,QAAQ;IACfC,UAAU,EAAE,QAAQ;IACpBC,SAAS,EAAE,QAAQ;IACnBC,OAAO,EAAE,QAAQ;IACjBC,IAAI,EAAE,QAAQ;IACdC,GAAG,EAAE,QAAQ;IACbC,IAAI,EAAE,QAAQ;IACdC,OAAO,EAAE,QAAQ;IACjBC,KAAK,EAAE,QAAQ;IACfC,WAAW,EAAE,QAAQ;IACrBC,EAAE,EAAE,QAAQ;IACZC,QAAQ,EAAE,QAAQ;IAClBC,KAAK,EAAE,QAAQ;IACfC,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAE,QAAQ;IACfC,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAE,QAAQ;IACfC,OAAO,EAAE,QAAQ;IACjBC,KAAK,EAAE,QAAQ;IACfC,MAAM,EAAE,QAAQ;IAChBC,KAAK,EAAE,QAAQ;IACfC,GAAG,EAAE,QAAQ;IACbC,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE,QAAQ;IACdC,QAAQ,EAAE,MAAM;IAChBC,MAAM,EAAE,QAAQ;IAChBC,GAAG,EAAE,QAAQ;IACbC,GAAG,EAAE,MAAM;IACXC,KAAK,EAAE,QAAQ;IACfC,MAAM,EAAE,QAAQ;IAChBC,EAAE,EAAE,QAAQ;IACZC,KAAK,EAAE,QAAQ;IACfC,GAAG,EAAE,QAAQ;IACbC,IAAI,EAAE,QAAQ;IACdC,SAAS,EAAE,QAAQ;IACnBC,EAAE,EAAE,QAAQ;IACZC,KAAK,EAAE;EACT,CAAC;EACD,SAASC,MAAMA,CAAA,EAAG;IAChB,MAAMC,QAAQ,GAAG,CAAC,CAAC;IACnB,MAAMne,IAAI,GAAG3B,MAAM,CAAC2B,IAAI,CAAC6U,OAAO,CAAC;IACjC,MAAMuJ,KAAK,GAAG/f,MAAM,CAAC2B,IAAI,CAACwT,KAAK,CAAC;IAChC,IAAI1T,CAAC,EAAEue,CAAC,EAAErd,CAAC,EAAEsd,EAAE,EAAEC,EAAE;IACnB,KAAKze,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGE,IAAI,CAACC,MAAM,EAAEH,CAAC,EAAE,EAAE;MAChCwe,EAAE,GAAGC,EAAE,GAAGve,IAAI,CAACF,CAAC,CAAC;MACjB,KAAKue,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,CAACne,MAAM,EAAEoe,CAAC,EAAE,EAAE;QACjCrd,CAAC,GAAGod,KAAK,CAACC,CAAC,CAAC;QACZE,EAAE,GAAGA,EAAE,CAACC,OAAO,CAACxd,CAAC,EAAEwS,KAAK,CAACxS,CAAC,CAAC,CAAC;MAC9B;MACAA,CAAC,GAAGyd,QAAQ,CAAC5J,OAAO,CAACyJ,EAAE,CAAC,EAAE,EAAE,CAAC;MAC7BH,QAAQ,CAACI,EAAE,CAAC,GAAG,CAACvd,CAAC,IAAI,EAAE,GAAG,IAAI,EAAEA,CAAC,IAAI,CAAC,GAAG,IAAI,EAAEA,CAAC,GAAG,IAAI,CAAC;IAC1D;IACA,OAAOmd,QAAQ;EACjB;EACA,IAAIO,KAAK;EACT,SAASC,SAASA,CAACtb,GAAG,EAAE;IACtB,IAAI,CAACqb,KAAK,EAAE;MACVA,KAAK,GAAGR,MAAM,CAAC,CAAC;MAChBQ,KAAK,CAACE,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAClC;IACA,MAAMjb,CAAC,GAAG+a,KAAK,CAACrb,GAAG,CAACwb,WAAW,CAAC,CAAC,CAAC;IAClC,OAAOlb,CAAC,IAAI;MACVkO,CAAC,EAAElO,CAAC,CAAC,CAAC,CAAC;MACPmO,CAAC,EAAEnO,CAAC,CAAC,CAAC,CAAC;MACPC,CAAC,EAAED,CAAC,CAAC,CAAC,CAAC;MACPA,CAAC,EAAEA,CAAC,CAAC1D,MAAM,KAAK,CAAC,GAAG0D,CAAC,CAAC,CAAC,CAAC,GAAG;IAC7B,CAAC;EACH;EACA,MAAMmb,MAAM,GAAG,sGAAsG;EACrH,SAASC,QAAQA,CAAC1b,GAAG,EAAE;IACrB,MAAM4P,CAAC,GAAG6L,MAAM,CAAC5L,IAAI,CAAC7P,GAAG,CAAC;IAC1B,IAAIM,CAAC,GAAG,GAAG;IACX,IAAIkO,CAAC,EAAEC,CAAC,EAAElO,CAAC;IACX,IAAI,CAACqP,CAAC,EAAE;MACN;IACF;IACA,IAAIA,CAAC,CAAC,CAAC,CAAC,KAAKpB,CAAC,EAAE;MACd,MAAMvP,CAAC,GAAG,CAAC2Q,CAAC,CAAC,CAAC,CAAC;MACftP,CAAC,GAAGsP,CAAC,CAAC,CAAC,CAAC,GAAGvC,GAAG,CAACpO,CAAC,CAAC,GAAGiO,GAAG,CAACjO,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC;IAC1C;IACAuP,CAAC,GAAG,CAACoB,CAAC,CAAC,CAAC,CAAC;IACTnB,CAAC,GAAG,CAACmB,CAAC,CAAC,CAAC,CAAC;IACTrP,CAAC,GAAG,CAACqP,CAAC,CAAC,CAAC,CAAC;IACTpB,CAAC,GAAG,GAAG,IAAIoB,CAAC,CAAC,CAAC,CAAC,GAAGvC,GAAG,CAACmB,CAAC,CAAC,GAAGtB,GAAG,CAACsB,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;IAC1CC,CAAC,GAAG,GAAG,IAAImB,CAAC,CAAC,CAAC,CAAC,GAAGvC,GAAG,CAACoB,CAAC,CAAC,GAAGvB,GAAG,CAACuB,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;IAC1ClO,CAAC,GAAG,GAAG,IAAIqP,CAAC,CAAC,CAAC,CAAC,GAAGvC,GAAG,CAAC9M,CAAC,CAAC,GAAG2M,GAAG,CAAC3M,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;IAC1C,OAAO;MACLiO,CAAC,EAAEA,CAAC;MACJC,CAAC,EAAEA,CAAC;MACJlO,CAAC,EAAEA,CAAC;MACJD,CAAC,EAAEA;IACL,CAAC;EACH;EACA,SAASqb,SAASA,CAAC1c,CAAC,EAAE;IACpB,OAAOA,CAAC,KACNA,CAAC,CAACqB,CAAC,GAAG,GAAG,GACJ,QAAOrB,CAAC,CAACuP,CAAE,KAAIvP,CAAC,CAACwP,CAAE,KAAIxP,CAAC,CAACsB,CAAE,KAAIgN,GAAG,CAACtO,CAAC,CAACqB,CAAC,CAAE,GAAE,GAC1C,OAAMrB,CAAC,CAACuP,CAAE,KAAIvP,CAAC,CAACwP,CAAE,KAAIxP,CAAC,CAACsB,CAAE,GAAE,CAClC;EACH;EACA,MAAMqb,EAAE,GAAG3c,CAAC,IAAIA,CAAC,IAAI,SAAS,GAAGA,CAAC,GAAG,KAAK,GAAG6B,IAAI,CAACiB,GAAG,CAAC9C,CAAC,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,GAAG,KAAK;EACnF,MAAMmI,IAAI,GAAGnI,CAAC,IAAIA,CAAC,IAAI,OAAO,GAAGA,CAAC,GAAG,KAAK,GAAG6B,IAAI,CAACiB,GAAG,CAAC,CAAC9C,CAAC,GAAG,KAAK,IAAI,KAAK,EAAE,GAAG,CAAC;EAC/E,SAAS4c,aAAaA,CAACC,IAAI,EAAEC,IAAI,EAAEC,CAAC,EAAE;IACpC,MAAMxN,CAAC,GAAGpH,IAAI,CAACmG,GAAG,CAACuO,IAAI,CAACtN,CAAC,CAAC,CAAC;IAC3B,MAAMC,CAAC,GAAGrH,IAAI,CAACmG,GAAG,CAACuO,IAAI,CAACrN,CAAC,CAAC,CAAC;IAC3B,MAAMlO,CAAC,GAAG6G,IAAI,CAACmG,GAAG,CAACuO,IAAI,CAACvb,CAAC,CAAC,CAAC;IAC3B,OAAO;MACLiO,CAAC,EAAElB,GAAG,CAACsO,EAAE,CAACpN,CAAC,GAAGwN,CAAC,IAAI5U,IAAI,CAACmG,GAAG,CAACwO,IAAI,CAACvN,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC;MAC3CC,CAAC,EAAEnB,GAAG,CAACsO,EAAE,CAACnN,CAAC,GAAGuN,CAAC,IAAI5U,IAAI,CAACmG,GAAG,CAACwO,IAAI,CAACtN,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC;MAC3ClO,CAAC,EAAE+M,GAAG,CAACsO,EAAE,CAACrb,CAAC,GAAGyb,CAAC,IAAI5U,IAAI,CAACmG,GAAG,CAACwO,IAAI,CAACxb,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC;MAC3CD,CAAC,EAAEwb,IAAI,CAACxb,CAAC,GAAG0b,CAAC,IAAID,IAAI,CAACzb,CAAC,GAAGwb,IAAI,CAACxb,CAAC;IAClC,CAAC;EACH;EACA,SAAS2b,MAAMA,CAAChd,CAAC,EAAExC,CAAC,EAAEyf,KAAK,EAAE;IAC3B,IAAIjd,CAAC,EAAE;MACL,IAAIW,GAAG,GAAGyP,OAAO,CAACpQ,CAAC,CAAC;MACpBW,GAAG,CAACnD,CAAC,CAAC,GAAGqE,IAAI,CAACqC,GAAG,CAAC,CAAC,EAAErC,IAAI,CAACoC,GAAG,CAACtD,GAAG,CAACnD,CAAC,CAAC,GAAGmD,GAAG,CAACnD,CAAC,CAAC,GAAGyf,KAAK,EAAEzf,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;MAC1EmD,GAAG,GAAG2P,OAAO,CAAC3P,GAAG,CAAC;MAClBX,CAAC,CAACuP,CAAC,GAAG5O,GAAG,CAAC,CAAC,CAAC;MACZX,CAAC,CAACwP,CAAC,GAAG7O,GAAG,CAAC,CAAC,CAAC;MACZX,CAAC,CAACsB,CAAC,GAAGX,GAAG,CAAC,CAAC,CAAC;IACd;EACF;EACA,SAASuc,KAAKA,CAACld,CAAC,EAAEmd,KAAK,EAAE;IACvB,OAAOnd,CAAC,GAAGjE,MAAM,CAACsP,MAAM,CAAC8R,KAAK,IAAI,CAAC,CAAC,EAAEnd,CAAC,CAAC,GAAGA,CAAC;EAC9C;EACA,SAASod,UAAUA,CAACC,KAAK,EAAE;IACzB,IAAIrd,CAAC,GAAG;MAACuP,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE,CAAC;MAAElO,CAAC,EAAE,CAAC;MAAED,CAAC,EAAE;IAAG,CAAC;IAClC,IAAIxF,KAAK,CAACD,OAAO,CAACyhB,KAAK,CAAC,EAAE;MACxB,IAAIA,KAAK,CAAC1f,MAAM,IAAI,CAAC,EAAE;QACrBqC,CAAC,GAAG;UAACuP,CAAC,EAAE8N,KAAK,CAAC,CAAC,CAAC;UAAE7N,CAAC,EAAE6N,KAAK,CAAC,CAAC,CAAC;UAAE/b,CAAC,EAAE+b,KAAK,CAAC,CAAC,CAAC;UAAEhc,CAAC,EAAE;QAAG,CAAC;QACnD,IAAIgc,KAAK,CAAC1f,MAAM,GAAG,CAAC,EAAE;UACpBqC,CAAC,CAACqB,CAAC,GAAGgN,GAAG,CAACgP,KAAK,CAAC,CAAC,CAAC,CAAC;QACrB;MACF;IACF,CAAC,MAAM;MACLrd,CAAC,GAAGkd,KAAK,CAACG,KAAK,EAAE;QAAC9N,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE,CAAC;QAAElO,CAAC,EAAE,CAAC;QAAED,CAAC,EAAE;MAAC,CAAC,CAAC;MAC1CrB,CAAC,CAACqB,CAAC,GAAGgN,GAAG,CAACrO,CAAC,CAACqB,CAAC,CAAC;IAChB;IACA,OAAOrB,CAAC;EACV;EACA,SAASsd,aAAaA,CAACvc,GAAG,EAAE;IAC1B,IAAIA,GAAG,CAACC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;MACzB,OAAOyb,QAAQ,CAAC1b,GAAG,CAAC;IACtB;IACA,OAAO2P,QAAQ,CAAC3P,GAAG,CAAC;EACtB;EACA,MAAMwc,KAAK,CAAC;IACVhS,WAAWA,CAAC8R,KAAK,EAAE;MACjB,IAAIA,KAAK,YAAYE,KAAK,EAAE;QAC1B,OAAOF,KAAK;MACd;MACA,MAAMvhB,IAAI,GAAG,OAAOuhB,KAAK;MACzB,IAAIrd,CAAC;MACL,IAAIlE,IAAI,KAAK,QAAQ,EAAE;QACrBkE,CAAC,GAAGod,UAAU,CAACC,KAAK,CAAC;MACvB,CAAC,MAAM,IAAIvhB,IAAI,KAAK,QAAQ,EAAE;QAC5BkE,CAAC,GAAGyP,QAAQ,CAAC4N,KAAK,CAAC,IAAIhB,SAAS,CAACgB,KAAK,CAAC,IAAIC,aAAa,CAACD,KAAK,CAAC;MACjE;MACA,IAAI,CAACG,IAAI,GAAGxd,CAAC;MACb,IAAI,CAACyd,MAAM,GAAG,CAAC,CAACzd,CAAC;IACnB;IACA,IAAI0d,KAAKA,CAAA,EAAG;MACV,OAAO,IAAI,CAACD,MAAM;IACpB;IACA,IAAIvN,GAAGA,CAAA,EAAG;MACR,IAAIlQ,CAAC,GAAGkd,KAAK,CAAC,IAAI,CAACM,IAAI,CAAC;MACxB,IAAIxd,CAAC,EAAE;QACLA,CAAC,CAACqB,CAAC,GAAGiN,GAAG,CAACtO,CAAC,CAACqB,CAAC,CAAC;MAChB;MACA,OAAOrB,CAAC;IACV;IACA,IAAIkQ,GAAGA,CAAC7P,GAAG,EAAE;MACX,IAAI,CAACmd,IAAI,GAAGJ,UAAU,CAAC/c,GAAG,CAAC;IAC7B;IACAqc,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACe,MAAM,GAAGf,SAAS,CAAC,IAAI,CAACc,IAAI,CAAC,GAAG5d,SAAS;IACvD;IACAgQ,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAAC6N,MAAM,GAAG7N,SAAS,CAAC,IAAI,CAAC4N,IAAI,CAAC,GAAG5d,SAAS;IACvD;IACAqR,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACwM,MAAM,GAAGxM,SAAS,CAAC,IAAI,CAACuM,IAAI,CAAC,GAAG5d,SAAS;IACvD;IACA+d,GAAGA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACjB,IAAID,KAAK,EAAE;QACT,MAAME,EAAE,GAAG,IAAI,CAAC5N,GAAG;QACnB,MAAM6N,EAAE,GAAGH,KAAK,CAAC1N,GAAG;QACpB,IAAI8N,EAAE;QACN,MAAMxZ,CAAC,GAAGqZ,MAAM,KAAKG,EAAE,GAAG,GAAG,GAAGH,MAAM;QACtC,MAAM5N,CAAC,GAAG,CAAC,GAAGzL,CAAC,GAAG,CAAC;QACnB,MAAMnD,CAAC,GAAGyc,EAAE,CAACzc,CAAC,GAAG0c,EAAE,CAAC1c,CAAC;QACrB,MAAM4c,EAAE,GAAG,CAAC,CAAChO,CAAC,GAAG5O,CAAC,KAAK,CAAC,CAAC,GAAG4O,CAAC,GAAG,CAACA,CAAC,GAAG5O,CAAC,KAAK,CAAC,GAAG4O,CAAC,GAAG5O,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG;QACjE2c,EAAE,GAAG,CAAC,GAAGC,EAAE;QACXH,EAAE,CAACvO,CAAC,GAAG,IAAI,GAAG0O,EAAE,GAAGH,EAAE,CAACvO,CAAC,GAAGyO,EAAE,GAAGD,EAAE,CAACxO,CAAC,GAAG,GAAG;QACzCuO,EAAE,CAACtO,CAAC,GAAG,IAAI,GAAGyO,EAAE,GAAGH,EAAE,CAACtO,CAAC,GAAGwO,EAAE,GAAGD,EAAE,CAACvO,CAAC,GAAG,GAAG;QACzCsO,EAAE,CAACxc,CAAC,GAAG,IAAI,GAAG2c,EAAE,GAAGH,EAAE,CAACxc,CAAC,GAAG0c,EAAE,GAAGD,EAAE,CAACzc,CAAC,GAAG,GAAG;QACzCwc,EAAE,CAACzc,CAAC,GAAGmD,CAAC,GAAGsZ,EAAE,CAACzc,CAAC,GAAG,CAAC,CAAC,GAAGmD,CAAC,IAAIuZ,EAAE,CAAC1c,CAAC;QAChC,IAAI,CAAC6O,GAAG,GAAG4N,EAAE;MACf;MACA,OAAO,IAAI;IACb;IACAI,WAAWA,CAACN,KAAK,EAAEb,CAAC,EAAE;MACpB,IAAIa,KAAK,EAAE;QACT,IAAI,CAACJ,IAAI,GAAGZ,aAAa,CAAC,IAAI,CAACY,IAAI,EAAEI,KAAK,CAACJ,IAAI,EAAET,CAAC,CAAC;MACrD;MACA,OAAO,IAAI;IACb;IACAG,KAAKA,CAAA,EAAG;MACN,OAAO,IAAIK,KAAK,CAAC,IAAI,CAACrN,GAAG,CAAC;IAC5B;IACAP,KAAKA,CAACtO,CAAC,EAAE;MACP,IAAI,CAACmc,IAAI,CAACnc,CAAC,GAAGgN,GAAG,CAAChN,CAAC,CAAC;MACpB,OAAO,IAAI;IACb;IACA8c,OAAOA,CAAClB,KAAK,EAAE;MACb,MAAM/M,GAAG,GAAG,IAAI,CAACsN,IAAI;MACrBtN,GAAG,CAAC7O,CAAC,IAAI,CAAC,GAAG4b,KAAK;MAClB,OAAO,IAAI;IACb;IACAmB,SAASA,CAAA,EAAG;MACV,MAAMlO,GAAG,GAAG,IAAI,CAACsN,IAAI;MACrB,MAAMa,GAAG,GAAG1b,KAAK,CAACuN,GAAG,CAACX,CAAC,GAAG,GAAG,GAAGW,GAAG,CAACV,CAAC,GAAG,IAAI,GAAGU,GAAG,CAAC5O,CAAC,GAAG,IAAI,CAAC;MAC5D4O,GAAG,CAACX,CAAC,GAAGW,GAAG,CAACV,CAAC,GAAGU,GAAG,CAAC5O,CAAC,GAAG+c,GAAG;MAC3B,OAAO,IAAI;IACb;IACAC,OAAOA,CAACrB,KAAK,EAAE;MACb,MAAM/M,GAAG,GAAG,IAAI,CAACsN,IAAI;MACrBtN,GAAG,CAAC7O,CAAC,IAAI,CAAC,GAAG4b,KAAK;MAClB,OAAO,IAAI;IACb;IACAsB,MAAMA,CAAA,EAAG;MACP,MAAMve,CAAC,GAAG,IAAI,CAACwd,IAAI;MACnBxd,CAAC,CAACuP,CAAC,GAAG,GAAG,GAAGvP,CAAC,CAACuP,CAAC;MACfvP,CAAC,CAACwP,CAAC,GAAG,GAAG,GAAGxP,CAAC,CAACwP,CAAC;MACfxP,CAAC,CAACsB,CAAC,GAAG,GAAG,GAAGtB,CAAC,CAACsB,CAAC;MACf,OAAO,IAAI;IACb;IACAkd,OAAOA,CAACvB,KAAK,EAAE;MACbD,MAAM,CAAC,IAAI,CAACQ,IAAI,EAAE,CAAC,EAAEP,KAAK,CAAC;MAC3B,OAAO,IAAI;IACb;IACAwB,MAAMA,CAACxB,KAAK,EAAE;MACZD,MAAM,CAAC,IAAI,CAACQ,IAAI,EAAE,CAAC,EAAE,CAACP,KAAK,CAAC;MAC5B,OAAO,IAAI;IACb;IACAyB,QAAQA,CAACzB,KAAK,EAAE;MACdD,MAAM,CAAC,IAAI,CAACQ,IAAI,EAAE,CAAC,EAAEP,KAAK,CAAC;MAC3B,OAAO,IAAI;IACb;IACA0B,UAAUA,CAAC1B,KAAK,EAAE;MAChBD,MAAM,CAAC,IAAI,CAACQ,IAAI,EAAE,CAAC,EAAE,CAACP,KAAK,CAAC;MAC5B,OAAO,IAAI;IACb;IACAlM,MAAMA,CAACC,GAAG,EAAE;MACVD,MAAM,CAAC,IAAI,CAACyM,IAAI,EAAExM,GAAG,CAAC;MACtB,OAAO,IAAI;IACb;EACF;EACA,SAAS4N,SAASA,CAACvB,KAAK,EAAE;IACxB,OAAO,IAAIE,KAAK,CAACF,KAAK,CAAC;EACzB;EAEA,SAASwB,mBAAmBA,CAACljB,KAAK,EAAE;IAClC,IAAIA,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MACtC,MAAMG,IAAI,GAAGH,KAAK,CAACM,QAAQ,CAAC,CAAC;MAC7B,OAAOH,IAAI,KAAK,wBAAwB,IAAIA,IAAI,KAAK,yBAAyB;IAChF;IACA,OAAO,KAAK;EACd;EACA,SAAS8hB,KAAKA,CAACjiB,KAAK,EAAE;IACpB,OAAOkjB,mBAAmB,CAACljB,KAAK,CAAC,GAAGA,KAAK,GAAGijB,SAAS,CAACjjB,KAAK,CAAC;EAC9D;EACA,SAASmjB,aAAaA,CAACnjB,KAAK,EAAE;IAC5B,OAAOkjB,mBAAmB,CAACljB,KAAK,CAAC,GAC7BA,KAAK,GACLijB,SAAS,CAACjjB,KAAK,CAAC,CAAC+iB,QAAQ,CAAC,GAAG,CAAC,CAACD,MAAM,CAAC,GAAG,CAAC,CAAC7O,SAAS,CAAC,CAAC;EAC5D;EAEA,MAAMmP,SAAS,GAAGhjB,MAAM,CAACyC,MAAM,CAAC,IAAI,CAAC;EACrC,MAAMwgB,WAAW,GAAGjjB,MAAM,CAACyC,MAAM,CAAC,IAAI,CAAC;EACvC,SAASygB,UAAUA,CAACC,IAAI,EAAEtgB,GAAG,EAAE;IAC7B,IAAI,CAACA,GAAG,EAAE;MACR,OAAOsgB,IAAI;IACb;IACA,MAAMxhB,IAAI,GAAGkB,GAAG,CAAC8B,KAAK,CAAC,GAAG,CAAC;IAC3B,KAAK,IAAIlD,CAAC,GAAG,CAAC,EAAEgG,CAAC,GAAG9F,IAAI,CAACC,MAAM,EAAEH,CAAC,GAAGgG,CAAC,EAAE,EAAEhG,CAAC,EAAE;MAC3C,MAAMkB,CAAC,GAAGhB,IAAI,CAACF,CAAC,CAAC;MACjB0hB,IAAI,GAAGA,IAAI,CAACxgB,CAAC,CAAC,KAAKwgB,IAAI,CAACxgB,CAAC,CAAC,GAAG3C,MAAM,CAACyC,MAAM,CAAC,IAAI,CAAC,CAAC;IACnD;IACA,OAAO0gB,IAAI;EACb;EACA,SAASlX,GAAGA,CAACmX,IAAI,EAAE1f,KAAK,EAAEoH,MAAM,EAAE;IAChC,IAAI,OAAOpH,KAAK,KAAK,QAAQ,EAAE;MAC7B,OAAOP,KAAK,CAAC+f,UAAU,CAACE,IAAI,EAAE1f,KAAK,CAAC,EAAEoH,MAAM,CAAC;IAC/C;IACA,OAAO3H,KAAK,CAAC+f,UAAU,CAACE,IAAI,EAAE,EAAE,CAAC,EAAE1f,KAAK,CAAC;EAC3C;EACA,MAAM2f,QAAQ,CAAC;IACb7T,WAAWA,CAAC8T,YAAY,EAAE;MACxB,IAAI,CAACC,SAAS,GAAG1f,SAAS;MAC1B,IAAI,CAAC2f,eAAe,GAAG,iBAAiB;MACxC,IAAI,CAACC,WAAW,GAAG,iBAAiB;MACpC,IAAI,CAAC5B,KAAK,GAAG,MAAM;MACnB,IAAI,CAAC6B,QAAQ,GAAG,CAAC,CAAC;MAClB,IAAI,CAACC,gBAAgB,GAAIC,OAAO,IAAKA,OAAO,CAAC7T,KAAK,CAAC8T,QAAQ,CAACC,mBAAmB,CAAC,CAAC;MACjF,IAAI,CAACC,QAAQ,GAAG,CAAC,CAAC;MAClB,IAAI,CAACC,MAAM,GAAG,CACZ,WAAW,EACX,UAAU,EACV,OAAO,EACP,YAAY,EACZ,WAAW,CACZ;MACD,IAAI,CAACC,IAAI,GAAG;QACVC,MAAM,EAAE,oDAAoD;QAC5D1e,IAAI,EAAE,EAAE;QACR2e,KAAK,EAAE,QAAQ;QACfC,UAAU,EAAE,GAAG;QACftC,MAAM,EAAE;MACV,CAAC;MACD,IAAI,CAACuC,KAAK,GAAG,CAAC,CAAC;MACf,IAAI,CAACC,oBAAoB,GAAG,CAACC,GAAG,EAAEvhB,OAAO,KAAK+f,aAAa,CAAC/f,OAAO,CAACwgB,eAAe,CAAC;MACpF,IAAI,CAACgB,gBAAgB,GAAG,CAACD,GAAG,EAAEvhB,OAAO,KAAK+f,aAAa,CAAC/f,OAAO,CAACygB,WAAW,CAAC;MAC5E,IAAI,CAACgB,UAAU,GAAG,CAACF,GAAG,EAAEvhB,OAAO,KAAK+f,aAAa,CAAC/f,OAAO,CAAC6e,KAAK,CAAC;MAChE,IAAI,CAAC6C,SAAS,GAAG,GAAG;MACpB,IAAI,CAACC,WAAW,GAAG;QACjBC,IAAI,EAAE,SAAS;QACfC,SAAS,EAAE,IAAI;QACfC,gBAAgB,EAAE;MACpB,CAAC;MACD,IAAI,CAACC,mBAAmB,GAAG,IAAI;MAC/B,IAAI,CAACC,OAAO,GAAG,IAAI;MACnB,IAAI,CAACC,OAAO,GAAG,IAAI;MACnB,IAAI,CAACC,OAAO,GAAG,IAAI;MACnB,IAAI,CAACC,OAAO,GAAG,CAAC,CAAC;MACjB,IAAI,CAACC,UAAU,GAAG,IAAI;MACtB,IAAI,CAACC,KAAK,GAAGxhB,SAAS;MACtB,IAAI,CAACyhB,MAAM,GAAG,CAAC,CAAC;MAChB,IAAI,CAACC,QAAQ,GAAG,IAAI;MACpB,IAAI,CAACC,uBAAuB,GAAG,IAAI;MACnC,IAAI,CAACC,QAAQ,CAACnC,YAAY,CAAC;IAC7B;IACArX,GAAGA,CAACvI,KAAK,EAAEoH,MAAM,EAAE;MACjB,OAAOmB,GAAG,CAAC,IAAI,EAAEvI,KAAK,EAAEoH,MAAM,CAAC;IACjC;IACAqG,GAAGA,CAACzN,KAAK,EAAE;MACT,OAAOwf,UAAU,CAAC,IAAI,EAAExf,KAAK,CAAC;IAChC;IACA+hB,QAAQA,CAAC/hB,KAAK,EAAEoH,MAAM,EAAE;MACtB,OAAOmB,GAAG,CAACgX,WAAW,EAAEvf,KAAK,EAAEoH,MAAM,CAAC;IACxC;IACA4a,QAAQA,CAAChiB,KAAK,EAAEoH,MAAM,EAAE;MACtB,OAAOmB,GAAG,CAAC+W,SAAS,EAAEtf,KAAK,EAAEoH,MAAM,CAAC;IACtC;IACA6a,KAAKA,CAACjiB,KAAK,EAAEkiB,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAE;MAC1C,MAAMC,WAAW,GAAG7C,UAAU,CAAC,IAAI,EAAExf,KAAK,CAAC;MAC3C,MAAMsiB,iBAAiB,GAAG9C,UAAU,CAAC,IAAI,EAAE2C,WAAW,CAAC;MACvD,MAAMI,WAAW,GAAG,GAAG,GAAGL,IAAI;MAC9B5lB,MAAM,CAACkmB,gBAAgB,CAACH,WAAW,EAAE;QACnC,CAACE,WAAW,GAAG;UACbrmB,KAAK,EAAEmmB,WAAW,CAACH,IAAI,CAAC;UACxBO,QAAQ,EAAE;QACZ,CAAC;QACD,CAACP,IAAI,GAAG;UACNta,UAAU,EAAE,IAAI;UAChB6F,GAAGA,CAAA,EAAG;YACJ,MAAMiV,KAAK,GAAG,IAAI,CAACH,WAAW,CAAC;YAC/B,MAAMzjB,MAAM,GAAGwjB,iBAAiB,CAACF,UAAU,CAAC;YAC5C,IAAIzlB,QAAQ,CAAC+lB,KAAK,CAAC,EAAE;cACnB,OAAOpmB,MAAM,CAACsP,MAAM,CAAC,CAAC,CAAC,EAAE9M,MAAM,EAAE4jB,KAAK,CAAC;YACzC;YACA,OAAOzlB,cAAc,CAACylB,KAAK,EAAE5jB,MAAM,CAAC;UACtC,CAAC;UACDyJ,GAAGA,CAACrM,KAAK,EAAE;YACT,IAAI,CAACqmB,WAAW,CAAC,GAAGrmB,KAAK;UAC3B;QACF;MACF,CAAC,CAAC;IACJ;EACF;EACA,IAAIymB,QAAQ,GAAG,IAAIhD,QAAQ,CAAC;IAC1BiD,WAAW,EAAGV,IAAI,IAAK,CAACA,IAAI,CAACW,UAAU,CAAC,IAAI,CAAC;IAC7CC,UAAU,EAAGZ,IAAI,IAAKA,IAAI,KAAK,QAAQ;IACvCvB,KAAK,EAAE;MACLoC,SAAS,EAAE;IACb,CAAC;IACD9B,WAAW,EAAE;MACX2B,WAAW,EAAE,KAAK;MAClBE,UAAU,EAAE;IACd;EACF,CAAC,CAAC;EAEF,SAASE,eAAeA,CAAA,EAAG;IACzB,OAAO,OAAOha,MAAM,KAAK,WAAW,IAAI,OAAOia,QAAQ,KAAK,WAAW;EACzE;EACA,SAASC,cAAcA,CAACC,OAAO,EAAE;IAC/B,IAAIC,MAAM,GAAGD,OAAO,CAACE,UAAU;IAC/B,IAAID,MAAM,IAAIA,MAAM,CAAC5mB,QAAQ,CAAC,CAAC,KAAK,qBAAqB,EAAE;MACzD4mB,MAAM,GAAGA,MAAM,CAACE,IAAI;IACtB;IACA,OAAOF,MAAM;EACf;EACA,SAASG,aAAaA,CAACC,UAAU,EAAE/D,IAAI,EAAEgE,cAAc,EAAE;IACvD,IAAIC,aAAa;IACjB,IAAI,OAAOF,UAAU,KAAK,QAAQ,EAAE;MAClCE,aAAa,GAAGhH,QAAQ,CAAC8G,UAAU,EAAE,EAAE,CAAC;MACxC,IAAIA,UAAU,CAACpkB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;QAClCskB,aAAa,GAAGA,aAAa,GAAG,GAAG,GAAGjE,IAAI,CAAC4D,UAAU,CAACI,cAAc,CAAC;MACvE;IACF,CAAC,MAAM;MACLC,aAAa,GAAGF,UAAU;IAC5B;IACA,OAAOE,aAAa;EACtB;EACA,MAAMC,gBAAgB,GAAIC,OAAO,IAAK5a,MAAM,CAAC2a,gBAAgB,CAACC,OAAO,EAAE,IAAI,CAAC;EAC5E,SAASC,QAAQA,CAACC,EAAE,EAAEvf,QAAQ,EAAE;IAC9B,OAAOof,gBAAgB,CAACG,EAAE,CAAC,CAACC,gBAAgB,CAACxf,QAAQ,CAAC;EACxD;EACA,MAAMyf,SAAS,GAAG,CAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC;EACpD,SAASC,kBAAkBA,CAACC,MAAM,EAAEzD,KAAK,EAAE0D,MAAM,EAAE;IACjD,MAAMzgB,MAAM,GAAG,CAAC,CAAC;IACjBygB,MAAM,GAAGA,MAAM,GAAG,GAAG,GAAGA,MAAM,GAAG,EAAE;IACnC,KAAK,IAAIpmB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1B,MAAMqmB,GAAG,GAAGJ,SAAS,CAACjmB,CAAC,CAAC;MACxB2F,MAAM,CAAC0gB,GAAG,CAAC,GAAG/mB,UAAU,CAAC6mB,MAAM,CAACzD,KAAK,GAAG,GAAG,GAAG2D,GAAG,GAAGD,MAAM,CAAC,CAAC,IAAI,CAAC;IACnE;IACAzgB,MAAM,CAAC2gB,KAAK,GAAG3gB,MAAM,CAACsG,IAAI,GAAGtG,MAAM,CAACuG,KAAK;IACzCvG,MAAM,CAAC4gB,MAAM,GAAG5gB,MAAM,CAAC6gB,GAAG,GAAG7gB,MAAM,CAAC8gB,MAAM;IAC1C,OAAO9gB,MAAM;EACf;EACA,MAAM+gB,YAAY,GAAGA,CAACjkB,CAAC,EAAEE,CAAC,EAAE5B,MAAM,KAAK,CAAC0B,CAAC,GAAG,CAAC,IAAIE,CAAC,GAAG,CAAC,MAAM,CAAC5B,MAAM,IAAI,CAACA,MAAM,CAAC4lB,UAAU,CAAC;EAC1F,SAASC,iBAAiBA,CAACziB,CAAC,EAAE0iB,MAAM,EAAE;IACpC,MAAMC,OAAO,GAAG3iB,CAAC,CAAC2iB,OAAO;IACzB,MAAMjmB,MAAM,GAAGimB,OAAO,IAAIA,OAAO,CAAC3mB,MAAM,GAAG2mB,OAAO,CAAC,CAAC,CAAC,GAAG3iB,CAAC;IACzD,MAAM;MAAC4iB,OAAO;MAAEC;IAAO,CAAC,GAAGnmB,MAAM;IACjC,IAAIomB,GAAG,GAAG,KAAK;IACf,IAAIxkB,CAAC,EAAEE,CAAC;IACR,IAAI+jB,YAAY,CAACK,OAAO,EAAEC,OAAO,EAAE7iB,CAAC,CAACpD,MAAM,CAAC,EAAE;MAC5C0B,CAAC,GAAGskB,OAAO;MACXpkB,CAAC,GAAGqkB,OAAO;IACb,CAAC,MAAM;MACL,MAAME,IAAI,GAAGL,MAAM,CAACM,qBAAqB,CAAC,CAAC;MAC3C1kB,CAAC,GAAG5B,MAAM,CAACumB,OAAO,GAAGF,IAAI,CAACjb,IAAI;MAC9BtJ,CAAC,GAAG9B,MAAM,CAACwmB,OAAO,GAAGH,IAAI,CAACV,GAAG;MAC7BS,GAAG,GAAG,IAAI;IACZ;IACA,OAAO;MAACxkB,CAAC;MAAEE,CAAC;MAAEskB;IAAG,CAAC;EACpB;EACA,SAASK,mBAAmBA,CAACC,GAAG,EAAEjZ,KAAK,EAAE;IACvC,IAAI,QAAQ,IAAIiZ,GAAG,EAAE;MACnB,OAAOA,GAAG;IACZ;IACA,MAAM;MAACV,MAAM;MAAEW;IAAuB,CAAC,GAAGlZ,KAAK;IAC/C,MAAMoU,KAAK,GAAGkD,gBAAgB,CAACiB,MAAM,CAAC;IACtC,MAAMY,SAAS,GAAG/E,KAAK,CAACgF,SAAS,KAAK,YAAY;IAClD,MAAMC,QAAQ,GAAGzB,kBAAkB,CAACxD,KAAK,EAAE,SAAS,CAAC;IACrD,MAAMkF,OAAO,GAAG1B,kBAAkB,CAACxD,KAAK,EAAE,QAAQ,EAAE,OAAO,CAAC;IAC5D,MAAM;MAACjgB,CAAC;MAAEE,CAAC;MAAEskB;IAAG,CAAC,GAAGL,iBAAiB,CAACW,GAAG,EAAEV,MAAM,CAAC;IAClD,MAAMgB,OAAO,GAAGF,QAAQ,CAAC1b,IAAI,IAAIgb,GAAG,IAAIW,OAAO,CAAC3b,IAAI,CAAC;IACrD,MAAM6b,OAAO,GAAGH,QAAQ,CAACnB,GAAG,IAAIS,GAAG,IAAIW,OAAO,CAACpB,GAAG,CAAC;IACnD,IAAI;MAACF,KAAK;MAAEC;IAAM,CAAC,GAAGjY,KAAK;IAC3B,IAAImZ,SAAS,EAAE;MACbnB,KAAK,IAAIqB,QAAQ,CAACrB,KAAK,GAAGsB,OAAO,CAACtB,KAAK;MACvCC,MAAM,IAAIoB,QAAQ,CAACpB,MAAM,GAAGqB,OAAO,CAACrB,MAAM;IAC5C;IACA,OAAO;MACL9jB,CAAC,EAAE4B,IAAI,CAACc,KAAK,CAAC,CAAC1C,CAAC,GAAGolB,OAAO,IAAIvB,KAAK,GAAGO,MAAM,CAACP,KAAK,GAAGkB,uBAAuB,CAAC;MAC7E7kB,CAAC,EAAE0B,IAAI,CAACc,KAAK,CAAC,CAACxC,CAAC,GAAGmlB,OAAO,IAAIvB,MAAM,GAAGM,MAAM,CAACN,MAAM,GAAGiB,uBAAuB;IAChF,CAAC;EACH;EACA,SAASO,gBAAgBA,CAAClB,MAAM,EAAEP,KAAK,EAAEC,MAAM,EAAE;IAC/C,IAAIyB,QAAQ,EAAEC,SAAS;IACvB,IAAI3B,KAAK,KAAKlkB,SAAS,IAAImkB,MAAM,KAAKnkB,SAAS,EAAE;MAC/C,MAAM8lB,SAAS,GAAG/C,cAAc,CAAC0B,MAAM,CAAC;MACxC,IAAI,CAACqB,SAAS,EAAE;QACd5B,KAAK,GAAGO,MAAM,CAACsB,WAAW;QAC1B5B,MAAM,GAAGM,MAAM,CAACuB,YAAY;MAC9B,CAAC,MAAM;QACL,MAAMlB,IAAI,GAAGgB,SAAS,CAACf,qBAAqB,CAAC,CAAC;QAC9C,MAAMkB,cAAc,GAAGzC,gBAAgB,CAACsC,SAAS,CAAC;QAClD,MAAMI,eAAe,GAAGpC,kBAAkB,CAACmC,cAAc,EAAE,QAAQ,EAAE,OAAO,CAAC;QAC7E,MAAME,gBAAgB,GAAGrC,kBAAkB,CAACmC,cAAc,EAAE,SAAS,CAAC;QACtE/B,KAAK,GAAGY,IAAI,CAACZ,KAAK,GAAGiC,gBAAgB,CAACjC,KAAK,GAAGgC,eAAe,CAAChC,KAAK;QACnEC,MAAM,GAAGW,IAAI,CAACX,MAAM,GAAGgC,gBAAgB,CAAChC,MAAM,GAAG+B,eAAe,CAAC/B,MAAM;QACvEyB,QAAQ,GAAGxC,aAAa,CAAC6C,cAAc,CAACL,QAAQ,EAAEE,SAAS,EAAE,aAAa,CAAC;QAC3ED,SAAS,GAAGzC,aAAa,CAAC6C,cAAc,CAACJ,SAAS,EAAEC,SAAS,EAAE,cAAc,CAAC;MAChF;IACF;IACA,OAAO;MACL5B,KAAK;MACLC,MAAM;MACNyB,QAAQ,EAAEA,QAAQ,IAAIxjB,QAAQ;MAC9ByjB,SAAS,EAAEA,SAAS,IAAIzjB;IAC1B,CAAC;EACH;EACA,MAAMgkB,MAAM,GAAGhmB,CAAC,IAAI6B,IAAI,CAACc,KAAK,CAAC3C,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE;EAC3C,SAASimB,cAAcA,CAAC5B,MAAM,EAAE6B,OAAO,EAAEC,QAAQ,EAAEC,WAAW,EAAE;IAC9D,MAAMlG,KAAK,GAAGkD,gBAAgB,CAACiB,MAAM,CAAC;IACtC,MAAMgC,OAAO,GAAG3C,kBAAkB,CAACxD,KAAK,EAAE,QAAQ,CAAC;IACnD,MAAMsF,QAAQ,GAAGxC,aAAa,CAAC9C,KAAK,CAACsF,QAAQ,EAAEnB,MAAM,EAAE,aAAa,CAAC,IAAIriB,QAAQ;IACjF,MAAMyjB,SAAS,GAAGzC,aAAa,CAAC9C,KAAK,CAACuF,SAAS,EAAEpB,MAAM,EAAE,cAAc,CAAC,IAAIriB,QAAQ;IACpF,MAAMskB,aAAa,GAAGf,gBAAgB,CAAClB,MAAM,EAAE6B,OAAO,EAAEC,QAAQ,CAAC;IACjE,IAAI;MAACrC,KAAK;MAAEC;IAAM,CAAC,GAAGuC,aAAa;IACnC,IAAIpG,KAAK,CAACgF,SAAS,KAAK,aAAa,EAAE;MACrC,MAAME,OAAO,GAAG1B,kBAAkB,CAACxD,KAAK,EAAE,QAAQ,EAAE,OAAO,CAAC;MAC5D,MAAMiF,QAAQ,GAAGzB,kBAAkB,CAACxD,KAAK,EAAE,SAAS,CAAC;MACrD4D,KAAK,IAAIqB,QAAQ,CAACrB,KAAK,GAAGsB,OAAO,CAACtB,KAAK;MACvCC,MAAM,IAAIoB,QAAQ,CAACpB,MAAM,GAAGqB,OAAO,CAACrB,MAAM;IAC5C;IACAD,KAAK,GAAGjiB,IAAI,CAACqC,GAAG,CAAC,CAAC,EAAE4f,KAAK,GAAGuC,OAAO,CAACvC,KAAK,CAAC;IAC1CC,MAAM,GAAGliB,IAAI,CAACqC,GAAG,CAAC,CAAC,EAAEkiB,WAAW,GAAGvkB,IAAI,CAACkB,KAAK,CAAC+gB,KAAK,GAAGsC,WAAW,CAAC,GAAGrC,MAAM,GAAGsC,OAAO,CAACtC,MAAM,CAAC;IAC7FD,KAAK,GAAGkC,MAAM,CAACnkB,IAAI,CAACoC,GAAG,CAAC6f,KAAK,EAAE0B,QAAQ,EAAEc,aAAa,CAACd,QAAQ,CAAC,CAAC;IACjEzB,MAAM,GAAGiC,MAAM,CAACnkB,IAAI,CAACoC,GAAG,CAAC8f,MAAM,EAAE0B,SAAS,EAAEa,aAAa,CAACb,SAAS,CAAC,CAAC;IACrE,IAAI3B,KAAK,IAAI,CAACC,MAAM,EAAE;MACpBA,MAAM,GAAGiC,MAAM,CAAClC,KAAK,GAAG,CAAC,CAAC;IAC5B;IACA,OAAO;MACLA,KAAK;MACLC;IACF,CAAC;EACH;EACA,SAASwC,WAAWA,CAACza,KAAK,EAAE0a,UAAU,EAAEC,UAAU,EAAE;IAClD,MAAMC,UAAU,GAAGF,UAAU,IAAI,CAAC;IAClC,MAAMG,YAAY,GAAG9kB,IAAI,CAACkB,KAAK,CAAC+I,KAAK,CAACiY,MAAM,GAAG2C,UAAU,CAAC;IAC1D,MAAME,WAAW,GAAG/kB,IAAI,CAACkB,KAAK,CAAC+I,KAAK,CAACgY,KAAK,GAAG4C,UAAU,CAAC;IACxD5a,KAAK,CAACiY,MAAM,GAAG4C,YAAY,GAAGD,UAAU;IACxC5a,KAAK,CAACgY,KAAK,GAAG8C,WAAW,GAAGF,UAAU;IACtC,MAAMrC,MAAM,GAAGvY,KAAK,CAACuY,MAAM;IAC3B,IAAIA,MAAM,CAACnE,KAAK,KAAKuG,UAAU,IAAK,CAACpC,MAAM,CAACnE,KAAK,CAAC6D,MAAM,IAAI,CAACM,MAAM,CAACnE,KAAK,CAAC4D,KAAM,CAAC,EAAE;MACjFO,MAAM,CAACnE,KAAK,CAAC6D,MAAM,GAAI,GAAEjY,KAAK,CAACiY,MAAO,IAAG;MACzCM,MAAM,CAACnE,KAAK,CAAC4D,KAAK,GAAI,GAAEhY,KAAK,CAACgY,KAAM,IAAG;IACzC;IACA,IAAIhY,KAAK,CAACkZ,uBAAuB,KAAK0B,UAAU,IACzCrC,MAAM,CAACN,MAAM,KAAK4C,YAAY,IAC9BtC,MAAM,CAACP,KAAK,KAAK8C,WAAW,EAAE;MACnC9a,KAAK,CAACkZ,uBAAuB,GAAG0B,UAAU;MAC1CrC,MAAM,CAACN,MAAM,GAAG4C,YAAY;MAC5BtC,MAAM,CAACP,KAAK,GAAG8C,WAAW;MAC1B9a,KAAK,CAACwU,GAAG,CAACuG,YAAY,CAACH,UAAU,EAAE,CAAC,EAAE,CAAC,EAAEA,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC;MAC1D,OAAO,IAAI;IACb;IACA,OAAO,KAAK;EACd;EACA,MAAMI,4BAA4B,GAAI,YAAW;IAC/C,IAAIC,gBAAgB,GAAG,KAAK;IAC5B,IAAI;MACF,MAAMhoB,OAAO,GAAG;QACd,IAAIioB,OAAOA,CAAA,EAAG;UACZD,gBAAgB,GAAG,IAAI;UACvB,OAAO,KAAK;QACd;MACF,CAAC;MACDte,MAAM,CAACwe,gBAAgB,CAAC,MAAM,EAAE,IAAI,EAAEloB,OAAO,CAAC;MAC9C0J,MAAM,CAACye,mBAAmB,CAAC,MAAM,EAAE,IAAI,EAAEnoB,OAAO,CAAC;IACnD,CAAC,CAAC,OAAO4C,CAAC,EAAE,CACZ;IACA,OAAOolB,gBAAgB;EACzB,CAAC,CAAC,CAAE;EACJ,SAASI,YAAYA,CAAC9D,OAAO,EAAErf,QAAQ,EAAE;IACvC,MAAMrI,KAAK,GAAG2nB,QAAQ,CAACD,OAAO,EAAErf,QAAQ,CAAC;IACzC,MAAMojB,OAAO,GAAGzrB,KAAK,IAAIA,KAAK,CAAC0rB,KAAK,CAAC,mBAAmB,CAAC;IACzD,OAAOD,OAAO,GAAG,CAACA,OAAO,CAAC,CAAC,CAAC,GAAGxnB,SAAS;EAC1C;EAEA,SAAS0nB,YAAYA,CAACtH,IAAI,EAAE;IAC1B,IAAI,CAACA,IAAI,IAAItkB,aAAa,CAACskB,IAAI,CAACze,IAAI,CAAC,IAAI7F,aAAa,CAACskB,IAAI,CAACC,MAAM,CAAC,EAAE;MACnE,OAAO,IAAI;IACb;IACA,OAAO,CAACD,IAAI,CAACE,KAAK,GAAGF,IAAI,CAACE,KAAK,GAAG,GAAG,GAAG,EAAE,KACvCF,IAAI,CAACnC,MAAM,GAAGmC,IAAI,CAACnC,MAAM,GAAG,GAAG,GAAG,EAAE,CAAC,GACtCmC,IAAI,CAACze,IAAI,GAAG,KAAK,GACjBye,IAAI,CAACC,MAAM;EACf;EACA,SAASsH,YAAYA,CAACjH,GAAG,EAAEkH,IAAI,EAAEC,EAAE,EAAEC,OAAO,EAAEC,MAAM,EAAE;IACpD,IAAIC,SAAS,GAAGJ,IAAI,CAACG,MAAM,CAAC;IAC5B,IAAI,CAACC,SAAS,EAAE;MACdA,SAAS,GAAGJ,IAAI,CAACG,MAAM,CAAC,GAAGrH,GAAG,CAACuH,WAAW,CAACF,MAAM,CAAC,CAAC7D,KAAK;MACxD2D,EAAE,CAAC5mB,IAAI,CAAC8mB,MAAM,CAAC;IACjB;IACA,IAAIC,SAAS,GAAGF,OAAO,EAAE;MACvBA,OAAO,GAAGE,SAAS;IACrB;IACA,OAAOF,OAAO;EAChB;EACA,SAASI,YAAYA,CAACxH,GAAG,EAAEN,IAAI,EAAE+H,aAAa,EAAEC,KAAK,EAAE;IACrDA,KAAK,GAAGA,KAAK,IAAI,CAAC,CAAC;IACnB,IAAIR,IAAI,GAAGQ,KAAK,CAACR,IAAI,GAAGQ,KAAK,CAACR,IAAI,IAAI,CAAC,CAAC;IACxC,IAAIC,EAAE,GAAGO,KAAK,CAACC,cAAc,GAAGD,KAAK,CAACC,cAAc,IAAI,EAAE;IAC1D,IAAID,KAAK,CAAChI,IAAI,KAAKA,IAAI,EAAE;MACvBwH,IAAI,GAAGQ,KAAK,CAACR,IAAI,GAAG,CAAC,CAAC;MACtBC,EAAE,GAAGO,KAAK,CAACC,cAAc,GAAG,EAAE;MAC9BD,KAAK,CAAChI,IAAI,GAAGA,IAAI;IACnB;IACAM,GAAG,CAAC4H,IAAI,CAAC,CAAC;IACV5H,GAAG,CAACN,IAAI,GAAGA,IAAI;IACf,IAAI0H,OAAO,GAAG,CAAC;IACf,MAAM3pB,IAAI,GAAGgqB,aAAa,CAACpqB,MAAM;IACjC,IAAIH,CAAC,EAAEue,CAAC,EAAEoM,IAAI,EAAEC,KAAK,EAAEC,WAAW;IAClC,KAAK7qB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGO,IAAI,EAAEP,CAAC,EAAE,EAAE;MACzB4qB,KAAK,GAAGL,aAAa,CAACvqB,CAAC,CAAC;MACxB,IAAI4qB,KAAK,KAAKxoB,SAAS,IAAIwoB,KAAK,KAAK,IAAI,IAAIxsB,OAAO,CAACwsB,KAAK,CAAC,KAAK,IAAI,EAAE;QACpEV,OAAO,GAAGH,YAAY,CAACjH,GAAG,EAAEkH,IAAI,EAAEC,EAAE,EAAEC,OAAO,EAAEU,KAAK,CAAC;MACvD,CAAC,MAAM,IAAIxsB,OAAO,CAACwsB,KAAK,CAAC,EAAE;QACzB,KAAKrM,CAAC,GAAG,CAAC,EAAEoM,IAAI,GAAGC,KAAK,CAACzqB,MAAM,EAAEoe,CAAC,GAAGoM,IAAI,EAAEpM,CAAC,EAAE,EAAE;UAC9CsM,WAAW,GAAGD,KAAK,CAACrM,CAAC,CAAC;UACtB,IAAIsM,WAAW,KAAKzoB,SAAS,IAAIyoB,WAAW,KAAK,IAAI,IAAI,CAACzsB,OAAO,CAACysB,WAAW,CAAC,EAAE;YAC9EX,OAAO,GAAGH,YAAY,CAACjH,GAAG,EAAEkH,IAAI,EAAEC,EAAE,EAAEC,OAAO,EAAEW,WAAW,CAAC;UAC7D;QACF;MACF;IACF;IACA/H,GAAG,CAACgI,OAAO,CAAC,CAAC;IACb,MAAMC,KAAK,GAAGd,EAAE,CAAC9pB,MAAM,GAAG,CAAC;IAC3B,IAAI4qB,KAAK,GAAGR,aAAa,CAACpqB,MAAM,EAAE;MAChC,KAAKH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+qB,KAAK,EAAE/qB,CAAC,EAAE,EAAE;QAC1B,OAAOgqB,IAAI,CAACC,EAAE,CAACjqB,CAAC,CAAC,CAAC;MACpB;MACAiqB,EAAE,CAAC5f,MAAM,CAAC,CAAC,EAAE0gB,KAAK,CAAC;IACrB;IACA,OAAOb,OAAO;EAChB;EACA,SAASc,WAAWA,CAAC1c,KAAK,EAAE2c,KAAK,EAAE3E,KAAK,EAAE;IACxC,MAAMpE,gBAAgB,GAAG5T,KAAK,CAACkZ,uBAAuB;IACtD,MAAM0D,SAAS,GAAG5E,KAAK,KAAK,CAAC,GAAGjiB,IAAI,CAACqC,GAAG,CAAC4f,KAAK,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC;IAC5D,OAAOjiB,IAAI,CAACc,KAAK,CAAC,CAAC8lB,KAAK,GAAGC,SAAS,IAAIhJ,gBAAgB,CAAC,GAAGA,gBAAgB,GAAGgJ,SAAS;EAC1F;EACA,SAASC,WAAWA,CAACtE,MAAM,EAAE/D,GAAG,EAAE;IAChCA,GAAG,GAAGA,GAAG,IAAI+D,MAAM,CAACuE,UAAU,CAAC,IAAI,CAAC;IACpCtI,GAAG,CAAC4H,IAAI,CAAC,CAAC;IACV5H,GAAG,CAACuI,cAAc,CAAC,CAAC;IACpBvI,GAAG,CAACwI,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEzE,MAAM,CAACP,KAAK,EAAEO,MAAM,CAACN,MAAM,CAAC;IAChDzD,GAAG,CAACgI,OAAO,CAAC,CAAC;EACf;EACA,SAASS,SAASA,CAACzI,GAAG,EAAEvhB,OAAO,EAAEkB,CAAC,EAAEE,CAAC,EAAE;IACrC6oB,eAAe,CAAC1I,GAAG,EAAEvhB,OAAO,EAAEkB,CAAC,EAAEE,CAAC,EAAE,IAAI,CAAC;EAC3C;EACA,SAAS6oB,eAAeA,CAAC1I,GAAG,EAAEvhB,OAAO,EAAEkB,CAAC,EAAEE,CAAC,EAAE8P,CAAC,EAAE;IAC9C,IAAInU,IAAI,EAAEupB,OAAO,EAAEC,OAAO,EAAE/jB,IAAI,EAAE0nB,YAAY,EAAEnF,KAAK;IACrD,MAAM5D,KAAK,GAAGnhB,OAAO,CAACmqB,UAAU;IAChC,MAAMC,QAAQ,GAAGpqB,OAAO,CAACoqB,QAAQ;IACjC,MAAMC,MAAM,GAAGrqB,OAAO,CAACqqB,MAAM;IAC7B,IAAIC,GAAG,GAAG,CAACF,QAAQ,IAAI,CAAC,IAAIjnB,WAAW;IACvC,IAAIge,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MACtCpkB,IAAI,GAAGokB,KAAK,CAACjkB,QAAQ,CAAC,CAAC;MACvB,IAAIH,IAAI,KAAK,2BAA2B,IAAIA,IAAI,KAAK,4BAA4B,EAAE;QACjFwkB,GAAG,CAAC4H,IAAI,CAAC,CAAC;QACV5H,GAAG,CAACgJ,SAAS,CAACrpB,CAAC,EAAEE,CAAC,CAAC;QACnBmgB,GAAG,CAACvP,MAAM,CAACsY,GAAG,CAAC;QACf/I,GAAG,CAACiJ,SAAS,CAACrJ,KAAK,EAAE,CAACA,KAAK,CAAC4D,KAAK,GAAG,CAAC,EAAE,CAAC5D,KAAK,CAAC6D,MAAM,GAAG,CAAC,EAAE7D,KAAK,CAAC4D,KAAK,EAAE5D,KAAK,CAAC6D,MAAM,CAAC;QACpFzD,GAAG,CAACgI,OAAO,CAAC,CAAC;QACb;MACF;IACF;IACA,IAAI7kB,KAAK,CAAC2lB,MAAM,CAAC,IAAIA,MAAM,IAAI,CAAC,EAAE;MAChC;IACF;IACA9I,GAAG,CAACkJ,SAAS,CAAC,CAAC;IACf,QAAQtJ,KAAK;MACb;QACE,IAAIjQ,CAAC,EAAE;UACLqQ,GAAG,CAACmJ,OAAO,CAACxpB,CAAC,EAAEE,CAAC,EAAE8P,CAAC,GAAG,CAAC,EAAEmZ,MAAM,EAAE,CAAC,EAAE,CAAC,EAAEtnB,GAAG,CAAC;QAC7C,CAAC,MAAM;UACLwe,GAAG,CAACoJ,GAAG,CAACzpB,CAAC,EAAEE,CAAC,EAAEipB,MAAM,EAAE,CAAC,EAAEtnB,GAAG,CAAC;QAC/B;QACAwe,GAAG,CAACqJ,SAAS,CAAC,CAAC;QACf;MACF,KAAK,UAAU;QACbrJ,GAAG,CAACsJ,MAAM,CAAC3pB,CAAC,GAAG4B,IAAI,CAACgoB,GAAG,CAACR,GAAG,CAAC,GAAGD,MAAM,EAAEjpB,CAAC,GAAG0B,IAAI,CAACioB,GAAG,CAACT,GAAG,CAAC,GAAGD,MAAM,CAAC;QAClEC,GAAG,IAAIhnB,aAAa;QACpBie,GAAG,CAACyJ,MAAM,CAAC9pB,CAAC,GAAG4B,IAAI,CAACgoB,GAAG,CAACR,GAAG,CAAC,GAAGD,MAAM,EAAEjpB,CAAC,GAAG0B,IAAI,CAACioB,GAAG,CAACT,GAAG,CAAC,GAAGD,MAAM,CAAC;QAClEC,GAAG,IAAIhnB,aAAa;QACpBie,GAAG,CAACyJ,MAAM,CAAC9pB,CAAC,GAAG4B,IAAI,CAACgoB,GAAG,CAACR,GAAG,CAAC,GAAGD,MAAM,EAAEjpB,CAAC,GAAG0B,IAAI,CAACioB,GAAG,CAACT,GAAG,CAAC,GAAGD,MAAM,CAAC;QAClE9I,GAAG,CAACqJ,SAAS,CAAC,CAAC;QACf;MACF,KAAK,aAAa;QAChBV,YAAY,GAAGG,MAAM,GAAG,KAAK;QAC7B7nB,IAAI,GAAG6nB,MAAM,GAAGH,YAAY;QAC5B5D,OAAO,GAAGxjB,IAAI,CAACioB,GAAG,CAACT,GAAG,GAAGjnB,UAAU,CAAC,GAAGb,IAAI;QAC3C+jB,OAAO,GAAGzjB,IAAI,CAACgoB,GAAG,CAACR,GAAG,GAAGjnB,UAAU,CAAC,GAAGb,IAAI;QAC3C+e,GAAG,CAACoJ,GAAG,CAACzpB,CAAC,GAAGolB,OAAO,EAAEllB,CAAC,GAAGmlB,OAAO,EAAE2D,YAAY,EAAEI,GAAG,GAAGznB,EAAE,EAAEynB,GAAG,GAAGlnB,OAAO,CAAC;QACxEme,GAAG,CAACoJ,GAAG,CAACzpB,CAAC,GAAGqlB,OAAO,EAAEnlB,CAAC,GAAGklB,OAAO,EAAE4D,YAAY,EAAEI,GAAG,GAAGlnB,OAAO,EAAEknB,GAAG,CAAC;QACnE/I,GAAG,CAACoJ,GAAG,CAACzpB,CAAC,GAAGolB,OAAO,EAAEllB,CAAC,GAAGmlB,OAAO,EAAE2D,YAAY,EAAEI,GAAG,EAAEA,GAAG,GAAGlnB,OAAO,CAAC;QACnEme,GAAG,CAACoJ,GAAG,CAACzpB,CAAC,GAAGqlB,OAAO,EAAEnlB,CAAC,GAAGklB,OAAO,EAAE4D,YAAY,EAAEI,GAAG,GAAGlnB,OAAO,EAAEknB,GAAG,GAAGznB,EAAE,CAAC;QACxE0e,GAAG,CAACqJ,SAAS,CAAC,CAAC;QACf;MACF,KAAK,MAAM;QACT,IAAI,CAACR,QAAQ,EAAE;UACb5nB,IAAI,GAAGM,IAAI,CAACmoB,OAAO,GAAGZ,MAAM;UAC5BtF,KAAK,GAAG7T,CAAC,GAAGA,CAAC,GAAG,CAAC,GAAG1O,IAAI;UACxB+e,GAAG,CAACoE,IAAI,CAACzkB,CAAC,GAAG6jB,KAAK,EAAE3jB,CAAC,GAAGoB,IAAI,EAAE,CAAC,GAAGuiB,KAAK,EAAE,CAAC,GAAGviB,IAAI,CAAC;UAClD;QACF;QACA8nB,GAAG,IAAIjnB,UAAU;MACnB,KAAK,SAAS;QACZijB,OAAO,GAAGxjB,IAAI,CAACioB,GAAG,CAACT,GAAG,CAAC,GAAGD,MAAM;QAChC9D,OAAO,GAAGzjB,IAAI,CAACgoB,GAAG,CAACR,GAAG,CAAC,GAAGD,MAAM;QAChC9I,GAAG,CAACsJ,MAAM,CAAC3pB,CAAC,GAAGolB,OAAO,EAAEllB,CAAC,GAAGmlB,OAAO,CAAC;QACpChF,GAAG,CAACyJ,MAAM,CAAC9pB,CAAC,GAAGqlB,OAAO,EAAEnlB,CAAC,GAAGklB,OAAO,CAAC;QACpC/E,GAAG,CAACyJ,MAAM,CAAC9pB,CAAC,GAAGolB,OAAO,EAAEllB,CAAC,GAAGmlB,OAAO,CAAC;QACpChF,GAAG,CAACyJ,MAAM,CAAC9pB,CAAC,GAAGqlB,OAAO,EAAEnlB,CAAC,GAAGklB,OAAO,CAAC;QACpC/E,GAAG,CAACqJ,SAAS,CAAC,CAAC;QACf;MACF,KAAK,UAAU;QACbN,GAAG,IAAIjnB,UAAU;MACnB,KAAK,OAAO;QACVijB,OAAO,GAAGxjB,IAAI,CAACioB,GAAG,CAACT,GAAG,CAAC,GAAGD,MAAM;QAChC9D,OAAO,GAAGzjB,IAAI,CAACgoB,GAAG,CAACR,GAAG,CAAC,GAAGD,MAAM;QAChC9I,GAAG,CAACsJ,MAAM,CAAC3pB,CAAC,GAAGolB,OAAO,EAAEllB,CAAC,GAAGmlB,OAAO,CAAC;QACpChF,GAAG,CAACyJ,MAAM,CAAC9pB,CAAC,GAAGolB,OAAO,EAAEllB,CAAC,GAAGmlB,OAAO,CAAC;QACpChF,GAAG,CAACsJ,MAAM,CAAC3pB,CAAC,GAAGqlB,OAAO,EAAEnlB,CAAC,GAAGklB,OAAO,CAAC;QACpC/E,GAAG,CAACyJ,MAAM,CAAC9pB,CAAC,GAAGqlB,OAAO,EAAEnlB,CAAC,GAAGklB,OAAO,CAAC;QACpC;MACF,KAAK,MAAM;QACTA,OAAO,GAAGxjB,IAAI,CAACioB,GAAG,CAACT,GAAG,CAAC,GAAGD,MAAM;QAChC9D,OAAO,GAAGzjB,IAAI,CAACgoB,GAAG,CAACR,GAAG,CAAC,GAAGD,MAAM;QAChC9I,GAAG,CAACsJ,MAAM,CAAC3pB,CAAC,GAAGolB,OAAO,EAAEllB,CAAC,GAAGmlB,OAAO,CAAC;QACpChF,GAAG,CAACyJ,MAAM,CAAC9pB,CAAC,GAAGolB,OAAO,EAAEllB,CAAC,GAAGmlB,OAAO,CAAC;QACpChF,GAAG,CAACsJ,MAAM,CAAC3pB,CAAC,GAAGqlB,OAAO,EAAEnlB,CAAC,GAAGklB,OAAO,CAAC;QACpC/E,GAAG,CAACyJ,MAAM,CAAC9pB,CAAC,GAAGqlB,OAAO,EAAEnlB,CAAC,GAAGklB,OAAO,CAAC;QACpCgE,GAAG,IAAIjnB,UAAU;QACjBijB,OAAO,GAAGxjB,IAAI,CAACioB,GAAG,CAACT,GAAG,CAAC,GAAGD,MAAM;QAChC9D,OAAO,GAAGzjB,IAAI,CAACgoB,GAAG,CAACR,GAAG,CAAC,GAAGD,MAAM;QAChC9I,GAAG,CAACsJ,MAAM,CAAC3pB,CAAC,GAAGolB,OAAO,EAAEllB,CAAC,GAAGmlB,OAAO,CAAC;QACpChF,GAAG,CAACyJ,MAAM,CAAC9pB,CAAC,GAAGolB,OAAO,EAAEllB,CAAC,GAAGmlB,OAAO,CAAC;QACpChF,GAAG,CAACsJ,MAAM,CAAC3pB,CAAC,GAAGqlB,OAAO,EAAEnlB,CAAC,GAAGklB,OAAO,CAAC;QACpC/E,GAAG,CAACyJ,MAAM,CAAC9pB,CAAC,GAAGqlB,OAAO,EAAEnlB,CAAC,GAAGklB,OAAO,CAAC;QACpC;MACF,KAAK,MAAM;QACTA,OAAO,GAAGpV,CAAC,GAAGA,CAAC,GAAG,CAAC,GAAGpO,IAAI,CAACioB,GAAG,CAACT,GAAG,CAAC,GAAGD,MAAM;QAC5C9D,OAAO,GAAGzjB,IAAI,CAACgoB,GAAG,CAACR,GAAG,CAAC,GAAGD,MAAM;QAChC9I,GAAG,CAACsJ,MAAM,CAAC3pB,CAAC,GAAGolB,OAAO,EAAEllB,CAAC,GAAGmlB,OAAO,CAAC;QACpChF,GAAG,CAACyJ,MAAM,CAAC9pB,CAAC,GAAGolB,OAAO,EAAEllB,CAAC,GAAGmlB,OAAO,CAAC;QACpC;MACF,KAAK,MAAM;QACThF,GAAG,CAACsJ,MAAM,CAAC3pB,CAAC,EAAEE,CAAC,CAAC;QAChBmgB,GAAG,CAACyJ,MAAM,CAAC9pB,CAAC,GAAG4B,IAAI,CAACioB,GAAG,CAACT,GAAG,CAAC,GAAGD,MAAM,EAAEjpB,CAAC,GAAG0B,IAAI,CAACgoB,GAAG,CAACR,GAAG,CAAC,GAAGD,MAAM,CAAC;QAClE;IACF;IACA9I,GAAG,CAAC2J,IAAI,CAAC,CAAC;IACV,IAAIlrB,OAAO,CAACmrB,WAAW,GAAG,CAAC,EAAE;MAC3B5J,GAAG,CAAC6J,MAAM,CAAC,CAAC;IACd;EACF;EACA,SAASC,cAAcA,CAACC,KAAK,EAAEC,IAAI,EAAEC,MAAM,EAAE;IAC3CA,MAAM,GAAGA,MAAM,IAAI,GAAG;IACtB,OAAO,CAACD,IAAI,IAAKD,KAAK,IAAIA,KAAK,CAACpqB,CAAC,GAAGqqB,IAAI,CAAC7gB,IAAI,GAAG8gB,MAAM,IAAIF,KAAK,CAACpqB,CAAC,GAAGqqB,IAAI,CAAC5gB,KAAK,GAAG6gB,MAAM,IACvFF,KAAK,CAAClqB,CAAC,GAAGmqB,IAAI,CAACtG,GAAG,GAAGuG,MAAM,IAAIF,KAAK,CAAClqB,CAAC,GAAGmqB,IAAI,CAACrG,MAAM,GAAGsG,MAAO;EAChE;EACA,SAASC,QAAQA,CAAClK,GAAG,EAAEgK,IAAI,EAAE;IAC3BhK,GAAG,CAAC4H,IAAI,CAAC,CAAC;IACV5H,GAAG,CAACkJ,SAAS,CAAC,CAAC;IACflJ,GAAG,CAACoE,IAAI,CAAC4F,IAAI,CAAC7gB,IAAI,EAAE6gB,IAAI,CAACtG,GAAG,EAAEsG,IAAI,CAAC5gB,KAAK,GAAG4gB,IAAI,CAAC7gB,IAAI,EAAE6gB,IAAI,CAACrG,MAAM,GAAGqG,IAAI,CAACtG,GAAG,CAAC;IAC7E1D,GAAG,CAACmK,IAAI,CAAC,CAAC;EACZ;EACA,SAASC,UAAUA,CAACpK,GAAG,EAAE;IACvBA,GAAG,CAACgI,OAAO,CAAC,CAAC;EACf;EACA,SAASqC,cAAcA,CAACrK,GAAG,EAAE5gB,QAAQ,EAAEnB,MAAM,EAAEqsB,IAAI,EAAEjK,IAAI,EAAE;IACzD,IAAI,CAACjhB,QAAQ,EAAE;MACb,OAAO4gB,GAAG,CAACyJ,MAAM,CAACxrB,MAAM,CAAC0B,CAAC,EAAE1B,MAAM,CAAC4B,CAAC,CAAC;IACvC;IACA,IAAIwgB,IAAI,KAAK,QAAQ,EAAE;MACrB,MAAMkK,QAAQ,GAAG,CAACnrB,QAAQ,CAACO,CAAC,GAAG1B,MAAM,CAAC0B,CAAC,IAAI,GAAG;MAC9CqgB,GAAG,CAACyJ,MAAM,CAACc,QAAQ,EAAEnrB,QAAQ,CAACS,CAAC,CAAC;MAChCmgB,GAAG,CAACyJ,MAAM,CAACc,QAAQ,EAAEtsB,MAAM,CAAC4B,CAAC,CAAC;IAChC,CAAC,MAAM,IAAIwgB,IAAI,KAAK,OAAO,KAAK,CAAC,CAACiK,IAAI,EAAE;MACtCtK,GAAG,CAACyJ,MAAM,CAACrqB,QAAQ,CAACO,CAAC,EAAE1B,MAAM,CAAC4B,CAAC,CAAC;IAClC,CAAC,MAAM;MACLmgB,GAAG,CAACyJ,MAAM,CAACxrB,MAAM,CAAC0B,CAAC,EAAEP,QAAQ,CAACS,CAAC,CAAC;IAClC;IACAmgB,GAAG,CAACyJ,MAAM,CAACxrB,MAAM,CAAC0B,CAAC,EAAE1B,MAAM,CAAC4B,CAAC,CAAC;EAChC;EACA,SAAS2qB,cAAcA,CAACxK,GAAG,EAAE5gB,QAAQ,EAAEnB,MAAM,EAAEqsB,IAAI,EAAE;IACnD,IAAI,CAAClrB,QAAQ,EAAE;MACb,OAAO4gB,GAAG,CAACyJ,MAAM,CAACxrB,MAAM,CAAC0B,CAAC,EAAE1B,MAAM,CAAC4B,CAAC,CAAC;IACvC;IACAmgB,GAAG,CAACyK,aAAa,CACfH,IAAI,GAAGlrB,QAAQ,CAACsrB,IAAI,GAAGtrB,QAAQ,CAACurB,IAAI,EACpCL,IAAI,GAAGlrB,QAAQ,CAACwrB,IAAI,GAAGxrB,QAAQ,CAACyrB,IAAI,EACpCP,IAAI,GAAGrsB,MAAM,CAAC0sB,IAAI,GAAG1sB,MAAM,CAACysB,IAAI,EAChCJ,IAAI,GAAGrsB,MAAM,CAAC4sB,IAAI,GAAG5sB,MAAM,CAAC2sB,IAAI,EAChC3sB,MAAM,CAAC0B,CAAC,EACR1B,MAAM,CAAC4B,CAAC,CAAC;EACb;EACA,SAASirB,UAAUA,CAAC9K,GAAG,EAAE+K,IAAI,EAAEprB,CAAC,EAAEE,CAAC,EAAE6f,IAAI,EAAEsL,IAAI,GAAG,CAAC,CAAC,EAAE;IACpD,MAAMC,KAAK,GAAG3vB,OAAO,CAACyvB,IAAI,CAAC,GAAGA,IAAI,GAAG,CAACA,IAAI,CAAC;IAC3C,MAAMlB,MAAM,GAAGmB,IAAI,CAACE,WAAW,GAAG,CAAC,IAAIF,IAAI,CAACG,WAAW,KAAK,EAAE;IAC9D,IAAIjuB,CAAC,EAAEkuB,IAAI;IACXpL,GAAG,CAAC4H,IAAI,CAAC,CAAC;IACV5H,GAAG,CAACN,IAAI,GAAGA,IAAI,CAAC2H,MAAM;IACtBgE,aAAa,CAACrL,GAAG,EAAEgL,IAAI,CAAC;IACxB,KAAK9tB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+tB,KAAK,CAAC5tB,MAAM,EAAE,EAAEH,CAAC,EAAE;MACjCkuB,IAAI,GAAGH,KAAK,CAAC/tB,CAAC,CAAC;MACf,IAAI2sB,MAAM,EAAE;QACV,IAAImB,IAAI,CAACG,WAAW,EAAE;UACpBnL,GAAG,CAACsL,WAAW,GAAGN,IAAI,CAACG,WAAW;QACpC;QACA,IAAI,CAAC/vB,aAAa,CAAC4vB,IAAI,CAACE,WAAW,CAAC,EAAE;UACpClL,GAAG,CAACuL,SAAS,GAAGP,IAAI,CAACE,WAAW;QAClC;QACAlL,GAAG,CAACwL,UAAU,CAACJ,IAAI,EAAEzrB,CAAC,EAAEE,CAAC,EAAEmrB,IAAI,CAAC9F,QAAQ,CAAC;MAC3C;MACAlF,GAAG,CAACyL,QAAQ,CAACL,IAAI,EAAEzrB,CAAC,EAAEE,CAAC,EAAEmrB,IAAI,CAAC9F,QAAQ,CAAC;MACvCwG,YAAY,CAAC1L,GAAG,EAAErgB,CAAC,EAAEE,CAAC,EAAEurB,IAAI,EAAEJ,IAAI,CAAC;MACnCnrB,CAAC,IAAI6f,IAAI,CAACG,UAAU;IACtB;IACAG,GAAG,CAACgI,OAAO,CAAC,CAAC;EACf;EACA,SAASqD,aAAaA,CAACrL,GAAG,EAAEgL,IAAI,EAAE;IAChC,IAAIA,IAAI,CAACW,WAAW,EAAE;MACpB3L,GAAG,CAACgJ,SAAS,CAACgC,IAAI,CAACW,WAAW,CAAC,CAAC,CAAC,EAAEX,IAAI,CAACW,WAAW,CAAC,CAAC,CAAC,CAAC;IACzD;IACA,IAAI,CAACvwB,aAAa,CAAC4vB,IAAI,CAACnC,QAAQ,CAAC,EAAE;MACjC7I,GAAG,CAACvP,MAAM,CAACua,IAAI,CAACnC,QAAQ,CAAC;IAC3B;IACA,IAAImC,IAAI,CAAC1N,KAAK,EAAE;MACd0C,GAAG,CAAC4L,SAAS,GAAGZ,IAAI,CAAC1N,KAAK;IAC5B;IACA,IAAI0N,IAAI,CAACa,SAAS,EAAE;MAClB7L,GAAG,CAAC6L,SAAS,GAAGb,IAAI,CAACa,SAAS;IAChC;IACA,IAAIb,IAAI,CAACc,YAAY,EAAE;MACrB9L,GAAG,CAAC8L,YAAY,GAAGd,IAAI,CAACc,YAAY;IACtC;EACF;EACA,SAASJ,YAAYA,CAAC1L,GAAG,EAAErgB,CAAC,EAAEE,CAAC,EAAEurB,IAAI,EAAEJ,IAAI,EAAE;IAC3C,IAAIA,IAAI,CAACe,aAAa,IAAIf,IAAI,CAACgB,SAAS,EAAE;MACxC,MAAMC,OAAO,GAAGjM,GAAG,CAACuH,WAAW,CAAC6D,IAAI,CAAC;MACrC,MAAMjiB,IAAI,GAAGxJ,CAAC,GAAGssB,OAAO,CAACC,qBAAqB;MAC9C,MAAM9iB,KAAK,GAAGzJ,CAAC,GAAGssB,OAAO,CAACE,sBAAsB;MAChD,MAAMzI,GAAG,GAAG7jB,CAAC,GAAGosB,OAAO,CAACG,uBAAuB;MAC/C,MAAMzI,MAAM,GAAG9jB,CAAC,GAAGosB,OAAO,CAACI,wBAAwB;MACnD,MAAMC,WAAW,GAAGtB,IAAI,CAACe,aAAa,GAAG,CAACrI,GAAG,GAAGC,MAAM,IAAI,CAAC,GAAGA,MAAM;MACpE3D,GAAG,CAACsL,WAAW,GAAGtL,GAAG,CAAC4L,SAAS;MAC/B5L,GAAG,CAACkJ,SAAS,CAAC,CAAC;MACflJ,GAAG,CAACuL,SAAS,GAAGP,IAAI,CAACuB,eAAe,IAAI,CAAC;MACzCvM,GAAG,CAACsJ,MAAM,CAACngB,IAAI,EAAEmjB,WAAW,CAAC;MAC7BtM,GAAG,CAACyJ,MAAM,CAACrgB,KAAK,EAAEkjB,WAAW,CAAC;MAC9BtM,GAAG,CAAC6J,MAAM,CAAC,CAAC;IACd;EACF;EACA,SAAS2C,kBAAkBA,CAACxM,GAAG,EAAEoE,IAAI,EAAE;IACrC,MAAM;MAACzkB,CAAC;MAAEE,CAAC;MAAE8P,CAAC;MAAE9B,CAAC;MAAEib;IAAM,CAAC,GAAG1E,IAAI;IACjCpE,GAAG,CAACoJ,GAAG,CAACzpB,CAAC,GAAGmpB,MAAM,CAAC2D,OAAO,EAAE5sB,CAAC,GAAGipB,MAAM,CAAC2D,OAAO,EAAE3D,MAAM,CAAC2D,OAAO,EAAE,CAAC5qB,OAAO,EAAEP,EAAE,EAAE,IAAI,CAAC;IACnF0e,GAAG,CAACyJ,MAAM,CAAC9pB,CAAC,EAAEE,CAAC,GAAGgO,CAAC,GAAGib,MAAM,CAAC4D,UAAU,CAAC;IACxC1M,GAAG,CAACoJ,GAAG,CAACzpB,CAAC,GAAGmpB,MAAM,CAAC4D,UAAU,EAAE7sB,CAAC,GAAGgO,CAAC,GAAGib,MAAM,CAAC4D,UAAU,EAAE5D,MAAM,CAAC4D,UAAU,EAAEprB,EAAE,EAAEO,OAAO,EAAE,IAAI,CAAC;IAC/Fme,GAAG,CAACyJ,MAAM,CAAC9pB,CAAC,GAAGgQ,CAAC,GAAGmZ,MAAM,CAAC6D,WAAW,EAAE9sB,CAAC,GAAGgO,CAAC,CAAC;IAC7CmS,GAAG,CAACoJ,GAAG,CAACzpB,CAAC,GAAGgQ,CAAC,GAAGmZ,MAAM,CAAC6D,WAAW,EAAE9sB,CAAC,GAAGgO,CAAC,GAAGib,MAAM,CAAC6D,WAAW,EAAE7D,MAAM,CAAC6D,WAAW,EAAE9qB,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC;IACrGme,GAAG,CAACyJ,MAAM,CAAC9pB,CAAC,GAAGgQ,CAAC,EAAE9P,CAAC,GAAGipB,MAAM,CAAC8D,QAAQ,CAAC;IACtC5M,GAAG,CAACoJ,GAAG,CAACzpB,CAAC,GAAGgQ,CAAC,GAAGmZ,MAAM,CAAC8D,QAAQ,EAAE/sB,CAAC,GAAGipB,MAAM,CAAC8D,QAAQ,EAAE9D,MAAM,CAAC8D,QAAQ,EAAE,CAAC,EAAE,CAAC/qB,OAAO,EAAE,IAAI,CAAC;IACzFme,GAAG,CAACyJ,MAAM,CAAC9pB,CAAC,GAAGmpB,MAAM,CAAC2D,OAAO,EAAE5sB,CAAC,CAAC;EACnC;EAEA,SAASgtB,eAAeA,CAACC,MAAM,EAAEC,QAAQ,GAAG,CAAC,EAAE,CAAC,EAAEC,UAAU,GAAGF,MAAM,EAAEG,QAAQ,EAAEC,SAAS,GAAGA,CAAA,KAAMJ,MAAM,CAAC,CAAC,CAAC,EAAE;IAC5G,IAAI,CAAClsB,OAAO,CAACqsB,QAAQ,CAAC,EAAE;MACtBA,QAAQ,GAAGE,QAAQ,CAAC,WAAW,EAAEL,MAAM,CAAC;IAC1C;IACA,MAAMpF,KAAK,GAAG;MACZ,CAAC0F,MAAM,CAACC,WAAW,GAAG,QAAQ;MAC9BC,UAAU,EAAE,IAAI;MAChBC,OAAO,EAAET,MAAM;MACfU,WAAW,EAAER,UAAU;MACvB9K,SAAS,EAAE+K,QAAQ;MACnBQ,UAAU,EAAEP,SAAS;MACrB/L,QAAQ,EAAGhiB,KAAK,IAAK0tB,eAAe,CAAC,CAAC1tB,KAAK,EAAE,GAAG2tB,MAAM,CAAC,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,QAAQ;IACzF,CAAC;IACD,OAAO,IAAIS,KAAK,CAAChG,KAAK,EAAE;MACtBiG,cAAcA,CAAC1vB,MAAM,EAAE2vB,IAAI,EAAE;QAC3B,OAAO3vB,MAAM,CAAC2vB,IAAI,CAAC;QACnB,OAAO3vB,MAAM,CAAC4vB,KAAK;QACnB,OAAOf,MAAM,CAAC,CAAC,CAAC,CAACc,IAAI,CAAC;QACtB,OAAO,IAAI;MACb,CAAC;MACDhhB,GAAGA,CAAC3O,MAAM,EAAE2vB,IAAI,EAAE;QAChB,OAAOE,OAAO,CAAC7vB,MAAM,EAAE2vB,IAAI,EACzB,MAAMG,oBAAoB,CAACH,IAAI,EAAEb,QAAQ,EAAED,MAAM,EAAE7uB,MAAM,CAAC,CAAC;MAC/D,CAAC;MACD+vB,wBAAwBA,CAAC/vB,MAAM,EAAE2vB,IAAI,EAAE;QACrC,OAAOK,OAAO,CAACD,wBAAwB,CAAC/vB,MAAM,CAACsvB,OAAO,CAAC,CAAC,CAAC,EAAEK,IAAI,CAAC;MAClE,CAAC;MACDM,cAAcA,CAAA,EAAG;QACf,OAAOD,OAAO,CAACC,cAAc,CAACpB,MAAM,CAAC,CAAC,CAAC,CAAC;MAC1C,CAAC;MACD3rB,GAAGA,CAAClD,MAAM,EAAE2vB,IAAI,EAAE;QAChB,OAAOO,oBAAoB,CAAClwB,MAAM,CAAC,CAACmwB,QAAQ,CAACR,IAAI,CAAC;MACpD,CAAC;MACDS,OAAOA,CAACpwB,MAAM,EAAE;QACd,OAAOkwB,oBAAoB,CAAClwB,MAAM,CAAC;MACrC,CAAC;MACDyJ,GAAGA,CAACzJ,MAAM,EAAE2vB,IAAI,EAAEvyB,KAAK,EAAE;QACvB,MAAMizB,OAAO,GAAGrwB,MAAM,CAACswB,QAAQ,KAAKtwB,MAAM,CAACswB,QAAQ,GAAGrB,SAAS,CAAC,CAAC,CAAC;QAClEjvB,MAAM,CAAC2vB,IAAI,CAAC,GAAGU,OAAO,CAACV,IAAI,CAAC,GAAGvyB,KAAK;QACpC,OAAO4C,MAAM,CAAC4vB,KAAK;QACnB,OAAO,IAAI;MACb;IACF,CAAC,CAAC;EACJ;EACA,SAASW,cAAcA,CAACC,KAAK,EAAEpP,OAAO,EAAEqP,QAAQ,EAAEC,kBAAkB,EAAE;IACpE,MAAMjH,KAAK,GAAG;MACZ4F,UAAU,EAAE,KAAK;MACjBsB,MAAM,EAAEH,KAAK;MACbI,QAAQ,EAAExP,OAAO;MACjByP,SAAS,EAAEJ,QAAQ;MACnBK,MAAM,EAAE,IAAIpnB,GAAG,CAAC,CAAC;MACjBoX,YAAY,EAAEA,YAAY,CAAC0P,KAAK,EAAEE,kBAAkB,CAAC;MACrDK,UAAU,EAAGhP,GAAG,IAAKwO,cAAc,CAACC,KAAK,EAAEzO,GAAG,EAAE0O,QAAQ,EAAEC,kBAAkB,CAAC;MAC7ExN,QAAQ,EAAGhiB,KAAK,IAAKqvB,cAAc,CAACC,KAAK,CAACtN,QAAQ,CAAChiB,KAAK,CAAC,EAAEkgB,OAAO,EAAEqP,QAAQ,EAAEC,kBAAkB;IAClG,CAAC;IACD,OAAO,IAAIjB,KAAK,CAAChG,KAAK,EAAE;MACtBiG,cAAcA,CAAC1vB,MAAM,EAAE2vB,IAAI,EAAE;QAC3B,OAAO3vB,MAAM,CAAC2vB,IAAI,CAAC;QACnB,OAAOa,KAAK,CAACb,IAAI,CAAC;QAClB,OAAO,IAAI;MACb,CAAC;MACDhhB,GAAGA,CAAC3O,MAAM,EAAE2vB,IAAI,EAAEqB,QAAQ,EAAE;QAC1B,OAAOnB,OAAO,CAAC7vB,MAAM,EAAE2vB,IAAI,EACzB,MAAMsB,mBAAmB,CAACjxB,MAAM,EAAE2vB,IAAI,EAAEqB,QAAQ,CAAC,CAAC;MACtD,CAAC;MACDjB,wBAAwBA,CAAC/vB,MAAM,EAAE2vB,IAAI,EAAE;QACrC,OAAO3vB,MAAM,CAAC8gB,YAAY,CAACoQ,OAAO,GAC9BlB,OAAO,CAAC9sB,GAAG,CAACstB,KAAK,EAAEb,IAAI,CAAC,GAAG;UAAC7mB,UAAU,EAAE,IAAI;UAAED,YAAY,EAAE;QAAI,CAAC,GAAGxH,SAAS,GAC7E2uB,OAAO,CAACD,wBAAwB,CAACS,KAAK,EAAEb,IAAI,CAAC;MACnD,CAAC;MACDM,cAAcA,CAAA,EAAG;QACf,OAAOD,OAAO,CAACC,cAAc,CAACO,KAAK,CAAC;MACtC,CAAC;MACDttB,GAAGA,CAAClD,MAAM,EAAE2vB,IAAI,EAAE;QAChB,OAAOK,OAAO,CAAC9sB,GAAG,CAACstB,KAAK,EAAEb,IAAI,CAAC;MACjC,CAAC;MACDS,OAAOA,CAAA,EAAG;QACR,OAAOJ,OAAO,CAACI,OAAO,CAACI,KAAK,CAAC;MAC/B,CAAC;MACD/mB,GAAGA,CAACzJ,MAAM,EAAE2vB,IAAI,EAAEvyB,KAAK,EAAE;QACvBozB,KAAK,CAACb,IAAI,CAAC,GAAGvyB,KAAK;QACnB,OAAO4C,MAAM,CAAC2vB,IAAI,CAAC;QACnB,OAAO,IAAI;MACb;IACF,CAAC,CAAC;EACJ;EACA,SAAS7O,YAAYA,CAAC0P,KAAK,EAAE3M,QAAQ,GAAG;IAACsN,UAAU,EAAE,IAAI;IAAEC,SAAS,EAAE;EAAI,CAAC,EAAE;IAC3E,MAAM;MAACtN,WAAW,GAAGD,QAAQ,CAACsN,UAAU;MAAEnN,UAAU,GAAGH,QAAQ,CAACuN,SAAS;MAAEC,QAAQ,GAAGxN,QAAQ,CAACqN;IAAO,CAAC,GAAGV,KAAK;IAC/G,OAAO;MACLU,OAAO,EAAEG,QAAQ;MACjBF,UAAU,EAAErN,WAAW;MACvBsN,SAAS,EAAEpN,UAAU;MACrBsN,YAAY,EAAE1uB,UAAU,CAACkhB,WAAW,CAAC,GAAGA,WAAW,GAAG,MAAMA,WAAW;MACvEyN,WAAW,EAAE3uB,UAAU,CAACohB,UAAU,CAAC,GAAGA,UAAU,GAAG,MAAMA;IAC3D,CAAC;EACH;EACA,MAAMwN,OAAO,GAAGA,CAACC,MAAM,EAAErO,IAAI,KAAKqO,MAAM,GAAGA,MAAM,GAAGlvB,WAAW,CAAC6gB,IAAI,CAAC,GAAGA,IAAI;EAC5E,MAAMsO,gBAAgB,GAAGA,CAAC/B,IAAI,EAAEvyB,KAAK,KAAKS,QAAQ,CAACT,KAAK,CAAC,IAAIuyB,IAAI,KAAK,UAAU,KAC7EnyB,MAAM,CAACyyB,cAAc,CAAC7yB,KAAK,CAAC,KAAK,IAAI,IAAIA,KAAK,CAAC4P,WAAW,KAAKxP,MAAM,CAAC;EACzE,SAASqyB,OAAOA,CAAC7vB,MAAM,EAAE2vB,IAAI,EAAEgC,OAAO,EAAE;IACtC,IAAIn0B,MAAM,CAACC,SAAS,CAACuD,cAAc,CAACrD,IAAI,CAACqC,MAAM,EAAE2vB,IAAI,CAAC,EAAE;MACtD,OAAO3vB,MAAM,CAAC2vB,IAAI,CAAC;IACrB;IACA,MAAMvyB,KAAK,GAAGu0B,OAAO,CAAC,CAAC;IACvB3xB,MAAM,CAAC2vB,IAAI,CAAC,GAAGvyB,KAAK;IACpB,OAAOA,KAAK;EACd;EACA,SAAS6zB,mBAAmBA,CAACjxB,MAAM,EAAE2vB,IAAI,EAAEqB,QAAQ,EAAE;IACnD,MAAM;MAACL,MAAM;MAAEC,QAAQ;MAAEC,SAAS;MAAE/P,YAAY,EAAEL;IAAW,CAAC,GAAGzgB,MAAM;IACvE,IAAI5C,KAAK,GAAGuzB,MAAM,CAAChB,IAAI,CAAC;IACxB,IAAI/sB,UAAU,CAACxF,KAAK,CAAC,IAAIqjB,WAAW,CAAC6Q,YAAY,CAAC3B,IAAI,CAAC,EAAE;MACvDvyB,KAAK,GAAGw0B,kBAAkB,CAACjC,IAAI,EAAEvyB,KAAK,EAAE4C,MAAM,EAAEgxB,QAAQ,CAAC;IAC3D;IACA,IAAI3zB,OAAO,CAACD,KAAK,CAAC,IAAIA,KAAK,CAACgC,MAAM,EAAE;MAClChC,KAAK,GAAGy0B,aAAa,CAAClC,IAAI,EAAEvyB,KAAK,EAAE4C,MAAM,EAAEygB,WAAW,CAAC8Q,WAAW,CAAC;IACrE;IACA,IAAIG,gBAAgB,CAAC/B,IAAI,EAAEvyB,KAAK,CAAC,EAAE;MACjCA,KAAK,GAAGmzB,cAAc,CAACnzB,KAAK,EAAEwzB,QAAQ,EAAEC,SAAS,IAAIA,SAAS,CAAClB,IAAI,CAAC,EAAElP,WAAW,CAAC;IACpF;IACA,OAAOrjB,KAAK;EACd;EACA,SAASw0B,kBAAkBA,CAACjC,IAAI,EAAEvyB,KAAK,EAAE4C,MAAM,EAAEgxB,QAAQ,EAAE;IACzD,MAAM;MAACL,MAAM;MAAEC,QAAQ;MAAEC,SAAS;MAAEC;IAAM,CAAC,GAAG9wB,MAAM;IACpD,IAAI8wB,MAAM,CAAC5tB,GAAG,CAACysB,IAAI,CAAC,EAAE;MACpB,MAAM,IAAImC,KAAK,CAAC,sBAAsB,GAAGx0B,KAAK,CAACsM,IAAI,CAACknB,MAAM,CAAC,CAACiB,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,GAAGpC,IAAI,CAAC;IACvF;IACAmB,MAAM,CAACnnB,GAAG,CAACgmB,IAAI,CAAC;IAChBvyB,KAAK,GAAGA,KAAK,CAACwzB,QAAQ,EAAEC,SAAS,IAAIG,QAAQ,CAAC;IAC9CF,MAAM,CAACthB,MAAM,CAACmgB,IAAI,CAAC;IACnB,IAAI+B,gBAAgB,CAAC/B,IAAI,EAAEvyB,KAAK,CAAC,EAAE;MACjCA,KAAK,GAAG40B,iBAAiB,CAACrB,MAAM,CAACrB,OAAO,EAAEqB,MAAM,EAAEhB,IAAI,EAAEvyB,KAAK,CAAC;IAChE;IACA,OAAOA,KAAK;EACd;EACA,SAASy0B,aAAaA,CAAClC,IAAI,EAAEvyB,KAAK,EAAE4C,MAAM,EAAEuxB,WAAW,EAAE;IACvD,MAAM;MAACZ,MAAM;MAAEC,QAAQ;MAAEC,SAAS;MAAE/P,YAAY,EAAEL;IAAW,CAAC,GAAGzgB,MAAM;IACvE,IAAI2C,OAAO,CAACiuB,QAAQ,CAAChxB,KAAK,CAAC,IAAI2xB,WAAW,CAAC5B,IAAI,CAAC,EAAE;MAChDvyB,KAAK,GAAGA,KAAK,CAACwzB,QAAQ,CAAChxB,KAAK,GAAGxC,KAAK,CAACgC,MAAM,CAAC;IAC9C,CAAC,MAAM,IAAIvB,QAAQ,CAACT,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;MAC7B,MAAM60B,GAAG,GAAG70B,KAAK;MACjB,MAAMyxB,MAAM,GAAG8B,MAAM,CAACrB,OAAO,CAAC4C,MAAM,CAAC9qB,CAAC,IAAIA,CAAC,KAAK6qB,GAAG,CAAC;MACpD70B,KAAK,GAAG,EAAE;MACV,KAAK,MAAM6F,IAAI,IAAIgvB,GAAG,EAAE;QACtB,MAAMlwB,QAAQ,GAAGiwB,iBAAiB,CAACnD,MAAM,EAAE8B,MAAM,EAAEhB,IAAI,EAAE1sB,IAAI,CAAC;QAC9D7F,KAAK,CAACkF,IAAI,CAACiuB,cAAc,CAACxuB,QAAQ,EAAE6uB,QAAQ,EAAEC,SAAS,IAAIA,SAAS,CAAClB,IAAI,CAAC,EAAElP,WAAW,CAAC,CAAC;MAC3F;IACF;IACA,OAAOrjB,KAAK;EACd;EACA,SAAS+0B,eAAeA,CAACnD,QAAQ,EAAEW,IAAI,EAAEvyB,KAAK,EAAE;IAC9C,OAAOwF,UAAU,CAACosB,QAAQ,CAAC,GAAGA,QAAQ,CAACW,IAAI,EAAEvyB,KAAK,CAAC,GAAG4xB,QAAQ;EAChE;EACA,MAAMoD,QAAQ,GAAGA,CAAC/xB,GAAG,EAAEikB,MAAM,KAAKjkB,GAAG,KAAK,IAAI,GAAGikB,MAAM,GACnD,OAAOjkB,GAAG,KAAK,QAAQ,GAAGwB,gBAAgB,CAACyiB,MAAM,EAAEjkB,GAAG,CAAC,GAAGgB,SAAS;EACvE,SAASgxB,SAASA,CAAC5oB,GAAG,EAAE6oB,YAAY,EAAEjyB,GAAG,EAAEkyB,cAAc,EAAEn1B,KAAK,EAAE;IAChE,KAAK,MAAMknB,MAAM,IAAIgO,YAAY,EAAE;MACjC,MAAMpxB,KAAK,GAAGkxB,QAAQ,CAAC/xB,GAAG,EAAEikB,MAAM,CAAC;MACnC,IAAIpjB,KAAK,EAAE;QACTuI,GAAG,CAACE,GAAG,CAACzI,KAAK,CAAC;QACd,MAAM8tB,QAAQ,GAAGmD,eAAe,CAACjxB,KAAK,CAAC+iB,SAAS,EAAE5jB,GAAG,EAAEjD,KAAK,CAAC;QAC7D,IAAIuF,OAAO,CAACqsB,QAAQ,CAAC,IAAIA,QAAQ,KAAK3uB,GAAG,IAAI2uB,QAAQ,KAAKuD,cAAc,EAAE;UACxE,OAAOvD,QAAQ;QACjB;MACF,CAAC,MAAM,IAAI9tB,KAAK,KAAK,KAAK,IAAIyB,OAAO,CAAC4vB,cAAc,CAAC,IAAIlyB,GAAG,KAAKkyB,cAAc,EAAE;QAC/E,OAAO,IAAI;MACb;IACF;IACA,OAAO,KAAK;EACd;EACA,SAASP,iBAAiBA,CAACM,YAAY,EAAEvwB,QAAQ,EAAE4tB,IAAI,EAAEvyB,KAAK,EAAE;IAC9D,MAAM2xB,UAAU,GAAGhtB,QAAQ,CAACwtB,WAAW;IACvC,MAAMP,QAAQ,GAAGmD,eAAe,CAACpwB,QAAQ,CAACkiB,SAAS,EAAE0L,IAAI,EAAEvyB,KAAK,CAAC;IACjE,MAAMo1B,SAAS,GAAG,CAAC,GAAGF,YAAY,EAAE,GAAGvD,UAAU,CAAC;IAClD,MAAMtlB,GAAG,GAAG,IAAIC,GAAG,CAAC,CAAC;IACrBD,GAAG,CAACE,GAAG,CAACvM,KAAK,CAAC;IACd,IAAIiD,GAAG,GAAGoyB,gBAAgB,CAAChpB,GAAG,EAAE+oB,SAAS,EAAE7C,IAAI,EAAEX,QAAQ,IAAIW,IAAI,EAAEvyB,KAAK,CAAC;IACzE,IAAIiD,GAAG,KAAK,IAAI,EAAE;MAChB,OAAO,KAAK;IACd;IACA,IAAIsC,OAAO,CAACqsB,QAAQ,CAAC,IAAIA,QAAQ,KAAKW,IAAI,EAAE;MAC1CtvB,GAAG,GAAGoyB,gBAAgB,CAAChpB,GAAG,EAAE+oB,SAAS,EAAExD,QAAQ,EAAE3uB,GAAG,EAAEjD,KAAK,CAAC;MAC5D,IAAIiD,GAAG,KAAK,IAAI,EAAE;QAChB,OAAO,KAAK;MACd;IACF;IACA,OAAOuuB,eAAe,CAACtxB,KAAK,CAACsM,IAAI,CAACH,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEslB,UAAU,EAAEC,QAAQ,EAChE,MAAM0D,YAAY,CAAC3wB,QAAQ,EAAE4tB,IAAI,EAAEvyB,KAAK,CAAC,CAAC;EAC9C;EACA,SAASq1B,gBAAgBA,CAAChpB,GAAG,EAAE+oB,SAAS,EAAEnyB,GAAG,EAAE2uB,QAAQ,EAAE/rB,IAAI,EAAE;IAC7D,OAAO5C,GAAG,EAAE;MACVA,GAAG,GAAGgyB,SAAS,CAAC5oB,GAAG,EAAE+oB,SAAS,EAAEnyB,GAAG,EAAE2uB,QAAQ,EAAE/rB,IAAI,CAAC;IACtD;IACA,OAAO5C,GAAG;EACZ;EACA,SAASqyB,YAAYA,CAAC3wB,QAAQ,EAAE4tB,IAAI,EAAEvyB,KAAK,EAAE;IAC3C,MAAMknB,MAAM,GAAGviB,QAAQ,CAACytB,UAAU,CAAC,CAAC;IACpC,IAAI,EAAEG,IAAI,IAAIrL,MAAM,CAAC,EAAE;MACrBA,MAAM,CAACqL,IAAI,CAAC,GAAG,CAAC,CAAC;IACnB;IACA,MAAM3vB,MAAM,GAAGskB,MAAM,CAACqL,IAAI,CAAC;IAC3B,IAAItyB,OAAO,CAAC2C,MAAM,CAAC,IAAInC,QAAQ,CAACT,KAAK,CAAC,EAAE;MACtC,OAAOA,KAAK;IACd;IACA,OAAO4C,MAAM;EACf;EACA,SAAS8vB,oBAAoBA,CAACH,IAAI,EAAEb,QAAQ,EAAED,MAAM,EAAE2B,KAAK,EAAE;IAC3D,IAAIpzB,KAAK;IACT,KAAK,MAAMq0B,MAAM,IAAI3C,QAAQ,EAAE;MAC7B1xB,KAAK,GAAG8xB,QAAQ,CAACsC,OAAO,CAACC,MAAM,EAAE9B,IAAI,CAAC,EAAEd,MAAM,CAAC;MAC/C,IAAIlsB,OAAO,CAACvF,KAAK,CAAC,EAAE;QAClB,OAAOs0B,gBAAgB,CAAC/B,IAAI,EAAEvyB,KAAK,CAAC,GAChC40B,iBAAiB,CAACnD,MAAM,EAAE2B,KAAK,EAAEb,IAAI,EAAEvyB,KAAK,CAAC,GAC7CA,KAAK;MACX;IACF;EACF;EACA,SAAS8xB,QAAQA,CAAC7uB,GAAG,EAAEwuB,MAAM,EAAE;IAC7B,KAAK,MAAM3tB,KAAK,IAAI2tB,MAAM,EAAE;MAC1B,IAAI,CAAC3tB,KAAK,EAAE;QACV;MACF;MACA,MAAM9D,KAAK,GAAG8D,KAAK,CAACb,GAAG,CAAC;MACxB,IAAIsC,OAAO,CAACvF,KAAK,CAAC,EAAE;QAClB,OAAOA,KAAK;MACd;IACF;EACF;EACA,SAAS8yB,oBAAoBA,CAAClwB,MAAM,EAAE;IACpC,IAAIb,IAAI,GAAGa,MAAM,CAAC4vB,KAAK;IACvB,IAAI,CAACzwB,IAAI,EAAE;MACTA,IAAI,GAAGa,MAAM,CAAC4vB,KAAK,GAAG+C,wBAAwB,CAAC3yB,MAAM,CAACsvB,OAAO,CAAC;IAChE;IACA,OAAOnwB,IAAI;EACb;EACA,SAASwzB,wBAAwBA,CAAC9D,MAAM,EAAE;IACxC,MAAMplB,GAAG,GAAG,IAAIC,GAAG,CAAC,CAAC;IACrB,KAAK,MAAMxI,KAAK,IAAI2tB,MAAM,EAAE;MAC1B,KAAK,MAAMxuB,GAAG,IAAI7C,MAAM,CAAC2B,IAAI,CAAC+B,KAAK,CAAC,CAACgxB,MAAM,CAAC/xB,CAAC,IAAI,CAACA,CAAC,CAAC4jB,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE;QACpEta,GAAG,CAACE,GAAG,CAACtJ,GAAG,CAAC;MACd;IACF;IACA,OAAO/C,KAAK,CAACsM,IAAI,CAACH,GAAG,CAAC;EACxB;EACA,SAASmpB,2BAA2BA,CAACrnB,IAAI,EAAE0d,IAAI,EAAEhiB,KAAK,EAAE0E,KAAK,EAAE;IAC7D,MAAM;MAACE;IAAM,CAAC,GAAGN,IAAI;IACrB,MAAM;MAAClL,GAAG,GAAG;IAAG,CAAC,GAAG,IAAI,CAACwyB,QAAQ;IACjC,MAAMC,MAAM,GAAG,IAAIx1B,KAAK,CAACqO,KAAK,CAAC;IAC/B,IAAI1M,CAAC,EAAEO,IAAI,EAAEI,KAAK,EAAEqD,IAAI;IACxB,KAAKhE,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAGmM,KAAK,EAAE1M,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;MACvCW,KAAK,GAAGX,CAAC,GAAGgI,KAAK;MACjBhE,IAAI,GAAGgmB,IAAI,CAACrpB,KAAK,CAAC;MAClBkzB,MAAM,CAAC7zB,CAAC,CAAC,GAAG;QACV+R,CAAC,EAAEnF,MAAM,CAACknB,KAAK,CAAClxB,gBAAgB,CAACoB,IAAI,EAAE5C,GAAG,CAAC,EAAET,KAAK;MACpD,CAAC;IACH;IACA,OAAOkzB,MAAM;EACf;EAEA,MAAME,OAAO,GAAGj1B,MAAM,CAACi1B,OAAO,IAAI,KAAK;EACvC,MAAMC,QAAQ,GAAGA,CAACznB,MAAM,EAAEvM,CAAC,KAAKA,CAAC,GAAGuM,MAAM,CAACpM,MAAM,IAAI,CAACoM,MAAM,CAACvM,CAAC,CAAC,CAACi0B,IAAI,IAAI1nB,MAAM,CAACvM,CAAC,CAAC;EACjF,MAAMk0B,YAAY,GAAIjR,SAAS,IAAKA,SAAS,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG;EACjE,SAASkR,WAAWA,CAACC,UAAU,EAAEC,WAAW,EAAEC,UAAU,EAAE/U,CAAC,EAAE;IAC3D,MAAMrd,QAAQ,GAAGkyB,UAAU,CAACH,IAAI,GAAGI,WAAW,GAAGD,UAAU;IAC3D,MAAMjyB,OAAO,GAAGkyB,WAAW;IAC3B,MAAME,IAAI,GAAGD,UAAU,CAACL,IAAI,GAAGI,WAAW,GAAGC,UAAU;IACvD,MAAME,GAAG,GAAG9sB,qBAAqB,CAACvF,OAAO,EAAED,QAAQ,CAAC;IACpD,MAAMuyB,GAAG,GAAG/sB,qBAAqB,CAAC6sB,IAAI,EAAEpyB,OAAO,CAAC;IAChD,IAAIuyB,GAAG,GAAGF,GAAG,IAAIA,GAAG,GAAGC,GAAG,CAAC;IAC3B,IAAIE,GAAG,GAAGF,GAAG,IAAID,GAAG,GAAGC,GAAG,CAAC;IAC3BC,GAAG,GAAGzuB,KAAK,CAACyuB,GAAG,CAAC,GAAG,CAAC,GAAGA,GAAG;IAC1BC,GAAG,GAAG1uB,KAAK,CAAC0uB,GAAG,CAAC,GAAG,CAAC,GAAGA,GAAG;IAC1B,MAAMC,EAAE,GAAGrV,CAAC,GAAGmV,GAAG;IAClB,MAAMG,EAAE,GAAGtV,CAAC,GAAGoV,GAAG;IAClB,OAAO;MACLzyB,QAAQ,EAAE;QACRO,CAAC,EAAEN,OAAO,CAACM,CAAC,GAAGmyB,EAAE,IAAIL,IAAI,CAAC9xB,CAAC,GAAGP,QAAQ,CAACO,CAAC,CAAC;QACzCE,CAAC,EAAER,OAAO,CAACQ,CAAC,GAAGiyB,EAAE,IAAIL,IAAI,CAAC5xB,CAAC,GAAGT,QAAQ,CAACS,CAAC;MAC1C,CAAC;MACD4xB,IAAI,EAAE;QACJ9xB,CAAC,EAAEN,OAAO,CAACM,CAAC,GAAGoyB,EAAE,IAAIN,IAAI,CAAC9xB,CAAC,GAAGP,QAAQ,CAACO,CAAC,CAAC;QACzCE,CAAC,EAAER,OAAO,CAACQ,CAAC,GAAGkyB,EAAE,IAAIN,IAAI,CAAC5xB,CAAC,GAAGT,QAAQ,CAACS,CAAC;MAC1C;IACF,CAAC;EACH;EACA,SAASmyB,cAAcA,CAACvoB,MAAM,EAAEwoB,MAAM,EAAEC,EAAE,EAAE;IAC1C,MAAMC,SAAS,GAAG1oB,MAAM,CAACpM,MAAM;IAC/B,IAAI+0B,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,gBAAgB,EAAEC,YAAY;IACvD,IAAIC,UAAU,GAAGvB,QAAQ,CAACznB,MAAM,EAAE,CAAC,CAAC;IACpC,KAAK,IAAIvM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGi1B,SAAS,GAAG,CAAC,EAAE,EAAEj1B,CAAC,EAAE;MACtCs1B,YAAY,GAAGC,UAAU;MACzBA,UAAU,GAAGvB,QAAQ,CAACznB,MAAM,EAAEvM,CAAC,GAAG,CAAC,CAAC;MACpC,IAAI,CAACs1B,YAAY,IAAI,CAACC,UAAU,EAAE;QAChC;MACF;MACA,IAAInwB,YAAY,CAAC2vB,MAAM,CAAC/0B,CAAC,CAAC,EAAE,CAAC,EAAE+zB,OAAO,CAAC,EAAE;QACvCiB,EAAE,CAACh1B,CAAC,CAAC,GAAGg1B,EAAE,CAACh1B,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;QACrB;MACF;MACAk1B,MAAM,GAAGF,EAAE,CAACh1B,CAAC,CAAC,GAAG+0B,MAAM,CAAC/0B,CAAC,CAAC;MAC1Bm1B,KAAK,GAAGH,EAAE,CAACh1B,CAAC,GAAG,CAAC,CAAC,GAAG+0B,MAAM,CAAC/0B,CAAC,CAAC;MAC7Bq1B,gBAAgB,GAAGhxB,IAAI,CAACiB,GAAG,CAAC4vB,MAAM,EAAE,CAAC,CAAC,GAAG7wB,IAAI,CAACiB,GAAG,CAAC6vB,KAAK,EAAE,CAAC,CAAC;MAC3D,IAAIE,gBAAgB,IAAI,CAAC,EAAE;QACzB;MACF;MACAD,IAAI,GAAG,CAAC,GAAG/wB,IAAI,CAACuB,IAAI,CAACyvB,gBAAgB,CAAC;MACtCL,EAAE,CAACh1B,CAAC,CAAC,GAAGk1B,MAAM,GAAGE,IAAI,GAAGL,MAAM,CAAC/0B,CAAC,CAAC;MACjCg1B,EAAE,CAACh1B,CAAC,GAAG,CAAC,CAAC,GAAGm1B,KAAK,GAAGC,IAAI,GAAGL,MAAM,CAAC/0B,CAAC,CAAC;IACtC;EACF;EACA,SAASw1B,eAAeA,CAACjpB,MAAM,EAAEyoB,EAAE,EAAE/R,SAAS,GAAG,GAAG,EAAE;IACpD,MAAMwS,SAAS,GAAGvB,YAAY,CAACjR,SAAS,CAAC;IACzC,MAAMgS,SAAS,GAAG1oB,MAAM,CAACpM,MAAM;IAC/B,IAAIu1B,KAAK,EAAEC,WAAW,EAAEL,YAAY;IACpC,IAAIC,UAAU,GAAGvB,QAAQ,CAACznB,MAAM,EAAE,CAAC,CAAC;IACpC,KAAK,IAAIvM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGi1B,SAAS,EAAE,EAAEj1B,CAAC,EAAE;MAClC21B,WAAW,GAAGL,YAAY;MAC1BA,YAAY,GAAGC,UAAU;MACzBA,UAAU,GAAGvB,QAAQ,CAACznB,MAAM,EAAEvM,CAAC,GAAG,CAAC,CAAC;MACpC,IAAI,CAACs1B,YAAY,EAAE;QACjB;MACF;MACA,MAAMM,MAAM,GAAGN,YAAY,CAACrS,SAAS,CAAC;MACtC,MAAM4S,MAAM,GAAGP,YAAY,CAACG,SAAS,CAAC;MACtC,IAAIE,WAAW,EAAE;QACfD,KAAK,GAAG,CAACE,MAAM,GAAGD,WAAW,CAAC1S,SAAS,CAAC,IAAI,CAAC;QAC7CqS,YAAY,CAAE,MAAKrS,SAAU,EAAC,CAAC,GAAG2S,MAAM,GAAGF,KAAK;QAChDJ,YAAY,CAAE,MAAKG,SAAU,EAAC,CAAC,GAAGI,MAAM,GAAGH,KAAK,GAAGV,EAAE,CAACh1B,CAAC,CAAC;MAC1D;MACA,IAAIu1B,UAAU,EAAE;QACdG,KAAK,GAAG,CAACH,UAAU,CAACtS,SAAS,CAAC,GAAG2S,MAAM,IAAI,CAAC;QAC5CN,YAAY,CAAE,MAAKrS,SAAU,EAAC,CAAC,GAAG2S,MAAM,GAAGF,KAAK;QAChDJ,YAAY,CAAE,MAAKG,SAAU,EAAC,CAAC,GAAGI,MAAM,GAAGH,KAAK,GAAGV,EAAE,CAACh1B,CAAC,CAAC;MAC1D;IACF;EACF;EACA,SAAS81B,mBAAmBA,CAACvpB,MAAM,EAAE0W,SAAS,GAAG,GAAG,EAAE;IACpD,MAAMwS,SAAS,GAAGvB,YAAY,CAACjR,SAAS,CAAC;IACzC,MAAMgS,SAAS,GAAG1oB,MAAM,CAACpM,MAAM;IAC/B,MAAM40B,MAAM,GAAG12B,KAAK,CAAC42B,SAAS,CAAC,CAACxI,IAAI,CAAC,CAAC,CAAC;IACvC,MAAMuI,EAAE,GAAG32B,KAAK,CAAC42B,SAAS,CAAC;IAC3B,IAAIj1B,CAAC,EAAE21B,WAAW,EAAEL,YAAY;IAChC,IAAIC,UAAU,GAAGvB,QAAQ,CAACznB,MAAM,EAAE,CAAC,CAAC;IACpC,KAAKvM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGi1B,SAAS,EAAE,EAAEj1B,CAAC,EAAE;MAC9B21B,WAAW,GAAGL,YAAY;MAC1BA,YAAY,GAAGC,UAAU;MACzBA,UAAU,GAAGvB,QAAQ,CAACznB,MAAM,EAAEvM,CAAC,GAAG,CAAC,CAAC;MACpC,IAAI,CAACs1B,YAAY,EAAE;QACjB;MACF;MACA,IAAIC,UAAU,EAAE;QACd,MAAMQ,UAAU,GAAGR,UAAU,CAACtS,SAAS,CAAC,GAAGqS,YAAY,CAACrS,SAAS,CAAC;QAClE8R,MAAM,CAAC/0B,CAAC,CAAC,GAAG+1B,UAAU,KAAK,CAAC,GAAG,CAACR,UAAU,CAACE,SAAS,CAAC,GAAGH,YAAY,CAACG,SAAS,CAAC,IAAIM,UAAU,GAAG,CAAC;MACnG;MACAf,EAAE,CAACh1B,CAAC,CAAC,GAAG,CAAC21B,WAAW,GAAGZ,MAAM,CAAC/0B,CAAC,CAAC,GAC5B,CAACu1B,UAAU,GAAGR,MAAM,CAAC/0B,CAAC,GAAG,CAAC,CAAC,GAC1B+E,IAAI,CAACgwB,MAAM,CAAC/0B,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK+E,IAAI,CAACgwB,MAAM,CAAC/0B,CAAC,CAAC,CAAC,GAAI,CAAC,GAC7C,CAAC+0B,MAAM,CAAC/0B,CAAC,GAAG,CAAC,CAAC,GAAG+0B,MAAM,CAAC/0B,CAAC,CAAC,IAAI,CAAC;IACrC;IACA80B,cAAc,CAACvoB,MAAM,EAAEwoB,MAAM,EAAEC,EAAE,CAAC;IAClCQ,eAAe,CAACjpB,MAAM,EAAEyoB,EAAE,EAAE/R,SAAS,CAAC;EACxC;EACA,SAAS+S,eAAeA,CAACC,EAAE,EAAExvB,GAAG,EAAEC,GAAG,EAAE;IACrC,OAAOrC,IAAI,CAACqC,GAAG,CAACrC,IAAI,CAACoC,GAAG,CAACwvB,EAAE,EAAEvvB,GAAG,CAAC,EAAED,GAAG,CAAC;EACzC;EACA,SAASyvB,eAAeA,CAAC3pB,MAAM,EAAEugB,IAAI,EAAE;IACrC,IAAI9sB,CAAC,EAAEO,IAAI,EAAEssB,KAAK,EAAEsJ,MAAM,EAAEC,UAAU;IACtC,IAAIC,UAAU,GAAGzJ,cAAc,CAACrgB,MAAM,CAAC,CAAC,CAAC,EAAEugB,IAAI,CAAC;IAChD,KAAK9sB,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAGgM,MAAM,CAACpM,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;MAC/Co2B,UAAU,GAAGD,MAAM;MACnBA,MAAM,GAAGE,UAAU;MACnBA,UAAU,GAAGr2B,CAAC,GAAGO,IAAI,GAAG,CAAC,IAAIqsB,cAAc,CAACrgB,MAAM,CAACvM,CAAC,GAAG,CAAC,CAAC,EAAE8sB,IAAI,CAAC;MAChE,IAAI,CAACqJ,MAAM,EAAE;QACX;MACF;MACAtJ,KAAK,GAAGtgB,MAAM,CAACvM,CAAC,CAAC;MACjB,IAAIo2B,UAAU,EAAE;QACdvJ,KAAK,CAACW,IAAI,GAAGwI,eAAe,CAACnJ,KAAK,CAACW,IAAI,EAAEV,IAAI,CAAC7gB,IAAI,EAAE6gB,IAAI,CAAC5gB,KAAK,CAAC;QAC/D2gB,KAAK,CAACa,IAAI,GAAGsI,eAAe,CAACnJ,KAAK,CAACa,IAAI,EAAEZ,IAAI,CAACtG,GAAG,EAAEsG,IAAI,CAACrG,MAAM,CAAC;MACjE;MACA,IAAI4P,UAAU,EAAE;QACdxJ,KAAK,CAACY,IAAI,GAAGuI,eAAe,CAACnJ,KAAK,CAACY,IAAI,EAAEX,IAAI,CAAC7gB,IAAI,EAAE6gB,IAAI,CAAC5gB,KAAK,CAAC;QAC/D2gB,KAAK,CAACc,IAAI,GAAGqI,eAAe,CAACnJ,KAAK,CAACc,IAAI,EAAEb,IAAI,CAACtG,GAAG,EAAEsG,IAAI,CAACrG,MAAM,CAAC;MACjE;IACF;EACF;EACA,SAAS6P,0BAA0BA,CAAC/pB,MAAM,EAAEhL,OAAO,EAAEurB,IAAI,EAAEyJ,IAAI,EAAEtT,SAAS,EAAE;IAC1E,IAAIjjB,CAAC,EAAEO,IAAI,EAAEssB,KAAK,EAAE2J,aAAa;IACjC,IAAIj1B,OAAO,CAACk1B,QAAQ,EAAE;MACpBlqB,MAAM,GAAGA,MAAM,CAAC0mB,MAAM,CAAEgD,EAAE,IAAK,CAACA,EAAE,CAAChC,IAAI,CAAC;IAC1C;IACA,IAAI1yB,OAAO,CAACm1B,sBAAsB,KAAK,UAAU,EAAE;MACjDZ,mBAAmB,CAACvpB,MAAM,EAAE0W,SAAS,CAAC;IACxC,CAAC,MAAM;MACL,IAAI0T,IAAI,GAAGJ,IAAI,GAAGhqB,MAAM,CAACA,MAAM,CAACpM,MAAM,GAAG,CAAC,CAAC,GAAGoM,MAAM,CAAC,CAAC,CAAC;MACvD,KAAKvM,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAGgM,MAAM,CAACpM,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;QAC/C6sB,KAAK,GAAGtgB,MAAM,CAACvM,CAAC,CAAC;QACjBw2B,aAAa,GAAGrC,WAAW,CACzBwC,IAAI,EACJ9J,KAAK,EACLtgB,MAAM,CAAClI,IAAI,CAACoC,GAAG,CAACzG,CAAC,GAAG,CAAC,EAAEO,IAAI,IAAIg2B,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAGh2B,IAAI,CAAC,EACrDgB,OAAO,CAACq1B,OACV,CAAC;QACD/J,KAAK,CAACW,IAAI,GAAGgJ,aAAa,CAACt0B,QAAQ,CAACO,CAAC;QACrCoqB,KAAK,CAACa,IAAI,GAAG8I,aAAa,CAACt0B,QAAQ,CAACS,CAAC;QACrCkqB,KAAK,CAACY,IAAI,GAAG+I,aAAa,CAACjC,IAAI,CAAC9xB,CAAC;QACjCoqB,KAAK,CAACc,IAAI,GAAG6I,aAAa,CAACjC,IAAI,CAAC5xB,CAAC;QACjCg0B,IAAI,GAAG9J,KAAK;MACd;IACF;IACA,IAAItrB,OAAO,CAAC20B,eAAe,EAAE;MAC3BA,eAAe,CAAC3pB,MAAM,EAAEugB,IAAI,CAAC;IAC/B;EACF;EAEA,MAAM+J,MAAM,GAAItX,CAAC,IAAKA,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAK,CAAC;EACxC,MAAMuX,SAAS,GAAGA,CAACvX,CAAC,EAAEpX,CAAC,EAAEnB,CAAC,KAAK,EAAE3C,IAAI,CAACiB,GAAG,CAAC,CAAC,EAAE,EAAE,IAAIia,CAAC,IAAI,CAAC,CAAC,CAAC,GAAGlb,IAAI,CAACgoB,GAAG,CAAC,CAAC9M,CAAC,GAAGpX,CAAC,IAAI7D,GAAG,GAAG0C,CAAC,CAAC,CAAC;EAC1F,MAAM+vB,UAAU,GAAGA,CAACxX,CAAC,EAAEpX,CAAC,EAAEnB,CAAC,KAAK3C,IAAI,CAACiB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAGia,CAAC,CAAC,GAAGlb,IAAI,CAACgoB,GAAG,CAAC,CAAC9M,CAAC,GAAGpX,CAAC,IAAI7D,GAAG,GAAG0C,CAAC,CAAC,GAAG,CAAC;EACtF,MAAMgwB,OAAO,GAAG;IACdC,MAAM,EAAE1X,CAAC,IAAIA,CAAC;IACd2X,UAAU,EAAE3X,CAAC,IAAIA,CAAC,GAAGA,CAAC;IACtB4X,WAAW,EAAE5X,CAAC,IAAI,CAACA,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC;IAC9B6X,aAAa,EAAE7X,CAAC,IAAK,CAACA,CAAC,IAAI,GAAG,IAAI,CAAC,GAC/B,GAAG,GAAGA,CAAC,GAAGA,CAAC,GACX,CAAC,GAAG,IAAK,EAAEA,CAAC,IAAKA,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IAChC8X,WAAW,EAAE9X,CAAC,IAAIA,CAAC,GAAGA,CAAC,GAAGA,CAAC;IAC3B+X,YAAY,EAAE/X,CAAC,IAAI,CAACA,CAAC,IAAI,CAAC,IAAIA,CAAC,GAAGA,CAAC,GAAG,CAAC;IACvCgY,cAAc,EAAEhY,CAAC,IAAK,CAACA,CAAC,IAAI,GAAG,IAAI,CAAC,GAChC,GAAG,GAAGA,CAAC,GAAGA,CAAC,GAAGA,CAAC,GACf,GAAG,IAAI,CAACA,CAAC,IAAI,CAAC,IAAIA,CAAC,GAAGA,CAAC,GAAG,CAAC,CAAC;IAChCiY,WAAW,EAAEjY,CAAC,IAAIA,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAGA,CAAC;IAC/BkY,YAAY,EAAElY,CAAC,IAAI,EAAE,CAACA,CAAC,IAAI,CAAC,IAAIA,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAG,CAAC,CAAC;IAC9CmY,cAAc,EAAEnY,CAAC,IAAK,CAACA,CAAC,IAAI,GAAG,IAAI,CAAC,GAChC,GAAG,GAAGA,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAGA,CAAC,GACnB,CAAC,GAAG,IAAI,CAACA,CAAC,IAAI,CAAC,IAAIA,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAG,CAAC,CAAC;IACrCoY,WAAW,EAAEpY,CAAC,IAAIA,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAGA,CAAC;IACnCqY,YAAY,EAAErY,CAAC,IAAI,CAACA,CAAC,IAAI,CAAC,IAAIA,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAG,CAAC;IAC/CsY,cAAc,EAAEtY,CAAC,IAAK,CAACA,CAAC,IAAI,GAAG,IAAI,CAAC,GAChC,GAAG,GAAGA,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAGA,CAAC,GACvB,GAAG,IAAI,CAACA,CAAC,IAAI,CAAC,IAAIA,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAG,CAAC,CAAC;IACxCuY,UAAU,EAAEvY,CAAC,IAAI,CAAClb,IAAI,CAACioB,GAAG,CAAC/M,CAAC,GAAG5a,OAAO,CAAC,GAAG,CAAC;IAC3CozB,WAAW,EAAExY,CAAC,IAAIlb,IAAI,CAACgoB,GAAG,CAAC9M,CAAC,GAAG5a,OAAO,CAAC;IACvCqzB,aAAa,EAAEzY,CAAC,IAAI,CAAC,GAAG,IAAIlb,IAAI,CAACioB,GAAG,CAACloB,EAAE,GAAGmb,CAAC,CAAC,GAAG,CAAC,CAAC;IACjD0Y,UAAU,EAAE1Y,CAAC,IAAKA,CAAC,KAAK,CAAC,GAAI,CAAC,GAAGlb,IAAI,CAACiB,GAAG,CAAC,CAAC,EAAE,EAAE,IAAIia,CAAC,GAAG,CAAC,CAAC,CAAC;IAC1D2Y,WAAW,EAAE3Y,CAAC,IAAKA,CAAC,KAAK,CAAC,GAAI,CAAC,GAAG,CAAClb,IAAI,CAACiB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAGia,CAAC,CAAC,GAAG,CAAC;IAC3D4Y,aAAa,EAAE5Y,CAAC,IAAIsX,MAAM,CAACtX,CAAC,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAG,GAAG,GACvC,GAAG,GAAGlb,IAAI,CAACiB,GAAG,CAAC,CAAC,EAAE,EAAE,IAAIia,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GACnC,GAAG,IAAI,CAAClb,IAAI,CAACiB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,IAAIia,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC/C6Y,UAAU,EAAE7Y,CAAC,IAAKA,CAAC,IAAI,CAAC,GAAIA,CAAC,GAAG,EAAElb,IAAI,CAACuB,IAAI,CAAC,CAAC,GAAG2Z,CAAC,GAAGA,CAAC,CAAC,GAAG,CAAC,CAAC;IAC3D8Y,WAAW,EAAE9Y,CAAC,IAAIlb,IAAI,CAACuB,IAAI,CAAC,CAAC,GAAG,CAAC2Z,CAAC,IAAI,CAAC,IAAIA,CAAC,CAAC;IAC7C+Y,aAAa,EAAE/Y,CAAC,IAAK,CAACA,CAAC,IAAI,GAAG,IAAI,CAAC,GAC/B,CAAC,GAAG,IAAIlb,IAAI,CAACuB,IAAI,CAAC,CAAC,GAAG2Z,CAAC,GAAGA,CAAC,CAAC,GAAG,CAAC,CAAC,GACjC,GAAG,IAAIlb,IAAI,CAACuB,IAAI,CAAC,CAAC,GAAG,CAAC2Z,CAAC,IAAI,CAAC,IAAIA,CAAC,CAAC,GAAG,CAAC,CAAC;IAC3CgZ,aAAa,EAAEhZ,CAAC,IAAIsX,MAAM,CAACtX,CAAC,CAAC,GAAGA,CAAC,GAAGuX,SAAS,CAACvX,CAAC,EAAE,KAAK,EAAE,GAAG,CAAC;IAC5DiZ,cAAc,EAAEjZ,CAAC,IAAIsX,MAAM,CAACtX,CAAC,CAAC,GAAGA,CAAC,GAAGwX,UAAU,CAACxX,CAAC,EAAE,KAAK,EAAE,GAAG,CAAC;IAC9DkZ,gBAAgBA,CAAClZ,CAAC,EAAE;MAClB,MAAMpX,CAAC,GAAG,MAAM;MAChB,MAAMnB,CAAC,GAAG,IAAI;MACd,OAAO6vB,MAAM,CAACtX,CAAC,CAAC,GAAGA,CAAC,GAClBA,CAAC,GAAG,GAAG,GACH,GAAG,GAAGuX,SAAS,CAACvX,CAAC,GAAG,CAAC,EAAEpX,CAAC,EAAEnB,CAAC,CAAC,GAC5B,GAAG,GAAG,GAAG,GAAG+vB,UAAU,CAACxX,CAAC,GAAG,CAAC,GAAG,CAAC,EAAEpX,CAAC,EAAEnB,CAAC,CAAC;IAC/C,CAAC;IACD0xB,UAAUA,CAACnZ,CAAC,EAAE;MACZ,MAAMpX,CAAC,GAAG,OAAO;MACjB,OAAOoX,CAAC,GAAGA,CAAC,IAAI,CAACpX,CAAC,GAAG,CAAC,IAAIoX,CAAC,GAAGpX,CAAC,CAAC;IAClC,CAAC;IACDwwB,WAAWA,CAACpZ,CAAC,EAAE;MACb,MAAMpX,CAAC,GAAG,OAAO;MACjB,OAAO,CAACoX,CAAC,IAAI,CAAC,IAAIA,CAAC,IAAI,CAACpX,CAAC,GAAG,CAAC,IAAIoX,CAAC,GAAGpX,CAAC,CAAC,GAAG,CAAC;IAC7C,CAAC;IACDywB,aAAaA,CAACrZ,CAAC,EAAE;MACf,IAAIpX,CAAC,GAAG,OAAO;MACf,IAAI,CAACoX,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE;QAClB,OAAO,GAAG,IAAIA,CAAC,GAAGA,CAAC,IAAI,CAAC,CAACpX,CAAC,IAAK,KAAM,IAAI,CAAC,IAAIoX,CAAC,GAAGpX,CAAC,CAAC,CAAC;MACvD;MACA,OAAO,GAAG,IAAI,CAACoX,CAAC,IAAI,CAAC,IAAIA,CAAC,IAAI,CAAC,CAACpX,CAAC,IAAK,KAAM,IAAI,CAAC,IAAIoX,CAAC,GAAGpX,CAAC,CAAC,GAAG,CAAC,CAAC;IAClE,CAAC;IACD0wB,YAAY,EAAEtZ,CAAC,IAAI,CAAC,GAAGyX,OAAO,CAAC8B,aAAa,CAAC,CAAC,GAAGvZ,CAAC,CAAC;IACnDuZ,aAAaA,CAACvZ,CAAC,EAAE;MACf,MAAMpM,CAAC,GAAG,MAAM;MAChB,MAAM3B,CAAC,GAAG,IAAI;MACd,IAAI+N,CAAC,GAAI,CAAC,GAAG/N,CAAE,EAAE;QACf,OAAO2B,CAAC,GAAGoM,CAAC,GAAGA,CAAC;MAClB;MACA,IAAIA,CAAC,GAAI,CAAC,GAAG/N,CAAE,EAAE;QACf,OAAO2B,CAAC,IAAIoM,CAAC,IAAK,GAAG,GAAG/N,CAAE,CAAC,GAAG+N,CAAC,GAAG,IAAI;MACxC;MACA,IAAIA,CAAC,GAAI,GAAG,GAAG/N,CAAE,EAAE;QACjB,OAAO2B,CAAC,IAAIoM,CAAC,IAAK,IAAI,GAAG/N,CAAE,CAAC,GAAG+N,CAAC,GAAG,MAAM;MAC3C;MACA,OAAOpM,CAAC,IAAIoM,CAAC,IAAK,KAAK,GAAG/N,CAAE,CAAC,GAAG+N,CAAC,GAAG,QAAQ;IAC9C,CAAC;IACDwZ,eAAe,EAAExZ,CAAC,IAAKA,CAAC,GAAG,GAAG,GAC1ByX,OAAO,CAAC6B,YAAY,CAACtZ,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GACjCyX,OAAO,CAAC8B,aAAa,CAACvZ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG;EAC/C,CAAC;EAED,SAASyZ,YAAYA,CAAC3lB,EAAE,EAAEC,EAAE,EAAEiM,CAAC,EAAE4D,IAAI,EAAE;IACrC,OAAO;MACL1gB,CAAC,EAAE4Q,EAAE,CAAC5Q,CAAC,GAAG8c,CAAC,IAAIjM,EAAE,CAAC7Q,CAAC,GAAG4Q,EAAE,CAAC5Q,CAAC,CAAC;MAC3BE,CAAC,EAAE0Q,EAAE,CAAC1Q,CAAC,GAAG4c,CAAC,IAAIjM,EAAE,CAAC3Q,CAAC,GAAG0Q,EAAE,CAAC1Q,CAAC;IAC5B,CAAC;EACH;EACA,SAASs2B,qBAAqBA,CAAC5lB,EAAE,EAAEC,EAAE,EAAEiM,CAAC,EAAE4D,IAAI,EAAE;IAC9C,OAAO;MACL1gB,CAAC,EAAE4Q,EAAE,CAAC5Q,CAAC,GAAG8c,CAAC,IAAIjM,EAAE,CAAC7Q,CAAC,GAAG4Q,EAAE,CAAC5Q,CAAC,CAAC;MAC3BE,CAAC,EAAEwgB,IAAI,KAAK,QAAQ,GAAG5D,CAAC,GAAG,GAAG,GAAGlM,EAAE,CAAC1Q,CAAC,GAAG2Q,EAAE,CAAC3Q,CAAC,GAC1CwgB,IAAI,KAAK,OAAO,GAAG5D,CAAC,GAAG,CAAC,GAAGlM,EAAE,CAAC1Q,CAAC,GAAG2Q,EAAE,CAAC3Q,CAAC,GACtC4c,CAAC,GAAG,CAAC,GAAGjM,EAAE,CAAC3Q,CAAC,GAAG0Q,EAAE,CAAC1Q;IACtB,CAAC;EACH;EACA,SAASu2B,oBAAoBA,CAAC7lB,EAAE,EAAEC,EAAE,EAAEiM,CAAC,EAAE4D,IAAI,EAAE;IAC7C,MAAMgW,GAAG,GAAG;MAAC12B,CAAC,EAAE4Q,EAAE,CAACoa,IAAI;MAAE9qB,CAAC,EAAE0Q,EAAE,CAACsa;IAAI,CAAC;IACpC,MAAMyL,GAAG,GAAG;MAAC32B,CAAC,EAAE6Q,EAAE,CAACka,IAAI;MAAE7qB,CAAC,EAAE2Q,EAAE,CAACoa;IAAI,CAAC;IACpC,MAAM7pB,CAAC,GAAGm1B,YAAY,CAAC3lB,EAAE,EAAE8lB,GAAG,EAAE5Z,CAAC,CAAC;IAClC,MAAMzb,CAAC,GAAGk1B,YAAY,CAACG,GAAG,EAAEC,GAAG,EAAE7Z,CAAC,CAAC;IACnC,MAAMhO,CAAC,GAAGynB,YAAY,CAACI,GAAG,EAAE9lB,EAAE,EAAEiM,CAAC,CAAC;IAClC,MAAM/N,CAAC,GAAGwnB,YAAY,CAACn1B,CAAC,EAAEC,CAAC,EAAEyb,CAAC,CAAC;IAC/B,MAAMpb,CAAC,GAAG60B,YAAY,CAACl1B,CAAC,EAAEyN,CAAC,EAAEgO,CAAC,CAAC;IAC/B,OAAOyZ,YAAY,CAACxnB,CAAC,EAAErN,CAAC,EAAEob,CAAC,CAAC;EAC9B;EAEA,MAAM8Z,SAAS,GAAG,IAAInrB,GAAG,CAAC,CAAC;EAC3B,SAASorB,eAAeA,CAACC,MAAM,EAAEh4B,OAAO,EAAE;IACxCA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;IACvB,MAAMi4B,QAAQ,GAAGD,MAAM,GAAGE,IAAI,CAACC,SAAS,CAACn4B,OAAO,CAAC;IACjD,IAAIo4B,SAAS,GAAGN,SAAS,CAAC3pB,GAAG,CAAC8pB,QAAQ,CAAC;IACvC,IAAI,CAACG,SAAS,EAAE;MACdA,SAAS,GAAG,IAAIC,IAAI,CAACC,YAAY,CAACN,MAAM,EAAEh4B,OAAO,CAAC;MAClD83B,SAAS,CAAC7uB,GAAG,CAACgvB,QAAQ,EAAEG,SAAS,CAAC;IACpC;IACA,OAAOA,SAAS;EAClB;EACA,SAASG,YAAYA,CAACC,GAAG,EAAER,MAAM,EAAEh4B,OAAO,EAAE;IAC1C,OAAO+3B,eAAe,CAACC,MAAM,EAAEh4B,OAAO,CAAC,CAACy4B,MAAM,CAACD,GAAG,CAAC;EACrD;EAEA,MAAME,WAAW,GAAG,IAAIC,MAAM,CAAC,sCAAsC,CAAC;EACtE,MAAMC,UAAU,GAAG,IAAID,MAAM,CAAC,uEAAuE,CAAC;EACtG,SAASE,YAAYA,CAACj8B,KAAK,EAAE4F,IAAI,EAAE;IACjC,MAAM6lB,OAAO,GAAG,CAAC,EAAE,GAAGzrB,KAAK,EAAE0rB,KAAK,CAACoQ,WAAW,CAAC;IAC/C,IAAI,CAACrQ,OAAO,IAAIA,OAAO,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;MACvC,OAAO7lB,IAAI,GAAG,GAAG;IACnB;IACA5F,KAAK,GAAG,CAACyrB,OAAO,CAAC,CAAC,CAAC;IACnB,QAAQA,OAAO,CAAC,CAAC,CAAC;MAClB,KAAK,IAAI;QACP,OAAOzrB,KAAK;MACd,KAAK,GAAG;QACNA,KAAK,IAAI,GAAG;QACZ;IACF;IACA,OAAO4F,IAAI,GAAG5F,KAAK;EACrB;EACA,MAAMk8B,YAAY,GAAG73B,CAAC,IAAI,CAACA,CAAC,IAAI,CAAC;EACjC,SAAS83B,iBAAiBA,CAACn8B,KAAK,EAAEo8B,KAAK,EAAE;IACvC,MAAMroB,GAAG,GAAG,CAAC,CAAC;IACd,MAAMsoB,QAAQ,GAAG57B,QAAQ,CAAC27B,KAAK,CAAC;IAChC,MAAMr6B,IAAI,GAAGs6B,QAAQ,GAAGj8B,MAAM,CAAC2B,IAAI,CAACq6B,KAAK,CAAC,GAAGA,KAAK;IAClD,MAAME,IAAI,GAAG77B,QAAQ,CAACT,KAAK,CAAC,GACxBq8B,QAAQ,GACN9J,IAAI,IAAIxxB,cAAc,CAACf,KAAK,CAACuyB,IAAI,CAAC,EAAEvyB,KAAK,CAACo8B,KAAK,CAAC7J,IAAI,CAAC,CAAC,CAAC,GACvDA,IAAI,IAAIvyB,KAAK,CAACuyB,IAAI,CAAC,GACrB,MAAMvyB,KAAK;IACf,KAAK,MAAMuyB,IAAI,IAAIxwB,IAAI,EAAE;MACvBgS,GAAG,CAACwe,IAAI,CAAC,GAAG2J,YAAY,CAACI,IAAI,CAAC/J,IAAI,CAAC,CAAC;IACtC;IACA,OAAOxe,GAAG;EACZ;EACA,SAASwoB,MAAMA,CAACv8B,KAAK,EAAE;IACrB,OAAOm8B,iBAAiB,CAACn8B,KAAK,EAAE;MAACqoB,GAAG,EAAE,GAAG;MAAEta,KAAK,EAAE,GAAG;MAAEua,MAAM,EAAE,GAAG;MAAExa,IAAI,EAAE;IAAG,CAAC,CAAC;EACjF;EACA,SAAS0uB,aAAaA,CAACx8B,KAAK,EAAE;IAC5B,OAAOm8B,iBAAiB,CAACn8B,KAAK,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,YAAY,EAAE,aAAa,CAAC,CAAC;EACvF;EACA,SAASy8B,SAASA,CAACz8B,KAAK,EAAE;IACxB,MAAM0E,GAAG,GAAG63B,MAAM,CAACv8B,KAAK,CAAC;IACzB0E,GAAG,CAACyjB,KAAK,GAAGzjB,GAAG,CAACoJ,IAAI,GAAGpJ,GAAG,CAACqJ,KAAK;IAChCrJ,GAAG,CAAC0jB,MAAM,GAAG1jB,GAAG,CAAC2jB,GAAG,GAAG3jB,GAAG,CAAC4jB,MAAM;IACjC,OAAO5jB,GAAG;EACZ;EACA,SAASg4B,MAAMA,CAACt5B,OAAO,EAAEwuB,QAAQ,EAAE;IACjCxuB,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;IACvBwuB,QAAQ,GAAGA,QAAQ,IAAInL,QAAQ,CAACpC,IAAI;IACpC,IAAIze,IAAI,GAAG7E,cAAc,CAACqC,OAAO,CAACwC,IAAI,EAAEgsB,QAAQ,CAAChsB,IAAI,CAAC;IACtD,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;MAC5BA,IAAI,GAAG4a,QAAQ,CAAC5a,IAAI,EAAE,EAAE,CAAC;IAC3B;IACA,IAAI2e,KAAK,GAAGxjB,cAAc,CAACqC,OAAO,CAACmhB,KAAK,EAAEqN,QAAQ,CAACrN,KAAK,CAAC;IACzD,IAAIA,KAAK,IAAI,CAAC,CAAC,EAAE,GAAGA,KAAK,EAAEmH,KAAK,CAACsQ,UAAU,CAAC,EAAE;MAC5C93B,OAAO,CAACC,IAAI,CAAC,iCAAiC,GAAGogB,KAAK,GAAG,GAAG,CAAC;MAC7DA,KAAK,GAAG,EAAE;IACZ;IACA,MAAMF,IAAI,GAAG;MACXC,MAAM,EAAEvjB,cAAc,CAACqC,OAAO,CAACkhB,MAAM,EAAEsN,QAAQ,CAACtN,MAAM,CAAC;MACvDE,UAAU,EAAEyX,YAAY,CAACl7B,cAAc,CAACqC,OAAO,CAACohB,UAAU,EAAEoN,QAAQ,CAACpN,UAAU,CAAC,EAAE5e,IAAI,CAAC;MACvFA,IAAI;MACJ2e,KAAK;MACLrC,MAAM,EAAEnhB,cAAc,CAACqC,OAAO,CAAC8e,MAAM,EAAE0P,QAAQ,CAAC1P,MAAM,CAAC;MACvD8J,MAAM,EAAE;IACV,CAAC;IACD3H,IAAI,CAAC2H,MAAM,GAAGL,YAAY,CAACtH,IAAI,CAAC;IAChC,OAAOA,IAAI;EACb;EACA,SAASkQ,OAAOA,CAACoI,MAAM,EAAE3Y,OAAO,EAAExhB,KAAK,EAAEo6B,IAAI,EAAE;IAC7C,IAAIC,SAAS,GAAG,IAAI;IACpB,IAAIh7B,CAAC,EAAEO,IAAI,EAAEpC,KAAK;IAClB,KAAK6B,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAGu6B,MAAM,CAAC36B,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;MAC/C7B,KAAK,GAAG28B,MAAM,CAAC96B,CAAC,CAAC;MACjB,IAAI7B,KAAK,KAAKiE,SAAS,EAAE;QACvB;MACF;MACA,IAAI+f,OAAO,KAAK/f,SAAS,IAAI,OAAOjE,KAAK,KAAK,UAAU,EAAE;QACxDA,KAAK,GAAGA,KAAK,CAACgkB,OAAO,CAAC;QACtB6Y,SAAS,GAAG,KAAK;MACnB;MACA,IAAIr6B,KAAK,KAAKyB,SAAS,IAAIhE,OAAO,CAACD,KAAK,CAAC,EAAE;QACzCA,KAAK,GAAGA,KAAK,CAACwC,KAAK,GAAGxC,KAAK,CAACgC,MAAM,CAAC;QACnC66B,SAAS,GAAG,KAAK;MACnB;MACA,IAAI78B,KAAK,KAAKiE,SAAS,EAAE;QACvB,IAAI24B,IAAI,IAAI,CAACC,SAAS,EAAE;UACtBD,IAAI,CAACC,SAAS,GAAG,KAAK;QACxB;QACA,OAAO78B,KAAK;MACd;IACF;EACF;EACA,SAAS88B,SAASA,CAACC,MAAM,EAAEC,KAAK,EAAEC,WAAW,EAAE;IAC7C,MAAM;MAAC30B,GAAG;MAAEC;IAAG,CAAC,GAAGw0B,MAAM;IACzB,MAAMG,MAAM,GAAG97B,WAAW,CAAC47B,KAAK,EAAE,CAACz0B,GAAG,GAAGD,GAAG,IAAI,CAAC,CAAC;IAClD,MAAM60B,QAAQ,GAAGA,CAACn9B,KAAK,EAAEuM,GAAG,KAAK0wB,WAAW,IAAIj9B,KAAK,KAAK,CAAC,GAAG,CAAC,GAAGA,KAAK,GAAGuM,GAAG;IAC7E,OAAO;MACLjE,GAAG,EAAE60B,QAAQ,CAAC70B,GAAG,EAAE,CAACpC,IAAI,CAAC8B,GAAG,CAACk1B,MAAM,CAAC,CAAC;MACrC30B,GAAG,EAAE40B,QAAQ,CAAC50B,GAAG,EAAE20B,MAAM;IAC3B,CAAC;EACH;EACA,SAASE,aAAaA,CAACC,aAAa,EAAErZ,OAAO,EAAE;IAC7C,OAAO5jB,MAAM,CAACsP,MAAM,CAACtP,MAAM,CAACyC,MAAM,CAACw6B,aAAa,CAAC,EAAErZ,OAAO,CAAC;EAC7D;EAEA,MAAMsZ,qBAAqB,GAAG,SAAAA,CAASC,KAAK,EAAEpV,KAAK,EAAE;IACnD,OAAO;MACL7jB,CAACA,CAACA,CAAC,EAAE;QACH,OAAOi5B,KAAK,GAAGA,KAAK,GAAGpV,KAAK,GAAG7jB,CAAC;MAClC,CAAC;MACDk5B,QAAQA,CAAClpB,CAAC,EAAE;QACV6T,KAAK,GAAG7T,CAAC;MACX,CAAC;MACDkc,SAASA,CAAC7iB,KAAK,EAAE;QACf,IAAIA,KAAK,KAAK,QAAQ,EAAE;UACtB,OAAOA,KAAK;QACd;QACA,OAAOA,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;MAC7C,CAAC;MACD8vB,KAAKA,CAACn5B,CAAC,EAAEtE,KAAK,EAAE;QACd,OAAOsE,CAAC,GAAGtE,KAAK;MAClB,CAAC;MACD09B,UAAUA,CAACp5B,CAAC,EAAEq5B,SAAS,EAAE;QACvB,OAAOr5B,CAAC,GAAGq5B,SAAS;MACtB;IACF,CAAC;EACH,CAAC;EACD,MAAMC,qBAAqB,GAAG,SAAAA,CAAA,EAAW;IACvC,OAAO;MACLt5B,CAACA,CAACA,CAAC,EAAE;QACH,OAAOA,CAAC;MACV,CAAC;MACDk5B,QAAQA,CAAClpB,CAAC,EAAE,CACZ,CAAC;MACDkc,SAASA,CAAC7iB,KAAK,EAAE;QACf,OAAOA,KAAK;MACd,CAAC;MACD8vB,KAAKA,CAACn5B,CAAC,EAAEtE,KAAK,EAAE;QACd,OAAOsE,CAAC,GAAGtE,KAAK;MAClB,CAAC;MACD09B,UAAUA,CAACp5B,CAAC,EAAEu5B,UAAU,EAAE;QACxB,OAAOv5B,CAAC;MACV;IACF,CAAC;EACH,CAAC;EACD,SAASw5B,aAAaA,CAAC9vB,GAAG,EAAEuvB,KAAK,EAAEpV,KAAK,EAAE;IACxC,OAAOna,GAAG,GAAGsvB,qBAAqB,CAACC,KAAK,EAAEpV,KAAK,CAAC,GAAGyV,qBAAqB,CAAC,CAAC;EAC5E;EACA,SAASG,qBAAqBA,CAACpZ,GAAG,EAAEqZ,SAAS,EAAE;IAC7C,IAAIzZ,KAAK,EAAE0Z,QAAQ;IACnB,IAAID,SAAS,KAAK,KAAK,IAAIA,SAAS,KAAK,KAAK,EAAE;MAC9CzZ,KAAK,GAAGI,GAAG,CAAC+D,MAAM,CAACnE,KAAK;MACxB0Z,QAAQ,GAAG,CACT1Z,KAAK,CAACsD,gBAAgB,CAAC,WAAW,CAAC,EACnCtD,KAAK,CAAC2Z,mBAAmB,CAAC,WAAW,CAAC,CACvC;MACD3Z,KAAK,CAAC4Z,WAAW,CAAC,WAAW,EAAEH,SAAS,EAAE,WAAW,CAAC;MACtDrZ,GAAG,CAACyZ,iBAAiB,GAAGH,QAAQ;IAClC;EACF;EACA,SAASI,oBAAoBA,CAAC1Z,GAAG,EAAEsZ,QAAQ,EAAE;IAC3C,IAAIA,QAAQ,KAAKh6B,SAAS,EAAE;MAC1B,OAAO0gB,GAAG,CAACyZ,iBAAiB;MAC5BzZ,GAAG,CAAC+D,MAAM,CAACnE,KAAK,CAAC4Z,WAAW,CAAC,WAAW,EAAEF,QAAQ,CAAC,CAAC,CAAC,EAAEA,QAAQ,CAAC,CAAC,CAAC,CAAC;IACrE;EACF;EAEA,SAASK,UAAUA,CAACj2B,QAAQ,EAAE;IAC5B,IAAIA,QAAQ,KAAK,OAAO,EAAE;MACxB,OAAO;QACLk2B,OAAO,EAAE30B,aAAa;QACtB40B,OAAO,EAAE90B,UAAU;QACnB+0B,SAAS,EAAE90B;MACb,CAAC;IACH;IACA,OAAO;MACL40B,OAAO,EAAEh0B,UAAU;MACnBi0B,OAAO,EAAEA,CAAC94B,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC;MACxB84B,SAAS,EAAEn6B,CAAC,IAAIA;IAClB,CAAC;EACH;EACA,SAASo6B,gBAAgBA,CAAC;IAAC70B,KAAK;IAAEC,GAAG;IAAEyE,KAAK;IAAE6pB,IAAI;IAAE7T;EAAK,CAAC,EAAE;IAC1D,OAAO;MACL1a,KAAK,EAAEA,KAAK,GAAG0E,KAAK;MACpBzE,GAAG,EAAEA,GAAG,GAAGyE,KAAK;MAChB6pB,IAAI,EAAEA,IAAI,IAAI,CAACtuB,GAAG,GAAGD,KAAK,GAAG,CAAC,IAAI0E,KAAK,KAAK,CAAC;MAC7CgW;IACF,CAAC;EACH;EACA,SAASoa,UAAUA,CAACC,OAAO,EAAExwB,MAAM,EAAEywB,MAAM,EAAE;IAC3C,MAAM;MAACx2B,QAAQ;MAAEwB,KAAK,EAAEi1B,UAAU;MAAEh1B,GAAG,EAAEi1B;IAAQ,CAAC,GAAGF,MAAM;IAC3D,MAAM;MAACN,OAAO;MAAEE;IAAS,CAAC,GAAGH,UAAU,CAACj2B,QAAQ,CAAC;IACjD,MAAMkG,KAAK,GAAGH,MAAM,CAACpM,MAAM;IAC3B,IAAI;MAAC6H,KAAK;MAAEC,GAAG;MAAEsuB;IAAI,CAAC,GAAGwG,OAAO;IAChC,IAAI/8B,CAAC,EAAEO,IAAI;IACX,IAAIg2B,IAAI,EAAE;MACRvuB,KAAK,IAAI0E,KAAK;MACdzE,GAAG,IAAIyE,KAAK;MACZ,KAAK1M,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAGmM,KAAK,EAAE1M,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;QACvC,IAAI,CAAC08B,OAAO,CAACE,SAAS,CAACrwB,MAAM,CAACvE,KAAK,GAAG0E,KAAK,CAAC,CAAClG,QAAQ,CAAC,CAAC,EAAEy2B,UAAU,EAAEC,QAAQ,CAAC,EAAE;UAC9E;QACF;QACAl1B,KAAK,EAAE;QACPC,GAAG,EAAE;MACP;MACAD,KAAK,IAAI0E,KAAK;MACdzE,GAAG,IAAIyE,KAAK;IACd;IACA,IAAIzE,GAAG,GAAGD,KAAK,EAAE;MACfC,GAAG,IAAIyE,KAAK;IACd;IACA,OAAO;MAAC1E,KAAK;MAAEC,GAAG;MAAEsuB,IAAI;MAAE7T,KAAK,EAAEqa,OAAO,CAACra;IAAK,CAAC;EACjD;EACA,SAASya,aAAaA,CAACJ,OAAO,EAAExwB,MAAM,EAAEywB,MAAM,EAAE;IAC9C,IAAI,CAACA,MAAM,EAAE;MACX,OAAO,CAACD,OAAO,CAAC;IAClB;IACA,MAAM;MAACv2B,QAAQ;MAAEwB,KAAK,EAAEi1B,UAAU;MAAEh1B,GAAG,EAAEi1B;IAAQ,CAAC,GAAGF,MAAM;IAC3D,MAAMtwB,KAAK,GAAGH,MAAM,CAACpM,MAAM;IAC3B,MAAM;MAACw8B,OAAO;MAAED,OAAO;MAAEE;IAAS,CAAC,GAAGH,UAAU,CAACj2B,QAAQ,CAAC;IAC1D,MAAM;MAACwB,KAAK;MAAEC,GAAG;MAAEsuB,IAAI;MAAE7T;IAAK,CAAC,GAAGoa,UAAU,CAACC,OAAO,EAAExwB,MAAM,EAAEywB,MAAM,CAAC;IACrE,MAAMr3B,MAAM,GAAG,EAAE;IACjB,IAAIy3B,MAAM,GAAG,KAAK;IAClB,IAAIC,QAAQ,GAAG,IAAI;IACnB,IAAIl/B,KAAK,EAAE0uB,KAAK,EAAEyQ,SAAS;IAC3B,MAAMC,aAAa,GAAGA,CAAA,KAAMb,OAAO,CAACO,UAAU,EAAEK,SAAS,EAAEn/B,KAAK,CAAC,IAAIw+B,OAAO,CAACM,UAAU,EAAEK,SAAS,CAAC,KAAK,CAAC;IACzG,MAAME,WAAW,GAAGA,CAAA,KAAMb,OAAO,CAACO,QAAQ,EAAE/+B,KAAK,CAAC,KAAK,CAAC,IAAIu+B,OAAO,CAACQ,QAAQ,EAAEI,SAAS,EAAEn/B,KAAK,CAAC;IAC/F,MAAMs/B,WAAW,GAAGA,CAAA,KAAML,MAAM,IAAIG,aAAa,CAAC,CAAC;IACnD,MAAMG,UAAU,GAAGA,CAAA,KAAM,CAACN,MAAM,IAAII,WAAW,CAAC,CAAC;IACjD,KAAK,IAAIx9B,CAAC,GAAGgI,KAAK,EAAE2uB,IAAI,GAAG3uB,KAAK,EAAEhI,CAAC,IAAIiI,GAAG,EAAE,EAAEjI,CAAC,EAAE;MAC/C6sB,KAAK,GAAGtgB,MAAM,CAACvM,CAAC,GAAG0M,KAAK,CAAC;MACzB,IAAImgB,KAAK,CAACoH,IAAI,EAAE;QACd;MACF;MACA91B,KAAK,GAAGy+B,SAAS,CAAC/P,KAAK,CAACrmB,QAAQ,CAAC,CAAC;MAClC,IAAIrI,KAAK,KAAKm/B,SAAS,EAAE;QACvB;MACF;MACAF,MAAM,GAAGV,OAAO,CAACv+B,KAAK,EAAE8+B,UAAU,EAAEC,QAAQ,CAAC;MAC7C,IAAIG,QAAQ,KAAK,IAAI,IAAII,WAAW,CAAC,CAAC,EAAE;QACtCJ,QAAQ,GAAGV,OAAO,CAACx+B,KAAK,EAAE8+B,UAAU,CAAC,KAAK,CAAC,GAAGj9B,CAAC,GAAG22B,IAAI;MACxD;MACA,IAAI0G,QAAQ,KAAK,IAAI,IAAIK,UAAU,CAAC,CAAC,EAAE;QACrC/3B,MAAM,CAACtC,IAAI,CAACw5B,gBAAgB,CAAC;UAAC70B,KAAK,EAAEq1B,QAAQ;UAAEp1B,GAAG,EAAEjI,CAAC;UAAEu2B,IAAI;UAAE7pB,KAAK;UAAEgW;QAAK,CAAC,CAAC,CAAC;QAC5E2a,QAAQ,GAAG,IAAI;MACjB;MACA1G,IAAI,GAAG32B,CAAC;MACRs9B,SAAS,GAAGn/B,KAAK;IACnB;IACA,IAAIk/B,QAAQ,KAAK,IAAI,EAAE;MACrB13B,MAAM,CAACtC,IAAI,CAACw5B,gBAAgB,CAAC;QAAC70B,KAAK,EAAEq1B,QAAQ;QAAEp1B,GAAG;QAAEsuB,IAAI;QAAE7pB,KAAK;QAAEgW;MAAK,CAAC,CAAC,CAAC;IAC3E;IACA,OAAO/c,MAAM;EACf;EACA,SAASg4B,cAAcA,CAACzP,IAAI,EAAE8O,MAAM,EAAE;IACpC,MAAMr3B,MAAM,GAAG,EAAE;IACjB,MAAMi4B,QAAQ,GAAG1P,IAAI,CAAC0P,QAAQ;IAC9B,KAAK,IAAI59B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG49B,QAAQ,CAACz9B,MAAM,EAAEH,CAAC,EAAE,EAAE;MACxC,MAAM69B,GAAG,GAAGV,aAAa,CAACS,QAAQ,CAAC59B,CAAC,CAAC,EAAEkuB,IAAI,CAAC3hB,MAAM,EAAEywB,MAAM,CAAC;MAC3D,IAAIa,GAAG,CAAC19B,MAAM,EAAE;QACdwF,MAAM,CAACtC,IAAI,CAAC,GAAGw6B,GAAG,CAAC;MACrB;IACF;IACA,OAAOl4B,MAAM;EACf;EACA,SAASm4B,eAAeA,CAACvxB,MAAM,EAAEG,KAAK,EAAE6pB,IAAI,EAAEE,QAAQ,EAAE;IACtD,IAAIzuB,KAAK,GAAG,CAAC;IACb,IAAIC,GAAG,GAAGyE,KAAK,GAAG,CAAC;IACnB,IAAI6pB,IAAI,IAAI,CAACE,QAAQ,EAAE;MACrB,OAAOzuB,KAAK,GAAG0E,KAAK,IAAI,CAACH,MAAM,CAACvE,KAAK,CAAC,CAACisB,IAAI,EAAE;QAC3CjsB,KAAK,EAAE;MACT;IACF;IACA,OAAOA,KAAK,GAAG0E,KAAK,IAAIH,MAAM,CAACvE,KAAK,CAAC,CAACisB,IAAI,EAAE;MAC1CjsB,KAAK,EAAE;IACT;IACAA,KAAK,IAAI0E,KAAK;IACd,IAAI6pB,IAAI,EAAE;MACRtuB,GAAG,IAAID,KAAK;IACd;IACA,OAAOC,GAAG,GAAGD,KAAK,IAAIuE,MAAM,CAACtE,GAAG,GAAGyE,KAAK,CAAC,CAACunB,IAAI,EAAE;MAC9ChsB,GAAG,EAAE;IACP;IACAA,GAAG,IAAIyE,KAAK;IACZ,OAAO;MAAC1E,KAAK;MAAEC;IAAG,CAAC;EACrB;EACA,SAAS81B,aAAaA,CAACxxB,MAAM,EAAEvE,KAAK,EAAEtB,GAAG,EAAE6vB,IAAI,EAAE;IAC/C,MAAM7pB,KAAK,GAAGH,MAAM,CAACpM,MAAM;IAC3B,MAAMwF,MAAM,GAAG,EAAE;IACjB,IAAIuD,IAAI,GAAGlB,KAAK;IAChB,IAAI2uB,IAAI,GAAGpqB,MAAM,CAACvE,KAAK,CAAC;IACxB,IAAIC,GAAG;IACP,KAAKA,GAAG,GAAGD,KAAK,GAAG,CAAC,EAAEC,GAAG,IAAIvB,GAAG,EAAE,EAAEuB,GAAG,EAAE;MACvC,MAAMiI,GAAG,GAAG3D,MAAM,CAACtE,GAAG,GAAGyE,KAAK,CAAC;MAC/B,IAAIwD,GAAG,CAAC+jB,IAAI,IAAI/jB,GAAG,CAACE,IAAI,EAAE;QACxB,IAAI,CAACumB,IAAI,CAAC1C,IAAI,EAAE;UACdsC,IAAI,GAAG,KAAK;UACZ5wB,MAAM,CAACtC,IAAI,CAAC;YAAC2E,KAAK,EAAEA,KAAK,GAAG0E,KAAK;YAAEzE,GAAG,EAAE,CAACA,GAAG,GAAG,CAAC,IAAIyE,KAAK;YAAE6pB;UAAI,CAAC,CAAC;UACjEvuB,KAAK,GAAGkB,IAAI,GAAGgH,GAAG,CAACE,IAAI,GAAGnI,GAAG,GAAG,IAAI;QACtC;MACF,CAAC,MAAM;QACLiB,IAAI,GAAGjB,GAAG;QACV,IAAI0uB,IAAI,CAAC1C,IAAI,EAAE;UACbjsB,KAAK,GAAGC,GAAG;QACb;MACF;MACA0uB,IAAI,GAAGzmB,GAAG;IACZ;IACA,IAAIhH,IAAI,KAAK,IAAI,EAAE;MACjBvD,MAAM,CAACtC,IAAI,CAAC;QAAC2E,KAAK,EAAEA,KAAK,GAAG0E,KAAK;QAAEzE,GAAG,EAAEiB,IAAI,GAAGwD,KAAK;QAAE6pB;MAAI,CAAC,CAAC;IAC9D;IACA,OAAO5wB,MAAM;EACf;EACA,SAASq4B,gBAAgBA,CAAC9P,IAAI,EAAE+P,cAAc,EAAE;IAC9C,MAAM1xB,MAAM,GAAG2hB,IAAI,CAAC3hB,MAAM;IAC1B,MAAMkqB,QAAQ,GAAGvI,IAAI,CAAC3sB,OAAO,CAACk1B,QAAQ;IACtC,MAAM/pB,KAAK,GAAGH,MAAM,CAACpM,MAAM;IAC3B,IAAI,CAACuM,KAAK,EAAE;MACV,OAAO,EAAE;IACX;IACA,MAAM6pB,IAAI,GAAG,CAAC,CAACrI,IAAI,CAACgQ,KAAK;IACzB,MAAM;MAACl2B,KAAK;MAAEC;IAAG,CAAC,GAAG61B,eAAe,CAACvxB,MAAM,EAAEG,KAAK,EAAE6pB,IAAI,EAAEE,QAAQ,CAAC;IACnE,IAAIA,QAAQ,KAAK,IAAI,EAAE;MACrB,OAAO0H,aAAa,CAACjQ,IAAI,EAAE,CAAC;QAAClmB,KAAK;QAAEC,GAAG;QAAEsuB;MAAI,CAAC,CAAC,EAAEhqB,MAAM,EAAE0xB,cAAc,CAAC;IAC1E;IACA,MAAMv3B,GAAG,GAAGuB,GAAG,GAAGD,KAAK,GAAGC,GAAG,GAAGyE,KAAK,GAAGzE,GAAG;IAC3C,MAAMm2B,YAAY,GAAG,CAAC,CAAClQ,IAAI,CAACmQ,SAAS,IAAIr2B,KAAK,KAAK,CAAC,IAAIC,GAAG,KAAKyE,KAAK,GAAG,CAAC;IACzE,OAAOyxB,aAAa,CAACjQ,IAAI,EAAE6P,aAAa,CAACxxB,MAAM,EAAEvE,KAAK,EAAEtB,GAAG,EAAE03B,YAAY,CAAC,EAAE7xB,MAAM,EAAE0xB,cAAc,CAAC;EACrG;EACA,SAASE,aAAaA,CAACjQ,IAAI,EAAE0P,QAAQ,EAAErxB,MAAM,EAAE0xB,cAAc,EAAE;IAC7D,IAAI,CAACA,cAAc,IAAI,CAACA,cAAc,CAACnM,UAAU,IAAI,CAACvlB,MAAM,EAAE;MAC5D,OAAOqxB,QAAQ;IACjB;IACA,OAAOU,eAAe,CAACpQ,IAAI,EAAE0P,QAAQ,EAAErxB,MAAM,EAAE0xB,cAAc,CAAC;EAChE;EACA,SAASK,eAAeA,CAACpQ,IAAI,EAAE0P,QAAQ,EAAErxB,MAAM,EAAE0xB,cAAc,EAAE;IAC/D,MAAMM,YAAY,GAAGrQ,IAAI,CAACsQ,MAAM,CAACpT,UAAU,CAAC,CAAC;IAC7C,MAAMqT,SAAS,GAAGC,SAAS,CAACxQ,IAAI,CAAC3sB,OAAO,CAAC;IACzC,MAAM;MAACo9B,aAAa,EAAEj+B,YAAY;MAAEa,OAAO,EAAE;QAACk1B;MAAQ;IAAC,CAAC,GAAGvI,IAAI;IAC/D,MAAMxhB,KAAK,GAAGH,MAAM,CAACpM,MAAM;IAC3B,MAAMwF,MAAM,GAAG,EAAE;IACjB,IAAIi5B,SAAS,GAAGH,SAAS;IACzB,IAAIz2B,KAAK,GAAG41B,QAAQ,CAAC,CAAC,CAAC,CAAC51B,KAAK;IAC7B,IAAIhI,CAAC,GAAGgI,KAAK;IACb,SAAS62B,QAAQA,CAAC12B,CAAC,EAAEhE,CAAC,EAAEuM,CAAC,EAAEouB,EAAE,EAAE;MAC7B,MAAMC,GAAG,GAAGtI,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC;MAC7B,IAAItuB,CAAC,KAAKhE,CAAC,EAAE;QACX;MACF;MACAgE,CAAC,IAAIuE,KAAK;MACV,OAAOH,MAAM,CAACpE,CAAC,GAAGuE,KAAK,CAAC,CAACunB,IAAI,EAAE;QAC7B9rB,CAAC,IAAI42B,GAAG;MACV;MACA,OAAOxyB,MAAM,CAACpI,CAAC,GAAGuI,KAAK,CAAC,CAACunB,IAAI,EAAE;QAC7B9vB,CAAC,IAAI46B,GAAG;MACV;MACA,IAAI52B,CAAC,GAAGuE,KAAK,KAAKvI,CAAC,GAAGuI,KAAK,EAAE;QAC3B/G,MAAM,CAACtC,IAAI,CAAC;UAAC2E,KAAK,EAAEG,CAAC,GAAGuE,KAAK;UAAEzE,GAAG,EAAE9D,CAAC,GAAGuI,KAAK;UAAE6pB,IAAI,EAAE7lB,CAAC;UAAEgS,KAAK,EAAEoc;QAAE,CAAC,CAAC;QACnEF,SAAS,GAAGE,EAAE;QACd92B,KAAK,GAAG7D,CAAC,GAAGuI,KAAK;MACnB;IACF;IACA,KAAK,MAAMqwB,OAAO,IAAIa,QAAQ,EAAE;MAC9B51B,KAAK,GAAGyuB,QAAQ,GAAGzuB,KAAK,GAAG+0B,OAAO,CAAC/0B,KAAK;MACxC,IAAI2uB,IAAI,GAAGpqB,MAAM,CAACvE,KAAK,GAAG0E,KAAK,CAAC;MAChC,IAAIgW,KAAK;MACT,KAAK1iB,CAAC,GAAGgI,KAAK,GAAG,CAAC,EAAEhI,CAAC,IAAI+8B,OAAO,CAAC90B,GAAG,EAAEjI,CAAC,EAAE,EAAE;QACzC,MAAMi2B,EAAE,GAAG1pB,MAAM,CAACvM,CAAC,GAAG0M,KAAK,CAAC;QAC5BgW,KAAK,GAAGgc,SAAS,CAACT,cAAc,CAACnM,UAAU,CAACyJ,aAAa,CAACgD,YAAY,EAAE;UACtEjgC,IAAI,EAAE,SAAS;UACf0gC,EAAE,EAAErI,IAAI;UACRtjB,EAAE,EAAE4iB,EAAE;UACNgJ,WAAW,EAAE,CAACj/B,CAAC,GAAG,CAAC,IAAI0M,KAAK;UAC5BwyB,WAAW,EAAEl/B,CAAC,GAAG0M,KAAK;UACtBhM;QACF,CAAC,CAAC,CAAC,CAAC;QACJ,IAAIy+B,YAAY,CAACzc,KAAK,EAAEkc,SAAS,CAAC,EAAE;UAClCC,QAAQ,CAAC72B,KAAK,EAAEhI,CAAC,GAAG,CAAC,EAAE+8B,OAAO,CAACxG,IAAI,EAAEqI,SAAS,CAAC;QACjD;QACAjI,IAAI,GAAGV,EAAE;QACT2I,SAAS,GAAGlc,KAAK;MACnB;MACA,IAAI1a,KAAK,GAAGhI,CAAC,GAAG,CAAC,EAAE;QACjB6+B,QAAQ,CAAC72B,KAAK,EAAEhI,CAAC,GAAG,CAAC,EAAE+8B,OAAO,CAACxG,IAAI,EAAEqI,SAAS,CAAC;MACjD;IACF;IACA,OAAOj5B,MAAM;EACf;EACA,SAAS+4B,SAASA,CAACn9B,OAAO,EAAE;IAC1B,OAAO;MACLwgB,eAAe,EAAExgB,OAAO,CAACwgB,eAAe;MACxCqd,cAAc,EAAE79B,OAAO,CAAC69B,cAAc;MACtCC,UAAU,EAAE99B,OAAO,CAAC89B,UAAU;MAC9BC,gBAAgB,EAAE/9B,OAAO,CAAC+9B,gBAAgB;MAC1CC,eAAe,EAAEh+B,OAAO,CAACg+B,eAAe;MACxC7S,WAAW,EAAEnrB,OAAO,CAACmrB,WAAW;MAChC1K,WAAW,EAAEzgB,OAAO,CAACygB;IACvB,CAAC;EACH;EACA,SAASmd,YAAYA,CAACzc,KAAK,EAAEkc,SAAS,EAAE;IACtC,OAAOA,SAAS,IAAInF,IAAI,CAACC,SAAS,CAAChX,KAAK,CAAC,KAAK+W,IAAI,CAACC,SAAS,CAACkF,SAAS,CAAC;EACzE;EAEA,IAAIY,OAAO,GAAG,aAAajhC,MAAM,CAACkhC,MAAM,CAAC;IACzCC,SAAS,EAAE,IAAI;IACfC,aAAa,EAAE3I,OAAO;IACtB3V,mBAAmB,EAAEA,mBAAmB;IACxCjB,KAAK,EAAEA,KAAK;IACZkB,aAAa,EAAEA,aAAa;IAC5BvjB,IAAI,EAAEA,IAAI;IACVC,GAAG,EAAEA,GAAG;IACRE,aAAa,EAAEA,aAAa;IAC5BE,OAAO,EAAEA,OAAO;IAChBQ,QAAQ,EAAEA,QAAQ;IAClBG,QAAQ,EAAEF,cAAc;IACxBG,eAAe,EAAEA,eAAe;IAChCE,cAAc,EAAEA,cAAc;IAC9BC,YAAY,EAAEA,YAAY;IAC1BI,WAAW,EAAEA,WAAW;IACxBC,QAAQ,EAAEA,QAAQ;IAClBK,IAAI,EAAEA,IAAI;IACVO,cAAc,EAAEA,cAAc;IAC9Bsf,KAAK,EAAE9e,OAAO;IACdU,OAAO,EAAEA,OAAO;IAChBI,KAAK,EAAEA,KAAK;IACZG,OAAO,EAAEA,OAAO;IAChBC,SAAS,EAAEA,SAAS;IACpBE,WAAW,EAAEA,WAAW;IACxBY,gBAAgB,EAAEA,gBAAgB;IAClCI,SAAS,EAAEA,SAAS;IACpBM,WAAW,EAAEA,WAAW;IACxBI,OAAO,EAAEA,OAAO;IAChBC,UAAU,EAAEA,UAAU;IACtBC,SAAS,EAAEA,SAAS;IACpBM,aAAa,EAAEA,aAAa;IAC5B4lB,YAAY,EAAEA,YAAY;IAC1BC,YAAY,EAAEA,YAAY;IAC1BO,YAAY,EAAEA,YAAY;IAC1BU,WAAW,EAAEA,WAAW;IACxBG,WAAW,EAAEA,WAAW;IACxBI,SAAS,EAAEA,SAAS;IACpBC,eAAe,EAAEA,eAAe;IAChCoB,cAAc,EAAEA,cAAc;IAC9BI,QAAQ,EAAEA,QAAQ;IAClBE,UAAU,EAAEA,UAAU;IACtBC,cAAc,EAAEA,cAAc;IAC9BG,cAAc,EAAEA,cAAc;IAC9BM,UAAU,EAAEA,UAAU;IACtB0B,kBAAkB,EAAEA,kBAAkB;IACtC3mB,OAAO,EAAEA,OAAO;IAChBM,YAAY,EAAEA,YAAY;IAC1BE,aAAa,EAAEA,aAAa;IAC5BC,cAAc,EAAEA,cAAc;IAC9BG,iBAAiB,EAAEA,iBAAiB;IACpCY,mBAAmB,EAAEA,mBAAmB;IACxCG,YAAY,EAAEA,YAAY;IAC1BqlB,eAAe,EAAEA,eAAe;IAChC2B,cAAc,EAAEA,cAAc;IAC9BzP,YAAY,EAAEA,YAAY;IAC1B8R,2BAA2B,EAAEA,2BAA2B;IACxDQ,WAAW,EAAEA,WAAW;IACxB2B,mBAAmB,EAAEA,mBAAmB;IACxCQ,0BAA0B,EAAEA,0BAA0B;IACtDrR,eAAe,EAAEA,eAAe;IAChCE,cAAc,EAAEA,cAAc;IAC9BW,QAAQ,EAAEA,QAAQ;IAClBwB,mBAAmB,EAAEA,mBAAmB;IACxCmB,cAAc,EAAEA,cAAc;IAC9BM,WAAW,EAAEA,WAAW;IACxBO,4BAA4B,EAAEA,4BAA4B;IAC1DK,YAAY,EAAEA,YAAY;IAC1B/e,UAAU,EAAEA,UAAU;IACtBI,gBAAgB,EAAEA,gBAAgB;IAClCG,SAAS,EAAEA,SAAS;IACpBK,QAAQ,EAAEA,QAAQ;IAClBK,kBAAkB,EAAEA,kBAAkB;IACtCE,cAAc,EAAEA,cAAc;IAC9BC,MAAM,EAAEA,MAAM;IACdK,gCAAgC,EAAEA,gCAAgC;IAClEc,mBAAmB,EAAEA,mBAAmB;IACxC6rB,YAAY,EAAEA,YAAY;IAC1BC,qBAAqB,EAAEA,qBAAqB;IAC5CC,oBAAoB,EAAEA,oBAAoB;IAC1CY,YAAY,EAAEA,YAAY;IAC1BM,YAAY,EAAEA,YAAY;IAC1BE,iBAAiB,EAAEA,iBAAiB;IACpCI,MAAM,EAAEA,MAAM;IACdC,aAAa,EAAEA,aAAa;IAC5BC,SAAS,EAAEA,SAAS;IACpBC,MAAM,EAAEA,MAAM;IACdnI,OAAO,EAAEA,OAAO;IAChBuI,SAAS,EAAEA,SAAS;IACpBM,aAAa,EAAEA,aAAa;IAC5Bn3B,EAAE,EAAEA,EAAE;IACNE,GAAG,EAAEA,GAAG;IACRC,KAAK,EAAEA,KAAK;IACZC,QAAQ,EAAEA,QAAQ;IAClBE,WAAW,EAAEA,WAAW;IACxBC,OAAO,EAAEA,OAAO;IAChBC,UAAU,EAAEA,UAAU;IACtBC,aAAa,EAAEA,aAAa;IAC5BC,KAAK,EAAEA,KAAK;IACZC,IAAI,EAAEA,IAAI;IACVC,OAAO,EAAEA,OAAO;IAChBU,UAAU,EAAEA,UAAU;IACtBK,QAAQ,EAAEA,QAAQ;IAClBX,YAAY,EAAEA,YAAY;IAC1BgB,WAAW,EAAEA,WAAW;IACxBE,kBAAkB,EAAEA,kBAAkB;IACtCK,SAAS,EAAEA,SAAS;IACpBE,SAAS,EAAEA,SAAS;IACpBE,cAAc,EAAEA,cAAc;IAC9BE,iBAAiB,EAAEA,iBAAiB;IACpCS,qBAAqB,EAAEA,qBAAqB;IAC5CG,UAAU,EAAEA,UAAU;IACtBC,eAAe,EAAEA,eAAe;IAChCC,aAAa,EAAEA,aAAa;IAC5BS,WAAW,EAAEA,WAAW;IACxBC,WAAW,EAAEA,WAAW;IACxBC,UAAU,EAAEA,UAAU;IACtBuzB,aAAa,EAAEA,aAAa;IAC5BC,qBAAqB,EAAEA,qBAAqB;IAC5CM,oBAAoB,EAAEA,oBAAoB;IAC1CW,aAAa,EAAEA,aAAa;IAC5BQ,cAAc,EAAEA,cAAc;IAC9BK,gBAAgB,EAAEA;EAClB,CAAC,CAAC;EAEF,SAAS4B,YAAYA,CAACC,OAAO,EAAE/yB,IAAI,EAAE3O,KAAK,EAAEilB,SAAS,EAAE;IACrD,MAAM;MAAC0c,UAAU;MAAE9V,IAAI;MAAErd;IAAO,CAAC,GAAGkzB,OAAO;IAC3C,MAAMjzB,MAAM,GAAGkzB,UAAU,CAACC,WAAW,CAACnzB,MAAM;IAC5C,IAAIA,MAAM,IAAIE,IAAI,KAAKF,MAAM,CAACE,IAAI,IAAIA,IAAI,KAAK,GAAG,IAAIH,OAAO,IAAIqd,IAAI,CAAC7pB,MAAM,EAAE;MAC5E,MAAM6/B,YAAY,GAAGpzB,MAAM,CAACqzB,cAAc,GAAG92B,aAAa,GAAGF,YAAY;MACzE,IAAI,CAACma,SAAS,EAAE;QACd,OAAO4c,YAAY,CAAChW,IAAI,EAAEld,IAAI,EAAE3O,KAAK,CAAC;MACxC,CAAC,MAAM,IAAI2hC,UAAU,CAACI,cAAc,EAAE;QACpC,MAAMna,EAAE,GAAGiE,IAAI,CAAC,CAAC,CAAC;QAClB,MAAM/kB,KAAK,GAAG,OAAO8gB,EAAE,CAACoa,QAAQ,KAAK,UAAU,IAAIpa,EAAE,CAACoa,QAAQ,CAACrzB,IAAI,CAAC;QACpE,IAAI7H,KAAK,EAAE;UACT,MAAM+C,KAAK,GAAGg4B,YAAY,CAAChW,IAAI,EAAEld,IAAI,EAAE3O,KAAK,GAAG8G,KAAK,CAAC;UACrD,MAAMgD,GAAG,GAAG+3B,YAAY,CAAChW,IAAI,EAAEld,IAAI,EAAE3O,KAAK,GAAG8G,KAAK,CAAC;UACnD,OAAO;YAAC8D,EAAE,EAAEf,KAAK,CAACe,EAAE;YAAED,EAAE,EAAEb,GAAG,CAACa;UAAE,CAAC;QACnC;MACF;IACF;IACA,OAAO;MAACC,EAAE,EAAE,CAAC;MAAED,EAAE,EAAEkhB,IAAI,CAAC7pB,MAAM,GAAG;IAAC,CAAC;EACrC;EACA,SAASigC,wBAAwBA,CAAC9xB,KAAK,EAAExB,IAAI,EAAEuzB,QAAQ,EAAEC,OAAO,EAAEld,SAAS,EAAE;IAC3E,MAAMmd,QAAQ,GAAGjyB,KAAK,CAACkyB,4BAA4B,CAAC,CAAC;IACrD,MAAMriC,KAAK,GAAGkiC,QAAQ,CAACvzB,IAAI,CAAC;IAC5B,KAAK,IAAI9M,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAGggC,QAAQ,CAACpgC,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;MACrD,MAAM;QAACW,KAAK;QAAEqpB;MAAI,CAAC,GAAGuW,QAAQ,CAACvgC,CAAC,CAAC;MACjC,MAAM;QAAC+I,EAAE;QAAED;MAAE,CAAC,GAAG82B,YAAY,CAACW,QAAQ,CAACvgC,CAAC,CAAC,EAAE8M,IAAI,EAAE3O,KAAK,EAAEilB,SAAS,CAAC;MAClE,KAAK,IAAI7E,CAAC,GAAGxV,EAAE,EAAEwV,CAAC,IAAIzV,EAAE,EAAE,EAAEyV,CAAC,EAAE;QAC7B,MAAMsH,OAAO,GAAGmE,IAAI,CAACzL,CAAC,CAAC;QACvB,IAAI,CAACsH,OAAO,CAACoO,IAAI,EAAE;UACjBqM,OAAO,CAACza,OAAO,EAAEllB,KAAK,EAAE4d,CAAC,CAAC;QAC5B;MACF;IACF;EACF;EACA,SAASkiB,wBAAwBA,CAAC3zB,IAAI,EAAE;IACtC,MAAM4zB,IAAI,GAAG5zB,IAAI,CAACzL,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACrC,MAAMs/B,IAAI,GAAG7zB,IAAI,CAACzL,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACrC,OAAO,UAASsG,GAAG,EAAEC,GAAG,EAAE;MACxB,MAAMg5B,MAAM,GAAGF,IAAI,GAAGr8B,IAAI,CAAC8B,GAAG,CAACwB,GAAG,CAAClF,CAAC,GAAGmF,GAAG,CAACnF,CAAC,CAAC,GAAG,CAAC;MACjD,MAAMo+B,MAAM,GAAGF,IAAI,GAAGt8B,IAAI,CAAC8B,GAAG,CAACwB,GAAG,CAAChF,CAAC,GAAGiF,GAAG,CAACjF,CAAC,CAAC,GAAG,CAAC;MACjD,OAAO0B,IAAI,CAACuB,IAAI,CAACvB,IAAI,CAACiB,GAAG,CAACs7B,MAAM,EAAE,CAAC,CAAC,GAAGv8B,IAAI,CAACiB,GAAG,CAACu7B,MAAM,EAAE,CAAC,CAAC,CAAC;IAC7D,CAAC;EACH;EACA,SAASC,iBAAiBA,CAACxyB,KAAK,EAAE+xB,QAAQ,EAAEvzB,IAAI,EAAEi0B,gBAAgB,EAAE1d,gBAAgB,EAAE;IACpF,MAAM9Y,KAAK,GAAG,EAAE;IAChB,IAAI,CAAC8Y,gBAAgB,IAAI,CAAC/U,KAAK,CAAC0yB,aAAa,CAACX,QAAQ,CAAC,EAAE;MACvD,OAAO91B,KAAK;IACd;IACA,MAAM02B,cAAc,GAAG,SAAAA,CAASpb,OAAO,EAAEnlB,YAAY,EAAEC,KAAK,EAAE;MAC5D,IAAI,CAAC0iB,gBAAgB,IAAI,CAACuJ,cAAc,CAAC/G,OAAO,EAAEvX,KAAK,CAAC4yB,SAAS,EAAE,CAAC,CAAC,EAAE;QACrE;MACF;MACA,IAAIrb,OAAO,CAACsb,OAAO,CAACd,QAAQ,CAAC59B,CAAC,EAAE49B,QAAQ,CAAC19B,CAAC,EAAEo+B,gBAAgB,CAAC,EAAE;QAC7Dx2B,KAAK,CAAClH,IAAI,CAAC;UAACwiB,OAAO;UAAEnlB,YAAY;UAAEC;QAAK,CAAC,CAAC;MAC5C;IACF,CAAC;IACDy/B,wBAAwB,CAAC9xB,KAAK,EAAExB,IAAI,EAAEuzB,QAAQ,EAAEY,cAAc,EAAE,IAAI,CAAC;IACrE,OAAO12B,KAAK;EACd;EACA,SAAS62B,qBAAqBA,CAAC9yB,KAAK,EAAE+xB,QAAQ,EAAEvzB,IAAI,EAAEi0B,gBAAgB,EAAE;IACtE,IAAIx2B,KAAK,GAAG,EAAE;IACd,SAAS02B,cAAcA,CAACpb,OAAO,EAAEnlB,YAAY,EAAEC,KAAK,EAAE;MACpD,MAAM;QAAC0gC,UAAU;QAAEC;MAAQ,CAAC,GAAGzb,OAAO,CAAC0b,QAAQ,CAAC,CAAC,YAAY,EAAE,UAAU,CAAC,EAAER,gBAAgB,CAAC;MAC7F,MAAM;QAACx5B;MAAK,CAAC,GAAGN,iBAAiB,CAAC4e,OAAO,EAAE;QAACpjB,CAAC,EAAE49B,QAAQ,CAAC59B,CAAC;QAAEE,CAAC,EAAE09B,QAAQ,CAAC19B;MAAC,CAAC,CAAC;MAC1E,IAAIoF,aAAa,CAACR,KAAK,EAAE85B,UAAU,EAAEC,QAAQ,CAAC,EAAE;QAC9C/2B,KAAK,CAAClH,IAAI,CAAC;UAACwiB,OAAO;UAAEnlB,YAAY;UAAEC;QAAK,CAAC,CAAC;MAC5C;IACF;IACAy/B,wBAAwB,CAAC9xB,KAAK,EAAExB,IAAI,EAAEuzB,QAAQ,EAAEY,cAAc,CAAC;IAC/D,OAAO12B,KAAK;EACd;EACA,SAASi3B,wBAAwBA,CAAClzB,KAAK,EAAE+xB,QAAQ,EAAEvzB,IAAI,EAAEsW,SAAS,EAAE2d,gBAAgB,EAAE1d,gBAAgB,EAAE;IACtG,IAAI9Y,KAAK,GAAG,EAAE;IACd,MAAMk3B,cAAc,GAAGhB,wBAAwB,CAAC3zB,IAAI,CAAC;IACrD,IAAI40B,WAAW,GAAG5iC,MAAM,CAAC2F,iBAAiB;IAC1C,SAASw8B,cAAcA,CAACpb,OAAO,EAAEnlB,YAAY,EAAEC,KAAK,EAAE;MACpD,MAAMwgC,OAAO,GAAGtb,OAAO,CAACsb,OAAO,CAACd,QAAQ,CAAC59B,CAAC,EAAE49B,QAAQ,CAAC19B,CAAC,EAAEo+B,gBAAgB,CAAC;MACzE,IAAI3d,SAAS,IAAI,CAAC+d,OAAO,EAAE;QACzB;MACF;MACA,MAAMQ,MAAM,GAAG9b,OAAO,CAAC+b,cAAc,CAACb,gBAAgB,CAAC;MACvD,MAAMc,WAAW,GAAG,CAAC,CAACxe,gBAAgB,IAAI/U,KAAK,CAAC0yB,aAAa,CAACW,MAAM,CAAC;MACrE,IAAI,CAACE,WAAW,IAAI,CAACV,OAAO,EAAE;QAC5B;MACF;MACA,MAAM15B,QAAQ,GAAGg6B,cAAc,CAACpB,QAAQ,EAAEsB,MAAM,CAAC;MACjD,IAAIl6B,QAAQ,GAAGi6B,WAAW,EAAE;QAC1Bn3B,KAAK,GAAG,CAAC;UAACsb,OAAO;UAAEnlB,YAAY;UAAEC;QAAK,CAAC,CAAC;QACxC+gC,WAAW,GAAGj6B,QAAQ;MACxB,CAAC,MAAM,IAAIA,QAAQ,KAAKi6B,WAAW,EAAE;QACnCn3B,KAAK,CAAClH,IAAI,CAAC;UAACwiB,OAAO;UAAEnlB,YAAY;UAAEC;QAAK,CAAC,CAAC;MAC5C;IACF;IACAy/B,wBAAwB,CAAC9xB,KAAK,EAAExB,IAAI,EAAEuzB,QAAQ,EAAEY,cAAc,CAAC;IAC/D,OAAO12B,KAAK;EACd;EACA,SAASu3B,eAAeA,CAACxzB,KAAK,EAAE+xB,QAAQ,EAAEvzB,IAAI,EAAEsW,SAAS,EAAE2d,gBAAgB,EAAE1d,gBAAgB,EAAE;IAC7F,IAAI,CAACA,gBAAgB,IAAI,CAAC/U,KAAK,CAAC0yB,aAAa,CAACX,QAAQ,CAAC,EAAE;MACvD,OAAO,EAAE;IACX;IACA,OAAOvzB,IAAI,KAAK,GAAG,IAAI,CAACsW,SAAS,GAC7Bge,qBAAqB,CAAC9yB,KAAK,EAAE+xB,QAAQ,EAAEvzB,IAAI,EAAEi0B,gBAAgB,CAAC,GAC9DS,wBAAwB,CAAClzB,KAAK,EAAE+xB,QAAQ,EAAEvzB,IAAI,EAAEsW,SAAS,EAAE2d,gBAAgB,EAAE1d,gBAAgB,CAAC;EACpG;EACA,SAAS0e,YAAYA,CAACzzB,KAAK,EAAE+xB,QAAQ,EAAEvzB,IAAI,EAAEsW,SAAS,EAAE2d,gBAAgB,EAAE;IACxE,MAAMx2B,KAAK,GAAG,EAAE;IAChB,MAAMy3B,WAAW,GAAGl1B,IAAI,KAAK,GAAG,GAAG,UAAU,GAAG,UAAU;IAC1D,IAAIm1B,cAAc,GAAG,KAAK;IAC1B7B,wBAAwB,CAAC9xB,KAAK,EAAExB,IAAI,EAAEuzB,QAAQ,EAAE,CAACxa,OAAO,EAAEnlB,YAAY,EAAEC,KAAK,KAAK;MAChF,IAAIklB,OAAO,CAACmc,WAAW,CAAC,CAAC3B,QAAQ,CAACvzB,IAAI,CAAC,EAAEi0B,gBAAgB,CAAC,EAAE;QAC1Dx2B,KAAK,CAAClH,IAAI,CAAC;UAACwiB,OAAO;UAAEnlB,YAAY;UAAEC;QAAK,CAAC,CAAC;QAC1CshC,cAAc,GAAGA,cAAc,IAAIpc,OAAO,CAACsb,OAAO,CAACd,QAAQ,CAAC59B,CAAC,EAAE49B,QAAQ,CAAC19B,CAAC,EAAEo+B,gBAAgB,CAAC;MAC9F;IACF,CAAC,CAAC;IACF,IAAI3d,SAAS,IAAI,CAAC6e,cAAc,EAAE;MAChC,OAAO,EAAE;IACX;IACA,OAAO13B,KAAK;EACd;EACA,IAAI23B,WAAW,GAAG;IAChB9B,wBAAwB;IACxB+B,KAAK,EAAE;MACLxhC,KAAKA,CAAC2N,KAAK,EAAEnK,CAAC,EAAE5C,OAAO,EAAEw/B,gBAAgB,EAAE;QACzC,MAAMV,QAAQ,GAAG/Y,mBAAmB,CAACnjB,CAAC,EAAEmK,KAAK,CAAC;QAC9C,MAAMxB,IAAI,GAAGvL,OAAO,CAACuL,IAAI,IAAI,GAAG;QAChC,MAAMuW,gBAAgB,GAAG9hB,OAAO,CAAC8hB,gBAAgB,IAAI,KAAK;QAC1D,MAAM9Y,KAAK,GAAGhJ,OAAO,CAAC6hB,SAAS,GAC3B0d,iBAAiB,CAACxyB,KAAK,EAAE+xB,QAAQ,EAAEvzB,IAAI,EAAEi0B,gBAAgB,EAAE1d,gBAAgB,CAAC,GAC5Eye,eAAe,CAACxzB,KAAK,EAAE+xB,QAAQ,EAAEvzB,IAAI,EAAE,KAAK,EAAEi0B,gBAAgB,EAAE1d,gBAAgB,CAAC;QACrF,MAAMf,QAAQ,GAAG,EAAE;QACnB,IAAI,CAAC/X,KAAK,CAACpK,MAAM,EAAE;UACjB,OAAO,EAAE;QACX;QACAmO,KAAK,CAACkyB,4BAA4B,CAAC,CAAC,CAAC12B,OAAO,CAAEwC,IAAI,IAAK;UACrD,MAAM3L,KAAK,GAAG4J,KAAK,CAAC,CAAC,CAAC,CAAC5J,KAAK;UAC5B,MAAMklB,OAAO,GAAGvZ,IAAI,CAAC0d,IAAI,CAACrpB,KAAK,CAAC;UAChC,IAAIklB,OAAO,IAAI,CAACA,OAAO,CAACoO,IAAI,EAAE;YAC5B3R,QAAQ,CAACjf,IAAI,CAAC;cAACwiB,OAAO;cAAEnlB,YAAY,EAAE4L,IAAI,CAAC3L,KAAK;cAAEA;YAAK,CAAC,CAAC;UAC3D;QACF,CAAC,CAAC;QACF,OAAO2hB,QAAQ;MACjB,CAAC;MACD8f,OAAOA,CAAC9zB,KAAK,EAAEnK,CAAC,EAAE5C,OAAO,EAAEw/B,gBAAgB,EAAE;QAC3C,MAAMV,QAAQ,GAAG/Y,mBAAmB,CAACnjB,CAAC,EAAEmK,KAAK,CAAC;QAC9C,MAAMxB,IAAI,GAAGvL,OAAO,CAACuL,IAAI,IAAI,IAAI;QACjC,MAAMuW,gBAAgB,GAAG9hB,OAAO,CAAC8hB,gBAAgB,IAAI,KAAK;QAC1D,IAAI9Y,KAAK,GAAGhJ,OAAO,CAAC6hB,SAAS,GACzB0d,iBAAiB,CAACxyB,KAAK,EAAE+xB,QAAQ,EAAEvzB,IAAI,EAAEi0B,gBAAgB,EAAE1d,gBAAgB,CAAC,GAC9Eye,eAAe,CAACxzB,KAAK,EAAE+xB,QAAQ,EAAEvzB,IAAI,EAAE,KAAK,EAAEi0B,gBAAgB,EAAE1d,gBAAgB,CAAC;QACnF,IAAI9Y,KAAK,CAACpK,MAAM,GAAG,CAAC,EAAE;UACpB,MAAMO,YAAY,GAAG6J,KAAK,CAAC,CAAC,CAAC,CAAC7J,YAAY;UAC1C,MAAMspB,IAAI,GAAG1b,KAAK,CAAC+zB,cAAc,CAAC3hC,YAAY,CAAC,CAACspB,IAAI;UACpDzf,KAAK,GAAG,EAAE;UACV,KAAK,IAAIvK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgqB,IAAI,CAAC7pB,MAAM,EAAE,EAAEH,CAAC,EAAE;YACpCuK,KAAK,CAAClH,IAAI,CAAC;cAACwiB,OAAO,EAAEmE,IAAI,CAAChqB,CAAC,CAAC;cAAEU,YAAY;cAAEC,KAAK,EAAEX;YAAC,CAAC,CAAC;UACxD;QACF;QACA,OAAOuK,KAAK;MACd,CAAC;MACDsiB,KAAKA,CAACve,KAAK,EAAEnK,CAAC,EAAE5C,OAAO,EAAEw/B,gBAAgB,EAAE;QACzC,MAAMV,QAAQ,GAAG/Y,mBAAmB,CAACnjB,CAAC,EAAEmK,KAAK,CAAC;QAC9C,MAAMxB,IAAI,GAAGvL,OAAO,CAACuL,IAAI,IAAI,IAAI;QACjC,MAAMuW,gBAAgB,GAAG9hB,OAAO,CAAC8hB,gBAAgB,IAAI,KAAK;QAC1D,OAAOyd,iBAAiB,CAACxyB,KAAK,EAAE+xB,QAAQ,EAAEvzB,IAAI,EAAEi0B,gBAAgB,EAAE1d,gBAAgB,CAAC;MACrF,CAAC;MACDif,OAAOA,CAACh0B,KAAK,EAAEnK,CAAC,EAAE5C,OAAO,EAAEw/B,gBAAgB,EAAE;QAC3C,MAAMV,QAAQ,GAAG/Y,mBAAmB,CAACnjB,CAAC,EAAEmK,KAAK,CAAC;QAC9C,MAAMxB,IAAI,GAAGvL,OAAO,CAACuL,IAAI,IAAI,IAAI;QACjC,MAAMuW,gBAAgB,GAAG9hB,OAAO,CAAC8hB,gBAAgB,IAAI,KAAK;QAC1D,OAAOye,eAAe,CAACxzB,KAAK,EAAE+xB,QAAQ,EAAEvzB,IAAI,EAAEvL,OAAO,CAAC6hB,SAAS,EAAE2d,gBAAgB,EAAE1d,gBAAgB,CAAC;MACtG,CAAC;MACD5gB,CAACA,CAAC6L,KAAK,EAAEnK,CAAC,EAAE5C,OAAO,EAAEw/B,gBAAgB,EAAE;QACrC,MAAMV,QAAQ,GAAG/Y,mBAAmB,CAACnjB,CAAC,EAAEmK,KAAK,CAAC;QAC9C,OAAOyzB,YAAY,CAACzzB,KAAK,EAAE+xB,QAAQ,EAAE,GAAG,EAAE9+B,OAAO,CAAC6hB,SAAS,EAAE2d,gBAAgB,CAAC;MAChF,CAAC;MACDp+B,CAACA,CAAC2L,KAAK,EAAEnK,CAAC,EAAE5C,OAAO,EAAEw/B,gBAAgB,EAAE;QACrC,MAAMV,QAAQ,GAAG/Y,mBAAmB,CAACnjB,CAAC,EAAEmK,KAAK,CAAC;QAC9C,OAAOyzB,YAAY,CAACzzB,KAAK,EAAE+xB,QAAQ,EAAE,GAAG,EAAE9+B,OAAO,CAAC6hB,SAAS,EAAE2d,gBAAgB,CAAC;MAChF;IACF;EACF,CAAC;EAED,MAAMwB,gBAAgB,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,CAAC;EAC3D,SAASC,gBAAgBA,CAACj8B,KAAK,EAAE85B,QAAQ,EAAE;IACzC,OAAO95B,KAAK,CAAC0sB,MAAM,CAACzwB,CAAC,IAAIA,CAAC,CAAC6jB,GAAG,KAAKga,QAAQ,CAAC;EAC9C;EACA,SAASoC,2BAA2BA,CAACl8B,KAAK,EAAEuG,IAAI,EAAE;IAChD,OAAOvG,KAAK,CAAC0sB,MAAM,CAACzwB,CAAC,IAAI+/B,gBAAgB,CAAClhC,OAAO,CAACmB,CAAC,CAAC6jB,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI7jB,CAAC,CAACykB,GAAG,CAACna,IAAI,KAAKA,IAAI,CAAC;EACzF;EACA,SAAS41B,YAAYA,CAACn8B,KAAK,EAAExG,OAAO,EAAE;IACpC,OAAOwG,KAAK,CAACV,IAAI,CAAC,CAAChC,CAAC,EAAEC,CAAC,KAAK;MAC1B,MAAMtD,EAAE,GAAGT,OAAO,GAAG+D,CAAC,GAAGD,CAAC;MAC1B,MAAMpD,EAAE,GAAGV,OAAO,GAAG8D,CAAC,GAAGC,CAAC;MAC1B,OAAOtD,EAAE,CAAC6f,MAAM,KAAK5f,EAAE,CAAC4f,MAAM,GAC5B7f,EAAE,CAACG,KAAK,GAAGF,EAAE,CAACE,KAAK,GACnBH,EAAE,CAAC6f,MAAM,GAAG5f,EAAE,CAAC4f,MAAM;IACzB,CAAC,CAAC;EACJ;EACA,SAASsiB,SAASA,CAACC,KAAK,EAAE;IACxB,MAAMC,WAAW,GAAG,EAAE;IACtB,IAAI7iC,CAAC,EAAEO,IAAI,EAAE0mB,GAAG,EAAEZ,GAAG,EAAEyc,KAAK,EAAEC,WAAW;IACzC,KAAK/iC,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAG,CAACqiC,KAAK,IAAI,EAAE,EAAEziC,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;MACtDinB,GAAG,GAAG2b,KAAK,CAAC5iC,CAAC,CAAC;MACd,CAAC;QAACqgC,QAAQ,EAAEha,GAAG;QAAE9kB,OAAO,EAAE;UAACuhC,KAAK;UAAEC,WAAW,GAAG;QAAC;MAAC,CAAC,GAAG9b,GAAG;MACzD4b,WAAW,CAACx/B,IAAI,CAAC;QACf1C,KAAK,EAAEX,CAAC;QACRinB,GAAG;QACHZ,GAAG;QACH2c,UAAU,EAAE/b,GAAG,CAACgc,YAAY,CAAC,CAAC;QAC9B5iB,MAAM,EAAE4G,GAAG,CAAC5G,MAAM;QAClByiB,KAAK,EAAEA,KAAK,IAAKzc,GAAG,GAAGyc,KAAM;QAC7BC;MACF,CAAC,CAAC;IACJ;IACA,OAAOF,WAAW;EACpB;EACA,SAASK,WAAWA,CAACC,OAAO,EAAE;IAC5B,MAAMC,MAAM,GAAG,CAAC,CAAC;IACjB,KAAK,MAAMC,IAAI,IAAIF,OAAO,EAAE;MAC1B,MAAM;QAACL,KAAK;QAAEzc,GAAG;QAAE0c;MAAW,CAAC,GAAGM,IAAI;MACtC,IAAI,CAACP,KAAK,IAAI,CAACP,gBAAgB,CAACrR,QAAQ,CAAC7K,GAAG,CAAC,EAAE;QAC7C;MACF;MACA,MAAMwL,MAAM,GAAGuR,MAAM,CAACN,KAAK,CAAC,KAAKM,MAAM,CAACN,KAAK,CAAC,GAAG;QAACp2B,KAAK,EAAE,CAAC;QAAE42B,MAAM,EAAE,CAAC;QAAEjjB,MAAM,EAAE,CAAC;QAAEtc,IAAI,EAAE;MAAC,CAAC,CAAC;MAC3F8tB,MAAM,CAACnlB,KAAK,EAAE;MACdmlB,MAAM,CAACxR,MAAM,IAAI0iB,WAAW;IAC9B;IACA,OAAOK,MAAM;EACf;EACA,SAASG,aAAaA,CAACJ,OAAO,EAAEK,MAAM,EAAE;IACtC,MAAMJ,MAAM,GAAGF,WAAW,CAACC,OAAO,CAAC;IACnC,MAAM;MAACM,YAAY;MAAEC;IAAa,CAAC,GAAGF,MAAM;IAC5C,IAAIxjC,CAAC,EAAEO,IAAI,EAAEojC,MAAM;IACnB,KAAK3jC,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAG4iC,OAAO,CAAChjC,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;MAChD2jC,MAAM,GAAGR,OAAO,CAACnjC,CAAC,CAAC;MACnB,MAAM;QAAC4jC;MAAQ,CAAC,GAAGD,MAAM,CAAC1c,GAAG;MAC7B,MAAM6b,KAAK,GAAGM,MAAM,CAACO,MAAM,CAACb,KAAK,CAAC;MAClC,MAAMe,MAAM,GAAGf,KAAK,IAAIa,MAAM,CAACZ,WAAW,GAAGD,KAAK,CAACziB,MAAM;MACzD,IAAIsjB,MAAM,CAACX,UAAU,EAAE;QACrBW,MAAM,CAACrd,KAAK,GAAGud,MAAM,GAAGA,MAAM,GAAGJ,YAAY,GAAGG,QAAQ,IAAIJ,MAAM,CAACM,cAAc;QACjFH,MAAM,CAACpd,MAAM,GAAGmd,aAAa;MAC/B,CAAC,MAAM;QACLC,MAAM,CAACrd,KAAK,GAAGmd,YAAY;QAC3BE,MAAM,CAACpd,MAAM,GAAGsd,MAAM,GAAGA,MAAM,GAAGH,aAAa,GAAGE,QAAQ,IAAIJ,MAAM,CAACO,eAAe;MACtF;IACF;IACA,OAAOX,MAAM;EACf;EACA,SAASY,gBAAgBA,CAACpB,KAAK,EAAE;IAC/B,MAAMC,WAAW,GAAGF,SAAS,CAACC,KAAK,CAAC;IACpC,MAAMgB,QAAQ,GAAGlB,YAAY,CAACG,WAAW,CAAC5P,MAAM,CAACoQ,IAAI,IAAIA,IAAI,CAACpc,GAAG,CAAC2c,QAAQ,CAAC,EAAE,IAAI,CAAC;IAClF,MAAM33B,IAAI,GAAGy2B,YAAY,CAACF,gBAAgB,CAACK,WAAW,EAAE,MAAM,CAAC,EAAE,IAAI,CAAC;IACtE,MAAM32B,KAAK,GAAGw2B,YAAY,CAACF,gBAAgB,CAACK,WAAW,EAAE,OAAO,CAAC,CAAC;IAClE,MAAMrc,GAAG,GAAGkc,YAAY,CAACF,gBAAgB,CAACK,WAAW,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC;IACpE,MAAMpc,MAAM,GAAGic,YAAY,CAACF,gBAAgB,CAACK,WAAW,EAAE,QAAQ,CAAC,CAAC;IACpE,MAAMoB,gBAAgB,GAAGxB,2BAA2B,CAACI,WAAW,EAAE,GAAG,CAAC;IACtE,MAAMqB,cAAc,GAAGzB,2BAA2B,CAACI,WAAW,EAAE,GAAG,CAAC;IACpE,OAAO;MACLe,QAAQ;MACRO,UAAU,EAAEl4B,IAAI,CAACm4B,MAAM,CAAC5d,GAAG,CAAC;MAC5B6d,cAAc,EAAEn4B,KAAK,CAACk4B,MAAM,CAACF,cAAc,CAAC,CAACE,MAAM,CAAC3d,MAAM,CAAC,CAAC2d,MAAM,CAACH,gBAAgB,CAAC;MACpF/C,SAAS,EAAEsB,gBAAgB,CAACK,WAAW,EAAE,WAAW,CAAC;MACrDyB,QAAQ,EAAEr4B,IAAI,CAACm4B,MAAM,CAACl4B,KAAK,CAAC,CAACk4B,MAAM,CAACF,cAAc,CAAC;MACnDlB,UAAU,EAAExc,GAAG,CAAC4d,MAAM,CAAC3d,MAAM,CAAC,CAAC2d,MAAM,CAACH,gBAAgB;IACxD,CAAC;EACH;EACA,SAASM,cAAcA,CAACC,UAAU,EAAEtD,SAAS,EAAEr9B,CAAC,EAAEC,CAAC,EAAE;IACnD,OAAOO,IAAI,CAACqC,GAAG,CAAC89B,UAAU,CAAC3gC,CAAC,CAAC,EAAEq9B,SAAS,CAACr9B,CAAC,CAAC,CAAC,GAAGQ,IAAI,CAACqC,GAAG,CAAC89B,UAAU,CAAC1gC,CAAC,CAAC,EAAEo9B,SAAS,CAACp9B,CAAC,CAAC,CAAC;EACtF;EACA,SAAS2gC,gBAAgBA,CAACD,UAAU,EAAEE,UAAU,EAAE;IAChDF,UAAU,CAAChe,GAAG,GAAGniB,IAAI,CAACqC,GAAG,CAAC89B,UAAU,CAAChe,GAAG,EAAEke,UAAU,CAACle,GAAG,CAAC;IACzDge,UAAU,CAACv4B,IAAI,GAAG5H,IAAI,CAACqC,GAAG,CAAC89B,UAAU,CAACv4B,IAAI,EAAEy4B,UAAU,CAACz4B,IAAI,CAAC;IAC5Du4B,UAAU,CAAC/d,MAAM,GAAGpiB,IAAI,CAACqC,GAAG,CAAC89B,UAAU,CAAC/d,MAAM,EAAEie,UAAU,CAACje,MAAM,CAAC;IAClE+d,UAAU,CAACt4B,KAAK,GAAG7H,IAAI,CAACqC,GAAG,CAAC89B,UAAU,CAACt4B,KAAK,EAAEw4B,UAAU,CAACx4B,KAAK,CAAC;EACjE;EACA,SAASy4B,UAAUA,CAACzD,SAAS,EAAEsC,MAAM,EAAEG,MAAM,EAAEP,MAAM,EAAE;IACrD,MAAM;MAAC/c,GAAG;MAAEY;IAAG,CAAC,GAAG0c,MAAM;IACzB,MAAMa,UAAU,GAAGtD,SAAS,CAACsD,UAAU;IACvC,IAAI,CAAC5lC,QAAQ,CAACynB,GAAG,CAAC,EAAE;MAClB,IAAIsd,MAAM,CAAC5/B,IAAI,EAAE;QACfm9B,SAAS,CAAC7a,GAAG,CAAC,IAAIsd,MAAM,CAAC5/B,IAAI;MAC/B;MACA,MAAM++B,KAAK,GAAGM,MAAM,CAACO,MAAM,CAACb,KAAK,CAAC,IAAI;QAAC/+B,IAAI,EAAE,CAAC;QAAE2I,KAAK,EAAE;MAAC,CAAC;MACzDo2B,KAAK,CAAC/+B,IAAI,GAAGM,IAAI,CAACqC,GAAG,CAACo8B,KAAK,CAAC/+B,IAAI,EAAE4/B,MAAM,CAACX,UAAU,GAAG/b,GAAG,CAACV,MAAM,GAAGU,GAAG,CAACX,KAAK,CAAC;MAC7Eqd,MAAM,CAAC5/B,IAAI,GAAG++B,KAAK,CAAC/+B,IAAI,GAAG++B,KAAK,CAACp2B,KAAK;MACtCw0B,SAAS,CAAC7a,GAAG,CAAC,IAAIsd,MAAM,CAAC5/B,IAAI;IAC/B;IACA,IAAIkjB,GAAG,CAAC2d,UAAU,EAAE;MAClBH,gBAAgB,CAACD,UAAU,EAAEvd,GAAG,CAAC2d,UAAU,CAAC,CAAC,CAAC;IAChD;IACA,MAAMC,QAAQ,GAAGxgC,IAAI,CAACqC,GAAG,CAAC,CAAC,EAAE88B,MAAM,CAACsB,UAAU,GAAGP,cAAc,CAACC,UAAU,EAAEtD,SAAS,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;IACxG,MAAM6D,SAAS,GAAG1gC,IAAI,CAACqC,GAAG,CAAC,CAAC,EAAE88B,MAAM,CAACwB,WAAW,GAAGT,cAAc,CAACC,UAAU,EAAEtD,SAAS,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;IAC1G,MAAM+D,YAAY,GAAGJ,QAAQ,KAAK3D,SAAS,CAACzuB,CAAC;IAC7C,MAAMyyB,aAAa,GAAGH,SAAS,KAAK7D,SAAS,CAACvwB,CAAC;IAC/CuwB,SAAS,CAACzuB,CAAC,GAAGoyB,QAAQ;IACtB3D,SAAS,CAACvwB,CAAC,GAAGo0B,SAAS;IACvB,OAAOpB,MAAM,CAACX,UAAU,GACpB;MAACmC,IAAI,EAAEF,YAAY;MAAEG,KAAK,EAAEF;IAAa,CAAC,GAC1C;MAACC,IAAI,EAAED,aAAa;MAAEE,KAAK,EAAEH;IAAY,CAAC;EAChD;EACA,SAASI,gBAAgBA,CAACnE,SAAS,EAAE;IACnC,MAAMsD,UAAU,GAAGtD,SAAS,CAACsD,UAAU;IACvC,SAASc,SAASA,CAACjf,GAAG,EAAE;MACtB,MAAMgV,MAAM,GAAGh3B,IAAI,CAACqC,GAAG,CAAC89B,UAAU,CAACne,GAAG,CAAC,GAAG6a,SAAS,CAAC7a,GAAG,CAAC,EAAE,CAAC,CAAC;MAC5D6a,SAAS,CAAC7a,GAAG,CAAC,IAAIgV,MAAM;MACxB,OAAOA,MAAM;IACf;IACA6F,SAAS,CAACv+B,CAAC,IAAI2iC,SAAS,CAAC,KAAK,CAAC;IAC/BpE,SAAS,CAACz+B,CAAC,IAAI6iC,SAAS,CAAC,MAAM,CAAC;IAChCA,SAAS,CAAC,OAAO,CAAC;IAClBA,SAAS,CAAC,QAAQ,CAAC;EACrB;EACA,SAASC,UAAUA,CAACvC,UAAU,EAAE9B,SAAS,EAAE;IACzC,MAAMsD,UAAU,GAAGtD,SAAS,CAACsD,UAAU;IACvC,SAASgB,kBAAkBA,CAACvf,SAAS,EAAE;MACrC,MAAM8G,MAAM,GAAG;QAAC9gB,IAAI,EAAE,CAAC;QAAEua,GAAG,EAAE,CAAC;QAAEta,KAAK,EAAE,CAAC;QAAEua,MAAM,EAAE;MAAC,CAAC;MACrDR,SAAS,CAACnc,OAAO,CAAEuc,GAAG,IAAK;QACzB0G,MAAM,CAAC1G,GAAG,CAAC,GAAGhiB,IAAI,CAACqC,GAAG,CAACw6B,SAAS,CAAC7a,GAAG,CAAC,EAAEme,UAAU,CAACne,GAAG,CAAC,CAAC;MACzD,CAAC,CAAC;MACF,OAAO0G,MAAM;IACf;IACA,OAAOiW,UAAU,GACbwC,kBAAkB,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,GACrCA,kBAAkB,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;EAC3C;EACA,SAASC,QAAQA,CAAC7C,KAAK,EAAE1B,SAAS,EAAEsC,MAAM,EAAEJ,MAAM,EAAE;IAClD,MAAMsC,UAAU,GAAG,EAAE;IACrB,IAAI1lC,CAAC,EAAEO,IAAI,EAAEojC,MAAM,EAAE1c,GAAG,EAAE0e,KAAK,EAAE/3B,OAAO;IACxC,KAAK5N,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAGqiC,KAAK,CAACziC,MAAM,EAAEwlC,KAAK,GAAG,CAAC,EAAE3lC,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;MACzD2jC,MAAM,GAAGf,KAAK,CAAC5iC,CAAC,CAAC;MACjBinB,GAAG,GAAG0c,MAAM,CAAC1c,GAAG;MAChBA,GAAG,CAAC2e,MAAM,CACRjC,MAAM,CAACrd,KAAK,IAAI4a,SAAS,CAACzuB,CAAC,EAC3BkxB,MAAM,CAACpd,MAAM,IAAI2a,SAAS,CAACvwB,CAAC,EAC5B40B,UAAU,CAAC5B,MAAM,CAACX,UAAU,EAAE9B,SAAS,CACzC,CAAC;MACD,MAAM;QAACiE,IAAI;QAAEC;MAAK,CAAC,GAAGT,UAAU,CAACzD,SAAS,EAAEsC,MAAM,EAAEG,MAAM,EAAEP,MAAM,CAAC;MACnEuC,KAAK,IAAIR,IAAI,IAAIO,UAAU,CAACvlC,MAAM;MAClCyN,OAAO,GAAGA,OAAO,IAAIw3B,KAAK;MAC1B,IAAI,CAACne,GAAG,CAAC2c,QAAQ,EAAE;QACjB8B,UAAU,CAACriC,IAAI,CAACsgC,MAAM,CAAC;MACzB;IACF;IACA,OAAOgC,KAAK,IAAIF,QAAQ,CAACC,UAAU,EAAExE,SAAS,EAAEsC,MAAM,EAAEJ,MAAM,CAAC,IAAIx1B,OAAO;EAC5E;EACA,SAASi4B,UAAUA,CAAC5e,GAAG,EAAEhb,IAAI,EAAEua,GAAG,EAAEF,KAAK,EAAEC,MAAM,EAAE;IACjDU,GAAG,CAACT,GAAG,GAAGA,GAAG;IACbS,GAAG,CAAChb,IAAI,GAAGA,IAAI;IACfgb,GAAG,CAAC/a,KAAK,GAAGD,IAAI,GAAGqa,KAAK;IACxBW,GAAG,CAACR,MAAM,GAAGD,GAAG,GAAGD,MAAM;IACzBU,GAAG,CAACX,KAAK,GAAGA,KAAK;IACjBW,GAAG,CAACV,MAAM,GAAGA,MAAM;EACrB;EACA,SAASuf,UAAUA,CAAClD,KAAK,EAAE1B,SAAS,EAAEsC,MAAM,EAAEJ,MAAM,EAAE;IACpD,MAAM2C,WAAW,GAAGvC,MAAM,CAACwC,OAAO;IAClC,IAAI;MAACvjC,CAAC;MAAEE;IAAC,CAAC,GAAGu+B,SAAS;IACtB,KAAK,MAAMyC,MAAM,IAAIf,KAAK,EAAE;MAC1B,MAAM3b,GAAG,GAAG0c,MAAM,CAAC1c,GAAG;MACtB,MAAM6b,KAAK,GAAGM,MAAM,CAACO,MAAM,CAACb,KAAK,CAAC,IAAI;QAACp2B,KAAK,EAAE,CAAC;QAAE42B,MAAM,EAAE,CAAC;QAAEjjB,MAAM,EAAE;MAAC,CAAC;MACtE,MAAMA,MAAM,GAAIsjB,MAAM,CAACZ,WAAW,GAAGD,KAAK,CAACziB,MAAM,IAAK,CAAC;MACvD,IAAIsjB,MAAM,CAACX,UAAU,EAAE;QACrB,MAAM1c,KAAK,GAAG4a,SAAS,CAACzuB,CAAC,GAAG4N,MAAM;QAClC,MAAMkG,MAAM,GAAGuc,KAAK,CAAC/+B,IAAI,IAAIkjB,GAAG,CAACV,MAAM;QACvC,IAAI7iB,OAAO,CAACo/B,KAAK,CAAC96B,KAAK,CAAC,EAAE;UACxBrF,CAAC,GAAGmgC,KAAK,CAAC96B,KAAK;QACjB;QACA,IAAIif,GAAG,CAAC2c,QAAQ,EAAE;UAChBiC,UAAU,CAAC5e,GAAG,EAAE8e,WAAW,CAAC95B,IAAI,EAAEtJ,CAAC,EAAE6gC,MAAM,CAACsB,UAAU,GAAGiB,WAAW,CAAC75B,KAAK,GAAG65B,WAAW,CAAC95B,IAAI,EAAEsa,MAAM,CAAC;QACxG,CAAC,MAAM;UACLsf,UAAU,CAAC5e,GAAG,EAAEia,SAAS,CAACj1B,IAAI,GAAG62B,KAAK,CAACQ,MAAM,EAAE3gC,CAAC,EAAE2jB,KAAK,EAAEC,MAAM,CAAC;QAClE;QACAuc,KAAK,CAAC96B,KAAK,GAAGrF,CAAC;QACfmgC,KAAK,CAACQ,MAAM,IAAIhd,KAAK;QACrB3jB,CAAC,GAAGskB,GAAG,CAACR,MAAM;MAChB,CAAC,MAAM;QACL,MAAMF,MAAM,GAAG2a,SAAS,CAACvwB,CAAC,GAAG0P,MAAM;QACnC,MAAMiG,KAAK,GAAGwc,KAAK,CAAC/+B,IAAI,IAAIkjB,GAAG,CAACX,KAAK;QACrC,IAAI5iB,OAAO,CAACo/B,KAAK,CAAC96B,KAAK,CAAC,EAAE;UACxBvF,CAAC,GAAGqgC,KAAK,CAAC96B,KAAK;QACjB;QACA,IAAIif,GAAG,CAAC2c,QAAQ,EAAE;UAChBiC,UAAU,CAAC5e,GAAG,EAAExkB,CAAC,EAAEsjC,WAAW,CAACvf,GAAG,EAAEF,KAAK,EAAEkd,MAAM,CAACwB,WAAW,GAAGe,WAAW,CAACtf,MAAM,GAAGsf,WAAW,CAACvf,GAAG,CAAC;QACvG,CAAC,MAAM;UACLqf,UAAU,CAAC5e,GAAG,EAAExkB,CAAC,EAAEy+B,SAAS,CAAC1a,GAAG,GAAGsc,KAAK,CAACQ,MAAM,EAAEhd,KAAK,EAAEC,MAAM,CAAC;QACjE;QACAuc,KAAK,CAAC96B,KAAK,GAAGvF,CAAC;QACfqgC,KAAK,CAACQ,MAAM,IAAI/c,MAAM;QACtB9jB,CAAC,GAAGwkB,GAAG,CAAC/a,KAAK;MACf;IACF;IACAg1B,SAAS,CAACz+B,CAAC,GAAGA,CAAC;IACfy+B,SAAS,CAACv+B,CAAC,GAAGA,CAAC;EACjB;EACAiiB,QAAQ,CAACpa,GAAG,CAAC,QAAQ,EAAE;IACrBy7B,WAAW,EAAE,IAAI;IACjBD,OAAO,EAAE;MACPxf,GAAG,EAAE,CAAC;MACNta,KAAK,EAAE,CAAC;MACRua,MAAM,EAAE,CAAC;MACTxa,IAAI,EAAE;IACR;EACF,CAAC,CAAC;EACF,IAAIk3B,OAAO,GAAG;IACZ+C,MAAMA,CAAC53B,KAAK,EAAEtK,IAAI,EAAE;MAClB,IAAI,CAACsK,KAAK,CAACs0B,KAAK,EAAE;QAChBt0B,KAAK,CAACs0B,KAAK,GAAG,EAAE;MAClB;MACA5+B,IAAI,CAAC4/B,QAAQ,GAAG5/B,IAAI,CAAC4/B,QAAQ,IAAI,KAAK;MACtC5/B,IAAI,CAACq8B,QAAQ,GAAGr8B,IAAI,CAACq8B,QAAQ,IAAI,KAAK;MACtCr8B,IAAI,CAACqc,MAAM,GAAGrc,IAAI,CAACqc,MAAM,IAAI,CAAC;MAC9Brc,IAAI,CAACmiC,OAAO,GAAGniC,IAAI,CAACmiC,OAAO,IAAI,YAAW;QACxC,OAAO,CAAC;UACNC,CAAC,EAAE,CAAC;UACJh3B,IAAIA,CAAC8xB,SAAS,EAAE;YACdl9B,IAAI,CAACoL,IAAI,CAAC8xB,SAAS,CAAC;UACtB;QACF,CAAC,CAAC;MACJ,CAAC;MACD5yB,KAAK,CAACs0B,KAAK,CAACv/B,IAAI,CAACW,IAAI,CAAC;IACxB,CAAC;IACDqiC,SAASA,CAAC/3B,KAAK,EAAEg4B,UAAU,EAAE;MAC3B,MAAM3lC,KAAK,GAAG2N,KAAK,CAACs0B,KAAK,GAAGt0B,KAAK,CAACs0B,KAAK,CAACvhC,OAAO,CAACilC,UAAU,CAAC,GAAG,CAAC,CAAC;MAChE,IAAI3lC,KAAK,KAAK,CAAC,CAAC,EAAE;QAChB2N,KAAK,CAACs0B,KAAK,CAACv4B,MAAM,CAAC1J,KAAK,EAAE,CAAC,CAAC;MAC9B;IACF,CAAC;IACD4lC,SAASA,CAACj4B,KAAK,EAAEtK,IAAI,EAAEzC,OAAO,EAAE;MAC9ByC,IAAI,CAAC4/B,QAAQ,GAAGriC,OAAO,CAACqiC,QAAQ;MAChC5/B,IAAI,CAACq8B,QAAQ,GAAG9+B,OAAO,CAAC8+B,QAAQ;MAChCr8B,IAAI,CAACqc,MAAM,GAAG9e,OAAO,CAAC8e,MAAM;IAC9B,CAAC;IACDulB,MAAMA,CAACt3B,KAAK,EAAEgY,KAAK,EAAEC,MAAM,EAAEigB,UAAU,EAAE;MACvC,IAAI,CAACl4B,KAAK,EAAE;QACV;MACF;MACA,MAAM03B,OAAO,GAAGpL,SAAS,CAACtsB,KAAK,CAAC/M,OAAO,CAACoiC,MAAM,CAACqC,OAAO,CAAC;MACvD,MAAMlC,cAAc,GAAGz/B,IAAI,CAACqC,GAAG,CAAC4f,KAAK,GAAG0f,OAAO,CAAC1f,KAAK,EAAE,CAAC,CAAC;MACzD,MAAMyd,eAAe,GAAG1/B,IAAI,CAACqC,GAAG,CAAC6f,MAAM,GAAGyf,OAAO,CAACzf,MAAM,EAAE,CAAC,CAAC;MAC5D,MAAMqc,KAAK,GAAGoB,gBAAgB,CAAC11B,KAAK,CAACs0B,KAAK,CAAC;MAC3C,MAAM6D,aAAa,GAAG7D,KAAK,CAAC0B,QAAQ;MACpC,MAAMoC,eAAe,GAAG9D,KAAK,CAACI,UAAU;MACxCnjC,IAAI,CAACyO,KAAK,CAACs0B,KAAK,EAAE3b,GAAG,IAAI;QACvB,IAAI,OAAOA,GAAG,CAAC0f,YAAY,KAAK,UAAU,EAAE;UAC1C1f,GAAG,CAAC0f,YAAY,CAAC,CAAC;QACpB;MACF,CAAC,CAAC;MACF,MAAMC,uBAAuB,GAAGH,aAAa,CAACz2B,MAAM,CAAC,CAAC62B,KAAK,EAAExD,IAAI,KAC/DA,IAAI,CAACpc,GAAG,CAAC1lB,OAAO,IAAI8hC,IAAI,CAACpc,GAAG,CAAC1lB,OAAO,CAACulC,OAAO,KAAK,KAAK,GAAGD,KAAK,GAAGA,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC;MACrF,MAAMrD,MAAM,GAAGjlC,MAAM,CAACkhC,MAAM,CAAC;QAC3BqF,UAAU,EAAExe,KAAK;QACjB0e,WAAW,EAAEze,MAAM;QACnByf,OAAO;QACPlC,cAAc;QACdC,eAAe;QACfN,YAAY,EAAEK,cAAc,GAAG,CAAC,GAAG8C,uBAAuB;QAC1DlD,aAAa,EAAEK,eAAe,GAAG;MACnC,CAAC,CAAC;MACF,MAAMS,UAAU,GAAGjmC,MAAM,CAACsP,MAAM,CAAC,CAAC,CAAC,EAAEm4B,OAAO,CAAC;MAC7CvB,gBAAgB,CAACD,UAAU,EAAE5J,SAAS,CAAC4L,UAAU,CAAC,CAAC;MACnD,MAAMtF,SAAS,GAAG3iC,MAAM,CAACsP,MAAM,CAAC;QAC9B22B,UAAU;QACV/xB,CAAC,EAAEqxB,cAAc;QACjBnzB,CAAC,EAAEozB,eAAe;QAClBthC,CAAC,EAAEujC,OAAO,CAAC/5B,IAAI;QACftJ,CAAC,EAAEqjC,OAAO,CAACxf;MACb,CAAC,EAAEwf,OAAO,CAAC;MACX,MAAM5C,MAAM,GAAGG,aAAa,CAACkD,aAAa,CAACrC,MAAM,CAACsC,eAAe,CAAC,EAAElD,MAAM,CAAC;MAC3EiC,QAAQ,CAAC7C,KAAK,CAACgB,QAAQ,EAAE1C,SAAS,EAAEsC,MAAM,EAAEJ,MAAM,CAAC;MACnDqC,QAAQ,CAACgB,aAAa,EAAEvF,SAAS,EAAEsC,MAAM,EAAEJ,MAAM,CAAC;MAClD,IAAIqC,QAAQ,CAACiB,eAAe,EAAExF,SAAS,EAAEsC,MAAM,EAAEJ,MAAM,CAAC,EAAE;QACxDqC,QAAQ,CAACgB,aAAa,EAAEvF,SAAS,EAAEsC,MAAM,EAAEJ,MAAM,CAAC;MACpD;MACAiC,gBAAgB,CAACnE,SAAS,CAAC;MAC3B4E,UAAU,CAAClD,KAAK,CAACuB,UAAU,EAAEjD,SAAS,EAAEsC,MAAM,EAAEJ,MAAM,CAAC;MACvDlC,SAAS,CAACz+B,CAAC,IAAIy+B,SAAS,CAACzuB,CAAC;MAC1ByuB,SAAS,CAACv+B,CAAC,IAAIu+B,SAAS,CAACvwB,CAAC;MAC1Bm1B,UAAU,CAAClD,KAAK,CAACyB,cAAc,EAAEnD,SAAS,EAAEsC,MAAM,EAAEJ,MAAM,CAAC;MAC3D90B,KAAK,CAAC4yB,SAAS,GAAG;QAChBj1B,IAAI,EAAEi1B,SAAS,CAACj1B,IAAI;QACpBua,GAAG,EAAE0a,SAAS,CAAC1a,GAAG;QAClBta,KAAK,EAAEg1B,SAAS,CAACj1B,IAAI,GAAGi1B,SAAS,CAACzuB,CAAC;QACnCgU,MAAM,EAAEya,SAAS,CAAC1a,GAAG,GAAG0a,SAAS,CAACvwB,CAAC;QACnC4V,MAAM,EAAE2a,SAAS,CAACvwB,CAAC;QACnB2V,KAAK,EAAE4a,SAAS,CAACzuB;MACnB,CAAC;MACD5S,IAAI,CAAC+iC,KAAK,CAAC1B,SAAS,EAAGyC,MAAM,IAAK;QAChC,MAAM1c,GAAG,GAAG0c,MAAM,CAAC1c,GAAG;QACtB1oB,MAAM,CAACsP,MAAM,CAACoZ,GAAG,EAAE3Y,KAAK,CAAC4yB,SAAS,CAAC;QACnCja,GAAG,CAAC2e,MAAM,CAAC1E,SAAS,CAACzuB,CAAC,EAAEyuB,SAAS,CAACvwB,CAAC,EAAE;UAAC1E,IAAI,EAAE,CAAC;UAAEua,GAAG,EAAE,CAAC;UAAEta,KAAK,EAAE,CAAC;UAAEua,MAAM,EAAE;QAAC,CAAC,CAAC;MAC9E,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMsgB,YAAY,CAAC;IACjBC,cAAcA,CAACngB,MAAM,EAAE+B,WAAW,EAAE,CAAC;IACrCqe,cAAcA,CAAC9kB,OAAO,EAAE;MACtB,OAAO,KAAK;IACd;IACAsH,gBAAgBA,CAACnb,KAAK,EAAEhQ,IAAI,EAAEkL,QAAQ,EAAE,CAAC;IACzCkgB,mBAAmBA,CAACpb,KAAK,EAAEhQ,IAAI,EAAEkL,QAAQ,EAAE,CAAC;IAC5C6Y,mBAAmBA,CAAA,EAAG;MACpB,OAAO,CAAC;IACV;IACAoG,cAAcA,CAAC5C,OAAO,EAAES,KAAK,EAAEC,MAAM,EAAEqC,WAAW,EAAE;MAClDtC,KAAK,GAAGjiB,IAAI,CAACqC,GAAG,CAAC,CAAC,EAAE4f,KAAK,IAAIT,OAAO,CAACS,KAAK,CAAC;MAC3CC,MAAM,GAAGA,MAAM,IAAIV,OAAO,CAACU,MAAM;MACjC,OAAO;QACLD,KAAK;QACLC,MAAM,EAAEliB,IAAI,CAACqC,GAAG,CAAC,CAAC,EAAEkiB,WAAW,GAAGvkB,IAAI,CAACkB,KAAK,CAAC+gB,KAAK,GAAGsC,WAAW,CAAC,GAAGrC,MAAM;MAC5E,CAAC;IACH;IACA2gB,UAAUA,CAACrgB,MAAM,EAAE;MACjB,OAAO,IAAI;IACb;IACAsgB,YAAYA,CAACC,MAAM,EAAE,CACrB;EACF;EAEA,MAAMC,aAAa,SAASN,YAAY,CAAC;IACvCC,cAAcA,CAAChjC,IAAI,EAAE;MACnB,OAAOA,IAAI,IAAIA,IAAI,CAAConB,UAAU,IAAIpnB,IAAI,CAAConB,UAAU,CAAC,IAAI,CAAC,IAAI,IAAI;IACjE;IACA+b,YAAYA,CAACC,MAAM,EAAE;MACnBA,MAAM,CAAC7lC,OAAO,CAACugB,SAAS,GAAG,KAAK;IAClC;EACF;EAEA,MAAMwlB,WAAW,GAAG,UAAU;EAC9B,MAAMC,WAAW,GAAG;IAClBC,UAAU,EAAE,WAAW;IACvBC,SAAS,EAAE,WAAW;IACtBC,QAAQ,EAAE,SAAS;IACnBC,YAAY,EAAE,YAAY;IAC1BC,WAAW,EAAE,WAAW;IACxBC,WAAW,EAAE,WAAW;IACxBC,SAAS,EAAE,SAAS;IACpBC,YAAY,EAAE,UAAU;IACxBC,UAAU,EAAE;EACd,CAAC;EACD,MAAMC,aAAa,GAAG9pC,KAAK,IAAIA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,EAAE;EAC7D,SAAS+pC,UAAUA,CAACrhB,MAAM,EAAE+B,WAAW,EAAE;IACvC,MAAMlG,KAAK,GAAGmE,MAAM,CAACnE,KAAK;IAC1B,MAAMylB,YAAY,GAAGthB,MAAM,CAACuhB,YAAY,CAAC,QAAQ,CAAC;IAClD,MAAMC,WAAW,GAAGxhB,MAAM,CAACuhB,YAAY,CAAC,OAAO,CAAC;IAChDvhB,MAAM,CAACygB,WAAW,CAAC,GAAG;MACpB14B,OAAO,EAAE;QACP2X,MAAM,EAAE4hB,YAAY;QACpB7hB,KAAK,EAAE+hB,WAAW;QAClB3lB,KAAK,EAAE;UACLokB,OAAO,EAAEpkB,KAAK,CAACokB,OAAO;UACtBvgB,MAAM,EAAE7D,KAAK,CAAC6D,MAAM;UACpBD,KAAK,EAAE5D,KAAK,CAAC4D;QACf;MACF;IACF,CAAC;IACD5D,KAAK,CAACokB,OAAO,GAAGpkB,KAAK,CAACokB,OAAO,IAAI,OAAO;IACxCpkB,KAAK,CAACgF,SAAS,GAAGhF,KAAK,CAACgF,SAAS,IAAI,YAAY;IACjD,IAAIugB,aAAa,CAACI,WAAW,CAAC,EAAE;MAC9B,MAAMC,YAAY,GAAG3e,YAAY,CAAC9C,MAAM,EAAE,OAAO,CAAC;MAClD,IAAIyhB,YAAY,KAAKlmC,SAAS,EAAE;QAC9BykB,MAAM,CAACP,KAAK,GAAGgiB,YAAY;MAC7B;IACF;IACA,IAAIL,aAAa,CAACE,YAAY,CAAC,EAAE;MAC/B,IAAIthB,MAAM,CAACnE,KAAK,CAAC6D,MAAM,KAAK,EAAE,EAAE;QAC9BM,MAAM,CAACN,MAAM,GAAGM,MAAM,CAACP,KAAK,IAAIsC,WAAW,IAAI,CAAC,CAAC;MACnD,CAAC,MAAM;QACL,MAAM2f,aAAa,GAAG5e,YAAY,CAAC9C,MAAM,EAAE,QAAQ,CAAC;QACpD,IAAI0hB,aAAa,KAAKnmC,SAAS,EAAE;UAC/BykB,MAAM,CAACN,MAAM,GAAGgiB,aAAa;QAC/B;MACF;IACF;IACA,OAAO1hB,MAAM;EACf;EACA,MAAM2hB,oBAAoB,GAAGlf,4BAA4B,GAAG;IAACE,OAAO,EAAE;EAAI,CAAC,GAAG,KAAK;EACnF,SAASif,WAAWA,CAAC/mB,IAAI,EAAEpjB,IAAI,EAAEkL,QAAQ,EAAE;IACzCkY,IAAI,CAAC+H,gBAAgB,CAACnrB,IAAI,EAAEkL,QAAQ,EAAEg/B,oBAAoB,CAAC;EAC7D;EACA,SAASE,cAAcA,CAACp6B,KAAK,EAAEhQ,IAAI,EAAEkL,QAAQ,EAAE;IAC7C8E,KAAK,CAACuY,MAAM,CAAC6C,mBAAmB,CAACprB,IAAI,EAAEkL,QAAQ,EAAEg/B,oBAAoB,CAAC;EACxE;EACA,SAASG,eAAeA,CAAC74B,KAAK,EAAExB,KAAK,EAAE;IACrC,MAAMhQ,IAAI,GAAGipC,WAAW,CAACz3B,KAAK,CAACxR,IAAI,CAAC,IAAIwR,KAAK,CAACxR,IAAI;IAClD,MAAM;MAACmE,CAAC;MAAEE;IAAC,CAAC,GAAG2kB,mBAAmB,CAACxX,KAAK,EAAExB,KAAK,CAAC;IAChD,OAAO;MACLhQ,IAAI;MACJgQ,KAAK;MACLs6B,MAAM,EAAE94B,KAAK;MACbrN,CAAC,EAAEA,CAAC,KAAKL,SAAS,GAAGK,CAAC,GAAG,IAAI;MAC7BE,CAAC,EAAEA,CAAC,KAAKP,SAAS,GAAGO,CAAC,GAAG;IAC3B,CAAC;EACH;EACA,SAASkmC,gBAAgBA,CAACC,QAAQ,EAAEjiB,MAAM,EAAE;IAC1C,KAAK,MAAMnF,IAAI,IAAIonB,QAAQ,EAAE;MAC3B,IAAIpnB,IAAI,KAAKmF,MAAM,IAAInF,IAAI,CAACqnB,QAAQ,CAACliB,MAAM,CAAC,EAAE;QAC5C,OAAO,IAAI;MACb;IACF;EACF;EACA,SAASmiB,oBAAoBA,CAAC16B,KAAK,EAAEhQ,IAAI,EAAEkL,QAAQ,EAAE;IACnD,MAAMqd,MAAM,GAAGvY,KAAK,CAACuY,MAAM;IAC3B,MAAMoiB,QAAQ,GAAG,IAAIC,gBAAgB,CAACC,OAAO,IAAI;MAC/C,IAAIC,OAAO,GAAG,KAAK;MACnB,KAAK,MAAMC,KAAK,IAAIF,OAAO,EAAE;QAC3BC,OAAO,GAAGA,OAAO,IAAIP,gBAAgB,CAACQ,KAAK,CAACC,UAAU,EAAEziB,MAAM,CAAC;QAC/DuiB,OAAO,GAAGA,OAAO,IAAI,CAACP,gBAAgB,CAACQ,KAAK,CAACE,YAAY,EAAE1iB,MAAM,CAAC;MACpE;MACA,IAAIuiB,OAAO,EAAE;QACX5/B,QAAQ,CAAC,CAAC;MACZ;IACF,CAAC,CAAC;IACFy/B,QAAQ,CAACO,OAAO,CAACtkB,QAAQ,EAAE;MAACukB,SAAS,EAAE,IAAI;MAAEC,OAAO,EAAE;IAAI,CAAC,CAAC;IAC5D,OAAOT,QAAQ;EACjB;EACA,SAASU,oBAAoBA,CAACr7B,KAAK,EAAEhQ,IAAI,EAAEkL,QAAQ,EAAE;IACnD,MAAMqd,MAAM,GAAGvY,KAAK,CAACuY,MAAM;IAC3B,MAAMoiB,QAAQ,GAAG,IAAIC,gBAAgB,CAACC,OAAO,IAAI;MAC/C,IAAIC,OAAO,GAAG,KAAK;MACnB,KAAK,MAAMC,KAAK,IAAIF,OAAO,EAAE;QAC3BC,OAAO,GAAGA,OAAO,IAAIP,gBAAgB,CAACQ,KAAK,CAACE,YAAY,EAAE1iB,MAAM,CAAC;QACjEuiB,OAAO,GAAGA,OAAO,IAAI,CAACP,gBAAgB,CAACQ,KAAK,CAACC,UAAU,EAAEziB,MAAM,CAAC;MAClE;MACA,IAAIuiB,OAAO,EAAE;QACX5/B,QAAQ,CAAC,CAAC;MACZ;IACF,CAAC,CAAC;IACFy/B,QAAQ,CAACO,OAAO,CAACtkB,QAAQ,EAAE;MAACukB,SAAS,EAAE,IAAI;MAAEC,OAAO,EAAE;IAAI,CAAC,CAAC;IAC5D,OAAOT,QAAQ;EACjB;EACA,MAAMW,kBAAkB,GAAG,IAAI17B,GAAG,CAAC,CAAC;EACpC,IAAI27B,mBAAmB,GAAG,CAAC;EAC3B,SAASC,cAAcA,CAAA,EAAG;IACxB,MAAMC,GAAG,GAAG9+B,MAAM,CAACiX,gBAAgB;IACnC,IAAI6nB,GAAG,KAAKF,mBAAmB,EAAE;MAC/B;IACF;IACAA,mBAAmB,GAAGE,GAAG;IACzBH,kBAAkB,CAAC9/B,OAAO,CAAC,CAACkgC,MAAM,EAAE17B,KAAK,KAAK;MAC5C,IAAIA,KAAK,CAACkZ,uBAAuB,KAAKuiB,GAAG,EAAE;QACzCC,MAAM,CAAC,CAAC;MACV;IACF,CAAC,CAAC;EACJ;EACA,SAASC,6BAA6BA,CAAC37B,KAAK,EAAE07B,MAAM,EAAE;IACpD,IAAI,CAACJ,kBAAkB,CAAC7lC,IAAI,EAAE;MAC5BkH,MAAM,CAACwe,gBAAgB,CAAC,QAAQ,EAAEqgB,cAAc,CAAC;IACnD;IACAF,kBAAkB,CAACp/B,GAAG,CAAC8D,KAAK,EAAE07B,MAAM,CAAC;EACvC;EACA,SAASE,+BAA+BA,CAAC57B,KAAK,EAAE;IAC9Cs7B,kBAAkB,CAACr5B,MAAM,CAACjC,KAAK,CAAC;IAChC,IAAI,CAACs7B,kBAAkB,CAAC7lC,IAAI,EAAE;MAC5BkH,MAAM,CAACye,mBAAmB,CAAC,QAAQ,EAAEogB,cAAc,CAAC;IACtD;EACF;EACA,SAASK,oBAAoBA,CAAC77B,KAAK,EAAEhQ,IAAI,EAAEkL,QAAQ,EAAE;IACnD,MAAMqd,MAAM,GAAGvY,KAAK,CAACuY,MAAM;IAC3B,MAAMqB,SAAS,GAAGrB,MAAM,IAAI1B,cAAc,CAAC0B,MAAM,CAAC;IAClD,IAAI,CAACqB,SAAS,EAAE;MACd;IACF;IACA,MAAM8hB,MAAM,GAAG7+B,SAAS,CAAC,CAACmb,KAAK,EAAEC,MAAM,KAAK;MAC1C,MAAM9T,CAAC,GAAGyV,SAAS,CAACC,WAAW;MAC/B3e,QAAQ,CAAC8c,KAAK,EAAEC,MAAM,CAAC;MACvB,IAAI9T,CAAC,GAAGyV,SAAS,CAACC,WAAW,EAAE;QAC7B3e,QAAQ,CAAC,CAAC;MACZ;IACF,CAAC,EAAEyB,MAAM,CAAC;IACV,MAAMg+B,QAAQ,GAAG,IAAImB,cAAc,CAACjB,OAAO,IAAI;MAC7C,MAAME,KAAK,GAAGF,OAAO,CAAC,CAAC,CAAC;MACxB,MAAM7iB,KAAK,GAAG+iB,KAAK,CAACgB,WAAW,CAAC/jB,KAAK;MACrC,MAAMC,MAAM,GAAG8iB,KAAK,CAACgB,WAAW,CAAC9jB,MAAM;MACvC,IAAID,KAAK,KAAK,CAAC,IAAIC,MAAM,KAAK,CAAC,EAAE;QAC/B;MACF;MACAyjB,MAAM,CAAC1jB,KAAK,EAAEC,MAAM,CAAC;IACvB,CAAC,CAAC;IACF0iB,QAAQ,CAACO,OAAO,CAACthB,SAAS,CAAC;IAC3B+hB,6BAA6B,CAAC37B,KAAK,EAAE07B,MAAM,CAAC;IAC5C,OAAOf,QAAQ;EACjB;EACA,SAASqB,eAAeA,CAACh8B,KAAK,EAAEhQ,IAAI,EAAE2qC,QAAQ,EAAE;IAC9C,IAAIA,QAAQ,EAAE;MACZA,QAAQ,CAACsB,UAAU,CAAC,CAAC;IACvB;IACA,IAAIjsC,IAAI,KAAK,QAAQ,EAAE;MACrB4rC,+BAA+B,CAAC57B,KAAK,CAAC;IACxC;EACF;EACA,SAASk8B,oBAAoBA,CAACl8B,KAAK,EAAEhQ,IAAI,EAAEkL,QAAQ,EAAE;IACnD,MAAMqd,MAAM,GAAGvY,KAAK,CAACuY,MAAM;IAC3B,MAAM0K,KAAK,GAAGpmB,SAAS,CAAE2E,KAAK,IAAK;MACjC,IAAIxB,KAAK,CAACwU,GAAG,KAAK,IAAI,EAAE;QACtBtZ,QAAQ,CAACm/B,eAAe,CAAC74B,KAAK,EAAExB,KAAK,CAAC,CAAC;MACzC;IACF,CAAC,EAAEA,KAAK,EAAG5O,IAAI,IAAK;MAClB,MAAMoQ,KAAK,GAAGpQ,IAAI,CAAC,CAAC,CAAC;MACrB,OAAO,CAACoQ,KAAK,EAAEA,KAAK,CAACiX,OAAO,EAAEjX,KAAK,CAACkX,OAAO,CAAC;IAC9C,CAAC,CAAC;IACFyhB,WAAW,CAAC5hB,MAAM,EAAEvoB,IAAI,EAAEizB,KAAK,CAAC;IAChC,OAAOA,KAAK;EACd;EACA,MAAMkZ,WAAW,SAAS1D,YAAY,CAAC;IACrCC,cAAcA,CAACngB,MAAM,EAAE+B,WAAW,EAAE;MAClC,MAAMzG,OAAO,GAAG0E,MAAM,IAAIA,MAAM,CAACuE,UAAU,IAAIvE,MAAM,CAACuE,UAAU,CAAC,IAAI,CAAC;MACtE,IAAIjJ,OAAO,IAAIA,OAAO,CAAC0E,MAAM,KAAKA,MAAM,EAAE;QACxCqhB,UAAU,CAACrhB,MAAM,EAAE+B,WAAW,CAAC;QAC/B,OAAOzG,OAAO;MAChB;MACA,OAAO,IAAI;IACb;IACA8kB,cAAcA,CAAC9kB,OAAO,EAAE;MACtB,MAAM0E,MAAM,GAAG1E,OAAO,CAAC0E,MAAM;MAC7B,IAAI,CAACA,MAAM,CAACygB,WAAW,CAAC,EAAE;QACxB,OAAO,KAAK;MACd;MACA,MAAM14B,OAAO,GAAGiY,MAAM,CAACygB,WAAW,CAAC,CAAC14B,OAAO;MAC3C,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC9E,OAAO,CAAE4mB,IAAI,IAAK;QACpC,MAAMvyB,KAAK,GAAGyQ,OAAO,CAAC8hB,IAAI,CAAC;QAC3B,IAAIxyB,aAAa,CAACC,KAAK,CAAC,EAAE;UACxB0oB,MAAM,CAAC6jB,eAAe,CAACha,IAAI,CAAC;QAC9B,CAAC,MAAM;UACL7J,MAAM,CAAC8jB,YAAY,CAACja,IAAI,EAAEvyB,KAAK,CAAC;QAClC;MACF,CAAC,CAAC;MACF,MAAMukB,KAAK,GAAG9T,OAAO,CAAC8T,KAAK,IAAI,CAAC,CAAC;MACjCnkB,MAAM,CAAC2B,IAAI,CAACwiB,KAAK,CAAC,CAAC5Y,OAAO,CAAE1I,GAAG,IAAK;QAClCylB,MAAM,CAACnE,KAAK,CAACthB,GAAG,CAAC,GAAGshB,KAAK,CAACthB,GAAG,CAAC;MAChC,CAAC,CAAC;MACFylB,MAAM,CAACP,KAAK,GAAGO,MAAM,CAACP,KAAK;MAC3B,OAAOO,MAAM,CAACygB,WAAW,CAAC;MAC1B,OAAO,IAAI;IACb;IACA7d,gBAAgBA,CAACnb,KAAK,EAAEhQ,IAAI,EAAEkL,QAAQ,EAAE;MACtC,IAAI,CAACkgB,mBAAmB,CAACpb,KAAK,EAAEhQ,IAAI,CAAC;MACrC,MAAMssC,OAAO,GAAGt8B,KAAK,CAACu8B,QAAQ,KAAKv8B,KAAK,CAACu8B,QAAQ,GAAG,CAAC,CAAC,CAAC;MACvD,MAAMC,QAAQ,GAAG;QACfC,MAAM,EAAE/B,oBAAoB;QAC5BgC,MAAM,EAAErB,oBAAoB;QAC5BK,MAAM,EAAEG;MACV,CAAC;MACD,MAAM7J,OAAO,GAAGwK,QAAQ,CAACxsC,IAAI,CAAC,IAAIksC,oBAAoB;MACtDI,OAAO,CAACtsC,IAAI,CAAC,GAAGgiC,OAAO,CAAChyB,KAAK,EAAEhQ,IAAI,EAAEkL,QAAQ,CAAC;IAChD;IACAkgB,mBAAmBA,CAACpb,KAAK,EAAEhQ,IAAI,EAAE;MAC/B,MAAMssC,OAAO,GAAGt8B,KAAK,CAACu8B,QAAQ,KAAKv8B,KAAK,CAACu8B,QAAQ,GAAG,CAAC,CAAC,CAAC;MACvD,MAAMtZ,KAAK,GAAGqZ,OAAO,CAACtsC,IAAI,CAAC;MAC3B,IAAI,CAACizB,KAAK,EAAE;QACV;MACF;MACA,MAAMuZ,QAAQ,GAAG;QACfC,MAAM,EAAET,eAAe;QACvBU,MAAM,EAAEV,eAAe;QACvBN,MAAM,EAAEM;MACV,CAAC;MACD,MAAMhK,OAAO,GAAGwK,QAAQ,CAACxsC,IAAI,CAAC,IAAIoqC,cAAc;MAChDpI,OAAO,CAAChyB,KAAK,EAAEhQ,IAAI,EAAEizB,KAAK,CAAC;MAC3BqZ,OAAO,CAACtsC,IAAI,CAAC,GAAG8D,SAAS;IAC3B;IACAigB,mBAAmBA,CAAA,EAAG;MACpB,OAAOpX,MAAM,CAACiX,gBAAgB;IAChC;IACAuG,cAAcA,CAAC5B,MAAM,EAAEP,KAAK,EAAEC,MAAM,EAAEqC,WAAW,EAAE;MACjD,OAAOH,cAAc,CAAC5B,MAAM,EAAEP,KAAK,EAAEC,MAAM,EAAEqC,WAAW,CAAC;IAC3D;IACAse,UAAUA,CAACrgB,MAAM,EAAE;MACjB,MAAMqB,SAAS,GAAG/C,cAAc,CAAC0B,MAAM,CAAC;MACxC,OAAO,CAAC,EAAEqB,SAAS,IAAIA,SAAS,CAAC+iB,WAAW,CAAC;IAC/C;EACF;EAEA,SAASC,eAAeA,CAACrkB,MAAM,EAAE;IAC/B,IAAI,CAAC5B,eAAe,CAAC,CAAC,IAAK,OAAOkmB,eAAe,KAAK,WAAW,IAAItkB,MAAM,YAAYskB,eAAgB,EAAE;MACvG,OAAO9D,aAAa;IACtB;IACA,OAAOoD,WAAW;EACpB;EAEA,IAAIW,SAAS,GAAG,aAAa7sC,MAAM,CAACkhC,MAAM,CAAC;IAC3CC,SAAS,EAAE,IAAI;IACfwL,eAAe,EAAEA,eAAe;IAChCnE,YAAY,EAAEA,YAAY;IAC1BM,aAAa,EAAEA,aAAa;IAC5BoD,WAAW,EAAEA;EACb,CAAC,CAAC;EAEF,MAAM3rB,WAAW,GAAG,aAAa;EACjC,MAAMusB,aAAa,GAAG;IACpBC,OAAOA,CAAC3gC,IAAI,EAAEwU,EAAE,EAAE0kB,MAAM,EAAE;MACxB,OAAOA,MAAM,GAAG,GAAG,GAAG1kB,EAAE,GAAGxU,IAAI;IACjC,CAAC;IACDyV,KAAKA,CAACzV,IAAI,EAAEwU,EAAE,EAAE0kB,MAAM,EAAE;MACtB,MAAM0H,EAAE,GAAGnrB,KAAK,CAACzV,IAAI,IAAImU,WAAW,CAAC;MACrC,MAAMwB,EAAE,GAAGirB,EAAE,CAACrrB,KAAK,IAAIE,KAAK,CAACjB,EAAE,IAAIL,WAAW,CAAC;MAC/C,OAAOwB,EAAE,IAAIA,EAAE,CAACJ,KAAK,GACjBI,EAAE,CAACH,GAAG,CAACorB,EAAE,EAAE1H,MAAM,CAAC,CAACzxB,SAAS,CAAC,CAAC,GAC9B+M,EAAE;IACR,CAAC;IACDqsB,MAAMA,CAAC7gC,IAAI,EAAEwU,EAAE,EAAE0kB,MAAM,EAAE;MACvB,OAAOl5B,IAAI,GAAG,CAACwU,EAAE,GAAGxU,IAAI,IAAIk5B,MAAM;IACpC;EACF,CAAC;EACD,MAAM4H,SAAS,CAAC;IACd19B,WAAWA,CAAC29B,GAAG,EAAE3qC,MAAM,EAAE2vB,IAAI,EAAEvR,EAAE,EAAE;MACjC,MAAMwsB,YAAY,GAAG5qC,MAAM,CAAC2vB,IAAI,CAAC;MACjCvR,EAAE,GAAGuT,OAAO,CAAC,CAACgZ,GAAG,CAACvsB,EAAE,EAAEA,EAAE,EAAEwsB,YAAY,EAAED,GAAG,CAAC/gC,IAAI,CAAC,CAAC;MAClD,MAAMA,IAAI,GAAG+nB,OAAO,CAAC,CAACgZ,GAAG,CAAC/gC,IAAI,EAAEghC,YAAY,EAAExsB,EAAE,CAAC,CAAC;MAClD,IAAI,CAAC9P,OAAO,GAAG,IAAI;MACnB,IAAI,CAACu8B,GAAG,GAAGF,GAAG,CAACjsC,EAAE,IAAI4rC,aAAa,CAACK,GAAG,CAACptC,IAAI,IAAI,OAAOqM,IAAI,CAAC;MAC3D,IAAI,CAACkhC,OAAO,GAAG7U,OAAO,CAAC0U,GAAG,CAACI,MAAM,CAAC,IAAI9U,OAAO,CAACC,MAAM;MACpD,IAAI,CAAC8U,MAAM,GAAG1nC,IAAI,CAACkB,KAAK,CAACyJ,IAAI,CAACC,GAAG,CAAC,CAAC,IAAIy8B,GAAG,CAACjgC,KAAK,IAAI,CAAC,CAAC,CAAC;MACvD,IAAI,CAAC0E,SAAS,GAAG,IAAI,CAACb,MAAM,GAAGjL,IAAI,CAACkB,KAAK,CAACmmC,GAAG,CAAC/8B,QAAQ,CAAC;MACvD,IAAI,CAACuvB,KAAK,GAAG,CAAC,CAACwN,GAAG,CAACnV,IAAI;MACvB,IAAI,CAACyV,OAAO,GAAGjrC,MAAM;MACrB,IAAI,CAACkrC,KAAK,GAAGvb,IAAI;MACjB,IAAI,CAACwb,KAAK,GAAGvhC,IAAI;MACjB,IAAI,CAACwhC,GAAG,GAAGhtB,EAAE;MACb,IAAI,CAACitB,SAAS,GAAGhqC,SAAS;IAC5B;IACAiqC,MAAMA,CAAA,EAAG;MACP,OAAO,IAAI,CAACh9B,OAAO;IACrB;IACAu2B,MAAMA,CAAC8F,GAAG,EAAEvsB,EAAE,EAAE3Q,IAAI,EAAE;MACpB,IAAI,IAAI,CAACa,OAAO,EAAE;QAChB,IAAI,CAAChB,OAAO,CAAC,KAAK,CAAC;QACnB,MAAMs9B,YAAY,GAAG,IAAI,CAACK,OAAO,CAAC,IAAI,CAACC,KAAK,CAAC;QAC7C,MAAMK,OAAO,GAAG99B,IAAI,GAAG,IAAI,CAACu9B,MAAM;QAClC,MAAMQ,MAAM,GAAG,IAAI,CAACp8B,SAAS,GAAGm8B,OAAO;QACvC,IAAI,CAACP,MAAM,GAAGv9B,IAAI;QAClB,IAAI,CAAC2B,SAAS,GAAG9L,IAAI,CAACkB,KAAK,CAAClB,IAAI,CAACqC,GAAG,CAAC6lC,MAAM,EAAEb,GAAG,CAAC/8B,QAAQ,CAAC,CAAC;QAC3D,IAAI,CAACW,MAAM,IAAIg9B,OAAO;QACtB,IAAI,CAACpO,KAAK,GAAG,CAAC,CAACwN,GAAG,CAACnV,IAAI;QACvB,IAAI,CAAC4V,GAAG,GAAGzZ,OAAO,CAAC,CAACgZ,GAAG,CAACvsB,EAAE,EAAEA,EAAE,EAAEwsB,YAAY,EAAED,GAAG,CAAC/gC,IAAI,CAAC,CAAC;QACxD,IAAI,CAACuhC,KAAK,GAAGxZ,OAAO,CAAC,CAACgZ,GAAG,CAAC/gC,IAAI,EAAEghC,YAAY,EAAExsB,EAAE,CAAC,CAAC;MACpD;IACF;IACA9O,MAAMA,CAAA,EAAG;MACP,IAAI,IAAI,CAAChB,OAAO,EAAE;QAChB,IAAI,CAACE,IAAI,CAACP,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;QACrB,IAAI,CAACI,OAAO,GAAG,KAAK;QACpB,IAAI,CAAChB,OAAO,CAAC,KAAK,CAAC;MACrB;IACF;IACAkB,IAAIA,CAACf,IAAI,EAAE;MACT,MAAM89B,OAAO,GAAG99B,IAAI,GAAG,IAAI,CAACu9B,MAAM;MAClC,MAAMp9B,QAAQ,GAAG,IAAI,CAACwB,SAAS;MAC/B,MAAMugB,IAAI,GAAG,IAAI,CAACub,KAAK;MACvB,MAAMthC,IAAI,GAAG,IAAI,CAACuhC,KAAK;MACvB,MAAM3V,IAAI,GAAG,IAAI,CAAC2H,KAAK;MACvB,MAAM/e,EAAE,GAAG,IAAI,CAACgtB,GAAG;MACnB,IAAItI,MAAM;MACV,IAAI,CAACx0B,OAAO,GAAG1E,IAAI,KAAKwU,EAAE,KAAKoX,IAAI,IAAK+V,OAAO,GAAG39B,QAAS,CAAC;MAC5D,IAAI,CAAC,IAAI,CAACU,OAAO,EAAE;QACjB,IAAI,CAAC28B,OAAO,CAACtb,IAAI,CAAC,GAAGvR,EAAE;QACvB,IAAI,CAAC9Q,OAAO,CAAC,IAAI,CAAC;QAClB;MACF;MACA,IAAIi+B,OAAO,GAAG,CAAC,EAAE;QACf,IAAI,CAACN,OAAO,CAACtb,IAAI,CAAC,GAAG/lB,IAAI;QACzB;MACF;MACAk5B,MAAM,GAAIyI,OAAO,GAAG39B,QAAQ,GAAI,CAAC;MACjCk1B,MAAM,GAAGtN,IAAI,IAAIsN,MAAM,GAAG,CAAC,GAAG,CAAC,GAAGA,MAAM,GAAGA,MAAM;MACjDA,MAAM,GAAG,IAAI,CAACgI,OAAO,CAACxnC,IAAI,CAACoC,GAAG,CAAC,CAAC,EAAEpC,IAAI,CAACqC,GAAG,CAAC,CAAC,EAAEm9B,MAAM,CAAC,CAAC,CAAC;MACvD,IAAI,CAACmI,OAAO,CAACtb,IAAI,CAAC,GAAG,IAAI,CAACkb,GAAG,CAACjhC,IAAI,EAAEwU,EAAE,EAAE0kB,MAAM,CAAC;IACjD;IACA2I,IAAIA,CAAA,EAAG;MACL,MAAMC,QAAQ,GAAG,IAAI,CAACL,SAAS,KAAK,IAAI,CAACA,SAAS,GAAG,EAAE,CAAC;MACxD,OAAO,IAAIM,OAAO,CAAC,CAACziC,GAAG,EAAE0iC,GAAG,KAAK;QAC/BF,QAAQ,CAACppC,IAAI,CAAC;UAAC4G,GAAG;UAAE0iC;QAAG,CAAC,CAAC;MAC3B,CAAC,CAAC;IACJ;IACAt+B,OAAOA,CAACu+B,QAAQ,EAAE;MAChB,MAAM7iC,MAAM,GAAG6iC,QAAQ,GAAG,KAAK,GAAG,KAAK;MACvC,MAAMH,QAAQ,GAAG,IAAI,CAACL,SAAS,IAAI,EAAE;MACrC,KAAK,IAAIpsC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGysC,QAAQ,CAACtsC,MAAM,EAAEH,CAAC,EAAE,EAAE;QACxCysC,QAAQ,CAACzsC,CAAC,CAAC,CAAC+J,MAAM,CAAC,CAAC,CAAC;MACvB;IACF;EACF;EAEA,MAAM8iC,OAAO,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC;EAC9D,MAAMC,MAAM,GAAG,CAAC,OAAO,EAAE,aAAa,EAAE,iBAAiB,CAAC;EAC1DloB,QAAQ,CAACpa,GAAG,CAAC,WAAW,EAAE;IACxBiB,KAAK,EAAErJ,SAAS;IAChBuM,QAAQ,EAAE,IAAI;IACdm9B,MAAM,EAAE,cAAc;IACtBrsC,EAAE,EAAE2C,SAAS;IACbuI,IAAI,EAAEvI,SAAS;IACfm0B,IAAI,EAAEn0B,SAAS;IACf+c,EAAE,EAAE/c,SAAS;IACb9D,IAAI,EAAE8D;EACR,CAAC,CAAC;EACF,MAAM2qC,gBAAgB,GAAGxuC,MAAM,CAAC2B,IAAI,CAAC0kB,QAAQ,CAAC9C,SAAS,CAAC;EACxD8C,QAAQ,CAACZ,QAAQ,CAAC,WAAW,EAAE;IAC7BgB,SAAS,EAAE,KAAK;IAChBD,UAAU,EAAE,KAAK;IACjBF,WAAW,EAAGV,IAAI,IAAKA,IAAI,KAAK,YAAY,IAAIA,IAAI,KAAK,YAAY,IAAIA,IAAI,KAAK;EACpF,CAAC,CAAC;EACFS,QAAQ,CAACpa,GAAG,CAAC,YAAY,EAAE;IACzBsiC,MAAM,EAAE;MACNxuC,IAAI,EAAE,OAAO;MACb0uC,UAAU,EAAEF;IACd,CAAC;IACDD,OAAO,EAAE;MACPvuC,IAAI,EAAE,QAAQ;MACd0uC,UAAU,EAAEH;IACd;EACF,CAAC,CAAC;EACFjoB,QAAQ,CAACZ,QAAQ,CAAC,YAAY,EAAE;IAC9BgB,SAAS,EAAE;EACb,CAAC,CAAC;EACFJ,QAAQ,CAACpa,GAAG,CAAC,aAAa,EAAE;IAC1B6hC,MAAM,EAAE;MACNvqB,SAAS,EAAE;QACTnT,QAAQ,EAAE;MACZ;IACF,CAAC;IACDq7B,MAAM,EAAE;MACNloB,SAAS,EAAE;QACTnT,QAAQ,EAAE;MACZ;IACF,CAAC;IACDs+B,IAAI,EAAE;MACJC,UAAU,EAAE;QACVJ,MAAM,EAAE;UACNniC,IAAI,EAAE;QACR,CAAC;QACDwiC,OAAO,EAAE;UACP7uC,IAAI,EAAE,SAAS;UACfqQ,QAAQ,EAAE;QACZ;MACF;IACF,CAAC;IACDy+B,IAAI,EAAE;MACJF,UAAU,EAAE;QACVJ,MAAM,EAAE;UACN3tB,EAAE,EAAE;QACN,CAAC;QACDguB,OAAO,EAAE;UACP7uC,IAAI,EAAE,SAAS;UACfwtC,MAAM,EAAE,QAAQ;UAChBrsC,EAAE,EAAE+C,CAAC,IAAIA,CAAC,GAAG;QACf;MACF;IACF;EACF,CAAC,CAAC;EACF,MAAM6qC,UAAU,CAAC;IACft/B,WAAWA,CAACO,KAAK,EAAE84B,MAAM,EAAE;MACzB,IAAI,CAAC5I,MAAM,GAAGlwB,KAAK;MACnB,IAAI,CAACg/B,WAAW,GAAG,IAAIp/B,GAAG,CAAC,CAAC;MAC5B,IAAI,CAACq4B,SAAS,CAACa,MAAM,CAAC;IACxB;IACAb,SAASA,CAACa,MAAM,EAAE;MAChB,IAAI,CAACxoC,QAAQ,CAACwoC,MAAM,CAAC,EAAE;QACrB;MACF;MACA,MAAMmG,aAAa,GAAG,IAAI,CAACD,WAAW;MACtC/uC,MAAM,CAACivC,mBAAmB,CAACpG,MAAM,CAAC,CAACt9B,OAAO,CAAC1I,GAAG,IAAI;QAChD,MAAMsqC,GAAG,GAAGtE,MAAM,CAAChmC,GAAG,CAAC;QACvB,IAAI,CAACxC,QAAQ,CAAC8sC,GAAG,CAAC,EAAE;UAClB;QACF;QACA,MAAMkB,QAAQ,GAAG,CAAC,CAAC;QACnB,KAAK,MAAMa,MAAM,IAAIV,gBAAgB,EAAE;UACrCH,QAAQ,CAACa,MAAM,CAAC,GAAG/B,GAAG,CAAC+B,MAAM,CAAC;QAChC;QACA,CAACrvC,OAAO,CAACstC,GAAG,CAACsB,UAAU,CAAC,IAAItB,GAAG,CAACsB,UAAU,IAAI,CAAC5rC,GAAG,CAAC,EAAE0I,OAAO,CAAE4mB,IAAI,IAAK;UACrE,IAAIA,IAAI,KAAKtvB,GAAG,IAAI,CAACmsC,aAAa,CAACtpC,GAAG,CAACysB,IAAI,CAAC,EAAE;YAC5C6c,aAAa,CAAC/iC,GAAG,CAACkmB,IAAI,EAAEkc,QAAQ,CAAC;UACnC;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;IACAc,eAAeA,CAAC3sC,MAAM,EAAEsI,MAAM,EAAE;MAC9B,MAAMskC,UAAU,GAAGtkC,MAAM,CAAC9H,OAAO;MACjC,MAAMA,OAAO,GAAGqsC,oBAAoB,CAAC7sC,MAAM,EAAE4sC,UAAU,CAAC;MACxD,IAAI,CAACpsC,OAAO,EAAE;QACZ,OAAO,EAAE;MACX;MACA,MAAM2rC,UAAU,GAAG,IAAI,CAACW,iBAAiB,CAACtsC,OAAO,EAAEosC,UAAU,CAAC;MAC9D,IAAIA,UAAU,CAACG,OAAO,EAAE;QACtBC,QAAQ,CAAChtC,MAAM,CAACQ,OAAO,CAACysC,WAAW,EAAEL,UAAU,CAAC,CAACM,IAAI,CAAC,MAAM;UAC1DltC,MAAM,CAACQ,OAAO,GAAGosC,UAAU;QAC7B,CAAC,EAAE,MAAM,CACT,CAAC,CAAC;MACJ;MACA,OAAOT,UAAU;IACnB;IACAW,iBAAiBA,CAAC9sC,MAAM,EAAEsI,MAAM,EAAE;MAChC,MAAMkkC,aAAa,GAAG,IAAI,CAACD,WAAW;MACtC,MAAMJ,UAAU,GAAG,EAAE;MACrB,MAAM/9B,OAAO,GAAGpO,MAAM,CAACitC,WAAW,KAAKjtC,MAAM,CAACitC,WAAW,GAAG,CAAC,CAAC,CAAC;MAC/D,MAAMzT,KAAK,GAAGh8B,MAAM,CAAC2B,IAAI,CAACmJ,MAAM,CAAC;MACjC,MAAMmF,IAAI,GAAGQ,IAAI,CAACC,GAAG,CAAC,CAAC;MACvB,IAAIjP,CAAC;MACL,KAAKA,CAAC,GAAGu6B,KAAK,CAACp6B,MAAM,GAAG,CAAC,EAAEH,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;QACtC,MAAM0wB,IAAI,GAAG6J,KAAK,CAACv6B,CAAC,CAAC;QACrB,IAAI0wB,IAAI,CAACltB,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;UAC1B;QACF;QACA,IAAIktB,IAAI,KAAK,SAAS,EAAE;UACtBwc,UAAU,CAAC7pC,IAAI,CAAC,GAAG,IAAI,CAACqqC,eAAe,CAAC3sC,MAAM,EAAEsI,MAAM,CAAC,CAAC;UACxD;QACF;QACA,MAAMlL,KAAK,GAAGkL,MAAM,CAACqnB,IAAI,CAAC;QAC1B,IAAI5O,SAAS,GAAG3S,OAAO,CAACuhB,IAAI,CAAC;QAC7B,MAAMgb,GAAG,GAAG6B,aAAa,CAAC79B,GAAG,CAACghB,IAAI,CAAC;QACnC,IAAI5O,SAAS,EAAE;UACb,IAAI4pB,GAAG,IAAI5pB,SAAS,CAACuqB,MAAM,CAAC,CAAC,EAAE;YAC7BvqB,SAAS,CAAC8jB,MAAM,CAAC8F,GAAG,EAAEvtC,KAAK,EAAEqQ,IAAI,CAAC;YAClC;UACF,CAAC,MAAM;YACLsT,SAAS,CAACzR,MAAM,CAAC,CAAC;UACpB;QACF;QACA,IAAI,CAACq7B,GAAG,IAAI,CAACA,GAAG,CAAC/8B,QAAQ,EAAE;UACzB5N,MAAM,CAAC2vB,IAAI,CAAC,GAAGvyB,KAAK;UACpB;QACF;QACAgR,OAAO,CAACuhB,IAAI,CAAC,GAAG5O,SAAS,GAAG,IAAI2pB,SAAS,CAACC,GAAG,EAAE3qC,MAAM,EAAE2vB,IAAI,EAAEvyB,KAAK,CAAC;QACnE+uC,UAAU,CAAC7pC,IAAI,CAACye,SAAS,CAAC;MAC5B;MACA,OAAOorB,UAAU;IACnB;IACAtH,MAAMA,CAAC7kC,MAAM,EAAEsI,MAAM,EAAE;MACrB,IAAI,IAAI,CAACikC,WAAW,CAACvpC,IAAI,KAAK,CAAC,EAAE;QAC/BxF,MAAM,CAACsP,MAAM,CAAC9M,MAAM,EAAEsI,MAAM,CAAC;QAC7B;MACF;MACA,MAAM6jC,UAAU,GAAG,IAAI,CAACW,iBAAiB,CAAC9sC,MAAM,EAAEsI,MAAM,CAAC;MACzD,IAAI6jC,UAAU,CAAC/sC,MAAM,EAAE;QACrBqQ,QAAQ,CAAC9F,GAAG,CAAC,IAAI,CAAC8zB,MAAM,EAAE0O,UAAU,CAAC;QACrC,OAAO,IAAI;MACb;IACF;EACF;EACA,SAASa,QAAQA,CAACb,UAAU,EAAEF,UAAU,EAAE;IACxC,MAAM79B,OAAO,GAAG,EAAE;IAClB,MAAMjP,IAAI,GAAG3B,MAAM,CAAC2B,IAAI,CAAC8sC,UAAU,CAAC;IACpC,KAAK,IAAIhtC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGE,IAAI,CAACC,MAAM,EAAEH,CAAC,EAAE,EAAE;MACpC,MAAMkuC,IAAI,GAAGhB,UAAU,CAAChtC,IAAI,CAACF,CAAC,CAAC,CAAC;MAChC,IAAIkuC,IAAI,IAAIA,IAAI,CAAC7B,MAAM,CAAC,CAAC,EAAE;QACzBl9B,OAAO,CAAC9L,IAAI,CAAC6qC,IAAI,CAAC1B,IAAI,CAAC,CAAC,CAAC;MAC3B;IACF;IACA,OAAOE,OAAO,CAACyB,GAAG,CAACh/B,OAAO,CAAC;EAC7B;EACA,SAASy+B,oBAAoBA,CAAC7sC,MAAM,EAAE4sC,UAAU,EAAE;IAChD,IAAI,CAACA,UAAU,EAAE;MACf;IACF;IACA,IAAIpsC,OAAO,GAAGR,MAAM,CAACQ,OAAO;IAC5B,IAAI,CAACA,OAAO,EAAE;MACZR,MAAM,CAACQ,OAAO,GAAGosC,UAAU;MAC3B;IACF;IACA,IAAIpsC,OAAO,CAACusC,OAAO,EAAE;MACnB/sC,MAAM,CAACQ,OAAO,GAAGA,OAAO,GAAGhD,MAAM,CAACsP,MAAM,CAAC,CAAC,CAAC,EAAEtM,OAAO,EAAE;QAACusC,OAAO,EAAE,KAAK;QAAEE,WAAW,EAAE,CAAC;MAAC,CAAC,CAAC;IAC1F;IACA,OAAOzsC,OAAO;EAChB;EAEA,SAAS6sC,SAASA,CAACxqB,KAAK,EAAEyqB,eAAe,EAAE;IACzC,MAAMvgB,IAAI,GAAGlK,KAAK,IAAIA,KAAK,CAACriB,OAAO,IAAI,CAAC,CAAC;IACzC,MAAMxB,OAAO,GAAG+tB,IAAI,CAAC/tB,OAAO;IAC5B,MAAM0G,GAAG,GAAGqnB,IAAI,CAACrnB,GAAG,KAAKrE,SAAS,GAAGisC,eAAe,GAAG,CAAC;IACxD,MAAM3nC,GAAG,GAAGonB,IAAI,CAACpnB,GAAG,KAAKtE,SAAS,GAAGisC,eAAe,GAAG,CAAC;IACxD,OAAO;MACLrmC,KAAK,EAAEjI,OAAO,GAAG2G,GAAG,GAAGD,GAAG;MAC1BwB,GAAG,EAAElI,OAAO,GAAG0G,GAAG,GAAGC;IACvB,CAAC;EACH;EACA,SAAS4nC,WAAWA,CAAClhC,MAAM,EAAEC,MAAM,EAAEghC,eAAe,EAAE;IACpD,IAAIA,eAAe,KAAK,KAAK,EAAE;MAC7B,OAAO,KAAK;IACd;IACA,MAAM5rC,CAAC,GAAG2rC,SAAS,CAAChhC,MAAM,EAAEihC,eAAe,CAAC;IAC5C,MAAM1rC,CAAC,GAAGyrC,SAAS,CAAC/gC,MAAM,EAAEghC,eAAe,CAAC;IAC5C,OAAO;MACL7nB,GAAG,EAAE7jB,CAAC,CAACsF,GAAG;MACViE,KAAK,EAAEzJ,CAAC,CAACwF,GAAG;MACZwe,MAAM,EAAE9jB,CAAC,CAACqF,KAAK;MACfiE,IAAI,EAAExJ,CAAC,CAACuF;IACV,CAAC;EACH;EACA,SAASumC,MAAMA,CAACpwC,KAAK,EAAE;IACrB,IAAIohB,CAAC,EAAExN,CAAC,EAAEjO,CAAC,EAAE4M,CAAC;IACd,IAAI9R,QAAQ,CAACT,KAAK,CAAC,EAAE;MACnBohB,CAAC,GAAGphB,KAAK,CAACqoB,GAAG;MACbzU,CAAC,GAAG5T,KAAK,CAAC+N,KAAK;MACfpI,CAAC,GAAG3F,KAAK,CAACsoB,MAAM;MAChB/V,CAAC,GAAGvS,KAAK,CAAC8N,IAAI;IAChB,CAAC,MAAM;MACLsT,CAAC,GAAGxN,CAAC,GAAGjO,CAAC,GAAG4M,CAAC,GAAGvS,KAAK;IACvB;IACA,OAAO;MACLqoB,GAAG,EAAEjH,CAAC;MACNrT,KAAK,EAAE6F,CAAC;MACR0U,MAAM,EAAE3iB,CAAC;MACTmI,IAAI,EAAEyE,CAAC;MACP89B,QAAQ,EAAErwC,KAAK,KAAK;IACtB,CAAC;EACH;EACA,SAASswC,uBAAuBA,CAACngC,KAAK,EAAEogC,aAAa,EAAE;IACrD,MAAMxuC,IAAI,GAAG,EAAE;IACf,MAAMqgC,QAAQ,GAAGjyB,KAAK,CAACqgC,sBAAsB,CAACD,aAAa,CAAC;IAC5D,IAAI1uC,CAAC,EAAEO,IAAI;IACX,KAAKP,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAGggC,QAAQ,CAACpgC,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;MACjDE,IAAI,CAACmD,IAAI,CAACk9B,QAAQ,CAACvgC,CAAC,CAAC,CAACW,KAAK,CAAC;IAC9B;IACA,OAAOT,IAAI;EACb;EACA,SAAS0uC,UAAUA,CAAC9L,KAAK,EAAE3kC,KAAK,EAAE0wC,OAAO,EAAEttC,OAAO,GAAG,CAAC,CAAC,EAAE;IACvD,MAAMrB,IAAI,GAAG4iC,KAAK,CAAC5iC,IAAI;IACvB,MAAM4uC,UAAU,GAAGvtC,OAAO,CAAC4hB,IAAI,KAAK,QAAQ;IAC5C,IAAInjB,CAAC,EAAEO,IAAI,EAAEG,YAAY,EAAEquC,UAAU;IACrC,IAAI5wC,KAAK,KAAK,IAAI,EAAE;MAClB;IACF;IACA,KAAK6B,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAGL,IAAI,CAACC,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;MAC7CU,YAAY,GAAG,CAACR,IAAI,CAACF,CAAC,CAAC;MACvB,IAAIU,YAAY,KAAKmuC,OAAO,EAAE;QAC5B,IAAIttC,OAAO,CAAC4sC,GAAG,EAAE;UACf;QACF;QACA;MACF;MACAY,UAAU,GAAGjM,KAAK,CAACz5B,MAAM,CAAC3I,YAAY,CAAC;MACvC,IAAI7B,cAAc,CAACkwC,UAAU,CAAC,KAAKD,UAAU,IAAK3wC,KAAK,KAAK,CAAC,IAAI4G,IAAI,CAAC5G,KAAK,CAAC,KAAK4G,IAAI,CAACgqC,UAAU,CAAE,CAAC,EAAE;QACnG5wC,KAAK,IAAI4wC,UAAU;MACrB;IACF;IACA,OAAO5wC,KAAK;EACd;EACA,SAAS6wC,wBAAwBA,CAAChlB,IAAI,EAAE;IACtC,MAAM9pB,IAAI,GAAG3B,MAAM,CAAC2B,IAAI,CAAC8pB,IAAI,CAAC;IAC9B,MAAMilB,KAAK,GAAG,IAAI5wC,KAAK,CAAC6B,IAAI,CAACC,MAAM,CAAC;IACpC,IAAIH,CAAC,EAAEO,IAAI,EAAEa,GAAG;IAChB,KAAKpB,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAGL,IAAI,CAACC,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;MAC7CoB,GAAG,GAAGlB,IAAI,CAACF,CAAC,CAAC;MACbivC,KAAK,CAACjvC,CAAC,CAAC,GAAG;QACTyC,CAAC,EAAErB,GAAG;QACNuB,CAAC,EAAEqnB,IAAI,CAAC5oB,GAAG;MACb,CAAC;IACH;IACA,OAAO6tC,KAAK;EACd;EACA,SAASC,SAASA,CAACtrB,KAAK,EAAEtX,IAAI,EAAE;IAC9B,MAAM6iC,OAAO,GAAGvrB,KAAK,IAAIA,KAAK,CAACriB,OAAO,CAAC4tC,OAAO;IAC9C,OAAOA,OAAO,IAAKA,OAAO,KAAK/sC,SAAS,IAAIkK,IAAI,CAACw2B,KAAK,KAAK1gC,SAAU;EACvE;EACA,SAASgtC,WAAWA,CAACC,UAAU,EAAEC,UAAU,EAAEhjC,IAAI,EAAE;IACjD,OAAQ,GAAE+iC,UAAU,CAACpxC,EAAG,IAAGqxC,UAAU,CAACrxC,EAAG,IAAGqO,IAAI,CAACw2B,KAAK,IAAIx2B,IAAI,CAAChO,IAAK,EAAC;EACvE;EACA,SAAS2O,aAAaA,CAAC2W,KAAK,EAAE;IAC5B,MAAM;MAACnd,GAAG;MAAEC,GAAG;MAAEqG,UAAU;MAAEC;IAAU,CAAC,GAAG4W,KAAK,CAAC3W,aAAa,CAAC,CAAC;IAChE,OAAO;MACLxG,GAAG,EAAEsG,UAAU,GAAGtG,GAAG,GAAG3H,MAAM,CAACywC,iBAAiB;MAChD7oC,GAAG,EAAEsG,UAAU,GAAGtG,GAAG,GAAG5H,MAAM,CAAC2F;IACjC,CAAC;EACH;EACA,SAAS+qC,gBAAgBA,CAACpM,MAAM,EAAEqM,QAAQ,EAAEC,UAAU,EAAE;IACtD,MAAMC,QAAQ,GAAGvM,MAAM,CAACqM,QAAQ,CAAC,KAAKrM,MAAM,CAACqM,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5D,OAAOE,QAAQ,CAACD,UAAU,CAAC,KAAKC,QAAQ,CAACD,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;EAC5D;EACA,SAASE,mBAAmBA,CAAC9M,KAAK,EAAE+M,MAAM,EAAEC,QAAQ,EAAExxC,IAAI,EAAE;IAC1D,KAAK,MAAMgO,IAAI,IAAIujC,MAAM,CAACE,uBAAuB,CAACzxC,IAAI,CAAC,CAACyB,OAAO,CAAC,CAAC,EAAE;MACjE,MAAM5B,KAAK,GAAG2kC,KAAK,CAACx2B,IAAI,CAAC3L,KAAK,CAAC;MAC/B,IAAKmvC,QAAQ,IAAI3xC,KAAK,GAAG,CAAC,IAAM,CAAC2xC,QAAQ,IAAI3xC,KAAK,GAAG,CAAE,EAAE;QACvD,OAAOmO,IAAI,CAAC3L,KAAK;MACnB;IACF;IACA,OAAO,IAAI;EACb;EACA,SAASqvC,YAAYA,CAAClQ,UAAU,EAAEjM,MAAM,EAAE;IACxC,MAAM;MAACvlB,KAAK;MAAEyxB,WAAW,EAAEzzB;IAAI,CAAC,GAAGwzB,UAAU;IAC7C,MAAMsD,MAAM,GAAG90B,KAAK,CAAC2hC,OAAO,KAAK3hC,KAAK,CAAC2hC,OAAO,GAAG,CAAC,CAAC,CAAC;IACpD,MAAM;MAACrjC,MAAM;MAAEijC,MAAM;MAAElvC,KAAK,EAAED;IAAY,CAAC,GAAG4L,IAAI;IAClD,MAAM4jC,KAAK,GAAGtjC,MAAM,CAACE,IAAI;IACzB,MAAMqjC,KAAK,GAAGN,MAAM,CAAC/iC,IAAI;IACzB,MAAM1L,GAAG,GAAGguC,WAAW,CAACxiC,MAAM,EAAEijC,MAAM,EAAEvjC,IAAI,CAAC;IAC7C,MAAM/L,IAAI,GAAGszB,MAAM,CAAC1zB,MAAM;IAC1B,IAAI2iC,KAAK;IACT,KAAK,IAAI9iC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;MAC7B,MAAMgE,IAAI,GAAG6vB,MAAM,CAAC7zB,CAAC,CAAC;MACtB,MAAM;QAAC,CAACkwC,KAAK,GAAGvvC,KAAK;QAAE,CAACwvC,KAAK,GAAGhyC;MAAK,CAAC,GAAG6F,IAAI;MAC7C,MAAMosC,UAAU,GAAGpsC,IAAI,CAACisC,OAAO,KAAKjsC,IAAI,CAACisC,OAAO,GAAG,CAAC,CAAC,CAAC;MACtDnN,KAAK,GAAGsN,UAAU,CAACD,KAAK,CAAC,GAAGX,gBAAgB,CAACpM,MAAM,EAAEhiC,GAAG,EAAET,KAAK,CAAC;MAChEmiC,KAAK,CAACpiC,YAAY,CAAC,GAAGvC,KAAK;MAC3B2kC,KAAK,CAACuN,IAAI,GAAGT,mBAAmB,CAAC9M,KAAK,EAAE+M,MAAM,EAAE,IAAI,EAAEvjC,IAAI,CAAChO,IAAI,CAAC;MAChEwkC,KAAK,CAACwN,OAAO,GAAGV,mBAAmB,CAAC9M,KAAK,EAAE+M,MAAM,EAAE,KAAK,EAAEvjC,IAAI,CAAChO,IAAI,CAAC;IACtE;EACF;EACA,SAASiyC,eAAeA,CAACjiC,KAAK,EAAExB,IAAI,EAAE;IACpC,MAAM+W,MAAM,GAAGvV,KAAK,CAACuV,MAAM;IAC3B,OAAOtlB,MAAM,CAAC2B,IAAI,CAAC2jB,MAAM,CAAC,CAACoP,MAAM,CAAC7xB,GAAG,IAAIyiB,MAAM,CAACziB,GAAG,CAAC,CAAC0L,IAAI,KAAKA,IAAI,CAAC,CAAC0jC,KAAK,CAAC,CAAC;EAC7E;EACA,SAASC,oBAAoBA,CAACprB,MAAM,EAAE1kB,KAAK,EAAE;IAC3C,OAAO46B,aAAa,CAAClW,MAAM,EACzB;MACEgnB,MAAM,EAAE,KAAK;MACbjK,OAAO,EAAEhgC,SAAS;MAClB1B,YAAY,EAAEC,KAAK;MACnBA,KAAK;MACLwiB,IAAI,EAAE,SAAS;MACf7kB,IAAI,EAAE;IACR,CACF,CAAC;EACH;EACA,SAASoyC,iBAAiBA,CAACrrB,MAAM,EAAE1kB,KAAK,EAAEklB,OAAO,EAAE;IACjD,OAAO0V,aAAa,CAAClW,MAAM,EAAE;MAC3BgnB,MAAM,EAAE,KAAK;MACbsE,SAAS,EAAEhwC,KAAK;MAChBkzB,MAAM,EAAEzxB,SAAS;MACjBwuC,GAAG,EAAExuC,SAAS;MACdyjB,OAAO;MACPllB,KAAK;MACLwiB,IAAI,EAAE,SAAS;MACf7kB,IAAI,EAAE;IACR,CAAC,CAAC;EACJ;EACA,SAASuyC,WAAWA,CAACvkC,IAAI,EAAE/B,KAAK,EAAE;IAChC,MAAM7J,YAAY,GAAG4L,IAAI,CAACwzB,UAAU,CAACn/B,KAAK;IAC1C,MAAMmM,IAAI,GAAGR,IAAI,CAACujC,MAAM,IAAIvjC,IAAI,CAACujC,MAAM,CAAC/iC,IAAI;IAC5C,IAAI,CAACA,IAAI,EAAE;MACT;IACF;IACAvC,KAAK,GAAGA,KAAK,IAAI+B,IAAI,CAACO,OAAO;IAC7B,KAAK,MAAMgnB,MAAM,IAAItpB,KAAK,EAAE;MAC1B,MAAM64B,MAAM,GAAGvP,MAAM,CAACoc,OAAO;MAC7B,IAAI,CAAC7M,MAAM,IAAIA,MAAM,CAACt2B,IAAI,CAAC,KAAK1K,SAAS,IAAIghC,MAAM,CAACt2B,IAAI,CAAC,CAACpM,YAAY,CAAC,KAAK0B,SAAS,EAAE;QACrF;MACF;MACA,OAAOghC,MAAM,CAACt2B,IAAI,CAAC,CAACpM,YAAY,CAAC;IACnC;EACF;EACA,MAAMowC,kBAAkB,GAAI3tB,IAAI,IAAKA,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,MAAM;EACxE,MAAM4tB,gBAAgB,GAAGA,CAACC,MAAM,EAAEC,MAAM,KAAKA,MAAM,GAAGD,MAAM,GAAGzyC,MAAM,CAACsP,MAAM,CAAC,CAAC,CAAC,EAAEmjC,MAAM,CAAC;EACxF,MAAME,WAAW,GAAGA,CAACC,QAAQ,EAAE7kC,IAAI,EAAEgC,KAAK,KAAK6iC,QAAQ,IAAI,CAAC7kC,IAAI,CAAC8kC,MAAM,IAAI9kC,IAAI,CAAC+kC,QAAQ,IACnF;IAACnxC,IAAI,EAAEuuC,uBAAuB,CAACngC,KAAK,EAAE,IAAI,CAAC;IAAEjF,MAAM,EAAE;EAAI,CAAC;EAC/D,MAAMioC,iBAAiB,CAAC;IACtBvjC,WAAWA,CAACO,KAAK,EAAE5N,YAAY,EAAE;MAC/B,IAAI,CAAC4N,KAAK,GAAGA,KAAK;MAClB,IAAI,CAACijC,IAAI,GAAGjjC,KAAK,CAACwU,GAAG;MACrB,IAAI,CAACniB,KAAK,GAAGD,YAAY;MACzB,IAAI,CAAC8wC,eAAe,GAAG,CAAC,CAAC;MACzB,IAAI,CAACzR,WAAW,GAAG,IAAI,CAAC0R,OAAO,CAAC,CAAC;MACjC,IAAI,CAACC,KAAK,GAAG,IAAI,CAAC3R,WAAW,CAACzhC,IAAI;MAClC,IAAI,CAACiD,OAAO,GAAGa,SAAS;MACxB,IAAI,CAACwxB,QAAQ,GAAG,KAAK;MACrB,IAAI,CAAC+d,KAAK,GAAGvvC,SAAS;MACtB,IAAI,CAACwvC,WAAW,GAAGxvC,SAAS;MAC5B,IAAI,CAAC89B,cAAc,GAAG99B,SAAS;MAC/B,IAAI,CAACyvC,UAAU,GAAGzvC,SAAS;MAC3B,IAAI,CAAC0vC,UAAU,GAAG1vC,SAAS;MAC3B,IAAI,CAAC2vC,mBAAmB,GAAG,KAAK;MAChC,IAAI,CAACC,kBAAkB,GAAG,KAAK;MAC/B,IAAI,CAACC,QAAQ,GAAG7vC,SAAS;MACzB,IAAI,CAAC8vC,SAAS,GAAG,EAAE;MACnB,IAAI,CAACC,UAAU,CAAC,CAAC;IACnB;IACAA,UAAUA,CAAA,EAAG;MACX,MAAM7lC,IAAI,GAAG,IAAI,CAACyzB,WAAW;MAC7B,IAAI,CAACwG,SAAS,CAAC,CAAC;MAChB,IAAI,CAAC6L,UAAU,CAAC,CAAC;MACjB9lC,IAAI,CAAC+kC,QAAQ,GAAGnC,SAAS,CAAC5iC,IAAI,CAACujC,MAAM,EAAEvjC,IAAI,CAAC;MAC5C,IAAI,CAAC+lC,WAAW,CAAC,CAAC;IACpB;IACAC,WAAWA,CAAC5xC,YAAY,EAAE;MACxB,IAAI,IAAI,CAACC,KAAK,KAAKD,YAAY,EAAE;QAC/BmwC,WAAW,CAAC,IAAI,CAAC9Q,WAAW,CAAC;MAC/B;MACA,IAAI,CAACp/B,KAAK,GAAGD,YAAY;IAC3B;IACA0xC,UAAUA,CAAA,EAAG;MACX,MAAM9jC,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,MAAMhC,IAAI,GAAG,IAAI,CAACyzB,WAAW;MAC7B,MAAMqC,OAAO,GAAG,IAAI,CAACmQ,UAAU,CAAC,CAAC;MACjC,MAAMC,QAAQ,GAAGA,CAAC1lC,IAAI,EAAErK,CAAC,EAAEE,CAAC,EAAEoP,CAAC,KAAKjF,IAAI,KAAK,GAAG,GAAGrK,CAAC,GAAGqK,IAAI,KAAK,GAAG,GAAGiF,CAAC,GAAGpP,CAAC;MAC3E,MAAM8vC,GAAG,GAAGnmC,IAAI,CAAComC,OAAO,GAAGxzC,cAAc,CAACkjC,OAAO,CAACsQ,OAAO,EAAEnC,eAAe,CAACjiC,KAAK,EAAE,GAAG,CAAC,CAAC;MACvF,MAAMqkC,GAAG,GAAGrmC,IAAI,CAACsmC,OAAO,GAAG1zC,cAAc,CAACkjC,OAAO,CAACwQ,OAAO,EAAErC,eAAe,CAACjiC,KAAK,EAAE,GAAG,CAAC,CAAC;MACvF,MAAMukC,GAAG,GAAGvmC,IAAI,CAACwmC,OAAO,GAAG5zC,cAAc,CAACkjC,OAAO,CAAC0Q,OAAO,EAAEvC,eAAe,CAACjiC,KAAK,EAAE,GAAG,CAAC,CAAC;MACvF,MAAM2U,SAAS,GAAG3W,IAAI,CAAC2W,SAAS;MAChC,MAAM8vB,GAAG,GAAGzmC,IAAI,CAAC0mC,OAAO,GAAGR,QAAQ,CAACvvB,SAAS,EAAEwvB,GAAG,EAAEE,GAAG,EAAEE,GAAG,CAAC;MAC7D,MAAMI,GAAG,GAAG3mC,IAAI,CAAC4mC,OAAO,GAAGV,QAAQ,CAACvvB,SAAS,EAAE0vB,GAAG,EAAEF,GAAG,EAAEI,GAAG,CAAC;MAC7DvmC,IAAI,CAACc,MAAM,GAAG,IAAI,CAAC+lC,aAAa,CAACV,GAAG,CAAC;MACrCnmC,IAAI,CAACe,MAAM,GAAG,IAAI,CAAC8lC,aAAa,CAACR,GAAG,CAAC;MACrCrmC,IAAI,CAAC8mC,MAAM,GAAG,IAAI,CAACD,aAAa,CAACN,GAAG,CAAC;MACrCvmC,IAAI,CAACM,MAAM,GAAG,IAAI,CAACumC,aAAa,CAACJ,GAAG,CAAC;MACrCzmC,IAAI,CAACujC,MAAM,GAAG,IAAI,CAACsD,aAAa,CAACF,GAAG,CAAC;IACvC;IACAV,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACjkC,KAAK,CAAC0b,IAAI,CAAC/H,QAAQ,CAAC,IAAI,CAACthB,KAAK,CAAC;IAC7C;IACA8wC,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACnjC,KAAK,CAAC+zB,cAAc,CAAC,IAAI,CAAC1hC,KAAK,CAAC;IAC9C;IACAwyC,aAAaA,CAACE,OAAO,EAAE;MACrB,OAAO,IAAI,CAAC/kC,KAAK,CAACuV,MAAM,CAACwvB,OAAO,CAAC;IACnC;IACAC,cAAcA,CAAC1vB,KAAK,EAAE;MACpB,MAAMtX,IAAI,GAAG,IAAI,CAACyzB,WAAW;MAC7B,OAAOnc,KAAK,KAAKtX,IAAI,CAACM,MAAM,GACxBN,IAAI,CAACujC,MAAM,GACXvjC,IAAI,CAACM,MAAM;IACjB;IACA2mC,KAAKA,CAAA,EAAG;MACN,IAAI,CAACxkC,OAAO,CAAC,OAAO,CAAC;IACvB;IACAykC,QAAQA,CAAA,EAAG;MACT,MAAMlnC,IAAI,GAAG,IAAI,CAACyzB,WAAW;MAC7B,IAAI,IAAI,CAAC4R,KAAK,EAAE;QACdxnC,mBAAmB,CAAC,IAAI,CAACwnC,KAAK,EAAE,IAAI,CAAC;MACvC;MACA,IAAIrlC,IAAI,CAAC+kC,QAAQ,EAAE;QACjBR,WAAW,CAACvkC,IAAI,CAAC;MACnB;IACF;IACAmnC,UAAUA,CAAA,EAAG;MACX,MAAMrR,OAAO,GAAG,IAAI,CAACmQ,UAAU,CAAC,CAAC;MACjC,MAAMvoB,IAAI,GAAGoY,OAAO,CAACpY,IAAI,KAAKoY,OAAO,CAACpY,IAAI,GAAG,EAAE,CAAC;MAChD,MAAM2nB,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAI/yC,QAAQ,CAACorB,IAAI,CAAC,EAAE;QAClB,IAAI,CAAC2nB,KAAK,GAAG3C,wBAAwB,CAAChlB,IAAI,CAAC;MAC7C,CAAC,MAAM,IAAI2nB,KAAK,KAAK3nB,IAAI,EAAE;QACzB,IAAI2nB,KAAK,EAAE;UACTxnC,mBAAmB,CAACwnC,KAAK,EAAE,IAAI,CAAC;UAChC,MAAMrlC,IAAI,GAAG,IAAI,CAACyzB,WAAW;UAC7B8Q,WAAW,CAACvkC,IAAI,CAAC;UACjBA,IAAI,CAACO,OAAO,GAAG,EAAE;QACnB;QACA,IAAImd,IAAI,IAAIzrB,MAAM,CAACm1C,YAAY,CAAC1pB,IAAI,CAAC,EAAE;UACrCzgB,iBAAiB,CAACygB,IAAI,EAAE,IAAI,CAAC;QAC/B;QACA,IAAI,CAACkoB,SAAS,GAAG,EAAE;QACnB,IAAI,CAACP,KAAK,GAAG3nB,IAAI;MACnB;IACF;IACAqoB,WAAWA,CAAA,EAAG;MACZ,MAAM/lC,IAAI,GAAG,IAAI,CAACyzB,WAAW;MAC7B,IAAI,CAAC0T,UAAU,CAAC,CAAC;MACjB,IAAI,IAAI,CAACE,kBAAkB,EAAE;QAC3BrnC,IAAI,CAAC81B,OAAO,GAAG,IAAI,IAAI,CAACuR,kBAAkB,CAAC,CAAC;MAC9C;IACF;IACAC,qBAAqBA,CAACC,gBAAgB,EAAE;MACtC,MAAMvnC,IAAI,GAAG,IAAI,CAACyzB,WAAW;MAC7B,MAAMqC,OAAO,GAAG,IAAI,CAACmQ,UAAU,CAAC,CAAC;MACjC,IAAIuB,YAAY,GAAG,KAAK;MACxB,IAAI,CAACL,UAAU,CAAC,CAAC;MACjB,MAAMM,UAAU,GAAGznC,IAAI,CAAC+kC,QAAQ;MAChC/kC,IAAI,CAAC+kC,QAAQ,GAAGnC,SAAS,CAAC5iC,IAAI,CAACujC,MAAM,EAAEvjC,IAAI,CAAC;MAC5C,IAAIA,IAAI,CAACw2B,KAAK,KAAKV,OAAO,CAACU,KAAK,EAAE;QAChCgR,YAAY,GAAG,IAAI;QACnBjD,WAAW,CAACvkC,IAAI,CAAC;QACjBA,IAAI,CAACw2B,KAAK,GAAGV,OAAO,CAACU,KAAK;MAC5B;MACA,IAAI,CAACkR,eAAe,CAACH,gBAAgB,CAAC;MACtC,IAAIC,YAAY,IAAIC,UAAU,KAAKznC,IAAI,CAAC+kC,QAAQ,EAAE;QAChDrB,YAAY,CAAC,IAAI,EAAE1jC,IAAI,CAACO,OAAO,CAAC;MAClC;IACF;IACA05B,SAASA,CAAA,EAAG;MACV,MAAMa,MAAM,GAAG,IAAI,CAAC94B,KAAK,CAAC84B,MAAM;MAChC,MAAM6M,SAAS,GAAG7M,MAAM,CAAC8M,gBAAgB,CAAC,IAAI,CAACxC,KAAK,CAAC;MACrD,MAAM9hB,MAAM,GAAGwX,MAAM,CAAC+M,eAAe,CAAC,IAAI,CAAC5B,UAAU,CAAC,CAAC,EAAE0B,SAAS,EAAE,IAAI,CAAC;MACzE,IAAI,CAAC1yC,OAAO,GAAG6lC,MAAM,CAACgN,cAAc,CAACxkB,MAAM,EAAE,IAAI,CAACxE,UAAU,CAAC,CAAC,CAAC;MAC/D,IAAI,CAACwI,QAAQ,GAAG,IAAI,CAACryB,OAAO,CAACkiB,OAAO;MACpC,IAAI,CAAC+tB,eAAe,GAAG,CAAC,CAAC;IAC3B;IACA1d,KAAKA,CAAC9rB,KAAK,EAAE0E,KAAK,EAAE;MAClB,MAAM;QAACqzB,WAAW,EAAEzzB,IAAI;QAAEqlC,KAAK,EAAE3nB;MAAI,CAAC,GAAG,IAAI;MAC7C,MAAM;QAACpd,MAAM;QAAEykC;MAAQ,CAAC,GAAG/kC,IAAI;MAC/B,MAAM4jC,KAAK,GAAGtjC,MAAM,CAACE,IAAI;MACzB,IAAIunC,MAAM,GAAGrsC,KAAK,KAAK,CAAC,IAAI0E,KAAK,KAAKsd,IAAI,CAAC7pB,MAAM,GAAG,IAAI,GAAGmM,IAAI,CAACK,OAAO;MACvE,IAAIgqB,IAAI,GAAG3uB,KAAK,GAAG,CAAC,IAAIsE,IAAI,CAACO,OAAO,CAAC7E,KAAK,GAAG,CAAC,CAAC;MAC/C,IAAIhI,CAAC,EAAEkQ,GAAG,EAAE2jB,MAAM;MAClB,IAAI,IAAI,CAACD,QAAQ,KAAK,KAAK,EAAE;QAC3BtnB,IAAI,CAACO,OAAO,GAAGmd,IAAI;QACnB1d,IAAI,CAACK,OAAO,GAAG,IAAI;QACnBknB,MAAM,GAAG7J,IAAI;MACf,CAAC,MAAM;QACL,IAAI5rB,OAAO,CAAC4rB,IAAI,CAAChiB,KAAK,CAAC,CAAC,EAAE;UACxB6rB,MAAM,GAAG,IAAI,CAACygB,cAAc,CAAChoC,IAAI,EAAE0d,IAAI,EAAEhiB,KAAK,EAAE0E,KAAK,CAAC;QACxD,CAAC,MAAM,IAAI9N,QAAQ,CAACorB,IAAI,CAAChiB,KAAK,CAAC,CAAC,EAAE;UAChC6rB,MAAM,GAAG,IAAI,CAAC0gB,eAAe,CAACjoC,IAAI,EAAE0d,IAAI,EAAEhiB,KAAK,EAAE0E,KAAK,CAAC;QACzD,CAAC,MAAM;UACLmnB,MAAM,GAAG,IAAI,CAAC2gB,kBAAkB,CAACloC,IAAI,EAAE0d,IAAI,EAAEhiB,KAAK,EAAE0E,KAAK,CAAC;QAC5D;QACA,MAAM+nC,0BAA0B,GAAGA,CAAA,KAAMvkC,GAAG,CAACggC,KAAK,CAAC,KAAK,IAAI,IAAKvZ,IAAI,IAAIzmB,GAAG,CAACggC,KAAK,CAAC,GAAGvZ,IAAI,CAACuZ,KAAK,CAAE;QAClG,KAAKlwC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0M,KAAK,EAAE,EAAE1M,CAAC,EAAE;UAC1BsM,IAAI,CAACO,OAAO,CAAC7M,CAAC,GAAGgI,KAAK,CAAC,GAAGkI,GAAG,GAAG2jB,MAAM,CAAC7zB,CAAC,CAAC;UACzC,IAAIq0C,MAAM,EAAE;YACV,IAAII,0BAA0B,CAAC,CAAC,EAAE;cAChCJ,MAAM,GAAG,KAAK;YAChB;YACA1d,IAAI,GAAGzmB,GAAG;UACZ;QACF;QACA5D,IAAI,CAACK,OAAO,GAAG0nC,MAAM;MACvB;MACA,IAAIhD,QAAQ,EAAE;QACZrB,YAAY,CAAC,IAAI,EAAEnc,MAAM,CAAC;MAC5B;IACF;IACA2gB,kBAAkBA,CAACloC,IAAI,EAAE0d,IAAI,EAAEhiB,KAAK,EAAE0E,KAAK,EAAE;MAC3C,MAAM;QAACE,MAAM;QAAEijC;MAAM,CAAC,GAAGvjC,IAAI;MAC7B,MAAM4jC,KAAK,GAAGtjC,MAAM,CAACE,IAAI;MACzB,MAAMqjC,KAAK,GAAGN,MAAM,CAAC/iC,IAAI;MACzB,MAAM4nC,MAAM,GAAG9nC,MAAM,CAAC+nC,SAAS,CAAC,CAAC;MACjC,MAAMC,WAAW,GAAGhoC,MAAM,KAAKijC,MAAM;MACrC,MAAMhc,MAAM,GAAG,IAAIx1B,KAAK,CAACqO,KAAK,CAAC;MAC/B,IAAI1M,CAAC,EAAEO,IAAI,EAAEI,KAAK;MAClB,KAAKX,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAGmM,KAAK,EAAE1M,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;QACvCW,KAAK,GAAGX,CAAC,GAAGgI,KAAK;QACjB6rB,MAAM,CAAC7zB,CAAC,CAAC,GAAG;UACV,CAACkwC,KAAK,GAAG0E,WAAW,IAAIhoC,MAAM,CAACknB,KAAK,CAAC4gB,MAAM,CAAC/zC,KAAK,CAAC,EAAEA,KAAK,CAAC;UAC1D,CAACwvC,KAAK,GAAGN,MAAM,CAAC/b,KAAK,CAAC9J,IAAI,CAACrpB,KAAK,CAAC,EAAEA,KAAK;QAC1C,CAAC;MACH;MACA,OAAOkzB,MAAM;IACf;IACAygB,cAAcA,CAAChoC,IAAI,EAAE0d,IAAI,EAAEhiB,KAAK,EAAE0E,KAAK,EAAE;MACvC,MAAM;QAACU,MAAM;QAAEC;MAAM,CAAC,GAAGf,IAAI;MAC7B,MAAMunB,MAAM,GAAG,IAAIx1B,KAAK,CAACqO,KAAK,CAAC;MAC/B,IAAI1M,CAAC,EAAEO,IAAI,EAAEI,KAAK,EAAEqD,IAAI;MACxB,KAAKhE,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAGmM,KAAK,EAAE1M,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;QACvCW,KAAK,GAAGX,CAAC,GAAGgI,KAAK;QACjBhE,IAAI,GAAGgmB,IAAI,CAACrpB,KAAK,CAAC;QAClBkzB,MAAM,CAAC7zB,CAAC,CAAC,GAAG;UACVyC,CAAC,EAAE2K,MAAM,CAAC0mB,KAAK,CAAC9vB,IAAI,CAAC,CAAC,CAAC,EAAErD,KAAK,CAAC;UAC/BgC,CAAC,EAAE0K,MAAM,CAACymB,KAAK,CAAC9vB,IAAI,CAAC,CAAC,CAAC,EAAErD,KAAK;QAChC,CAAC;MACH;MACA,OAAOkzB,MAAM;IACf;IACA0gB,eAAeA,CAACjoC,IAAI,EAAE0d,IAAI,EAAEhiB,KAAK,EAAE0E,KAAK,EAAE;MACxC,MAAM;QAACU,MAAM;QAAEC;MAAM,CAAC,GAAGf,IAAI;MAC7B,MAAM;QAACuoC,QAAQ,GAAG,GAAG;QAAEC,QAAQ,GAAG;MAAG,CAAC,GAAG,IAAI,CAAClhB,QAAQ;MACtD,MAAMC,MAAM,GAAG,IAAIx1B,KAAK,CAACqO,KAAK,CAAC;MAC/B,IAAI1M,CAAC,EAAEO,IAAI,EAAEI,KAAK,EAAEqD,IAAI;MACxB,KAAKhE,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAGmM,KAAK,EAAE1M,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;QACvCW,KAAK,GAAGX,CAAC,GAAGgI,KAAK;QACjBhE,IAAI,GAAGgmB,IAAI,CAACrpB,KAAK,CAAC;QAClBkzB,MAAM,CAAC7zB,CAAC,CAAC,GAAG;UACVyC,CAAC,EAAE2K,MAAM,CAAC0mB,KAAK,CAAClxB,gBAAgB,CAACoB,IAAI,EAAE6wC,QAAQ,CAAC,EAAEl0C,KAAK,CAAC;UACxDgC,CAAC,EAAE0K,MAAM,CAACymB,KAAK,CAAClxB,gBAAgB,CAACoB,IAAI,EAAE8wC,QAAQ,CAAC,EAAEn0C,KAAK;QACzD,CAAC;MACH;MACA,OAAOkzB,MAAM;IACf;IACAkhB,SAASA,CAACp0C,KAAK,EAAE;MACf,OAAO,IAAI,CAACo/B,WAAW,CAAClzB,OAAO,CAAClM,KAAK,CAAC;IACxC;IACAq0C,cAAcA,CAACr0C,KAAK,EAAE;MACpB,OAAO,IAAI,CAACo/B,WAAW,CAAC/V,IAAI,CAACrpB,KAAK,CAAC;IACrC;IACAiuC,UAAUA,CAAChrB,KAAK,EAAEiQ,MAAM,EAAE1Q,IAAI,EAAE;MAC9B,MAAM7U,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,MAAMhC,IAAI,GAAG,IAAI,CAACyzB,WAAW;MAC7B,MAAM5hC,KAAK,GAAG01B,MAAM,CAACjQ,KAAK,CAAC9W,IAAI,CAAC;MAChC,MAAMg2B,KAAK,GAAG;QACZ5iC,IAAI,EAAEuuC,uBAAuB,CAACngC,KAAK,EAAE,IAAI,CAAC;QAC1CjF,MAAM,EAAEwqB,MAAM,CAACoc,OAAO,CAACrsB,KAAK,CAAC9W,IAAI;MACnC,CAAC;MACD,OAAO8hC,UAAU,CAAC9L,KAAK,EAAE3kC,KAAK,EAAEmO,IAAI,CAAC3L,KAAK,EAAE;QAACwiB;MAAI,CAAC,CAAC;IACrD;IACA8xB,qBAAqBA,CAAChwC,KAAK,EAAE2e,KAAK,EAAEiQ,MAAM,EAAEiP,KAAK,EAAE;MACjD,MAAMoS,WAAW,GAAGrhB,MAAM,CAACjQ,KAAK,CAAC9W,IAAI,CAAC;MACtC,IAAI3O,KAAK,GAAG+2C,WAAW,KAAK,IAAI,GAAGC,GAAG,GAAGD,WAAW;MACpD,MAAM7rC,MAAM,GAAGy5B,KAAK,IAAIjP,MAAM,CAACoc,OAAO,CAACrsB,KAAK,CAAC9W,IAAI,CAAC;MAClD,IAAIg2B,KAAK,IAAIz5B,MAAM,EAAE;QACnBy5B,KAAK,CAACz5B,MAAM,GAAGA,MAAM;QACrBlL,KAAK,GAAGywC,UAAU,CAAC9L,KAAK,EAAEoS,WAAW,EAAE,IAAI,CAACnV,WAAW,CAACp/B,KAAK,CAAC;MAChE;MACAsE,KAAK,CAACwB,GAAG,GAAGpC,IAAI,CAACoC,GAAG,CAACxB,KAAK,CAACwB,GAAG,EAAEtI,KAAK,CAAC;MACtC8G,KAAK,CAACyB,GAAG,GAAGrC,IAAI,CAACqC,GAAG,CAACzB,KAAK,CAACyB,GAAG,EAAEvI,KAAK,CAAC;IACxC;IACAi3C,SAASA,CAACxxB,KAAK,EAAEutB,QAAQ,EAAE;MACzB,MAAM7kC,IAAI,GAAG,IAAI,CAACyzB,WAAW;MAC7B,MAAMlzB,OAAO,GAAGP,IAAI,CAACO,OAAO;MAC5B,MAAMwnC,MAAM,GAAG/nC,IAAI,CAACK,OAAO,IAAIiX,KAAK,KAAKtX,IAAI,CAACM,MAAM;MACpD,MAAMrM,IAAI,GAAGsM,OAAO,CAAC1M,MAAM;MAC3B,MAAMk1C,UAAU,GAAG,IAAI,CAAC/B,cAAc,CAAC1vB,KAAK,CAAC;MAC7C,MAAMkf,KAAK,GAAGoO,WAAW,CAACC,QAAQ,EAAE7kC,IAAI,EAAE,IAAI,CAACgC,KAAK,CAAC;MACrD,MAAMrJ,KAAK,GAAG;QAACwB,GAAG,EAAE3H,MAAM,CAAC2F,iBAAiB;QAAEiC,GAAG,EAAE5H,MAAM,CAACywC;MAAiB,CAAC;MAC5E,MAAM;QAAC9oC,GAAG,EAAE6uC,QAAQ;QAAE5uC,GAAG,EAAE6uC;MAAQ,CAAC,GAAGtoC,aAAa,CAACooC,UAAU,CAAC;MAChE,IAAIr1C,CAAC,EAAE6zB,MAAM;MACb,SAAS2hB,KAAKA,CAAA,EAAG;QACf3hB,MAAM,GAAGhnB,OAAO,CAAC7M,CAAC,CAAC;QACnB,MAAM+uC,UAAU,GAAGlb,MAAM,CAACwhB,UAAU,CAACvoC,IAAI,CAAC;QAC1C,OAAO,CAACjO,cAAc,CAACg1B,MAAM,CAACjQ,KAAK,CAAC9W,IAAI,CAAC,CAAC,IAAIwoC,QAAQ,GAAGvG,UAAU,IAAIwG,QAAQ,GAAGxG,UAAU;MAC9F;MACA,KAAK/uC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;QACzB,IAAIw1C,KAAK,CAAC,CAAC,EAAE;UACX;QACF;QACA,IAAI,CAACP,qBAAqB,CAAChwC,KAAK,EAAE2e,KAAK,EAAEiQ,MAAM,EAAEiP,KAAK,CAAC;QACvD,IAAIuR,MAAM,EAAE;UACV;QACF;MACF;MACA,IAAIA,MAAM,EAAE;QACV,KAAKr0C,CAAC,GAAGO,IAAI,GAAG,CAAC,EAAEP,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;UAC9B,IAAIw1C,KAAK,CAAC,CAAC,EAAE;YACX;UACF;UACA,IAAI,CAACP,qBAAqB,CAAChwC,KAAK,EAAE2e,KAAK,EAAEiQ,MAAM,EAAEiP,KAAK,CAAC;UACvD;QACF;MACF;MACA,OAAO79B,KAAK;IACd;IACAwwC,kBAAkBA,CAAC7xB,KAAK,EAAE;MACxB,MAAMiQ,MAAM,GAAG,IAAI,CAACkM,WAAW,CAAClzB,OAAO;MACvC,MAAMxD,MAAM,GAAG,EAAE;MACjB,IAAIrJ,CAAC,EAAEO,IAAI,EAAEpC,KAAK;MAClB,KAAK6B,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAGszB,MAAM,CAAC1zB,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;QAC/C7B,KAAK,GAAG01B,MAAM,CAAC7zB,CAAC,CAAC,CAAC4jB,KAAK,CAAC9W,IAAI,CAAC;QAC7B,IAAIjO,cAAc,CAACV,KAAK,CAAC,EAAE;UACzBkL,MAAM,CAAChG,IAAI,CAAClF,KAAK,CAAC;QACpB;MACF;MACA,OAAOkL,MAAM;IACf;IACAqsC,cAAcA,CAAA,EAAG;MACf,OAAO,KAAK;IACd;IACAC,gBAAgBA,CAACh1C,KAAK,EAAE;MACtB,MAAM2L,IAAI,GAAG,IAAI,CAACyzB,WAAW;MAC7B,MAAMnzB,MAAM,GAAGN,IAAI,CAACM,MAAM;MAC1B,MAAMijC,MAAM,GAAGvjC,IAAI,CAACujC,MAAM;MAC1B,MAAMhc,MAAM,GAAG,IAAI,CAACkhB,SAAS,CAACp0C,KAAK,CAAC;MACpC,OAAO;QACLi1C,KAAK,EAAEhpC,MAAM,GAAG,EAAE,GAAGA,MAAM,CAACipC,gBAAgB,CAAChiB,MAAM,CAACjnB,MAAM,CAACE,IAAI,CAAC,CAAC,GAAG,EAAE;QACtE3O,KAAK,EAAE0xC,MAAM,GAAG,EAAE,GAAGA,MAAM,CAACgG,gBAAgB,CAAChiB,MAAM,CAACgc,MAAM,CAAC/iC,IAAI,CAAC,CAAC,GAAG;MACtE,CAAC;IACH;IACAiC,OAAOA,CAACoU,IAAI,EAAE;MACZ,MAAM7W,IAAI,GAAG,IAAI,CAACyzB,WAAW;MAC7B,IAAI,CAAC6F,MAAM,CAACziB,IAAI,IAAI,SAAS,CAAC;MAC9B7W,IAAI,CAACwpC,KAAK,GAAGvH,MAAM,CAACrvC,cAAc,CAAC,IAAI,CAACqC,OAAO,CAAC0rB,IAAI,EAAEqhB,WAAW,CAAChiC,IAAI,CAACc,MAAM,EAAEd,IAAI,CAACe,MAAM,EAAE,IAAI,CAACqoC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;IACtH;IACA9P,MAAMA,CAACziB,IAAI,EAAE,CAAC;IACd/T,IAAIA,CAAA,EAAG;MACL,MAAM0T,GAAG,GAAG,IAAI,CAACyuB,IAAI;MACrB,MAAMjjC,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,MAAMhC,IAAI,GAAG,IAAI,CAACyzB,WAAW;MAC7B,MAAMzd,QAAQ,GAAGhW,IAAI,CAAC0d,IAAI,IAAI,EAAE;MAChC,MAAM8C,IAAI,GAAGxe,KAAK,CAAC4yB,SAAS;MAC5B,MAAMmL,MAAM,GAAG,EAAE;MACjB,MAAMrkC,KAAK,GAAG,IAAI,CAAC6pC,UAAU,IAAI,CAAC;MAClC,MAAMnlC,KAAK,GAAG,IAAI,CAAColC,UAAU,IAAKxvB,QAAQ,CAACniB,MAAM,GAAG6H,KAAM;MAC1D,MAAM+b,uBAAuB,GAAG,IAAI,CAACxiB,OAAO,CAACwiB,uBAAuB;MACpE,IAAI/jB,CAAC;MACL,IAAIsM,IAAI,CAAC81B,OAAO,EAAE;QAChB91B,IAAI,CAAC81B,OAAO,CAAChzB,IAAI,CAAC0T,GAAG,EAAEgK,IAAI,EAAE9kB,KAAK,EAAE0E,KAAK,CAAC;MAC5C;MACA,KAAK1M,CAAC,GAAGgI,KAAK,EAAEhI,CAAC,GAAGgI,KAAK,GAAG0E,KAAK,EAAE,EAAE1M,CAAC,EAAE;QACtC,MAAM6lB,OAAO,GAAGvD,QAAQ,CAACtiB,CAAC,CAAC;QAC3B,IAAI6lB,OAAO,CAACurB,MAAM,EAAE;UAClB;QACF;QACA,IAAIvrB,OAAO,CAACwmB,MAAM,IAAItoB,uBAAuB,EAAE;UAC7CsoB,MAAM,CAAChpC,IAAI,CAACwiB,OAAO,CAAC;QACtB,CAAC,MAAM;UACLA,OAAO,CAACzW,IAAI,CAAC0T,GAAG,EAAEgK,IAAI,CAAC;QACzB;MACF;MACA,KAAK9sB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqsC,MAAM,CAAClsC,MAAM,EAAE,EAAEH,CAAC,EAAE;QAClCqsC,MAAM,CAACrsC,CAAC,CAAC,CAACoP,IAAI,CAAC0T,GAAG,EAAEgK,IAAI,CAAC;MAC3B;IACF;IACAhH,QAAQA,CAACnlB,KAAK,EAAE0rC,MAAM,EAAE;MACtB,MAAMlpB,IAAI,GAAGkpB,MAAM,GAAG,QAAQ,GAAG,SAAS;MAC1C,OAAO1rC,KAAK,KAAKyB,SAAS,IAAI,IAAI,CAAC29B,WAAW,CAACqC,OAAO,GAClD,IAAI,CAAC2T,4BAA4B,CAAC5yB,IAAI,CAAC,GACvC,IAAI,CAAC6yB,yBAAyB,CAACr1C,KAAK,IAAI,CAAC,EAAEwiB,IAAI,CAAC;IACtD;IACAiI,UAAUA,CAACzqB,KAAK,EAAE0rC,MAAM,EAAElpB,IAAI,EAAE;MAC9B,MAAMif,OAAO,GAAG,IAAI,CAACmQ,UAAU,CAAC,CAAC;MACjC,IAAIpwB,OAAO;MACX,IAAIxhB,KAAK,IAAI,CAAC,IAAIA,KAAK,GAAG,IAAI,CAACo/B,WAAW,CAAC/V,IAAI,CAAC7pB,MAAM,EAAE;QACtD,MAAM0lB,OAAO,GAAG,IAAI,CAACka,WAAW,CAAC/V,IAAI,CAACrpB,KAAK,CAAC;QAC5CwhB,OAAO,GAAG0D,OAAO,CAACosB,QAAQ,KACvBpsB,OAAO,CAACosB,QAAQ,GAAGvB,iBAAiB,CAAC,IAAI,CAACtlB,UAAU,CAAC,CAAC,EAAEzqB,KAAK,EAAEklB,OAAO,CAAC,CAAC;QAC3E1D,OAAO,CAAC0R,MAAM,GAAG,IAAI,CAACkhB,SAAS,CAACp0C,KAAK,CAAC;QACtCwhB,OAAO,CAACyuB,GAAG,GAAGxO,OAAO,CAACpY,IAAI,CAACrpB,KAAK,CAAC;QACjCwhB,OAAO,CAACxhB,KAAK,GAAGwhB,OAAO,CAACwuB,SAAS,GAAGhwC,KAAK;MAC3C,CAAC,MAAM;QACLwhB,OAAO,GAAG,IAAI,CAAC8vB,QAAQ,KACpB,IAAI,CAACA,QAAQ,GAAGxB,oBAAoB,CAAC,IAAI,CAACniC,KAAK,CAAC8c,UAAU,CAAC,CAAC,EAAE,IAAI,CAACzqB,KAAK,CAAC,CAAC;QAC7EwhB,OAAO,CAACigB,OAAO,GAAGA,OAAO;QACzBjgB,OAAO,CAACxhB,KAAK,GAAGwhB,OAAO,CAACzhB,YAAY,GAAG,IAAI,CAACC,KAAK;MACnD;MACAwhB,OAAO,CAACkqB,MAAM,GAAG,CAAC,CAACA,MAAM;MACzBlqB,OAAO,CAACgB,IAAI,GAAGA,IAAI;MACnB,OAAOhB,OAAO;IAChB;IACA4zB,4BAA4BA,CAAC5yB,IAAI,EAAE;MACjC,OAAO,IAAI,CAAC8yB,sBAAsB,CAAC,IAAI,CAACtC,kBAAkB,CAAC11C,EAAE,EAAEklB,IAAI,CAAC;IACtE;IACA6yB,yBAAyBA,CAACr1C,KAAK,EAAEwiB,IAAI,EAAE;MACrC,OAAO,IAAI,CAAC8yB,sBAAsB,CAAC,IAAI,CAACC,eAAe,CAACj4C,EAAE,EAAEklB,IAAI,EAAExiB,KAAK,CAAC;IAC1E;IACAs1C,sBAAsBA,CAACE,WAAW,EAAEhzB,IAAI,GAAG,SAAS,EAAExiB,KAAK,EAAE;MAC3D,MAAM0rC,MAAM,GAAGlpB,IAAI,KAAK,QAAQ;MAChC,MAAMqH,KAAK,GAAG,IAAI,CAACgnB,eAAe;MAClC,MAAMhY,QAAQ,GAAG2c,WAAW,GAAG,GAAG,GAAGhzB,IAAI;MACzC,MAAM6tB,MAAM,GAAGxmB,KAAK,CAACgP,QAAQ,CAAC;MAC9B,MAAM4c,OAAO,GAAG,IAAI,CAACrE,mBAAmB,IAAIruC,OAAO,CAAC/C,KAAK,CAAC;MAC1D,IAAIqwC,MAAM,EAAE;QACV,OAAOD,gBAAgB,CAACC,MAAM,EAAEoF,OAAO,CAAC;MAC1C;MACA,MAAMhP,MAAM,GAAG,IAAI,CAAC94B,KAAK,CAAC84B,MAAM;MAChC,MAAM6M,SAAS,GAAG7M,MAAM,CAACiP,uBAAuB,CAAC,IAAI,CAAC3E,KAAK,EAAEyE,WAAW,CAAC;MACzE,MAAMtmB,QAAQ,GAAGwc,MAAM,GAAG,CAAE,GAAE8J,WAAY,OAAM,EAAE,OAAO,EAAEA,WAAW,EAAE,EAAE,CAAC,GAAG,CAACA,WAAW,EAAE,EAAE,CAAC;MAC/F,MAAMvmB,MAAM,GAAGwX,MAAM,CAAC+M,eAAe,CAAC,IAAI,CAAC5B,UAAU,CAAC,CAAC,EAAE0B,SAAS,CAAC;MACnE,MAAMr1B,KAAK,GAAGrgB,MAAM,CAAC2B,IAAI,CAAC0kB,QAAQ,CAACtC,QAAQ,CAAC6zB,WAAW,CAAC,CAAC;MACzD,MAAMh0B,OAAO,GAAGA,CAAA,KAAM,IAAI,CAACiJ,UAAU,CAACzqB,KAAK,EAAE0rC,MAAM,CAAC;MACpD,MAAMhjC,MAAM,GAAG+9B,MAAM,CAACkP,mBAAmB,CAAC1mB,MAAM,EAAEhR,KAAK,EAAEuD,OAAO,EAAE0N,QAAQ,CAAC;MAC3E,IAAIxmB,MAAM,CAACykC,OAAO,EAAE;QAClBzkC,MAAM,CAACykC,OAAO,GAAGsI,OAAO;QACxB5rB,KAAK,CAACgP,QAAQ,CAAC,GAAGj7B,MAAM,CAACkhC,MAAM,CAACsR,gBAAgB,CAAC1nC,MAAM,EAAE+sC,OAAO,CAAC,CAAC;MACpE;MACA,OAAO/sC,MAAM;IACf;IACAktC,kBAAkBA,CAAC51C,KAAK,EAAE61C,UAAU,EAAEnK,MAAM,EAAE;MAC5C,MAAM/9B,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,MAAMkc,KAAK,GAAG,IAAI,CAACgnB,eAAe;MAClC,MAAMhY,QAAQ,GAAI,aAAYgd,UAAW,EAAC;MAC1C,MAAMxF,MAAM,GAAGxmB,KAAK,CAACgP,QAAQ,CAAC;MAC9B,IAAIwX,MAAM,EAAE;QACV,OAAOA,MAAM;MACf;MACA,IAAIzvC,OAAO;MACX,IAAI+M,KAAK,CAAC/M,OAAO,CAACugB,SAAS,KAAK,KAAK,EAAE;QACrC,MAAMslB,MAAM,GAAG,IAAI,CAAC94B,KAAK,CAAC84B,MAAM;QAChC,MAAM6M,SAAS,GAAG7M,MAAM,CAACqP,yBAAyB,CAAC,IAAI,CAAC/E,KAAK,EAAE8E,UAAU,CAAC;QAC1E,MAAM5mB,MAAM,GAAGwX,MAAM,CAAC+M,eAAe,CAAC,IAAI,CAAC5B,UAAU,CAAC,CAAC,EAAE0B,SAAS,CAAC;QACnE1yC,OAAO,GAAG6lC,MAAM,CAACgN,cAAc,CAACxkB,MAAM,EAAE,IAAI,CAACxE,UAAU,CAACzqB,KAAK,EAAE0rC,MAAM,EAAEmK,UAAU,CAAC,CAAC;MACrF;MACA,MAAMtJ,UAAU,GAAG,IAAIG,UAAU,CAAC/+B,KAAK,EAAE/M,OAAO,IAAIA,OAAO,CAAC2rC,UAAU,CAAC;MACvE,IAAI3rC,OAAO,IAAIA,OAAO,CAAC6uB,UAAU,EAAE;QACjC5F,KAAK,CAACgP,QAAQ,CAAC,GAAGj7B,MAAM,CAACkhC,MAAM,CAACyN,UAAU,CAAC;MAC7C;MACA,OAAOA,UAAU;IACnB;IACAwJ,gBAAgBA,CAACn1C,OAAO,EAAE;MACxB,IAAI,CAACA,OAAO,CAACusC,OAAO,EAAE;QACpB;MACF;MACA,OAAO,IAAI,CAAC5N,cAAc,KAAK,IAAI,CAACA,cAAc,GAAG3hC,MAAM,CAACsP,MAAM,CAAC,CAAC,CAAC,EAAEtM,OAAO,CAAC,CAAC;IAClF;IACAo1C,cAAcA,CAACxzB,IAAI,EAAEyzB,aAAa,EAAE;MAClC,OAAO,CAACA,aAAa,IAAI9F,kBAAkB,CAAC3tB,IAAI,CAAC,IAAI,IAAI,CAAC7U,KAAK,CAACuoC,mBAAmB;IACrF;IACAC,iBAAiBA,CAAC9uC,KAAK,EAAEmb,IAAI,EAAE;MAC7B,MAAM4zB,SAAS,GAAG,IAAI,CAACf,yBAAyB,CAAChuC,KAAK,EAAEmb,IAAI,CAAC;MAC7D,MAAM6zB,uBAAuB,GAAG,IAAI,CAAC9W,cAAc;MACnD,MAAM0W,aAAa,GAAG,IAAI,CAACF,gBAAgB,CAACK,SAAS,CAAC;MACtD,MAAMJ,cAAc,GAAG,IAAI,CAACA,cAAc,CAACxzB,IAAI,EAAEyzB,aAAa,CAAC,IAAKA,aAAa,KAAKI,uBAAwB;MAC9G,IAAI,CAACC,mBAAmB,CAACL,aAAa,EAAEzzB,IAAI,EAAE4zB,SAAS,CAAC;MACxD,OAAO;QAACH,aAAa;QAAED;MAAc,CAAC;IACxC;IACAO,aAAaA,CAACrxB,OAAO,EAAEllB,KAAK,EAAEqsC,UAAU,EAAE7pB,IAAI,EAAE;MAC9C,IAAI2tB,kBAAkB,CAAC3tB,IAAI,CAAC,EAAE;QAC5B5kB,MAAM,CAACsP,MAAM,CAACgY,OAAO,EAAEmnB,UAAU,CAAC;MACpC,CAAC,MAAM;QACL,IAAI,CAACuJ,kBAAkB,CAAC51C,KAAK,EAAEwiB,IAAI,CAAC,CAACyiB,MAAM,CAAC/f,OAAO,EAAEmnB,UAAU,CAAC;MAClE;IACF;IACAiK,mBAAmBA,CAACL,aAAa,EAAEzzB,IAAI,EAAEwqB,UAAU,EAAE;MACnD,IAAIiJ,aAAa,IAAI,CAAC9F,kBAAkB,CAAC3tB,IAAI,CAAC,EAAE;QAC9C,IAAI,CAACozB,kBAAkB,CAACn0C,SAAS,EAAE+gB,IAAI,CAAC,CAACyiB,MAAM,CAACgR,aAAa,EAAEjJ,UAAU,CAAC;MAC5E;IACF;IACAwJ,SAASA,CAACtxB,OAAO,EAAEllB,KAAK,EAAEwiB,IAAI,EAAEkpB,MAAM,EAAE;MACtCxmB,OAAO,CAACwmB,MAAM,GAAGA,MAAM;MACvB,MAAM9qC,OAAO,GAAG,IAAI,CAACukB,QAAQ,CAACnlB,KAAK,EAAE0rC,MAAM,CAAC;MAC5C,IAAI,CAACkK,kBAAkB,CAAC51C,KAAK,EAAEwiB,IAAI,EAAEkpB,MAAM,CAAC,CAACzG,MAAM,CAAC/f,OAAO,EAAE;QAC3DtkB,OAAO,EAAG,CAAC8qC,MAAM,IAAI,IAAI,CAACqK,gBAAgB,CAACn1C,OAAO,CAAC,IAAKA;MAC1D,CAAC,CAAC;IACJ;IACA61C,gBAAgBA,CAACvxB,OAAO,EAAEnlB,YAAY,EAAEC,KAAK,EAAE;MAC7C,IAAI,CAACw2C,SAAS,CAACtxB,OAAO,EAAEllB,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC;IACjD;IACA02C,aAAaA,CAACxxB,OAAO,EAAEnlB,YAAY,EAAEC,KAAK,EAAE;MAC1C,IAAI,CAACw2C,SAAS,CAACtxB,OAAO,EAAEllB,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC;IAChD;IACA22C,wBAAwBA,CAAA,EAAG;MACzB,MAAMzxB,OAAO,GAAG,IAAI,CAACka,WAAW,CAACqC,OAAO;MACxC,IAAIvc,OAAO,EAAE;QACX,IAAI,CAACsxB,SAAS,CAACtxB,OAAO,EAAEzjB,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC;MACrD;IACF;IACAm1C,qBAAqBA,CAAA,EAAG;MACtB,MAAM1xB,OAAO,GAAG,IAAI,CAACka,WAAW,CAACqC,OAAO;MACxC,IAAIvc,OAAO,EAAE;QACX,IAAI,CAACsxB,SAAS,CAACtxB,OAAO,EAAEzjB,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC;MACpD;IACF;IACA4xC,eAAeA,CAACH,gBAAgB,EAAE;MAChC,MAAM7pB,IAAI,GAAG,IAAI,CAAC2nB,KAAK;MACvB,MAAMrvB,QAAQ,GAAG,IAAI,CAACyd,WAAW,CAAC/V,IAAI;MACtC,KAAK,MAAM,CAACjgB,MAAM,EAAEytC,IAAI,EAAEC,IAAI,CAAC,IAAI,IAAI,CAACvF,SAAS,EAAE;QACjD,IAAI,CAACnoC,MAAM,CAAC,CAACytC,IAAI,EAAEC,IAAI,CAAC;MAC1B;MACA,IAAI,CAACvF,SAAS,GAAG,EAAE;MACnB,MAAMwF,OAAO,GAAGp1B,QAAQ,CAACniB,MAAM;MAC/B,MAAMw3C,OAAO,GAAG3tB,IAAI,CAAC7pB,MAAM;MAC3B,MAAMuM,KAAK,GAAGrI,IAAI,CAACoC,GAAG,CAACkxC,OAAO,EAAED,OAAO,CAAC;MACxC,IAAIhrC,KAAK,EAAE;QACT,IAAI,CAAConB,KAAK,CAAC,CAAC,EAAEpnB,KAAK,CAAC;MACtB;MACA,IAAIirC,OAAO,GAAGD,OAAO,EAAE;QACrB,IAAI,CAACE,eAAe,CAACF,OAAO,EAAEC,OAAO,GAAGD,OAAO,EAAE7D,gBAAgB,CAAC;MACpE,CAAC,MAAM,IAAI8D,OAAO,GAAGD,OAAO,EAAE;QAC5B,IAAI,CAACG,eAAe,CAACF,OAAO,EAAED,OAAO,GAAGC,OAAO,CAAC;MAClD;IACF;IACAC,eAAeA,CAAC5vC,KAAK,EAAE0E,KAAK,EAAEmnC,gBAAgB,GAAG,IAAI,EAAE;MACrD,MAAMvnC,IAAI,GAAG,IAAI,CAACyzB,WAAW;MAC7B,MAAM/V,IAAI,GAAG1d,IAAI,CAAC0d,IAAI;MACtB,MAAM/hB,GAAG,GAAGD,KAAK,GAAG0E,KAAK;MACzB,IAAI1M,CAAC;MACL,MAAM83C,IAAI,GAAI9kB,GAAG,IAAK;QACpBA,GAAG,CAAC7yB,MAAM,IAAIuM,KAAK;QACnB,KAAK1M,CAAC,GAAGgzB,GAAG,CAAC7yB,MAAM,GAAG,CAAC,EAAEH,CAAC,IAAIiI,GAAG,EAAEjI,CAAC,EAAE,EAAE;UACtCgzB,GAAG,CAAChzB,CAAC,CAAC,GAAGgzB,GAAG,CAAChzB,CAAC,GAAG0M,KAAK,CAAC;QACzB;MACF,CAAC;MACDorC,IAAI,CAAC9tB,IAAI,CAAC;MACV,KAAKhqB,CAAC,GAAGgI,KAAK,EAAEhI,CAAC,GAAGiI,GAAG,EAAE,EAAEjI,CAAC,EAAE;QAC5BgqB,IAAI,CAAChqB,CAAC,CAAC,GAAG,IAAI,IAAI,CAACk2C,eAAe,CAAC,CAAC;MACtC;MACA,IAAI,IAAI,CAACtiB,QAAQ,EAAE;QACjBkkB,IAAI,CAACxrC,IAAI,CAACO,OAAO,CAAC;MACpB;MACA,IAAI,CAACinB,KAAK,CAAC9rB,KAAK,EAAE0E,KAAK,CAAC;MACxB,IAAImnC,gBAAgB,EAAE;QACpB,IAAI,CAACkE,cAAc,CAAC/tB,IAAI,EAAEhiB,KAAK,EAAE0E,KAAK,EAAE,OAAO,CAAC;MAClD;IACF;IACAqrC,cAAcA,CAAClyB,OAAO,EAAE7d,KAAK,EAAE0E,KAAK,EAAEyW,IAAI,EAAE,CAAC;IAC7C00B,eAAeA,CAAC7vC,KAAK,EAAE0E,KAAK,EAAE;MAC5B,MAAMJ,IAAI,GAAG,IAAI,CAACyzB,WAAW;MAC7B,IAAI,IAAI,CAACnM,QAAQ,EAAE;QACjB,MAAMokB,OAAO,GAAG1rC,IAAI,CAACO,OAAO,CAACxC,MAAM,CAACrC,KAAK,EAAE0E,KAAK,CAAC;QACjD,IAAIJ,IAAI,CAAC+kC,QAAQ,EAAE;UACjBR,WAAW,CAACvkC,IAAI,EAAE0rC,OAAO,CAAC;QAC5B;MACF;MACA1rC,IAAI,CAAC0d,IAAI,CAAC3f,MAAM,CAACrC,KAAK,EAAE0E,KAAK,CAAC;IAChC;IACAurC,KAAKA,CAACv4C,IAAI,EAAE;MACV,IAAI,IAAI,CAACk0B,QAAQ,EAAE;QACjB,IAAI,CAACse,SAAS,CAAC7uC,IAAI,CAAC3D,IAAI,CAAC;MAC3B,CAAC,MAAM;QACL,MAAM,CAACqK,MAAM,EAAEytC,IAAI,EAAEC,IAAI,CAAC,GAAG/3C,IAAI;QACjC,IAAI,CAACqK,MAAM,CAAC,CAACytC,IAAI,EAAEC,IAAI,CAAC;MAC1B;MACA,IAAI,CAACnpC,KAAK,CAAC4pC,YAAY,CAAC70C,IAAI,CAAC,CAAC,IAAI,CAAC1C,KAAK,EAAE,GAAGjB,IAAI,CAAC,CAAC;IACrD;IACAy4C,WAAWA,CAAA,EAAG;MACZ,MAAMzrC,KAAK,GAAG0rC,SAAS,CAACj4C,MAAM;MAC9B,IAAI,CAAC83C,KAAK,CAAC,CAAC,iBAAiB,EAAE,IAAI,CAAC1F,UAAU,CAAC,CAAC,CAACvoB,IAAI,CAAC7pB,MAAM,GAAGuM,KAAK,EAAEA,KAAK,CAAC,CAAC;IAC/E;IACA2rC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACJ,KAAK,CAAC,CAAC,iBAAiB,EAAE,IAAI,CAAClY,WAAW,CAAC/V,IAAI,CAAC7pB,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IACtE;IACAm4C,YAAYA,CAAA,EAAG;MACb,IAAI,CAACL,KAAK,CAAC,CAAC,iBAAiB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACvC;IACAM,aAAaA,CAACvwC,KAAK,EAAE0E,KAAK,EAAE;MAC1B,IAAIA,KAAK,EAAE;QACT,IAAI,CAACurC,KAAK,CAAC,CAAC,iBAAiB,EAAEjwC,KAAK,EAAE0E,KAAK,CAAC,CAAC;MAC/C;MACA,MAAM8rC,QAAQ,GAAGJ,SAAS,CAACj4C,MAAM,GAAG,CAAC;MACrC,IAAIq4C,QAAQ,EAAE;QACZ,IAAI,CAACP,KAAK,CAAC,CAAC,iBAAiB,EAAEjwC,KAAK,EAAEwwC,QAAQ,CAAC,CAAC;MAClD;IACF;IACAC,cAAcA,CAAA,EAAG;MACf,IAAI,CAACR,KAAK,CAAC,CAAC,iBAAiB,EAAE,CAAC,EAAEG,SAAS,CAACj4C,MAAM,CAAC,CAAC;IACtD;EACF;EACAmxC,iBAAiB,CAAC1sB,QAAQ,GAAG,CAAC,CAAC;EAC/B0sB,iBAAiB,CAAC9yC,SAAS,CAACm1C,kBAAkB,GAAG,IAAI;EACrDrC,iBAAiB,CAAC9yC,SAAS,CAAC03C,eAAe,GAAG,IAAI;EAElD,MAAMwC,OAAO,CAAC;IACZ3qC,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACtL,CAAC,GAAGL,SAAS;MAClB,IAAI,CAACO,CAAC,GAAGP,SAAS;MAClB,IAAI,CAACiqC,MAAM,GAAG,KAAK;MACnB,IAAI,CAAC9qC,OAAO,GAAGa,SAAS;MACxB,IAAI,CAAC4rC,WAAW,GAAG5rC,SAAS;IAC9B;IACAu2C,eAAeA,CAAC5X,gBAAgB,EAAE;MAChC,MAAM;QAACt+B,CAAC;QAAEE;MAAC,CAAC,GAAG,IAAI,CAAC4+B,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAER,gBAAgB,CAAC;MAC1D,OAAO;QAACt+B,CAAC;QAAEE;MAAC,CAAC;IACf;IACAi2C,QAAQA,CAAA,EAAG;MACT,OAAO7yC,QAAQ,CAAC,IAAI,CAACtD,CAAC,CAAC,IAAIsD,QAAQ,CAAC,IAAI,CAACpD,CAAC,CAAC;IAC7C;IACA4+B,QAAQA,CAAChH,KAAK,EAAEse,KAAK,EAAE;MACrB,MAAMtqC,KAAK,GAAG,IAAI,CAACy/B,WAAW;MAC9B,IAAI,CAAC6K,KAAK,IAAI,CAACtqC,KAAK,EAAE;QACpB,OAAO,IAAI;MACb;MACA,MAAM2D,GAAG,GAAG,CAAC,CAAC;MACdqoB,KAAK,CAACzwB,OAAO,CAAC4mB,IAAI,IAAI;QACpBxe,GAAG,CAACwe,IAAI,CAAC,GAAGniB,KAAK,CAACmiB,IAAI,CAAC,IAAIniB,KAAK,CAACmiB,IAAI,CAAC,CAAC2b,MAAM,CAAC,CAAC,GAAG99B,KAAK,CAACmiB,IAAI,CAAC,CAACyb,GAAG,GAAG,IAAI,CAACzb,IAAI,CAAC;MAChF,CAAC,CAAC;MACF,OAAOxe,GAAG;IACZ;EACF;EACAwmC,OAAO,CAAC9zB,QAAQ,GAAG,CAAC,CAAC;EACrB8zB,OAAO,CAACI,aAAa,GAAG12C,SAAS;EAEjC,MAAM22C,UAAU,GAAG;IACjB1vC,MAAMA,CAAClL,KAAK,EAAE;MACZ,OAAOC,OAAO,CAACD,KAAK,CAAC,GAAGA,KAAK,GAAG,EAAE,GAAGA,KAAK;IAC5C,CAAC;IACD66C,OAAOA,CAACC,SAAS,EAAEt4C,KAAK,EAAEu4C,KAAK,EAAE;MAC/B,IAAID,SAAS,KAAK,CAAC,EAAE;QACnB,OAAO,GAAG;MACZ;MACA,MAAM1f,MAAM,GAAG,IAAI,CAACjrB,KAAK,CAAC/M,OAAO,CAACg4B,MAAM;MACxC,IAAI4f,QAAQ;MACZ,IAAIzjB,KAAK,GAAGujB,SAAS;MACrB,IAAIC,KAAK,CAAC/4C,MAAM,GAAG,CAAC,EAAE;QACpB,MAAMi5C,OAAO,GAAG/0C,IAAI,CAACqC,GAAG,CAACrC,IAAI,CAAC8B,GAAG,CAAC+yC,KAAK,CAAC,CAAC,CAAC,CAAC/6C,KAAK,CAAC,EAAEkG,IAAI,CAAC8B,GAAG,CAAC+yC,KAAK,CAACA,KAAK,CAAC/4C,MAAM,GAAG,CAAC,CAAC,CAAChC,KAAK,CAAC,CAAC;QAC3F,IAAIi7C,OAAO,GAAG,IAAI,IAAIA,OAAO,GAAG,KAAK,EAAE;UACrCD,QAAQ,GAAG,YAAY;QACzB;QACAzjB,KAAK,GAAG2jB,cAAc,CAACJ,SAAS,EAAEC,KAAK,CAAC;MAC1C;MACA,MAAMI,QAAQ,GAAGx0C,KAAK,CAACT,IAAI,CAAC8B,GAAG,CAACuvB,KAAK,CAAC,CAAC;MACvC,MAAM6jB,UAAU,GAAGl1C,IAAI,CAACqC,GAAG,CAACrC,IAAI,CAACoC,GAAG,CAAC,CAAC,CAAC,GAAGpC,IAAI,CAACkB,KAAK,CAAC+zC,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;MACvE,MAAM/3C,OAAO,GAAG;QAAC43C,QAAQ;QAAEK,qBAAqB,EAAED,UAAU;QAAEE,qBAAqB,EAAEF;MAAU,CAAC;MAChGh7C,MAAM,CAACsP,MAAM,CAACtM,OAAO,EAAE,IAAI,CAACA,OAAO,CAAC23C,KAAK,CAAClf,MAAM,CAAC;MACjD,OAAOF,YAAY,CAACmf,SAAS,EAAE1f,MAAM,EAAEh4B,OAAO,CAAC;IACjD,CAAC;IACDm4C,WAAWA,CAACT,SAAS,EAAEt4C,KAAK,EAAEu4C,KAAK,EAAE;MACnC,IAAID,SAAS,KAAK,CAAC,EAAE;QACnB,OAAO,GAAG;MACZ;MACA,MAAM1M,MAAM,GAAG0M,SAAS,GAAI50C,IAAI,CAACiB,GAAG,CAAC,EAAE,EAAEjB,IAAI,CAACkB,KAAK,CAACT,KAAK,CAACm0C,SAAS,CAAC,CAAC,CAAE;MACvE,IAAI1M,MAAM,KAAK,CAAC,IAAIA,MAAM,KAAK,CAAC,IAAIA,MAAM,KAAK,CAAC,EAAE;QAChD,OAAOwM,UAAU,CAACC,OAAO,CAACt6C,IAAI,CAAC,IAAI,EAAEu6C,SAAS,EAAEt4C,KAAK,EAAEu4C,KAAK,CAAC;MAC/D;MACA,OAAO,EAAE;IACX;EACF,CAAC;EACD,SAASG,cAAcA,CAACJ,SAAS,EAAEC,KAAK,EAAE;IACxC,IAAIxjB,KAAK,GAAGwjB,KAAK,CAAC/4C,MAAM,GAAG,CAAC,GAAG+4C,KAAK,CAAC,CAAC,CAAC,CAAC/6C,KAAK,GAAG+6C,KAAK,CAAC,CAAC,CAAC,CAAC/6C,KAAK,GAAG+6C,KAAK,CAAC,CAAC,CAAC,CAAC/6C,KAAK,GAAG+6C,KAAK,CAAC,CAAC,CAAC,CAAC/6C,KAAK;IAChG,IAAIkG,IAAI,CAAC8B,GAAG,CAACuvB,KAAK,CAAC,IAAI,CAAC,IAAIujB,SAAS,KAAK50C,IAAI,CAACkB,KAAK,CAAC0zC,SAAS,CAAC,EAAE;MAC/DvjB,KAAK,GAAGujB,SAAS,GAAG50C,IAAI,CAACkB,KAAK,CAAC0zC,SAAS,CAAC;IAC3C;IACA,OAAOvjB,KAAK;EACd;EACA,IAAIikB,KAAK,GAAG;IAACZ;EAAU,CAAC;EAExBn0B,QAAQ,CAACpa,GAAG,CAAC,OAAO,EAAE;IACpBs8B,OAAO,EAAE,IAAI;IACb8S,MAAM,EAAE,KAAK;IACb75C,OAAO,EAAE,KAAK;IACdq7B,WAAW,EAAE,KAAK;IAClB4B,MAAM,EAAE,OAAO;IACf7B,KAAK,EAAE,CAAC;IACR0e,IAAI,EAAE;MACJ/S,OAAO,EAAE,IAAI;MACbzY,SAAS,EAAE,CAAC;MACZyrB,UAAU,EAAE,IAAI;MAChBC,eAAe,EAAE,IAAI;MACrBC,SAAS,EAAE,IAAI;MACfC,UAAU,EAAE,CAAC;MACbC,SAAS,EAAEA,CAAC3I,IAAI,EAAEhwC,OAAO,KAAKA,OAAO,CAAC8sB,SAAS;MAC/C8rB,SAAS,EAAEA,CAAC5I,IAAI,EAAEhwC,OAAO,KAAKA,OAAO,CAAC6e,KAAK;MAC3Cw5B,MAAM,EAAE,KAAK;MACbva,UAAU,EAAE,EAAE;MACdC,gBAAgB,EAAE,GAAG;MACrB5S,WAAW,EAAE;IACf,CAAC;IACD0tB,KAAK,EAAE;MACLtT,OAAO,EAAE,KAAK;MACdjZ,IAAI,EAAE,EAAE;MACRmY,OAAO,EAAE;QACPxf,GAAG,EAAE,CAAC;QACNC,MAAM,EAAE;MACV;IACF,CAAC;IACDyyB,KAAK,EAAE;MACLmB,WAAW,EAAE,CAAC;MACdC,WAAW,EAAE,EAAE;MACfC,MAAM,EAAE,KAAK;MACbC,eAAe,EAAE,CAAC;MAClBC,eAAe,EAAE,EAAE;MACnBzU,OAAO,EAAE,CAAC;MACVc,OAAO,EAAE,IAAI;MACb4T,QAAQ,EAAE,IAAI;MACdC,eAAe,EAAE,CAAC;MAClBC,WAAW,EAAE,CAAC;MACdp7C,QAAQ,EAAEm6C,KAAK,CAACZ,UAAU,CAAC1vC,MAAM;MACjCwxC,KAAK,EAAE,CAAC,CAAC;MACTC,KAAK,EAAE,CAAC,CAAC;MACThvC,KAAK,EAAE,QAAQ;MACfivC,UAAU,EAAE,MAAM;MAClBC,iBAAiB,EAAE,KAAK;MACxBC,aAAa,EAAE,2BAA2B;MAC1CC,eAAe,EAAE;IACnB;EACF,CAAC,CAAC;EACFt2B,QAAQ,CAACV,KAAK,CAAC,aAAa,EAAE,OAAO,EAAE,EAAE,EAAE,OAAO,CAAC;EACnDU,QAAQ,CAACV,KAAK,CAAC,YAAY,EAAE,OAAO,EAAE,EAAE,EAAE,aAAa,CAAC;EACxDU,QAAQ,CAACV,KAAK,CAAC,YAAY,EAAE,aAAa,EAAE,EAAE,EAAE,aAAa,CAAC;EAC9DU,QAAQ,CAACV,KAAK,CAAC,aAAa,EAAE,OAAO,EAAE,EAAE,EAAE,OAAO,CAAC;EACnDU,QAAQ,CAACZ,QAAQ,CAAC,OAAO,EAAE;IACzBgB,SAAS,EAAE,KAAK;IAChBH,WAAW,EAAGV,IAAI,IAAK,CAACA,IAAI,CAACW,UAAU,CAAC,QAAQ,CAAC,IAAI,CAACX,IAAI,CAACW,UAAU,CAAC,OAAO,CAAC,IAAIX,IAAI,KAAK,UAAU,IAAIA,IAAI,KAAK,QAAQ;IAC1HY,UAAU,EAAGZ,IAAI,IAAKA,IAAI,KAAK,YAAY,IAAIA,IAAI,KAAK;EAC1D,CAAC,CAAC;EACFS,QAAQ,CAACZ,QAAQ,CAAC,QAAQ,EAAE;IAC1BgB,SAAS,EAAE;EACb,CAAC,CAAC;EACFJ,QAAQ,CAACZ,QAAQ,CAAC,aAAa,EAAE;IAC/Ba,WAAW,EAAGV,IAAI,IAAKA,IAAI,KAAK,iBAAiB,IAAIA,IAAI,KAAK,UAAU;IACxEY,UAAU,EAAGZ,IAAI,IAAKA,IAAI,KAAK;EACjC,CAAC,CAAC;EAEF,SAASu2B,QAAQA,CAAC92B,KAAK,EAAEs1B,KAAK,EAAE;IAC9B,MAAMiC,QAAQ,GAAGv3B,KAAK,CAACriB,OAAO,CAAC23C,KAAK;IACpC,MAAMkC,UAAU,GAAGD,QAAQ,CAACE,aAAa,IAAIC,iBAAiB,CAAC13B,KAAK,CAAC;IACrE,MAAM23B,YAAY,GAAGJ,QAAQ,CAACL,KAAK,CAACU,OAAO,GAAGC,eAAe,CAACvC,KAAK,CAAC,GAAG,EAAE;IACzE,MAAMwC,eAAe,GAAGH,YAAY,CAACp7C,MAAM;IAC3C,MAAMw7C,KAAK,GAAGJ,YAAY,CAAC,CAAC,CAAC;IAC7B,MAAMryC,IAAI,GAAGqyC,YAAY,CAACG,eAAe,GAAG,CAAC,CAAC;IAC9C,MAAME,QAAQ,GAAG,EAAE;IACnB,IAAIF,eAAe,GAAGN,UAAU,EAAE;MAChCS,UAAU,CAAC3C,KAAK,EAAE0C,QAAQ,EAAEL,YAAY,EAAEG,eAAe,GAAGN,UAAU,CAAC;MACvE,OAAOQ,QAAQ;IACjB;IACA,MAAME,OAAO,GAAGC,gBAAgB,CAACR,YAAY,EAAErC,KAAK,EAAEkC,UAAU,CAAC;IACjE,IAAIM,eAAe,GAAG,CAAC,EAAE;MACvB,IAAI17C,CAAC,EAAEO,IAAI;MACX,MAAMy7C,eAAe,GAAGN,eAAe,GAAG,CAAC,GAAGr3C,IAAI,CAACc,KAAK,CAAC,CAAC+D,IAAI,GAAGyyC,KAAK,KAAKD,eAAe,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI;MACvGznB,IAAI,CAACilB,KAAK,EAAE0C,QAAQ,EAAEE,OAAO,EAAE59C,aAAa,CAAC89C,eAAe,CAAC,GAAG,CAAC,GAAGL,KAAK,GAAGK,eAAe,EAAEL,KAAK,CAAC;MACnG,KAAK37C,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAGm7C,eAAe,GAAG,CAAC,EAAE17C,CAAC,GAAGO,IAAI,EAAEP,CAAC,EAAE,EAAE;QACrDi0B,IAAI,CAACilB,KAAK,EAAE0C,QAAQ,EAAEE,OAAO,EAAEP,YAAY,CAACv7C,CAAC,CAAC,EAAEu7C,YAAY,CAACv7C,CAAC,GAAG,CAAC,CAAC,CAAC;MACtE;MACAi0B,IAAI,CAACilB,KAAK,EAAE0C,QAAQ,EAAEE,OAAO,EAAE5yC,IAAI,EAAEhL,aAAa,CAAC89C,eAAe,CAAC,GAAG9C,KAAK,CAAC/4C,MAAM,GAAG+I,IAAI,GAAG8yC,eAAe,CAAC;MAC5G,OAAOJ,QAAQ;IACjB;IACA3nB,IAAI,CAACilB,KAAK,EAAE0C,QAAQ,EAAEE,OAAO,CAAC;IAC9B,OAAOF,QAAQ;EACjB;EACA,SAASN,iBAAiBA,CAAC13B,KAAK,EAAE;IAChC,MAAMg2B,MAAM,GAAGh2B,KAAK,CAACriB,OAAO,CAACq4C,MAAM;IACnC,MAAMK,UAAU,GAAGr2B,KAAK,CAACq4B,SAAS,CAAC,CAAC;IACpC,MAAMC,QAAQ,GAAGt4B,KAAK,CAACu4B,OAAO,GAAGlC,UAAU,IAAIL,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;IAC9D,MAAMwC,QAAQ,GAAGx4B,KAAK,CAACy4B,UAAU,GAAGpC,UAAU;IAC9C,OAAO51C,IAAI,CAACkB,KAAK,CAAClB,IAAI,CAACoC,GAAG,CAACy1C,QAAQ,EAAEE,QAAQ,CAAC,CAAC;EACjD;EACA,SAASL,gBAAgBA,CAACR,YAAY,EAAErC,KAAK,EAAEkC,UAAU,EAAE;IACzD,MAAMkB,gBAAgB,GAAGC,cAAc,CAAChB,YAAY,CAAC;IACrD,MAAMO,OAAO,GAAG5C,KAAK,CAAC/4C,MAAM,GAAGi7C,UAAU;IACzC,IAAI,CAACkB,gBAAgB,EAAE;MACrB,OAAOj4C,IAAI,CAACqC,GAAG,CAACo1C,OAAO,EAAE,CAAC,CAAC;IAC7B;IACA,MAAMU,OAAO,GAAG92C,UAAU,CAAC42C,gBAAgB,CAAC;IAC5C,KAAK,IAAIt8C,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAGi8C,OAAO,CAACr8C,MAAM,GAAG,CAAC,EAAEH,CAAC,GAAGO,IAAI,EAAEP,CAAC,EAAE,EAAE;MACxD,MAAM6jC,MAAM,GAAG2Y,OAAO,CAACx8C,CAAC,CAAC;MACzB,IAAI6jC,MAAM,GAAGiY,OAAO,EAAE;QACpB,OAAOjY,MAAM;MACf;IACF;IACA,OAAOx/B,IAAI,CAACqC,GAAG,CAACo1C,OAAO,EAAE,CAAC,CAAC;EAC7B;EACA,SAASL,eAAeA,CAACvC,KAAK,EAAE;IAC9B,MAAMvzC,MAAM,GAAG,EAAE;IACjB,IAAI3F,CAAC,EAAEO,IAAI;IACX,KAAKP,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAG24C,KAAK,CAAC/4C,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAEP,CAAC,EAAE,EAAE;MAC9C,IAAIk5C,KAAK,CAACl5C,CAAC,CAAC,CAAC86C,KAAK,EAAE;QAClBn1C,MAAM,CAACtC,IAAI,CAACrD,CAAC,CAAC;MAChB;IACF;IACA,OAAO2F,MAAM;EACf;EACA,SAASk2C,UAAUA,CAAC3C,KAAK,EAAE0C,QAAQ,EAAEL,YAAY,EAAEO,OAAO,EAAE;IAC1D,IAAIpvC,KAAK,GAAG,CAAC;IACb,IAAI6nB,IAAI,GAAGgnB,YAAY,CAAC,CAAC,CAAC;IAC1B,IAAIv7C,CAAC;IACL87C,OAAO,GAAGz3C,IAAI,CAACo4C,IAAI,CAACX,OAAO,CAAC;IAC5B,KAAK97C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGk5C,KAAK,CAAC/4C,MAAM,EAAEH,CAAC,EAAE,EAAE;MACjC,IAAIA,CAAC,KAAKu0B,IAAI,EAAE;QACdqnB,QAAQ,CAACv4C,IAAI,CAAC61C,KAAK,CAACl5C,CAAC,CAAC,CAAC;QACvB0M,KAAK,EAAE;QACP6nB,IAAI,GAAGgnB,YAAY,CAAC7uC,KAAK,GAAGovC,OAAO,CAAC;MACtC;IACF;EACF;EACA,SAAS7nB,IAAIA,CAACilB,KAAK,EAAE0C,QAAQ,EAAEE,OAAO,EAAEY,UAAU,EAAEC,QAAQ,EAAE;IAC5D,MAAM30C,KAAK,GAAG9I,cAAc,CAACw9C,UAAU,EAAE,CAAC,CAAC;IAC3C,MAAMz0C,GAAG,GAAG5D,IAAI,CAACoC,GAAG,CAACvH,cAAc,CAACy9C,QAAQ,EAAEzD,KAAK,CAAC/4C,MAAM,CAAC,EAAE+4C,KAAK,CAAC/4C,MAAM,CAAC;IAC1E,IAAIuM,KAAK,GAAG,CAAC;IACb,IAAIvM,MAAM,EAAEH,CAAC,EAAEu0B,IAAI;IACnBunB,OAAO,GAAGz3C,IAAI,CAACo4C,IAAI,CAACX,OAAO,CAAC;IAC5B,IAAIa,QAAQ,EAAE;MACZx8C,MAAM,GAAGw8C,QAAQ,GAAGD,UAAU;MAC9BZ,OAAO,GAAG37C,MAAM,GAAGkE,IAAI,CAACkB,KAAK,CAACpF,MAAM,GAAG27C,OAAO,CAAC;IACjD;IACAvnB,IAAI,GAAGvsB,KAAK;IACZ,OAAOusB,IAAI,GAAG,CAAC,EAAE;MACf7nB,KAAK,EAAE;MACP6nB,IAAI,GAAGlwB,IAAI,CAACc,KAAK,CAAC6C,KAAK,GAAG0E,KAAK,GAAGovC,OAAO,CAAC;IAC5C;IACA,KAAK97C,CAAC,GAAGqE,IAAI,CAACqC,GAAG,CAACsB,KAAK,EAAE,CAAC,CAAC,EAAEhI,CAAC,GAAGiI,GAAG,EAAEjI,CAAC,EAAE,EAAE;MACzC,IAAIA,CAAC,KAAKu0B,IAAI,EAAE;QACdqnB,QAAQ,CAACv4C,IAAI,CAAC61C,KAAK,CAACl5C,CAAC,CAAC,CAAC;QACvB0M,KAAK,EAAE;QACP6nB,IAAI,GAAGlwB,IAAI,CAACc,KAAK,CAAC6C,KAAK,GAAG0E,KAAK,GAAGovC,OAAO,CAAC;MAC5C;IACF;EACF;EACA,SAASS,cAAcA,CAACvpB,GAAG,EAAE;IAC3B,MAAM/yB,GAAG,GAAG+yB,GAAG,CAAC7yB,MAAM;IACtB,IAAIH,CAAC,EAAE48C,IAAI;IACX,IAAI38C,GAAG,GAAG,CAAC,EAAE;MACX,OAAO,KAAK;IACd;IACA,KAAK28C,IAAI,GAAG5pB,GAAG,CAAC,CAAC,CAAC,EAAEhzB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,GAAG,EAAE,EAAED,CAAC,EAAE;MACvC,IAAIgzB,GAAG,CAAChzB,CAAC,CAAC,GAAGgzB,GAAG,CAAChzB,CAAC,GAAG,CAAC,CAAC,KAAK48C,IAAI,EAAE;QAChC,OAAO,KAAK;MACd;IACF;IACA,OAAOA,IAAI;EACb;EAEA,MAAMC,YAAY,GAAI/wC,KAAK,IAAKA,KAAK,KAAK,MAAM,GAAG,OAAO,GAAGA,KAAK,KAAK,OAAO,GAAG,MAAM,GAAGA,KAAK;EAC/F,MAAMgxC,cAAc,GAAGA,CAACl5B,KAAK,EAAEm5B,IAAI,EAAEnD,MAAM,KAAKmD,IAAI,KAAK,KAAK,IAAIA,IAAI,KAAK,MAAM,GAAGn5B,KAAK,CAACm5B,IAAI,CAAC,GAAGnD,MAAM,GAAGh2B,KAAK,CAACm5B,IAAI,CAAC,GAAGnD,MAAM;EAC/H,SAASoD,MAAMA,CAAChqB,GAAG,EAAEiqB,QAAQ,EAAE;IAC7B,MAAMt3C,MAAM,GAAG,EAAE;IACjB,MAAMu3C,SAAS,GAAGlqB,GAAG,CAAC7yB,MAAM,GAAG88C,QAAQ;IACvC,MAAMh9C,GAAG,GAAG+yB,GAAG,CAAC7yB,MAAM;IACtB,IAAIH,CAAC,GAAG,CAAC;IACT,OAAOA,CAAC,GAAGC,GAAG,EAAED,CAAC,IAAIk9C,SAAS,EAAE;MAC9Bv3C,MAAM,CAACtC,IAAI,CAAC2vB,GAAG,CAAC3uB,IAAI,CAACkB,KAAK,CAACvF,CAAC,CAAC,CAAC,CAAC;IACjC;IACA,OAAO2F,MAAM;EACf;EACA,SAASw3C,mBAAmBA,CAACv5B,KAAK,EAAEjjB,KAAK,EAAEy8C,eAAe,EAAE;IAC1D,MAAMj9C,MAAM,GAAGyjB,KAAK,CAACs1B,KAAK,CAAC/4C,MAAM;IACjC,MAAMk9C,UAAU,GAAGh5C,IAAI,CAACoC,GAAG,CAAC9F,KAAK,EAAER,MAAM,GAAG,CAAC,CAAC;IAC9C,MAAM6H,KAAK,GAAG4b,KAAK,CAAC05B,WAAW;IAC/B,MAAMr1C,GAAG,GAAG2b,KAAK,CAAC25B,SAAS;IAC3B,MAAMr3C,OAAO,GAAG,IAAI;IACpB,IAAIs3C,SAAS,GAAG55B,KAAK,CAAC65B,eAAe,CAACJ,UAAU,CAAC;IACjD,IAAIzD,MAAM;IACV,IAAIwD,eAAe,EAAE;MACnB,IAAIj9C,MAAM,KAAK,CAAC,EAAE;QAChBy5C,MAAM,GAAGv1C,IAAI,CAACqC,GAAG,CAAC82C,SAAS,GAAGx1C,KAAK,EAAEC,GAAG,GAAGu1C,SAAS,CAAC;MACvD,CAAC,MAAM,IAAI78C,KAAK,KAAK,CAAC,EAAE;QACtBi5C,MAAM,GAAG,CAACh2B,KAAK,CAAC65B,eAAe,CAAC,CAAC,CAAC,GAAGD,SAAS,IAAI,CAAC;MACrD,CAAC,MAAM;QACL5D,MAAM,GAAG,CAAC4D,SAAS,GAAG55B,KAAK,CAAC65B,eAAe,CAACJ,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC;MAClE;MACAG,SAAS,IAAIH,UAAU,GAAG18C,KAAK,GAAGi5C,MAAM,GAAG,CAACA,MAAM;MAClD,IAAI4D,SAAS,GAAGx1C,KAAK,GAAG9B,OAAO,IAAIs3C,SAAS,GAAGv1C,GAAG,GAAG/B,OAAO,EAAE;QAC5D;MACF;IACF;IACA,OAAOs3C,SAAS;EAClB;EACA,SAAS/yB,cAAcA,CAACizB,MAAM,EAAEv9C,MAAM,EAAE;IACtCN,IAAI,CAAC69C,MAAM,EAAGlzB,KAAK,IAAK;MACtB,MAAMP,EAAE,GAAGO,KAAK,CAACP,EAAE;MACnB,MAAMc,KAAK,GAAGd,EAAE,CAAC9pB,MAAM,GAAG,CAAC;MAC3B,IAAIH,CAAC;MACL,IAAI+qB,KAAK,GAAG5qB,MAAM,EAAE;QAClB,KAAKH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+qB,KAAK,EAAE,EAAE/qB,CAAC,EAAE;UAC1B,OAAOwqB,KAAK,CAACR,IAAI,CAACC,EAAE,CAACjqB,CAAC,CAAC,CAAC;QAC1B;QACAiqB,EAAE,CAAC5f,MAAM,CAAC,CAAC,EAAE0gB,KAAK,CAAC;MACrB;IACF,CAAC,CAAC;EACJ;EACA,SAAS4yB,iBAAiBA,CAACp8C,OAAO,EAAE;IAClC,OAAOA,OAAO,CAACy4C,SAAS,GAAGz4C,OAAO,CAAC04C,UAAU,GAAG,CAAC;EACnD;EACA,SAAS2D,cAAcA,CAACr8C,OAAO,EAAEwuB,QAAQ,EAAE;IACzC,IAAI,CAACxuB,OAAO,CAACulC,OAAO,EAAE;MACpB,OAAO,CAAC;IACV;IACA,MAAMtkB,IAAI,GAAGqY,MAAM,CAACt5B,OAAO,CAACihB,IAAI,EAAEuN,QAAQ,CAAC;IAC3C,MAAMiW,OAAO,GAAGpL,SAAS,CAACr5B,OAAO,CAACykC,OAAO,CAAC;IAC1C,MAAMjY,KAAK,GAAG3vB,OAAO,CAACmD,OAAO,CAACssB,IAAI,CAAC,GAAGtsB,OAAO,CAACssB,IAAI,CAAC1tB,MAAM,GAAG,CAAC;IAC7D,OAAQ4tB,KAAK,GAAGvL,IAAI,CAACG,UAAU,GAAIqjB,OAAO,CAACzf,MAAM;EACnD;EACA,SAASs3B,kBAAkBA,CAACx4B,MAAM,EAAEzB,KAAK,EAAE;IACzC,OAAO2X,aAAa,CAAClW,MAAM,EAAE;MAC3BzB,KAAK;MACLtlB,IAAI,EAAE;IACR,CAAC,CAAC;EACJ;EACA,SAASw/C,iBAAiBA,CAACz4B,MAAM,EAAE1kB,KAAK,EAAE4O,IAAI,EAAE;IAC9C,OAAOgsB,aAAa,CAAClW,MAAM,EAAE;MAC3B9V,IAAI;MACJ5O,KAAK;MACLrC,IAAI,EAAE;IACR,CAAC,CAAC;EACJ;EACA,SAASy/C,UAAUA,CAACjyC,KAAK,EAAEu0B,QAAQ,EAAEtgC,OAAO,EAAE;IAC5C,IAAImS,GAAG,GAAGrG,kBAAkB,CAACC,KAAK,CAAC;IACnC,IAAK/L,OAAO,IAAIsgC,QAAQ,KAAK,OAAO,IAAM,CAACtgC,OAAO,IAAIsgC,QAAQ,KAAK,OAAQ,EAAE;MAC3EnuB,GAAG,GAAG2qC,YAAY,CAAC3qC,GAAG,CAAC;IACzB;IACA,OAAOA,GAAG;EACZ;EACA,SAAS8rC,SAASA,CAACp6B,KAAK,EAAEg2B,MAAM,EAAEvZ,QAAQ,EAAEv0B,KAAK,EAAE;IACjD,MAAM;MAAC0a,GAAG;MAAEva,IAAI;MAAEwa,MAAM;MAAEva,KAAK;MAAEoC;IAAK,CAAC,GAAGsV,KAAK;IAC/C,MAAM;MAACsd,SAAS;MAAErd;IAAM,CAAC,GAAGvV,KAAK;IACjC,IAAIqd,QAAQ,GAAG,CAAC;IAChB,IAAI3D,QAAQ,EAAEi2B,MAAM,EAAEC,MAAM;IAC5B,MAAM33B,MAAM,GAAGE,MAAM,GAAGD,GAAG;IAC3B,MAAMF,KAAK,GAAGpa,KAAK,GAAGD,IAAI;IAC1B,IAAI2X,KAAK,CAACqf,YAAY,CAAC,CAAC,EAAE;MACxBgb,MAAM,GAAGlyC,cAAc,CAACD,KAAK,EAAEG,IAAI,EAAEC,KAAK,CAAC;MAC3C,IAAItN,QAAQ,CAACyhC,QAAQ,CAAC,EAAE;QACtB,MAAM8d,cAAc,GAAG5/C,MAAM,CAAC2B,IAAI,CAACmgC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC/C,MAAMliC,KAAK,GAAGkiC,QAAQ,CAAC8d,cAAc,CAAC;QACtCD,MAAM,GAAGr6B,MAAM,CAACs6B,cAAc,CAAC,CAACjxC,gBAAgB,CAAC/O,KAAK,CAAC,GAAGooB,MAAM,GAAGqzB,MAAM;MAC3E,CAAC,MAAM,IAAIvZ,QAAQ,KAAK,QAAQ,EAAE;QAChC6d,MAAM,GAAG,CAAChd,SAAS,CAACza,MAAM,GAAGya,SAAS,CAAC1a,GAAG,IAAI,CAAC,GAAGD,MAAM,GAAGqzB,MAAM;MACnE,CAAC,MAAM;QACLsE,MAAM,GAAGpB,cAAc,CAACl5B,KAAK,EAAEyc,QAAQ,EAAEuZ,MAAM,CAAC;MAClD;MACA5xB,QAAQ,GAAG9b,KAAK,GAAGD,IAAI;IACzB,CAAC,MAAM;MACL,IAAIrN,QAAQ,CAACyhC,QAAQ,CAAC,EAAE;QACtB,MAAM8d,cAAc,GAAG5/C,MAAM,CAAC2B,IAAI,CAACmgC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC/C,MAAMliC,KAAK,GAAGkiC,QAAQ,CAAC8d,cAAc,CAAC;QACtCF,MAAM,GAAGp6B,MAAM,CAACs6B,cAAc,CAAC,CAACjxC,gBAAgB,CAAC/O,KAAK,CAAC,GAAGmoB,KAAK,GAAGszB,MAAM;MAC1E,CAAC,MAAM,IAAIvZ,QAAQ,KAAK,QAAQ,EAAE;QAChC4d,MAAM,GAAG,CAAC/c,SAAS,CAACj1B,IAAI,GAAGi1B,SAAS,CAACh1B,KAAK,IAAI,CAAC,GAAGoa,KAAK,GAAGszB,MAAM;MAClE,CAAC,MAAM;QACLqE,MAAM,GAAGnB,cAAc,CAACl5B,KAAK,EAAEyc,QAAQ,EAAEuZ,MAAM,CAAC;MAClD;MACAsE,MAAM,GAAGnyC,cAAc,CAACD,KAAK,EAAE2a,MAAM,EAAED,GAAG,CAAC;MAC3CmF,QAAQ,GAAG0U,QAAQ,KAAK,MAAM,GAAG,CAAC17B,OAAO,GAAGA,OAAO;IACrD;IACA,OAAO;MAACs5C,MAAM;MAAEC,MAAM;MAAEl2B,QAAQ;MAAE2D;IAAQ,CAAC;EAC7C;EACA,MAAMyyB,KAAK,SAAS1F,OAAO,CAAC;IAC1B3qC,WAAWA,CAAC29B,GAAG,EAAE;MACf,KAAK,CAAC,CAAC;MACP,IAAI,CAACztC,EAAE,GAAGytC,GAAG,CAACztC,EAAE;MAChB,IAAI,CAACK,IAAI,GAAGotC,GAAG,CAACptC,IAAI;MACpB,IAAI,CAACiD,OAAO,GAAGa,SAAS;MACxB,IAAI,CAAC0gB,GAAG,GAAG4oB,GAAG,CAAC5oB,GAAG;MAClB,IAAI,CAACxU,KAAK,GAAGo9B,GAAG,CAACp9B,KAAK;MACtB,IAAI,CAACkY,GAAG,GAAGpkB,SAAS;MACpB,IAAI,CAACqkB,MAAM,GAAGrkB,SAAS;MACvB,IAAI,CAAC6J,IAAI,GAAG7J,SAAS;MACrB,IAAI,CAAC8J,KAAK,GAAG9J,SAAS;MACtB,IAAI,CAACkkB,KAAK,GAAGlkB,SAAS;MACtB,IAAI,CAACmkB,MAAM,GAAGnkB,SAAS;MACvB,IAAI,CAACi8C,QAAQ,GAAG;QACdpyC,IAAI,EAAE,CAAC;QACPC,KAAK,EAAE,CAAC;QACRsa,GAAG,EAAE,CAAC;QACNC,MAAM,EAAE;MACV,CAAC;MACD,IAAI,CAACuB,QAAQ,GAAG5lB,SAAS;MACzB,IAAI,CAAC6lB,SAAS,GAAG7lB,SAAS;MAC1B,IAAI,CAACk8C,UAAU,GAAGl8C,SAAS;MAC3B,IAAI,CAACm8C,aAAa,GAAGn8C,SAAS;MAC9B,IAAI,CAACo8C,WAAW,GAAGp8C,SAAS;MAC5B,IAAI,CAACq8C,YAAY,GAAGr8C,SAAS;MAC7B,IAAI,CAAC0K,IAAI,GAAG1K,SAAS;MACrB,IAAI,CAACs8C,aAAa,GAAGt8C,SAAS;MAC9B,IAAI,CAACqE,GAAG,GAAGrE,SAAS;MACpB,IAAI,CAACsE,GAAG,GAAGtE,SAAS;MACpB,IAAI,CAACu8C,MAAM,GAAGv8C,SAAS;MACvB,IAAI,CAAC82C,KAAK,GAAG,EAAE;MACf,IAAI,CAAC0F,cAAc,GAAG,IAAI;MAC1B,IAAI,CAACC,WAAW,GAAG,IAAI;MACvB,IAAI,CAACC,WAAW,GAAG,IAAI;MACvB,IAAI,CAAC3C,OAAO,GAAG,CAAC;MAChB,IAAI,CAACE,UAAU,GAAG,CAAC;MACnB,IAAI,CAAC0C,iBAAiB,GAAG,CAAC,CAAC;MAC3B,IAAI,CAACzB,WAAW,GAAGl7C,SAAS;MAC5B,IAAI,CAACm7C,SAAS,GAAGn7C,SAAS;MAC1B,IAAI,CAAC69B,cAAc,GAAG,KAAK;MAC3B,IAAI,CAAC+e,QAAQ,GAAG58C,SAAS;MACzB,IAAI,CAAC68C,QAAQ,GAAG78C,SAAS;MACzB,IAAI,CAAC88C,aAAa,GAAG98C,SAAS;MAC9B,IAAI,CAAC+8C,aAAa,GAAG/8C,SAAS;MAC9B,IAAI,CAACg9C,YAAY,GAAG,CAAC;MACrB,IAAI,CAACC,YAAY,GAAG,CAAC;MACrB,IAAI,CAACC,MAAM,GAAG,CAAC,CAAC;MAChB,IAAI,CAACC,iBAAiB,GAAG,KAAK;MAC9B,IAAI,CAACtN,QAAQ,GAAG7vC,SAAS;IAC3B;IACAo9C,IAAIA,CAACj+C,OAAO,EAAE;MACZ,IAAI,CAACA,OAAO,GAAGA,OAAO,CAACuwB,UAAU,CAAC,IAAI,CAAC1G,UAAU,CAAC,CAAC,CAAC;MACpD,IAAI,CAACte,IAAI,GAAGvL,OAAO,CAACuL,IAAI;MACxB,IAAI,CAACmyC,QAAQ,GAAG,IAAI,CAACnrB,KAAK,CAACvyB,OAAO,CAACkF,GAAG,CAAC;MACvC,IAAI,CAACu4C,QAAQ,GAAG,IAAI,CAAClrB,KAAK,CAACvyB,OAAO,CAACmF,GAAG,CAAC;MACvC,IAAI,CAACy4C,aAAa,GAAG,IAAI,CAACrrB,KAAK,CAACvyB,OAAO,CAACk+C,YAAY,CAAC;MACrD,IAAI,CAACP,aAAa,GAAG,IAAI,CAACprB,KAAK,CAACvyB,OAAO,CAACm+C,YAAY,CAAC;IACvD;IACA5rB,KAAKA,CAAC8c,GAAG,EAAEjwC,KAAK,EAAE;MAChB,OAAOiwC,GAAG;IACZ;IACA3jC,aAAaA,CAAA,EAAG;MACd,IAAI;QAACgyC,QAAQ;QAAED,QAAQ;QAAEG,aAAa;QAAED;MAAa,CAAC,GAAG,IAAI;MAC7DD,QAAQ,GAAGjgD,eAAe,CAACigD,QAAQ,EAAEngD,MAAM,CAAC2F,iBAAiB,CAAC;MAC9Du6C,QAAQ,GAAGhgD,eAAe,CAACggD,QAAQ,EAAElgD,MAAM,CAACywC,iBAAiB,CAAC;MAC9D4P,aAAa,GAAGngD,eAAe,CAACmgD,aAAa,EAAErgD,MAAM,CAAC2F,iBAAiB,CAAC;MACxEy6C,aAAa,GAAGlgD,eAAe,CAACkgD,aAAa,EAAEpgD,MAAM,CAACywC,iBAAiB,CAAC;MACxE,OAAO;QACL9oC,GAAG,EAAEzH,eAAe,CAACigD,QAAQ,EAAEE,aAAa,CAAC;QAC7Cz4C,GAAG,EAAE1H,eAAe,CAACggD,QAAQ,EAAEE,aAAa,CAAC;QAC7CnyC,UAAU,EAAElO,cAAc,CAACogD,QAAQ,CAAC;QACpCjyC,UAAU,EAAEnO,cAAc,CAACmgD,QAAQ;MACrC,CAAC;IACH;IACA5J,SAASA,CAACjE,QAAQ,EAAE;MAClB,IAAI;QAAC1qC,GAAG;QAAEC,GAAG;QAAEqG,UAAU;QAAEC;MAAU,CAAC,GAAG,IAAI,CAACC,aAAa,CAAC,CAAC;MAC7D,IAAIhI,KAAK;MACT,IAAI8H,UAAU,IAAIC,UAAU,EAAE;QAC5B,OAAO;UAACvG,GAAG;UAAEC;QAAG,CAAC;MACnB;MACA,MAAMi5C,KAAK,GAAG,IAAI,CAAC5P,uBAAuB,CAAC,CAAC;MAC5C,KAAK,IAAI/vC,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAGo/C,KAAK,CAACx/C,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;QAClDiF,KAAK,GAAG06C,KAAK,CAAC3/C,CAAC,CAAC,CAAC8/B,UAAU,CAACsV,SAAS,CAAC,IAAI,EAAEjE,QAAQ,CAAC;QACrD,IAAI,CAACpkC,UAAU,EAAE;UACftG,GAAG,GAAGpC,IAAI,CAACoC,GAAG,CAACA,GAAG,EAAExB,KAAK,CAACwB,GAAG,CAAC;QAChC;QACA,IAAI,CAACuG,UAAU,EAAE;UACftG,GAAG,GAAGrC,IAAI,CAACqC,GAAG,CAACA,GAAG,EAAEzB,KAAK,CAACyB,GAAG,CAAC;QAChC;MACF;MACAD,GAAG,GAAGuG,UAAU,IAAIvG,GAAG,GAAGC,GAAG,GAAGA,GAAG,GAAGD,GAAG;MACzCC,GAAG,GAAGqG,UAAU,IAAItG,GAAG,GAAGC,GAAG,GAAGD,GAAG,GAAGC,GAAG;MACzC,OAAO;QACLD,GAAG,EAAEzH,eAAe,CAACyH,GAAG,EAAEzH,eAAe,CAAC0H,GAAG,EAAED,GAAG,CAAC,CAAC;QACpDC,GAAG,EAAE1H,eAAe,CAAC0H,GAAG,EAAE1H,eAAe,CAACyH,GAAG,EAAEC,GAAG,CAAC;MACrD,CAAC;IACH;IACAk+B,UAAUA,CAAA,EAAG;MACX,OAAO;QACL34B,IAAI,EAAE,IAAI,CAACuyC,WAAW,IAAI,CAAC;QAC3Bh4B,GAAG,EAAE,IAAI,CAAC83B,UAAU,IAAI,CAAC;QACzBpyC,KAAK,EAAE,IAAI,CAACuyC,YAAY,IAAI,CAAC;QAC7Bh4B,MAAM,EAAE,IAAI,CAAC83B,aAAa,IAAI;MAChC,CAAC;IACH;IACAqB,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAAC1G,KAAK;IACnB;IACAvE,SAASA,CAAA,EAAG;MACV,MAAM3qB,IAAI,GAAG,IAAI,CAAC1b,KAAK,CAAC0b,IAAI;MAC5B,OAAO,IAAI,CAACzoB,OAAO,CAACmzC,MAAM,KAAK,IAAI,CAACzR,YAAY,CAAC,CAAC,GAAGjZ,IAAI,CAAC61B,OAAO,GAAG71B,IAAI,CAAC81B,OAAO,CAAC,IAAI91B,IAAI,CAAC0qB,MAAM,IAAI,EAAE;IACxG;IACA/N,YAAYA,CAAA,EAAG;MACb,IAAI,CAAC2Y,MAAM,GAAG,CAAC,CAAC;MAChB,IAAI,CAACC,iBAAiB,GAAG,KAAK;IAChC;IACAQ,YAAYA,CAAA,EAAG;MACbvgD,QAAQ,CAAC,IAAI,CAAC+B,OAAO,CAACw+C,YAAY,EAAE,CAAC,IAAI,CAAC,CAAC;IAC7C;IACAna,MAAMA,CAAC5d,QAAQ,EAAEC,SAAS,EAAEY,OAAO,EAAE;MACnC,MAAM;QAACuS,WAAW;QAAED,KAAK;QAAE+d,KAAK,EAAEiC;MAAQ,CAAC,GAAG,IAAI,CAAC55C,OAAO;MAC1D,MAAMy+C,UAAU,GAAG7E,QAAQ,CAAC6E,UAAU;MACtC,IAAI,CAACD,YAAY,CAAC,CAAC;MACnB,IAAI,CAAC/3B,QAAQ,GAAGA,QAAQ;MACxB,IAAI,CAACC,SAAS,GAAGA,SAAS;MAC1B,IAAI,CAACo2B,QAAQ,GAAGx1B,OAAO,GAAGtqB,MAAM,CAACsP,MAAM,CAAC;QACtC5B,IAAI,EAAE,CAAC;QACPC,KAAK,EAAE,CAAC;QACRsa,GAAG,EAAE,CAAC;QACNC,MAAM,EAAE;MACV,CAAC,EAAEoC,OAAO,CAAC;MACX,IAAI,CAACqwB,KAAK,GAAG,IAAI;MACjB,IAAI,CAAC4F,WAAW,GAAG,IAAI;MACvB,IAAI,CAACF,cAAc,GAAG,IAAI;MAC1B,IAAI,CAACC,WAAW,GAAG,IAAI;MACvB,IAAI,CAACoB,mBAAmB,CAAC,CAAC;MAC1B,IAAI,CAACC,aAAa,CAAC,CAAC;MACpB,IAAI,CAACC,kBAAkB,CAAC,CAAC;MACzB,IAAI,CAAC9D,UAAU,GAAG,IAAI,CAACpZ,YAAY,CAAC,CAAC,GACjC,IAAI,CAAC3c,KAAK,GAAGuC,OAAO,CAAC5c,IAAI,GAAG4c,OAAO,CAAC3c,KAAK,GACzC,IAAI,CAACqa,MAAM,GAAGsC,OAAO,CAACrC,GAAG,GAAGqC,OAAO,CAACpC,MAAM;MAC9C,IAAI,CAAC,IAAI,CAAC84B,iBAAiB,EAAE;QAC3B,IAAI,CAACa,gBAAgB,CAAC,CAAC;QACvB,IAAI,CAACC,mBAAmB,CAAC,CAAC;QAC1B,IAAI,CAACC,eAAe,CAAC,CAAC;QACtB,IAAI,CAAC3B,MAAM,GAAG1jB,SAAS,CAAC,IAAI,EAAEE,KAAK,EAAEC,WAAW,CAAC;QACjD,IAAI,CAACmkB,iBAAiB,GAAG,IAAI;MAC/B;MACA,IAAI,CAACgB,gBAAgB,CAAC,CAAC;MACvB,IAAI,CAACrH,KAAK,GAAG,IAAI,CAACsH,UAAU,CAAC,CAAC,IAAI,EAAE;MACpC,IAAI,CAACC,eAAe,CAAC,CAAC;MACtB,MAAMC,eAAe,GAAGV,UAAU,GAAG,IAAI,CAAC9G,KAAK,CAAC/4C,MAAM;MACtD,IAAI,CAACwgD,qBAAqB,CAACD,eAAe,GAAG1D,MAAM,CAAC,IAAI,CAAC9D,KAAK,EAAE8G,UAAU,CAAC,GAAG,IAAI,CAAC9G,KAAK,CAAC;MACzF,IAAI,CAAC3S,SAAS,CAAC,CAAC;MAChB,IAAI,CAACqa,4BAA4B,CAAC,CAAC;MACnC,IAAI,CAACC,sBAAsB,CAAC,CAAC;MAC7B,IAAI,CAACC,2BAA2B,CAAC,CAAC;MAClC,IAAI3F,QAAQ,CAACrU,OAAO,KAAKqU,QAAQ,CAACT,QAAQ,IAAIS,QAAQ,CAACt6C,MAAM,KAAK,MAAM,CAAC,EAAE;QACzE,IAAI,CAACq4C,KAAK,GAAGwB,QAAQ,CAAC,IAAI,EAAE,IAAI,CAACxB,KAAK,CAAC;QACvC,IAAI,CAAC4F,WAAW,GAAG,IAAI;QACvB,IAAI,CAACiC,aAAa,CAAC,CAAC;MACtB;MACA,IAAIL,eAAe,EAAE;QACnB,IAAI,CAACC,qBAAqB,CAAC,IAAI,CAACzH,KAAK,CAAC;MACxC;MACA,IAAI,CAAC8H,SAAS,CAAC,CAAC;MAChB,IAAI,CAACC,GAAG,CAAC,CAAC;MACV,IAAI,CAACC,QAAQ,CAAC,CAAC;MACf,IAAI,CAACC,WAAW,CAAC,CAAC;IACpB;IACA5a,SAASA,CAAA,EAAG;MACV,IAAI6a,aAAa,GAAG,IAAI,CAAC7/C,OAAO,CAACxB,OAAO;MACxC,IAAIshD,UAAU,EAAEC,QAAQ;MACxB,IAAI,IAAI,CAACre,YAAY,CAAC,CAAC,EAAE;QACvBoe,UAAU,GAAG,IAAI,CAACp1C,IAAI;QACtBq1C,QAAQ,GAAG,IAAI,CAACp1C,KAAK;MACvB,CAAC,MAAM;QACLm1C,UAAU,GAAG,IAAI,CAAC76B,GAAG;QACrB86B,QAAQ,GAAG,IAAI,CAAC76B,MAAM;QACtB26B,aAAa,GAAG,CAACA,aAAa;MAChC;MACA,IAAI,CAAC9D,WAAW,GAAG+D,UAAU;MAC7B,IAAI,CAAC9D,SAAS,GAAG+D,QAAQ;MACzB,IAAI,CAACrhB,cAAc,GAAGmhB,aAAa;MACnC,IAAI,CAACjF,OAAO,GAAGmF,QAAQ,GAAGD,UAAU;MACpC,IAAI,CAACE,cAAc,GAAG,IAAI,CAAChgD,OAAO,CAACigD,aAAa;IAClD;IACAL,WAAWA,CAAA,EAAG;MACZ3hD,QAAQ,CAAC,IAAI,CAAC+B,OAAO,CAAC4/C,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC;IAC5C;IACAlB,mBAAmBA,CAAA,EAAG;MACpBzgD,QAAQ,CAAC,IAAI,CAAC+B,OAAO,CAAC0+C,mBAAmB,EAAE,CAAC,IAAI,CAAC,CAAC;IACpD;IACAC,aAAaA,CAAA,EAAG;MACd,IAAI,IAAI,CAACjd,YAAY,CAAC,CAAC,EAAE;QACvB,IAAI,CAAC3c,KAAK,GAAG,IAAI,CAAC0B,QAAQ;QAC1B,IAAI,CAAC/b,IAAI,GAAG,CAAC;QACb,IAAI,CAACC,KAAK,GAAG,IAAI,CAACoa,KAAK;MACzB,CAAC,MAAM;QACL,IAAI,CAACC,MAAM,GAAG,IAAI,CAAC0B,SAAS;QAC5B,IAAI,CAACzB,GAAG,GAAG,CAAC;QACZ,IAAI,CAACC,MAAM,GAAG,IAAI,CAACF,MAAM;MAC3B;MACA,IAAI,CAACi4B,WAAW,GAAG,CAAC;MACpB,IAAI,CAACF,UAAU,GAAG,CAAC;MACnB,IAAI,CAACG,YAAY,GAAG,CAAC;MACrB,IAAI,CAACF,aAAa,GAAG,CAAC;IACxB;IACA4B,kBAAkBA,CAAA,EAAG;MACnB3gD,QAAQ,CAAC,IAAI,CAAC+B,OAAO,CAAC4+C,kBAAkB,EAAE,CAAC,IAAI,CAAC,CAAC;IACnD;IACAsB,UAAUA,CAACt9B,IAAI,EAAE;MACf,IAAI,CAAC7V,KAAK,CAACozC,aAAa,CAACv9B,IAAI,EAAE,IAAI,CAACiH,UAAU,CAAC,CAAC,CAAC;MACjD5rB,QAAQ,CAAC,IAAI,CAAC+B,OAAO,CAAC4iB,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACtC;IACAi8B,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACqB,UAAU,CAAC,kBAAkB,CAAC;IACrC;IACApB,mBAAmBA,CAAA,EAAG,CAAC;IACvBC,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACmB,UAAU,CAAC,iBAAiB,CAAC;IACpC;IACAlB,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACkB,UAAU,CAAC,kBAAkB,CAAC;IACrC;IACAjB,UAAUA,CAAA,EAAG;MACX,OAAO,EAAE;IACX;IACAC,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACgB,UAAU,CAAC,iBAAiB,CAAC;IACpC;IACAE,2BAA2BA,CAAA,EAAG;MAC5BniD,QAAQ,CAAC,IAAI,CAAC+B,OAAO,CAACogD,2BAA2B,EAAE,CAAC,IAAI,CAAC,CAAC;IAC5D;IACAC,kBAAkBA,CAAC1I,KAAK,EAAE;MACxB,MAAMiC,QAAQ,GAAG,IAAI,CAAC55C,OAAO,CAAC23C,KAAK;MACnC,IAAIl5C,CAAC,EAAEO,IAAI,EAAEgP,IAAI;MACjB,KAAKvP,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAG24C,KAAK,CAAC/4C,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAEP,CAAC,EAAE,EAAE;QAC9CuP,IAAI,GAAG2pC,KAAK,CAACl5C,CAAC,CAAC;QACfuP,IAAI,CAACqmC,KAAK,GAAGp2C,QAAQ,CAAC27C,QAAQ,CAAC37C,QAAQ,EAAE,CAAC+P,IAAI,CAACpR,KAAK,EAAE6B,CAAC,EAAEk5C,KAAK,CAAC,EAAE,IAAI,CAAC;MACxE;IACF;IACA2I,0BAA0BA,CAAA,EAAG;MAC3BriD,QAAQ,CAAC,IAAI,CAAC+B,OAAO,CAACsgD,0BAA0B,EAAE,CAAC,IAAI,CAAC,CAAC;IAC3D;IACAjB,4BAA4BA,CAAA,EAAG;MAC7BphD,QAAQ,CAAC,IAAI,CAAC+B,OAAO,CAACq/C,4BAA4B,EAAE,CAAC,IAAI,CAAC,CAAC;IAC7D;IACAC,sBAAsBA,CAAA,EAAG;MACvB,MAAMt/C,OAAO,GAAG,IAAI,CAACA,OAAO;MAC5B,MAAM45C,QAAQ,GAAG55C,OAAO,CAAC23C,KAAK;MAC9B,MAAM4I,QAAQ,GAAG,IAAI,CAAC5I,KAAK,CAAC/4C,MAAM;MAClC,MAAMk6C,WAAW,GAAGc,QAAQ,CAACd,WAAW,IAAI,CAAC;MAC7C,MAAMC,WAAW,GAAGa,QAAQ,CAACb,WAAW;MACxC,IAAIoE,aAAa,GAAGrE,WAAW;MAC/B,IAAIH,SAAS,EAAEjyB,SAAS,EAAE85B,gBAAgB;MAC1C,IAAI,CAAC,IAAI,CAACC,UAAU,CAAC,CAAC,IAAI,CAAC7G,QAAQ,CAACrU,OAAO,IAAIuT,WAAW,IAAIC,WAAW,IAAIwH,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC7e,YAAY,CAAC,CAAC,EAAE;QAClH,IAAI,CAACyb,aAAa,GAAGrE,WAAW;QAChC;MACF;MACA,MAAM4H,UAAU,GAAG,IAAI,CAACC,cAAc,CAAC,CAAC;MACxC,MAAMC,aAAa,GAAGF,UAAU,CAACG,MAAM,CAAC97B,KAAK;MAC7C,MAAM+7B,cAAc,GAAGJ,UAAU,CAACK,OAAO,CAAC/7B,MAAM;MAChD,MAAMyB,QAAQ,GAAGxf,WAAW,CAAC,IAAI,CAAC8F,KAAK,CAACgY,KAAK,GAAG67B,aAAa,EAAE,CAAC,EAAE,IAAI,CAACn6B,QAAQ,CAAC;MAChFkyB,SAAS,GAAG34C,OAAO,CAACq4C,MAAM,GAAG,IAAI,CAAC5xB,QAAQ,GAAG85B,QAAQ,GAAG95B,QAAQ,IAAI85B,QAAQ,GAAG,CAAC,CAAC;MACjF,IAAIK,aAAa,GAAG,CAAC,GAAGjI,SAAS,EAAE;QACjCA,SAAS,GAAGlyB,QAAQ,IAAI85B,QAAQ,IAAIvgD,OAAO,CAACq4C,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;QAC9D3xB,SAAS,GAAG,IAAI,CAACA,SAAS,GAAG01B,iBAAiB,CAACp8C,OAAO,CAACs4C,IAAI,CAAC,GAC5DsB,QAAQ,CAACnV,OAAO,GAAG4X,cAAc,CAACr8C,OAAO,CAAC64C,KAAK,EAAE,IAAI,CAAC9rC,KAAK,CAAC/M,OAAO,CAACihB,IAAI,CAAC;QACzEu/B,gBAAgB,GAAG19C,IAAI,CAACuB,IAAI,CAACu8C,aAAa,GAAGA,aAAa,GAAGE,cAAc,GAAGA,cAAc,CAAC;QAC7F3D,aAAa,GAAG73C,SAAS,CAACxC,IAAI,CAACoC,GAAG,CAChCpC,IAAI,CAACk+C,IAAI,CAAC/5C,WAAW,CAAC,CAACy5C,UAAU,CAACK,OAAO,CAAC/7B,MAAM,GAAG,CAAC,IAAI2zB,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAC1E71C,IAAI,CAACk+C,IAAI,CAAC/5C,WAAW,CAACyf,SAAS,GAAG85B,gBAAgB,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG19C,IAAI,CAACk+C,IAAI,CAAC/5C,WAAW,CAAC65C,cAAc,GAAGN,gBAAgB,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAC/H,CAAC,CAAC;QACFrD,aAAa,GAAGr6C,IAAI,CAACqC,GAAG,CAAC2zC,WAAW,EAAEh2C,IAAI,CAACoC,GAAG,CAAC6zC,WAAW,EAAEoE,aAAa,CAAC,CAAC;MAC7E;MACA,IAAI,CAACA,aAAa,GAAGA,aAAa;IACpC;IACAoC,2BAA2BA,CAAA,EAAG;MAC5BthD,QAAQ,CAAC,IAAI,CAAC+B,OAAO,CAACu/C,2BAA2B,EAAE,CAAC,IAAI,CAAC,CAAC;IAC5D;IACAC,aAAaA,CAAA,EAAG,CAAC;IACjBC,SAASA,CAAA,EAAG;MACVxhD,QAAQ,CAAC,IAAI,CAAC+B,OAAO,CAACy/C,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC;IAC1C;IACAC,GAAGA,CAAA,EAAG;MACJ,MAAMuB,OAAO,GAAG;QACdl8B,KAAK,EAAE,CAAC;QACRC,MAAM,EAAE;MACV,CAAC;MACD,MAAM;QAACjY,KAAK;QAAE/M,OAAO,EAAE;UAAC23C,KAAK,EAAEiC,QAAQ;UAAEf,KAAK,EAAEqI,SAAS;UAAE5I,IAAI,EAAE6I;QAAQ;MAAC,CAAC,GAAG,IAAI;MAClF,MAAM5b,OAAO,GAAG,IAAI,CAACkb,UAAU,CAAC,CAAC;MACjC,MAAM/e,YAAY,GAAG,IAAI,CAACA,YAAY,CAAC,CAAC;MACxC,IAAI6D,OAAO,EAAE;QACX,MAAM6b,WAAW,GAAG/E,cAAc,CAAC6E,SAAS,EAAEn0C,KAAK,CAAC/M,OAAO,CAACihB,IAAI,CAAC;QACjE,IAAIygB,YAAY,EAAE;UAChBuf,OAAO,CAACl8B,KAAK,GAAG,IAAI,CAAC0B,QAAQ;UAC7Bw6B,OAAO,CAACj8B,MAAM,GAAGo3B,iBAAiB,CAAC+E,QAAQ,CAAC,GAAGC,WAAW;QAC5D,CAAC,MAAM;UACLH,OAAO,CAACj8B,MAAM,GAAG,IAAI,CAAC0B,SAAS;UAC/Bu6B,OAAO,CAACl8B,KAAK,GAAGq3B,iBAAiB,CAAC+E,QAAQ,CAAC,GAAGC,WAAW;QAC3D;QACA,IAAIxH,QAAQ,CAACrU,OAAO,IAAI,IAAI,CAACoS,KAAK,CAAC/4C,MAAM,EAAE;UACzC,MAAM;YAACw7C,KAAK;YAAEzyC,IAAI;YAAEk5C,MAAM;YAAEE;UAAO,CAAC,GAAG,IAAI,CAACJ,cAAc,CAAC,CAAC;UAC5D,MAAMU,WAAW,GAAGzH,QAAQ,CAACnV,OAAO,GAAG,CAAC;UACxC,MAAM6c,YAAY,GAAGl8C,SAAS,CAAC,IAAI,CAAC+3C,aAAa,CAAC;UAClD,MAAMpyB,GAAG,GAAGjoB,IAAI,CAACioB,GAAG,CAACu2B,YAAY,CAAC;UAClC,MAAMx2B,GAAG,GAAGhoB,IAAI,CAACgoB,GAAG,CAACw2B,YAAY,CAAC;UAClC,IAAI5f,YAAY,EAAE;YAChB,MAAM6f,WAAW,GAAG3H,QAAQ,CAACZ,MAAM,GAAG,CAAC,GAAGluB,GAAG,GAAG+1B,MAAM,CAAC97B,KAAK,GAAGgG,GAAG,GAAGg2B,OAAO,CAAC/7B,MAAM;YACnFi8B,OAAO,CAACj8B,MAAM,GAAGliB,IAAI,CAACoC,GAAG,CAAC,IAAI,CAACwhB,SAAS,EAAEu6B,OAAO,CAACj8B,MAAM,GAAGu8B,WAAW,GAAGF,WAAW,CAAC;UACvF,CAAC,MAAM;YACL,MAAMG,UAAU,GAAG5H,QAAQ,CAACZ,MAAM,GAAG,CAAC,GAAGjuB,GAAG,GAAG81B,MAAM,CAAC97B,KAAK,GAAG+F,GAAG,GAAGi2B,OAAO,CAAC/7B,MAAM;YAClFi8B,OAAO,CAACl8B,KAAK,GAAGjiB,IAAI,CAACoC,GAAG,CAAC,IAAI,CAACuhB,QAAQ,EAAEw6B,OAAO,CAACl8B,KAAK,GAAGy8B,UAAU,GAAGH,WAAW,CAAC;UACnF;UACA,IAAI,CAACI,iBAAiB,CAACrH,KAAK,EAAEzyC,IAAI,EAAEmjB,GAAG,EAAEC,GAAG,CAAC;QAC/C;MACF;MACA,IAAI,CAAC22B,cAAc,CAAC,CAAC;MACrB,IAAIhgB,YAAY,EAAE;QAChB,IAAI,CAAC3c,KAAK,GAAG,IAAI,CAAC61B,OAAO,GAAG7tC,KAAK,CAACgY,KAAK,GAAG,IAAI,CAAC+3B,QAAQ,CAACpyC,IAAI,GAAG,IAAI,CAACoyC,QAAQ,CAACnyC,KAAK;QAClF,IAAI,CAACqa,MAAM,GAAGi8B,OAAO,CAACj8B,MAAM;MAC9B,CAAC,MAAM;QACL,IAAI,CAACD,KAAK,GAAGk8B,OAAO,CAACl8B,KAAK;QAC1B,IAAI,CAACC,MAAM,GAAG,IAAI,CAAC41B,OAAO,GAAG7tC,KAAK,CAACiY,MAAM,GAAG,IAAI,CAAC83B,QAAQ,CAAC73B,GAAG,GAAG,IAAI,CAAC63B,QAAQ,CAAC53B,MAAM;MACtF;IACF;IACAu8B,iBAAiBA,CAACrH,KAAK,EAAEzyC,IAAI,EAAEmjB,GAAG,EAAEC,GAAG,EAAE;MACvC,MAAM;QAAC4sB,KAAK,EAAE;UAACptC,KAAK;UAAEk6B;QAAO,CAAC;QAAE3F;MAAQ,CAAC,GAAG,IAAI,CAAC9+B,OAAO;MACxD,MAAM2hD,SAAS,GAAG,IAAI,CAACxE,aAAa,KAAK,CAAC;MAC1C,MAAMyE,gBAAgB,GAAG9iB,QAAQ,KAAK,KAAK,IAAI,IAAI,CAACvzB,IAAI,KAAK,GAAG;MAChE,IAAI,IAAI,CAACm2B,YAAY,CAAC,CAAC,EAAE;QACvB,MAAMmgB,UAAU,GAAG,IAAI,CAAC3F,eAAe,CAAC,CAAC,CAAC,GAAG,IAAI,CAACxxC,IAAI;QACtD,MAAMo3C,WAAW,GAAG,IAAI,CAACn3C,KAAK,GAAG,IAAI,CAACuxC,eAAe,CAAC,IAAI,CAACvE,KAAK,CAAC/4C,MAAM,GAAG,CAAC,CAAC;QAC5E,IAAIq+C,WAAW,GAAG,CAAC;QACnB,IAAIC,YAAY,GAAG,CAAC;QACpB,IAAIyE,SAAS,EAAE;UACb,IAAIC,gBAAgB,EAAE;YACpB3E,WAAW,GAAGlyB,GAAG,GAAGqvB,KAAK,CAACr1B,KAAK;YAC/Bm4B,YAAY,GAAGpyB,GAAG,GAAGnjB,IAAI,CAACqd,MAAM;UAClC,CAAC,MAAM;YACLi4B,WAAW,GAAGnyB,GAAG,GAAGsvB,KAAK,CAACp1B,MAAM;YAChCk4B,YAAY,GAAGnyB,GAAG,GAAGpjB,IAAI,CAACod,KAAK;UACjC;QACF,CAAC,MAAM,IAAIxa,KAAK,KAAK,OAAO,EAAE;UAC5B2yC,YAAY,GAAGv1C,IAAI,CAACod,KAAK;QAC3B,CAAC,MAAM,IAAIxa,KAAK,KAAK,KAAK,EAAE;UAC1B0yC,WAAW,GAAG7C,KAAK,CAACr1B,KAAK;QAC3B,CAAC,MAAM,IAAIxa,KAAK,KAAK,OAAO,EAAE;UAC5B0yC,WAAW,GAAG7C,KAAK,CAACr1B,KAAK,GAAG,CAAC;UAC7Bm4B,YAAY,GAAGv1C,IAAI,CAACod,KAAK,GAAG,CAAC;QAC/B;QACA,IAAI,CAACk4B,WAAW,GAAGn6C,IAAI,CAACqC,GAAG,CAAC,CAAC83C,WAAW,GAAG4E,UAAU,GAAGpd,OAAO,IAAI,IAAI,CAAC1f,KAAK,IAAI,IAAI,CAACA,KAAK,GAAG88B,UAAU,CAAC,EAAE,CAAC,CAAC;QAC7G,IAAI,CAAC3E,YAAY,GAAGp6C,IAAI,CAACqC,GAAG,CAAC,CAAC+3C,YAAY,GAAG4E,WAAW,GAAGrd,OAAO,IAAI,IAAI,CAAC1f,KAAK,IAAI,IAAI,CAACA,KAAK,GAAG+8B,WAAW,CAAC,EAAE,CAAC,CAAC;MACnH,CAAC,MAAM;QACL,IAAI/E,UAAU,GAAGp1C,IAAI,CAACqd,MAAM,GAAG,CAAC;QAChC,IAAIg4B,aAAa,GAAG5C,KAAK,CAACp1B,MAAM,GAAG,CAAC;QACpC,IAAIza,KAAK,KAAK,OAAO,EAAE;UACrBwyC,UAAU,GAAG,CAAC;UACdC,aAAa,GAAG5C,KAAK,CAACp1B,MAAM;QAC9B,CAAC,MAAM,IAAIza,KAAK,KAAK,KAAK,EAAE;UAC1BwyC,UAAU,GAAGp1C,IAAI,CAACqd,MAAM;UACxBg4B,aAAa,GAAG,CAAC;QACnB;QACA,IAAI,CAACD,UAAU,GAAGA,UAAU,GAAGtY,OAAO;QACtC,IAAI,CAACuY,aAAa,GAAGA,aAAa,GAAGvY,OAAO;MAC9C;IACF;IACAid,cAAcA,CAAA,EAAG;MACf,IAAI,IAAI,CAAC5E,QAAQ,EAAE;QACjB,IAAI,CAACA,QAAQ,CAACpyC,IAAI,GAAG5H,IAAI,CAACqC,GAAG,CAAC,IAAI,CAAC83C,WAAW,EAAE,IAAI,CAACH,QAAQ,CAACpyC,IAAI,CAAC;QACnE,IAAI,CAACoyC,QAAQ,CAAC73B,GAAG,GAAGniB,IAAI,CAACqC,GAAG,CAAC,IAAI,CAAC43C,UAAU,EAAE,IAAI,CAACD,QAAQ,CAAC73B,GAAG,CAAC;QAChE,IAAI,CAAC63B,QAAQ,CAACnyC,KAAK,GAAG7H,IAAI,CAACqC,GAAG,CAAC,IAAI,CAAC+3C,YAAY,EAAE,IAAI,CAACJ,QAAQ,CAACnyC,KAAK,CAAC;QACtE,IAAI,CAACmyC,QAAQ,CAAC53B,MAAM,GAAGpiB,IAAI,CAACqC,GAAG,CAAC,IAAI,CAAC63C,aAAa,EAAE,IAAI,CAACF,QAAQ,CAAC53B,MAAM,CAAC;MAC3E;IACF;IACAy6B,QAAQA,CAAA,EAAG;MACT1hD,QAAQ,CAAC,IAAI,CAAC+B,OAAO,CAAC2/C,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC;IACzC;IACAje,YAAYA,CAAA,EAAG;MACb,MAAM;QAACn2B,IAAI;QAAEuzB;MAAQ,CAAC,GAAG,IAAI,CAAC9+B,OAAO;MACrC,OAAO8+B,QAAQ,KAAK,KAAK,IAAIA,QAAQ,KAAK,QAAQ,IAAIvzB,IAAI,KAAK,GAAG;IACpE;IACAw2C,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAAC/hD,OAAO,CAACqiC,QAAQ;IAC9B;IACA+c,qBAAqBA,CAACzH,KAAK,EAAE;MAC3B,IAAI,CAACyI,2BAA2B,CAAC,CAAC;MAClC,IAAI,CAACC,kBAAkB,CAAC1I,KAAK,CAAC;MAC9B,IAAIl5C,CAAC,EAAEO,IAAI;MACX,KAAKP,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAG24C,KAAK,CAAC/4C,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAEP,CAAC,EAAE,EAAE;QAC9C,IAAI9B,aAAa,CAACg7C,KAAK,CAACl5C,CAAC,CAAC,CAAC41C,KAAK,CAAC,EAAE;UACjCsD,KAAK,CAAC7uC,MAAM,CAACrK,CAAC,EAAE,CAAC,CAAC;UAClBO,IAAI,EAAE;UACNP,CAAC,EAAE;QACL;MACF;MACA,IAAI,CAAC6hD,0BAA0B,CAAC,CAAC;IACnC;IACAK,cAAcA,CAAA,EAAG;MACf,IAAID,UAAU,GAAG,IAAI,CAACnD,WAAW;MACjC,IAAI,CAACmD,UAAU,EAAE;QACf,MAAMjC,UAAU,GAAG,IAAI,CAACz+C,OAAO,CAAC23C,KAAK,CAAC8G,UAAU;QAChD,IAAI9G,KAAK,GAAG,IAAI,CAACA,KAAK;QACtB,IAAI8G,UAAU,GAAG9G,KAAK,CAAC/4C,MAAM,EAAE;UAC7B+4C,KAAK,GAAG8D,MAAM,CAAC9D,KAAK,EAAE8G,UAAU,CAAC;QACnC;QACA,IAAI,CAAClB,WAAW,GAAGmD,UAAU,GAAG,IAAI,CAACsB,kBAAkB,CAACrK,KAAK,EAAEA,KAAK,CAAC/4C,MAAM,CAAC;MAC9E;MACA,OAAO8hD,UAAU;IACnB;IACAsB,kBAAkBA,CAACrK,KAAK,EAAE/4C,MAAM,EAAE;MAChC,MAAM;QAAC2iB,GAAG;QAAEi8B,iBAAiB,EAAErB;MAAM,CAAC,GAAG,IAAI;MAC7C,MAAM8F,MAAM,GAAG,EAAE;MACjB,MAAMC,OAAO,GAAG,EAAE;MAClB,IAAIC,eAAe,GAAG,CAAC;MACvB,IAAIC,gBAAgB,GAAG,CAAC;MACxB,IAAI3jD,CAAC,EAAEue,CAAC,EAAEoM,IAAI,EAAEirB,KAAK,EAAEgO,QAAQ,EAAEh5C,UAAU,EAAE4f,KAAK,EAAE7H,UAAU,EAAE2D,KAAK,EAAEC,MAAM,EAAEs9B,WAAW;MAC1F,KAAK7jD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGG,MAAM,EAAE,EAAEH,CAAC,EAAE;QAC3B41C,KAAK,GAAGsD,KAAK,CAACl5C,CAAC,CAAC,CAAC41C,KAAK;QACtBgO,QAAQ,GAAG,IAAI,CAACE,uBAAuB,CAAC9jD,CAAC,CAAC;QAC1C8iB,GAAG,CAACN,IAAI,GAAG5X,UAAU,GAAGg5C,QAAQ,CAACz5B,MAAM;QACvCK,KAAK,GAAGkzB,MAAM,CAAC9yC,UAAU,CAAC,GAAG8yC,MAAM,CAAC9yC,UAAU,CAAC,IAAI;UAACof,IAAI,EAAE,CAAC,CAAC;UAAEC,EAAE,EAAE;QAAE,CAAC;QACrEtH,UAAU,GAAGihC,QAAQ,CAACjhC,UAAU;QAChC2D,KAAK,GAAGC,MAAM,GAAG,CAAC;QAClB,IAAI,CAACroB,aAAa,CAAC03C,KAAK,CAAC,IAAI,CAACx3C,OAAO,CAACw3C,KAAK,CAAC,EAAE;UAC5CtvB,KAAK,GAAGyD,YAAY,CAACjH,GAAG,EAAE0H,KAAK,CAACR,IAAI,EAAEQ,KAAK,CAACP,EAAE,EAAE3D,KAAK,EAAEsvB,KAAK,CAAC;UAC7DrvB,MAAM,GAAG5D,UAAU;QACrB,CAAC,MAAM,IAAIvkB,OAAO,CAACw3C,KAAK,CAAC,EAAE;UACzB,KAAKr3B,CAAC,GAAG,CAAC,EAAEoM,IAAI,GAAGirB,KAAK,CAACz1C,MAAM,EAAEoe,CAAC,GAAGoM,IAAI,EAAE,EAAEpM,CAAC,EAAE;YAC9CslC,WAAW,GAAGjO,KAAK,CAACr3B,CAAC,CAAC;YACtB,IAAI,CAACrgB,aAAa,CAAC2lD,WAAW,CAAC,IAAI,CAACzlD,OAAO,CAACylD,WAAW,CAAC,EAAE;cACxDv9B,KAAK,GAAGyD,YAAY,CAACjH,GAAG,EAAE0H,KAAK,CAACR,IAAI,EAAEQ,KAAK,CAACP,EAAE,EAAE3D,KAAK,EAAEu9B,WAAW,CAAC;cACnEt9B,MAAM,IAAI5D,UAAU;YACtB;UACF;QACF;QACA6gC,MAAM,CAACngD,IAAI,CAACijB,KAAK,CAAC;QAClBm9B,OAAO,CAACpgD,IAAI,CAACkjB,MAAM,CAAC;QACpBm9B,eAAe,GAAGr/C,IAAI,CAACqC,GAAG,CAAC4f,KAAK,EAAEo9B,eAAe,CAAC;QAClDC,gBAAgB,GAAGt/C,IAAI,CAACqC,GAAG,CAAC6f,MAAM,EAAEo9B,gBAAgB,CAAC;MACvD;MACAl5B,cAAc,CAACizB,MAAM,EAAEv9C,MAAM,CAAC;MAC9B,MAAMiiD,MAAM,GAAGoB,MAAM,CAACniD,OAAO,CAACqiD,eAAe,CAAC;MAC9C,MAAMpB,OAAO,GAAGmB,OAAO,CAACpiD,OAAO,CAACsiD,gBAAgB,CAAC;MACjD,MAAMI,OAAO,GAAIC,GAAG,KAAM;QAAC19B,KAAK,EAAEk9B,MAAM,CAACQ,GAAG,CAAC,IAAI,CAAC;QAAEz9B,MAAM,EAAEk9B,OAAO,CAACO,GAAG,CAAC,IAAI;MAAC,CAAC,CAAC;MAC/E,OAAO;QACLrI,KAAK,EAAEoI,OAAO,CAAC,CAAC,CAAC;QACjB76C,IAAI,EAAE66C,OAAO,CAAC5jD,MAAM,GAAG,CAAC,CAAC;QACzBiiD,MAAM,EAAE2B,OAAO,CAAC3B,MAAM,CAAC;QACvBE,OAAO,EAAEyB,OAAO,CAACzB,OAAO,CAAC;QACzBkB,MAAM;QACNC;MACF,CAAC;IACH;IACA5N,gBAAgBA,CAAC13C,KAAK,EAAE;MACtB,OAAOA,KAAK;IACd;IACA+O,gBAAgBA,CAAC/O,KAAK,EAAEwC,KAAK,EAAE;MAC7B,OAAOw0C,GAAG;IACZ;IACA8O,gBAAgBA,CAACh5B,KAAK,EAAE,CAAC;IACzBwyB,eAAeA,CAAC98C,KAAK,EAAE;MACrB,MAAMu4C,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAIv4C,KAAK,GAAG,CAAC,IAAIA,KAAK,GAAGu4C,KAAK,CAAC/4C,MAAM,GAAG,CAAC,EAAE;QACzC,OAAO,IAAI;MACb;MACA,OAAO,IAAI,CAAC+M,gBAAgB,CAACgsC,KAAK,CAACv4C,KAAK,CAAC,CAACxC,KAAK,CAAC;IAClD;IACA+lD,kBAAkBA,CAACC,OAAO,EAAE;MAC1B,IAAI,IAAI,CAAClkB,cAAc,EAAE;QACvBkkB,OAAO,GAAG,CAAC,GAAGA,OAAO;MACvB;MACA,MAAMl5B,KAAK,GAAG,IAAI,CAACqyB,WAAW,GAAG6G,OAAO,GAAG,IAAI,CAAChI,OAAO;MACvD,OAAO1zC,WAAW,CAAC,IAAI,CAAC84C,cAAc,GAAGv2B,WAAW,CAAC,IAAI,CAAC1c,KAAK,EAAE2c,KAAK,EAAE,CAAC,CAAC,GAAGA,KAAK,CAAC;IACrF;IACAm5B,kBAAkBA,CAACn5B,KAAK,EAAE;MACxB,MAAMk5B,OAAO,GAAG,CAACl5B,KAAK,GAAG,IAAI,CAACqyB,WAAW,IAAI,IAAI,CAACnB,OAAO;MACzD,OAAO,IAAI,CAAClc,cAAc,GAAG,CAAC,GAAGkkB,OAAO,GAAGA,OAAO;IACpD;IACAE,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAACn3C,gBAAgB,CAAC,IAAI,CAACo3C,YAAY,CAAC,CAAC,CAAC;IACnD;IACAA,YAAYA,CAAA,EAAG;MACb,MAAM;QAAC79C,GAAG;QAAEC;MAAG,CAAC,GAAG,IAAI;MACvB,OAAOD,GAAG,GAAG,CAAC,IAAIC,GAAG,GAAG,CAAC,GAAGA,GAAG,GAC7BD,GAAG,GAAG,CAAC,IAAIC,GAAG,GAAG,CAAC,GAAGD,GAAG,GACxB,CAAC;IACL;IACA2kB,UAAUA,CAACzqB,KAAK,EAAE;MAChB,MAAMu4C,KAAK,GAAG,IAAI,CAACA,KAAK,IAAI,EAAE;MAC9B,IAAIv4C,KAAK,IAAI,CAAC,IAAIA,KAAK,GAAGu4C,KAAK,CAAC/4C,MAAM,EAAE;QACtC,MAAMoP,IAAI,GAAG2pC,KAAK,CAACv4C,KAAK,CAAC;QACzB,OAAO4O,IAAI,CAAC0iC,QAAQ,KACrB1iC,IAAI,CAAC0iC,QAAQ,GAAG6L,iBAAiB,CAAC,IAAI,CAAC1yB,UAAU,CAAC,CAAC,EAAEzqB,KAAK,EAAE4O,IAAI,CAAC,CAAC;MACnE;MACA,OAAO,IAAI,CAAC0iC,QAAQ,KACpB,IAAI,CAACA,QAAQ,GAAG4L,kBAAkB,CAAC,IAAI,CAACvvC,KAAK,CAAC8c,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;IACpE;IACA6wB,SAASA,CAAA,EAAG;MACV,MAAMsI,WAAW,GAAG,IAAI,CAAChjD,OAAO,CAAC23C,KAAK;MACtC,MAAMsL,GAAG,GAAG79C,SAAS,CAAC,IAAI,CAAC+3C,aAAa,CAAC;MACzC,MAAMpyB,GAAG,GAAGjoB,IAAI,CAAC8B,GAAG,CAAC9B,IAAI,CAACioB,GAAG,CAACk4B,GAAG,CAAC,CAAC;MACnC,MAAMn4B,GAAG,GAAGhoB,IAAI,CAAC8B,GAAG,CAAC9B,IAAI,CAACgoB,GAAG,CAACm4B,GAAG,CAAC,CAAC;MACnC,MAAMvC,UAAU,GAAG,IAAI,CAACC,cAAc,CAAC,CAAC;MACxC,MAAMlc,OAAO,GAAGue,WAAW,CAAC5J,eAAe,IAAI,CAAC;MAChD,MAAMloC,CAAC,GAAGwvC,UAAU,GAAGA,UAAU,CAACG,MAAM,CAAC97B,KAAK,GAAG0f,OAAO,GAAG,CAAC;MAC5D,MAAMr1B,CAAC,GAAGsxC,UAAU,GAAGA,UAAU,CAACK,OAAO,CAAC/7B,MAAM,GAAGyf,OAAO,GAAG,CAAC;MAC9D,OAAO,IAAI,CAAC/C,YAAY,CAAC,CAAC,GACtBtyB,CAAC,GAAG2b,GAAG,GAAG7Z,CAAC,GAAG4Z,GAAG,GAAG5Z,CAAC,GAAG6Z,GAAG,GAAG3b,CAAC,GAAG0b,GAAG,GACrC1b,CAAC,GAAG0b,GAAG,GAAG5Z,CAAC,GAAG6Z,GAAG,GAAG3b,CAAC,GAAG2b,GAAG,GAAG7Z,CAAC,GAAG4Z,GAAG;IAC3C;IACA21B,UAAUA,CAAA,EAAG;MACX,MAAMlb,OAAO,GAAG,IAAI,CAACvlC,OAAO,CAACulC,OAAO;MACpC,IAAIA,OAAO,KAAK,MAAM,EAAE;QACtB,OAAO,CAAC,CAACA,OAAO;MAClB;MACA,OAAO,IAAI,CAACiJ,uBAAuB,CAAC,CAAC,CAAC5vC,MAAM,GAAG,CAAC;IAClD;IACAskD,qBAAqBA,CAACvjB,SAAS,EAAE;MAC/B,MAAMp0B,IAAI,GAAG,IAAI,CAACA,IAAI;MACtB,MAAMwB,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,MAAM/M,OAAO,GAAG,IAAI,CAACA,OAAO;MAC5B,MAAM;QAACs4C,IAAI;QAAExZ;MAAQ,CAAC,GAAG9+B,OAAO;MAChC,MAAMq4C,MAAM,GAAGC,IAAI,CAACD,MAAM;MAC1B,MAAM3W,YAAY,GAAG,IAAI,CAACA,YAAY,CAAC,CAAC;MACxC,MAAMiW,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,MAAMwL,WAAW,GAAGxL,KAAK,CAAC/4C,MAAM,IAAIy5C,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;MACnD,MAAM+K,EAAE,GAAGhH,iBAAiB,CAAC9D,IAAI,CAAC;MAClC,MAAMtvC,KAAK,GAAG,EAAE;MAChB,MAAMq6C,UAAU,GAAG/K,IAAI,CAAC/nB,UAAU,CAAC,IAAI,CAAC1G,UAAU,CAAC,CAAC,CAAC;MACrD,MAAMy5B,SAAS,GAAGD,UAAU,CAAC9K,UAAU,GAAG8K,UAAU,CAACl4B,WAAW,GAAG,CAAC;MACpE,MAAMo4B,aAAa,GAAGD,SAAS,GAAG,CAAC;MACnC,MAAME,gBAAgB,GAAG,SAAAA,CAAS95B,KAAK,EAAE;QACvC,OAAOD,WAAW,CAAC1c,KAAK,EAAE2c,KAAK,EAAE45B,SAAS,CAAC;MAC7C,CAAC;MACD,IAAIG,WAAW,EAAEhlD,CAAC,EAAEw9C,SAAS,EAAEyH,gBAAgB;MAC/C,IAAIC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE;MACtC,IAAIplB,QAAQ,KAAK,KAAK,EAAE;QACtB2kB,WAAW,GAAGD,gBAAgB,CAAC,IAAI,CAACt+B,MAAM,CAAC;QAC3C0+B,GAAG,GAAG,IAAI,CAAC1+B,MAAM,GAAGk+B,EAAE;QACtBU,GAAG,GAAGL,WAAW,GAAGF,aAAa;QACjCS,EAAE,GAAGR,gBAAgB,CAAC7jB,SAAS,CAAC1a,GAAG,CAAC,GAAGs+B,aAAa;QACpDW,EAAE,GAAGvkB,SAAS,CAACza,MAAM;MACvB,CAAC,MAAM,IAAI4Z,QAAQ,KAAK,QAAQ,EAAE;QAChC2kB,WAAW,GAAGD,gBAAgB,CAAC,IAAI,CAACv+B,GAAG,CAAC;QACxC++B,EAAE,GAAGrkB,SAAS,CAAC1a,GAAG;QAClBi/B,EAAE,GAAGV,gBAAgB,CAAC7jB,SAAS,CAACza,MAAM,CAAC,GAAGq+B,aAAa;QACvDK,GAAG,GAAGH,WAAW,GAAGF,aAAa;QACjCO,GAAG,GAAG,IAAI,CAAC7+B,GAAG,GAAGm+B,EAAE;MACrB,CAAC,MAAM,IAAItkB,QAAQ,KAAK,MAAM,EAAE;QAC9B2kB,WAAW,GAAGD,gBAAgB,CAAC,IAAI,CAAC74C,KAAK,CAAC;QAC1Cg5C,GAAG,GAAG,IAAI,CAACh5C,KAAK,GAAGy4C,EAAE;QACrBS,GAAG,GAAGJ,WAAW,GAAGF,aAAa;QACjCQ,EAAE,GAAGP,gBAAgB,CAAC7jB,SAAS,CAACj1B,IAAI,CAAC,GAAG64C,aAAa;QACrDU,EAAE,GAAGtkB,SAAS,CAACh1B,KAAK;MACtB,CAAC,MAAM,IAAIm0B,QAAQ,KAAK,OAAO,EAAE;QAC/B2kB,WAAW,GAAGD,gBAAgB,CAAC,IAAI,CAAC94C,IAAI,CAAC;QACzCq5C,EAAE,GAAGpkB,SAAS,CAACj1B,IAAI;QACnBu5C,EAAE,GAAGT,gBAAgB,CAAC7jB,SAAS,CAACh1B,KAAK,CAAC,GAAG44C,aAAa;QACtDI,GAAG,GAAGF,WAAW,GAAGF,aAAa;QACjCM,GAAG,GAAG,IAAI,CAACn5C,IAAI,GAAG04C,EAAE;MACtB,CAAC,MAAM,IAAI73C,IAAI,KAAK,GAAG,EAAE;QACvB,IAAIuzB,QAAQ,KAAK,QAAQ,EAAE;UACzB2kB,WAAW,GAAGD,gBAAgB,CAAC,CAAC7jB,SAAS,CAAC1a,GAAG,GAAG0a,SAAS,CAACza,MAAM,IAAI,CAAC,GAAG,GAAG,CAAC;QAC9E,CAAC,MAAM,IAAI7nB,QAAQ,CAACyhC,QAAQ,CAAC,EAAE;UAC7B,MAAM8d,cAAc,GAAG5/C,MAAM,CAAC2B,IAAI,CAACmgC,QAAQ,CAAC,CAAC,CAAC,CAAC;UAC/C,MAAMliC,KAAK,GAAGkiC,QAAQ,CAAC8d,cAAc,CAAC;UACtC6G,WAAW,GAAGD,gBAAgB,CAAC,IAAI,CAACz2C,KAAK,CAACuV,MAAM,CAACs6B,cAAc,CAAC,CAACjxC,gBAAgB,CAAC/O,KAAK,CAAC,CAAC;QAC3F;QACAonD,EAAE,GAAGrkB,SAAS,CAAC1a,GAAG;QAClBi/B,EAAE,GAAGvkB,SAAS,CAACza,MAAM;QACrB0+B,GAAG,GAAGH,WAAW,GAAGF,aAAa;QACjCO,GAAG,GAAGF,GAAG,GAAGR,EAAE;MAChB,CAAC,MAAM,IAAI73C,IAAI,KAAK,GAAG,EAAE;QACvB,IAAIuzB,QAAQ,KAAK,QAAQ,EAAE;UACzB2kB,WAAW,GAAGD,gBAAgB,CAAC,CAAC7jB,SAAS,CAACj1B,IAAI,GAAGi1B,SAAS,CAACh1B,KAAK,IAAI,CAAC,CAAC;QACxE,CAAC,MAAM,IAAItN,QAAQ,CAACyhC,QAAQ,CAAC,EAAE;UAC7B,MAAM8d,cAAc,GAAG5/C,MAAM,CAAC2B,IAAI,CAACmgC,QAAQ,CAAC,CAAC,CAAC,CAAC;UAC/C,MAAMliC,KAAK,GAAGkiC,QAAQ,CAAC8d,cAAc,CAAC;UACtC6G,WAAW,GAAGD,gBAAgB,CAAC,IAAI,CAACz2C,KAAK,CAACuV,MAAM,CAACs6B,cAAc,CAAC,CAACjxC,gBAAgB,CAAC/O,KAAK,CAAC,CAAC;QAC3F;QACA+mD,GAAG,GAAGF,WAAW,GAAGF,aAAa;QACjCM,GAAG,GAAGF,GAAG,GAAGP,EAAE;QACdW,EAAE,GAAGpkB,SAAS,CAACj1B,IAAI;QACnBu5C,EAAE,GAAGtkB,SAAS,CAACh1B,KAAK;MACtB;MACA,MAAMw5C,KAAK,GAAGxmD,cAAc,CAACqC,OAAO,CAAC23C,KAAK,CAACmC,aAAa,EAAEqJ,WAAW,CAAC;MACtE,MAAMiB,IAAI,GAAGthD,IAAI,CAACqC,GAAG,CAAC,CAAC,EAAErC,IAAI,CAACo4C,IAAI,CAACiI,WAAW,GAAGgB,KAAK,CAAC,CAAC;MACxD,KAAK1lD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0kD,WAAW,EAAE1kD,CAAC,IAAI2lD,IAAI,EAAE;QACtC,MAAMC,WAAW,GAAG/L,IAAI,CAAC/nB,UAAU,CAAC,IAAI,CAAC1G,UAAU,CAACprB,CAAC,CAAC,CAAC;QACvD,MAAMquB,SAAS,GAAGu3B,WAAW,CAACv3B,SAAS;QACvC,MAAMw3B,SAAS,GAAGD,WAAW,CAACxlC,KAAK;QACnC,MAAMif,UAAU,GAAGumB,WAAW,CAACvmB,UAAU,IAAI,EAAE;QAC/C,MAAMC,gBAAgB,GAAGsmB,WAAW,CAACtmB,gBAAgB;QACrD,MAAM4a,SAAS,GAAG0L,WAAW,CAAC1L,SAAS;QACvC,MAAMC,SAAS,GAAGyL,WAAW,CAACzL,SAAS;QACvC,MAAM2L,cAAc,GAAGF,WAAW,CAACE,cAAc,IAAI,EAAE;QACvD,MAAMC,oBAAoB,GAAGH,WAAW,CAACG,oBAAoB;QAC7DvI,SAAS,GAAGL,mBAAmB,CAAC,IAAI,EAAEn9C,CAAC,EAAE45C,MAAM,CAAC;QAChD,IAAI4D,SAAS,KAAKp7C,SAAS,EAAE;UAC3B;QACF;QACA6iD,gBAAgB,GAAGj6B,WAAW,CAAC1c,KAAK,EAAEkvC,SAAS,EAAEnvB,SAAS,CAAC;QAC3D,IAAI4U,YAAY,EAAE;UAChBiiB,GAAG,GAAGE,GAAG,GAAGE,EAAE,GAAGE,EAAE,GAAGP,gBAAgB;QACxC,CAAC,MAAM;UACLE,GAAG,GAAGE,GAAG,GAAGE,EAAE,GAAGE,EAAE,GAAGR,gBAAgB;QACxC;QACA16C,KAAK,CAAClH,IAAI,CAAC;UACT6hD,GAAG;UACHC,GAAG;UACHC,GAAG;UACHC,GAAG;UACHC,EAAE;UACFC,EAAE;UACFC,EAAE;UACFC,EAAE;UACFn/B,KAAK,EAAE+H,SAAS;UAChBjO,KAAK,EAAEylC,SAAS;UAChBxmB,UAAU;UACVC,gBAAgB;UAChB4a,SAAS;UACTC,SAAS;UACT2L,cAAc;UACdC;QACF,CAAC,CAAC;MACJ;MACA,IAAI,CAAC3G,YAAY,GAAGsF,WAAW;MAC/B,IAAI,CAACrF,YAAY,GAAG2F,WAAW;MAC/B,OAAOz6C,KAAK;IACd;IACAy7C,kBAAkBA,CAAC9kB,SAAS,EAAE;MAC5B,MAAMp0B,IAAI,GAAG,IAAI,CAACA,IAAI;MACtB,MAAMvL,OAAO,GAAG,IAAI,CAACA,OAAO;MAC5B,MAAM;QAAC8+B,QAAQ;QAAE6Y,KAAK,EAAEqL;MAAW,CAAC,GAAGhjD,OAAO;MAC9C,MAAM0hC,YAAY,GAAG,IAAI,CAACA,YAAY,CAAC,CAAC;MACxC,MAAMiW,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,MAAM;QAACptC,KAAK;QAAEivC,UAAU;QAAE/U,OAAO;QAAEuU;MAAM,CAAC,GAAGgK,WAAW;MACxD,MAAMI,EAAE,GAAGhH,iBAAiB,CAACp8C,OAAO,CAACs4C,IAAI,CAAC;MAC1C,MAAMoM,cAAc,GAAGtB,EAAE,GAAG3e,OAAO;MACnC,MAAMkgB,eAAe,GAAG3L,MAAM,GAAG,CAACvU,OAAO,GAAGigB,cAAc;MAC1D,MAAMt6B,QAAQ,GAAG,CAAChlB,SAAS,CAAC,IAAI,CAAC+3C,aAAa,CAAC;MAC/C,MAAMn0C,KAAK,GAAG,EAAE;MAChB,IAAIvK,CAAC,EAAEO,IAAI,EAAEgP,IAAI,EAAEqmC,KAAK,EAAEnzC,CAAC,EAAEE,CAAC,EAAEgsB,SAAS,EAAE1D,KAAK,EAAEzI,IAAI,EAAEG,UAAU,EAAEwjC,SAAS,EAAEC,UAAU;MACzF,IAAIx3B,YAAY,GAAG,QAAQ;MAC3B,IAAIyR,QAAQ,KAAK,KAAK,EAAE;QACtB19B,CAAC,GAAG,IAAI,CAAC8jB,MAAM,GAAGy/B,eAAe;QACjCv3B,SAAS,GAAG,IAAI,CAAC03B,uBAAuB,CAAC,CAAC;MAC5C,CAAC,MAAM,IAAIhmB,QAAQ,KAAK,QAAQ,EAAE;QAChC19B,CAAC,GAAG,IAAI,CAAC6jB,GAAG,GAAG0/B,eAAe;QAC9Bv3B,SAAS,GAAG,IAAI,CAAC03B,uBAAuB,CAAC,CAAC;MAC5C,CAAC,MAAM,IAAIhmB,QAAQ,KAAK,MAAM,EAAE;QAC9B,MAAMnuB,GAAG,GAAG,IAAI,CAACo0C,uBAAuB,CAAC3B,EAAE,CAAC;QAC5Ch2B,SAAS,GAAGzc,GAAG,CAACyc,SAAS;QACzBlsB,CAAC,GAAGyP,GAAG,CAACzP,CAAC;MACX,CAAC,MAAM,IAAI49B,QAAQ,KAAK,OAAO,EAAE;QAC/B,MAAMnuB,GAAG,GAAG,IAAI,CAACo0C,uBAAuB,CAAC3B,EAAE,CAAC;QAC5Ch2B,SAAS,GAAGzc,GAAG,CAACyc,SAAS;QACzBlsB,CAAC,GAAGyP,GAAG,CAACzP,CAAC;MACX,CAAC,MAAM,IAAIqK,IAAI,KAAK,GAAG,EAAE;QACvB,IAAIuzB,QAAQ,KAAK,QAAQ,EAAE;UACzB19B,CAAC,GAAI,CAACu+B,SAAS,CAAC1a,GAAG,GAAG0a,SAAS,CAACza,MAAM,IAAI,CAAC,GAAIw/B,cAAc;QAC/D,CAAC,MAAM,IAAIrnD,QAAQ,CAACyhC,QAAQ,CAAC,EAAE;UAC7B,MAAM8d,cAAc,GAAG5/C,MAAM,CAAC2B,IAAI,CAACmgC,QAAQ,CAAC,CAAC,CAAC,CAAC;UAC/C,MAAMliC,KAAK,GAAGkiC,QAAQ,CAAC8d,cAAc,CAAC;UACtCx7C,CAAC,GAAG,IAAI,CAAC2L,KAAK,CAACuV,MAAM,CAACs6B,cAAc,CAAC,CAACjxC,gBAAgB,CAAC/O,KAAK,CAAC,GAAG8nD,cAAc;QAChF;QACAt3B,SAAS,GAAG,IAAI,CAAC03B,uBAAuB,CAAC,CAAC;MAC5C,CAAC,MAAM,IAAIv5C,IAAI,KAAK,GAAG,EAAE;QACvB,IAAIuzB,QAAQ,KAAK,QAAQ,EAAE;UACzB59B,CAAC,GAAI,CAACy+B,SAAS,CAACj1B,IAAI,GAAGi1B,SAAS,CAACh1B,KAAK,IAAI,CAAC,GAAI+5C,cAAc;QAC/D,CAAC,MAAM,IAAIrnD,QAAQ,CAACyhC,QAAQ,CAAC,EAAE;UAC7B,MAAM8d,cAAc,GAAG5/C,MAAM,CAAC2B,IAAI,CAACmgC,QAAQ,CAAC,CAAC,CAAC,CAAC;UAC/C,MAAMliC,KAAK,GAAGkiC,QAAQ,CAAC8d,cAAc,CAAC;UACtC17C,CAAC,GAAG,IAAI,CAAC6L,KAAK,CAACuV,MAAM,CAACs6B,cAAc,CAAC,CAACjxC,gBAAgB,CAAC/O,KAAK,CAAC;QAC/D;QACAwwB,SAAS,GAAG,IAAI,CAAC23B,uBAAuB,CAAC3B,EAAE,CAAC,CAACh2B,SAAS;MACxD;MACA,IAAI7hB,IAAI,KAAK,GAAG,EAAE;QAChB,IAAIhB,KAAK,KAAK,OAAO,EAAE;UACrB8iB,YAAY,GAAG,KAAK;QACtB,CAAC,MAAM,IAAI9iB,KAAK,KAAK,KAAK,EAAE;UAC1B8iB,YAAY,GAAG,QAAQ;QACzB;MACF;MACA,MAAMqzB,UAAU,GAAG,IAAI,CAACC,cAAc,CAAC,CAAC;MACxC,KAAKliD,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAG24C,KAAK,CAAC/4C,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;QAC9CuP,IAAI,GAAG2pC,KAAK,CAACl5C,CAAC,CAAC;QACf41C,KAAK,GAAGrmC,IAAI,CAACqmC,KAAK;QAClB,MAAMgQ,WAAW,GAAGrB,WAAW,CAACzyB,UAAU,CAAC,IAAI,CAAC1G,UAAU,CAACprB,CAAC,CAAC,CAAC;QAC9DirB,KAAK,GAAG,IAAI,CAACwyB,eAAe,CAACz9C,CAAC,CAAC,GAAGukD,WAAW,CAAC3J,WAAW;QACzDp4B,IAAI,GAAG,IAAI,CAACshC,uBAAuB,CAAC9jD,CAAC,CAAC;QACtC2iB,UAAU,GAAGH,IAAI,CAACG,UAAU;QAC5BwjC,SAAS,GAAG/nD,OAAO,CAACw3C,KAAK,CAAC,GAAGA,KAAK,CAACz1C,MAAM,GAAG,CAAC;QAC7C,MAAMomD,SAAS,GAAGJ,SAAS,GAAG,CAAC;QAC/B,MAAM/lC,KAAK,GAAGwlC,WAAW,CAACxlC,KAAK;QAC/B,MAAM6N,WAAW,GAAG23B,WAAW,CAACnL,eAAe;QAC/C,MAAMzsB,WAAW,GAAG43B,WAAW,CAACpL,eAAe;QAC/C,IAAIgM,aAAa,GAAG73B,SAAS;QAC7B,IAAIsU,YAAY,EAAE;UAChBxgC,CAAC,GAAGwoB,KAAK;UACT,IAAI0D,SAAS,KAAK,OAAO,EAAE;YACzB,IAAI3uB,CAAC,KAAKO,IAAI,GAAG,CAAC,EAAE;cAClBimD,aAAa,GAAG,CAAC,IAAI,CAACjlD,OAAO,CAACxB,OAAO,GAAG,OAAO,GAAG,MAAM;YAC1D,CAAC,MAAM,IAAIC,CAAC,KAAK,CAAC,EAAE;cAClBwmD,aAAa,GAAG,CAAC,IAAI,CAACjlD,OAAO,CAACxB,OAAO,GAAG,MAAM,GAAG,OAAO;YAC1D,CAAC,MAAM;cACLymD,aAAa,GAAG,QAAQ;YAC1B;UACF;UACA,IAAInmB,QAAQ,KAAK,KAAK,EAAE;YACtB,IAAI0a,UAAU,KAAK,MAAM,IAAIpvB,QAAQ,KAAK,CAAC,EAAE;cAC3Cy6B,UAAU,GAAG,CAACD,SAAS,GAAGxjC,UAAU,GAAGA,UAAU,GAAG,CAAC;YACvD,CAAC,MAAM,IAAIo4B,UAAU,KAAK,QAAQ,EAAE;cAClCqL,UAAU,GAAG,CAACnE,UAAU,CAACK,OAAO,CAAC/7B,MAAM,GAAG,CAAC,GAAGggC,SAAS,GAAG5jC,UAAU,GAAGA,UAAU;YACnF,CAAC,MAAM;cACLyjC,UAAU,GAAG,CAACnE,UAAU,CAACK,OAAO,CAAC/7B,MAAM,GAAG5D,UAAU,GAAG,CAAC;YAC1D;UACF,CAAC,MAAM;YACL,IAAIo4B,UAAU,KAAK,MAAM,IAAIpvB,QAAQ,KAAK,CAAC,EAAE;cAC3Cy6B,UAAU,GAAGzjC,UAAU,GAAG,CAAC;YAC7B,CAAC,MAAM,IAAIo4B,UAAU,KAAK,QAAQ,EAAE;cAClCqL,UAAU,GAAGnE,UAAU,CAACK,OAAO,CAAC/7B,MAAM,GAAG,CAAC,GAAGggC,SAAS,GAAG5jC,UAAU;YACrE,CAAC,MAAM;cACLyjC,UAAU,GAAGnE,UAAU,CAACK,OAAO,CAAC/7B,MAAM,GAAG4/B,SAAS,GAAGxjC,UAAU;YACjE;UACF;UACA,IAAI43B,MAAM,EAAE;YACV6L,UAAU,IAAI,CAAC,CAAC;UAClB;QACF,CAAC,MAAM;UACLzjD,CAAC,GAAGsoB,KAAK;UACTm7B,UAAU,GAAG,CAAC,CAAC,GAAGD,SAAS,IAAIxjC,UAAU,GAAG,CAAC;QAC/C;QACA,IAAI8jC,QAAQ;QACZ,IAAIb,WAAW,CAAC5K,iBAAiB,EAAE;UACjC,MAAM0L,YAAY,GAAG9rB,SAAS,CAACgrB,WAAW,CAAC1K,eAAe,CAAC;UAC3D,MAAM30B,MAAM,GAAG07B,UAAU,CAACwB,OAAO,CAACzjD,CAAC,CAAC;UACpC,MAAMsmB,KAAK,GAAG27B,UAAU,CAACuB,MAAM,CAACxjD,CAAC,CAAC;UAClC,IAAIwmB,GAAG,GAAG7jB,CAAC,GAAGyjD,UAAU,GAAGM,YAAY,CAAClgC,GAAG;UAC3C,IAAIva,IAAI,GAAGxJ,CAAC,GAAGikD,YAAY,CAACz6C,IAAI;UAChC,QAAQ2iB,YAAY;YACpB,KAAK,QAAQ;cACXpI,GAAG,IAAID,MAAM,GAAG,CAAC;cACjB;YACF,KAAK,QAAQ;cACXC,GAAG,IAAID,MAAM;cACb;UACF;UACA,QAAQoI,SAAS;YACjB,KAAK,QAAQ;cACX1iB,IAAI,IAAIqa,KAAK,GAAG,CAAC;cACjB;YACF,KAAK,OAAO;cACVra,IAAI,IAAIqa,KAAK;cACb;UACF;UACAmgC,QAAQ,GAAG;YACTx6C,IAAI;YACJua,GAAG;YACHF,KAAK,EAAEA,KAAK,GAAGogC,YAAY,CAACpgC,KAAK;YACjCC,MAAM,EAAEA,MAAM,GAAGmgC,YAAY,CAACngC,MAAM;YACpCnG,KAAK,EAAEwlC,WAAW,CAAC3K;UACrB,CAAC;QACH;QACA1wC,KAAK,CAAClH,IAAI,CAAC;UACTsoB,QAAQ;UACRiqB,KAAK;UACLpzB,IAAI;UACJpC,KAAK;UACL6N,WAAW;UACXD,WAAW;UACXo4B,UAAU;UACVz3B,SAAS,EAAE63B,aAAa;UACxB53B,YAAY;UACZH,WAAW,EAAE,CAAChsB,CAAC,EAAEE,CAAC,CAAC;UACnB8jD;QACF,CAAC,CAAC;MACJ;MACA,OAAOl8C,KAAK;IACd;IACA87C,uBAAuBA,CAAA,EAAG;MACxB,MAAM;QAAChmB,QAAQ;QAAE6Y;MAAK,CAAC,GAAG,IAAI,CAAC33C,OAAO;MACtC,MAAMoqB,QAAQ,GAAG,CAAChlB,SAAS,CAAC,IAAI,CAAC+3C,aAAa,CAAC;MAC/C,IAAI/yB,QAAQ,EAAE;QACZ,OAAO0U,QAAQ,KAAK,KAAK,GAAG,MAAM,GAAG,OAAO;MAC9C;MACA,IAAIv0B,KAAK,GAAG,QAAQ;MACpB,IAAIotC,KAAK,CAACptC,KAAK,KAAK,OAAO,EAAE;QAC3BA,KAAK,GAAG,MAAM;MAChB,CAAC,MAAM,IAAIotC,KAAK,CAACptC,KAAK,KAAK,KAAK,EAAE;QAChCA,KAAK,GAAG,OAAO;MACjB,CAAC,MAAM,IAAIotC,KAAK,CAACptC,KAAK,KAAK,OAAO,EAAE;QAClCA,KAAK,GAAG,OAAO;MACjB;MACA,OAAOA,KAAK;IACd;IACAw6C,uBAAuBA,CAAC3B,EAAE,EAAE;MAC1B,MAAM;QAACtkB,QAAQ;QAAE6Y,KAAK,EAAE;UAAC6B,UAAU;UAAER,MAAM;UAAEvU;QAAO;MAAC,CAAC,GAAG,IAAI,CAACzkC,OAAO;MACrE,MAAM0gD,UAAU,GAAG,IAAI,CAACC,cAAc,CAAC,CAAC;MACxC,MAAM+D,cAAc,GAAGtB,EAAE,GAAG3e,OAAO;MACnC,MAAMoc,MAAM,GAAGH,UAAU,CAACG,MAAM,CAAC97B,KAAK;MACtC,IAAIqI,SAAS;MACb,IAAIlsB,CAAC;MACL,IAAI49B,QAAQ,KAAK,MAAM,EAAE;QACvB,IAAIka,MAAM,EAAE;UACV93C,CAAC,GAAG,IAAI,CAACyJ,KAAK,GAAG85B,OAAO;UACxB,IAAI+U,UAAU,KAAK,MAAM,EAAE;YACzBpsB,SAAS,GAAG,MAAM;UACpB,CAAC,MAAM,IAAIosB,UAAU,KAAK,QAAQ,EAAE;YAClCpsB,SAAS,GAAG,QAAQ;YACpBlsB,CAAC,IAAK2/C,MAAM,GAAG,CAAE;UACnB,CAAC,MAAM;YACLzzB,SAAS,GAAG,OAAO;YACnBlsB,CAAC,IAAI2/C,MAAM;UACb;QACF,CAAC,MAAM;UACL3/C,CAAC,GAAG,IAAI,CAACyJ,KAAK,GAAG+5C,cAAc;UAC/B,IAAIlL,UAAU,KAAK,MAAM,EAAE;YACzBpsB,SAAS,GAAG,OAAO;UACrB,CAAC,MAAM,IAAIosB,UAAU,KAAK,QAAQ,EAAE;YAClCpsB,SAAS,GAAG,QAAQ;YACpBlsB,CAAC,IAAK2/C,MAAM,GAAG,CAAE;UACnB,CAAC,MAAM;YACLzzB,SAAS,GAAG,MAAM;YAClBlsB,CAAC,GAAG,IAAI,CAACwJ,IAAI;UACf;QACF;MACF,CAAC,MAAM,IAAIo0B,QAAQ,KAAK,OAAO,EAAE;QAC/B,IAAIka,MAAM,EAAE;UACV93C,CAAC,GAAG,IAAI,CAACwJ,IAAI,GAAG+5B,OAAO;UACvB,IAAI+U,UAAU,KAAK,MAAM,EAAE;YACzBpsB,SAAS,GAAG,OAAO;UACrB,CAAC,MAAM,IAAIosB,UAAU,KAAK,QAAQ,EAAE;YAClCpsB,SAAS,GAAG,QAAQ;YACpBlsB,CAAC,IAAK2/C,MAAM,GAAG,CAAE;UACnB,CAAC,MAAM;YACLzzB,SAAS,GAAG,MAAM;YAClBlsB,CAAC,IAAI2/C,MAAM;UACb;QACF,CAAC,MAAM;UACL3/C,CAAC,GAAG,IAAI,CAACwJ,IAAI,GAAGg6C,cAAc;UAC9B,IAAIlL,UAAU,KAAK,MAAM,EAAE;YACzBpsB,SAAS,GAAG,MAAM;UACpB,CAAC,MAAM,IAAIosB,UAAU,KAAK,QAAQ,EAAE;YAClCpsB,SAAS,GAAG,QAAQ;YACpBlsB,CAAC,IAAI2/C,MAAM,GAAG,CAAC;UACjB,CAAC,MAAM;YACLzzB,SAAS,GAAG,OAAO;YACnBlsB,CAAC,GAAG,IAAI,CAACyJ,KAAK;UAChB;QACF;MACF,CAAC,MAAM;QACLyiB,SAAS,GAAG,OAAO;MACrB;MACA,OAAO;QAACA,SAAS;QAAElsB;MAAC,CAAC;IACvB;IACAkkD,iBAAiBA,CAAA,EAAG;MAClB,IAAI,IAAI,CAACplD,OAAO,CAAC23C,KAAK,CAACqB,MAAM,EAAE;QAC7B;MACF;MACA,MAAMjsC,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,MAAM+xB,QAAQ,GAAG,IAAI,CAAC9+B,OAAO,CAAC8+B,QAAQ;MACtC,IAAIA,QAAQ,KAAK,MAAM,IAAIA,QAAQ,KAAK,OAAO,EAAE;QAC/C,OAAO;UAAC7Z,GAAG,EAAE,CAAC;UAAEva,IAAI,EAAE,IAAI,CAACA,IAAI;UAAEwa,MAAM,EAAEnY,KAAK,CAACiY,MAAM;UAAEra,KAAK,EAAE,IAAI,CAACA;QAAK,CAAC;MAC3E;MAAE,IAAIm0B,QAAQ,KAAK,KAAK,IAAIA,QAAQ,KAAK,QAAQ,EAAE;QACjD,OAAO;UAAC7Z,GAAG,EAAE,IAAI,CAACA,GAAG;UAAEva,IAAI,EAAE,CAAC;UAAEwa,MAAM,EAAE,IAAI,CAACA,MAAM;UAAEva,KAAK,EAAEoC,KAAK,CAACgY;QAAK,CAAC;MAC1E;IACF;IACAsgC,cAAcA,CAAA,EAAG;MACf,MAAM;QAAC9jC,GAAG;QAAEvhB,OAAO,EAAE;UAACwgB;QAAe,CAAC;QAAE9V,IAAI;QAAEua,GAAG;QAAEF,KAAK;QAAEC;MAAM,CAAC,GAAG,IAAI;MACxE,IAAIxE,eAAe,EAAE;QACnBe,GAAG,CAAC4H,IAAI,CAAC,CAAC;QACV5H,GAAG,CAAC4L,SAAS,GAAG3M,eAAe;QAC/Be,GAAG,CAAC+jC,QAAQ,CAAC56C,IAAI,EAAEua,GAAG,EAAEF,KAAK,EAAEC,MAAM,CAAC;QACtCzD,GAAG,CAACgI,OAAO,CAAC,CAAC;MACf;IACF;IACAg8B,oBAAoBA,CAAC3oD,KAAK,EAAE;MAC1B,MAAM07C,IAAI,GAAG,IAAI,CAACt4C,OAAO,CAACs4C,IAAI;MAC9B,IAAI,CAAC,IAAI,CAACmI,UAAU,CAAC,CAAC,IAAI,CAACnI,IAAI,CAAC/S,OAAO,EAAE;QACvC,OAAO,CAAC;MACV;MACA,MAAMoS,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,MAAMv4C,KAAK,GAAGu4C,KAAK,CAAC6N,SAAS,CAACxnC,CAAC,IAAIA,CAAC,CAACphB,KAAK,KAAKA,KAAK,CAAC;MACrD,IAAIwC,KAAK,IAAI,CAAC,EAAE;QACd,MAAMmtB,IAAI,GAAG+rB,IAAI,CAAC/nB,UAAU,CAAC,IAAI,CAAC1G,UAAU,CAACzqB,KAAK,CAAC,CAAC;QACpD,OAAOmtB,IAAI,CAACO,SAAS;MACvB;MACA,OAAO,CAAC;IACV;IACA24B,QAAQA,CAAC9lB,SAAS,EAAE;MAClB,MAAM2Y,IAAI,GAAG,IAAI,CAACt4C,OAAO,CAACs4C,IAAI;MAC9B,MAAM/2B,GAAG,GAAG,IAAI,CAACA,GAAG;MACpB,MAAMvY,KAAK,GAAG,IAAI,CAACq0C,cAAc,KAAK,IAAI,CAACA,cAAc,GAAG,IAAI,CAAC6F,qBAAqB,CAACvjB,SAAS,CAAC,CAAC;MAClG,IAAIlhC,CAAC,EAAEO,IAAI;MACX,MAAM0mD,QAAQ,GAAGA,CAAC5zC,EAAE,EAAEC,EAAE,EAAEoP,KAAK,KAAK;QAClC,IAAI,CAACA,KAAK,CAAC4D,KAAK,IAAI,CAAC5D,KAAK,CAACtC,KAAK,EAAE;UAChC;QACF;QACA0C,GAAG,CAAC4H,IAAI,CAAC,CAAC;QACV5H,GAAG,CAACuL,SAAS,GAAG3L,KAAK,CAAC4D,KAAK;QAC3BxD,GAAG,CAACsL,WAAW,GAAG1L,KAAK,CAACtC,KAAK;QAC7B0C,GAAG,CAACokC,WAAW,CAACxkC,KAAK,CAAC2c,UAAU,IAAI,EAAE,CAAC;QACvCvc,GAAG,CAACqkC,cAAc,GAAGzkC,KAAK,CAAC4c,gBAAgB;QAC3Cxc,GAAG,CAACkJ,SAAS,CAAC,CAAC;QACflJ,GAAG,CAACsJ,MAAM,CAAC/Y,EAAE,CAAC5Q,CAAC,EAAE4Q,EAAE,CAAC1Q,CAAC,CAAC;QACtBmgB,GAAG,CAACyJ,MAAM,CAACjZ,EAAE,CAAC7Q,CAAC,EAAE6Q,EAAE,CAAC3Q,CAAC,CAAC;QACtBmgB,GAAG,CAAC6J,MAAM,CAAC,CAAC;QACZ7J,GAAG,CAACgI,OAAO,CAAC,CAAC;MACf,CAAC;MACD,IAAI+uB,IAAI,CAAC/S,OAAO,EAAE;QAChB,KAAK9mC,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAGgK,KAAK,CAACpK,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;UAC9C,MAAMgE,IAAI,GAAGuG,KAAK,CAACvK,CAAC,CAAC;UACrB,IAAI65C,IAAI,CAACE,eAAe,EAAE;YACxBkN,QAAQ,CACN;cAACxkD,CAAC,EAAEuB,IAAI,CAACshD,EAAE;cAAE3iD,CAAC,EAAEqB,IAAI,CAACuhD;YAAE,CAAC,EACxB;cAAC9iD,CAAC,EAAEuB,IAAI,CAACwhD,EAAE;cAAE7iD,CAAC,EAAEqB,IAAI,CAACyhD;YAAE,CAAC,EACxBzhD,IACF,CAAC;UACH;UACA,IAAI61C,IAAI,CAACG,SAAS,EAAE;YAClBiN,QAAQ,CACN;cAACxkD,CAAC,EAAEuB,IAAI,CAACkhD,GAAG;cAAEviD,CAAC,EAAEqB,IAAI,CAACmhD;YAAG,CAAC,EAC1B;cAAC1iD,CAAC,EAAEuB,IAAI,CAACohD,GAAG;cAAEziD,CAAC,EAAEqB,IAAI,CAACqhD;YAAG,CAAC,EAC1B;cACEjlC,KAAK,EAAEpc,IAAI,CAACm2C,SAAS;cACrB7zB,KAAK,EAAEtiB,IAAI,CAACk2C,SAAS;cACrB7a,UAAU,EAAEr7B,IAAI,CAAC8hD,cAAc;cAC/BxmB,gBAAgB,EAAEt7B,IAAI,CAAC+hD;YACzB,CACF,CAAC;UACH;QACF;MACF;IACF;IACAjM,UAAUA,CAAA,EAAG;MACX,MAAM;QAACxrC,KAAK;QAAEwU,GAAG;QAAEvhB,OAAO,EAAE;UAACs4C;QAAI;MAAC,CAAC,GAAG,IAAI;MAC1C,MAAM+K,UAAU,GAAG/K,IAAI,CAAC/nB,UAAU,CAAC,IAAI,CAAC1G,UAAU,CAAC,CAAC,CAAC;MACrD,MAAMy5B,SAAS,GAAGhL,IAAI,CAACC,UAAU,GAAG8K,UAAU,CAACl4B,WAAW,GAAG,CAAC;MAC9D,IAAI,CAACm4B,SAAS,EAAE;QACd;MACF;MACA,MAAMuC,aAAa,GAAGvN,IAAI,CAAC/nB,UAAU,CAAC,IAAI,CAAC1G,UAAU,CAAC,CAAC,CAAC,CAAC,CAACiD,SAAS;MACnE,MAAM22B,WAAW,GAAG,IAAI,CAAC3F,YAAY;MACrC,IAAIiG,EAAE,EAAEE,EAAE,EAAED,EAAE,EAAEE,EAAE;MAClB,IAAI,IAAI,CAACxiB,YAAY,CAAC,CAAC,EAAE;QACvBqiB,EAAE,GAAGt6B,WAAW,CAAC1c,KAAK,EAAE,IAAI,CAACrC,IAAI,EAAE44C,SAAS,CAAC,GAAGA,SAAS,GAAG,CAAC;QAC7DW,EAAE,GAAGx6B,WAAW,CAAC1c,KAAK,EAAE,IAAI,CAACpC,KAAK,EAAEk7C,aAAa,CAAC,GAAGA,aAAa,GAAG,CAAC;QACtE7B,EAAE,GAAGE,EAAE,GAAGT,WAAW;MACvB,CAAC,MAAM;QACLO,EAAE,GAAGv6B,WAAW,CAAC1c,KAAK,EAAE,IAAI,CAACkY,GAAG,EAAEq+B,SAAS,CAAC,GAAGA,SAAS,GAAG,CAAC;QAC5DY,EAAE,GAAGz6B,WAAW,CAAC1c,KAAK,EAAE,IAAI,CAACmY,MAAM,EAAE2gC,aAAa,CAAC,GAAGA,aAAa,GAAG,CAAC;QACvE9B,EAAE,GAAGE,EAAE,GAAGR,WAAW;MACvB;MACAliC,GAAG,CAAC4H,IAAI,CAAC,CAAC;MACV5H,GAAG,CAACuL,SAAS,GAAGu2B,UAAU,CAACl4B,WAAW;MACtC5J,GAAG,CAACsL,WAAW,GAAGw2B,UAAU,CAAC5iC,WAAW;MACxCc,GAAG,CAACkJ,SAAS,CAAC,CAAC;MACflJ,GAAG,CAACsJ,MAAM,CAACk5B,EAAE,EAAEC,EAAE,CAAC;MAClBziC,GAAG,CAACyJ,MAAM,CAACi5B,EAAE,EAAEC,EAAE,CAAC;MAClB3iC,GAAG,CAAC6J,MAAM,CAAC,CAAC;MACZ7J,GAAG,CAACgI,OAAO,CAAC,CAAC;IACf;IACAu8B,UAAUA,CAACnmB,SAAS,EAAE;MACpB,MAAMqjB,WAAW,GAAG,IAAI,CAAChjD,OAAO,CAAC23C,KAAK;MACtC,IAAI,CAACqL,WAAW,CAACzd,OAAO,EAAE;QACxB;MACF;MACA,MAAMhkB,GAAG,GAAG,IAAI,CAACA,GAAG;MACpB,MAAMgK,IAAI,GAAG,IAAI,CAAC65B,iBAAiB,CAAC,CAAC;MACrC,IAAI75B,IAAI,EAAE;QACRE,QAAQ,CAAClK,GAAG,EAAEgK,IAAI,CAAC;MACrB;MACA,MAAMviB,KAAK,GAAG,IAAI,CAACs0C,WAAW,KAAK,IAAI,CAACA,WAAW,GAAG,IAAI,CAACmH,kBAAkB,CAAC9kB,SAAS,CAAC,CAAC;MACzF,IAAIlhC,CAAC,EAAEO,IAAI;MACX,KAAKP,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAGgK,KAAK,CAACpK,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;QAC9C,MAAMgE,IAAI,GAAGuG,KAAK,CAACvK,CAAC,CAAC;QACrB,MAAM4jD,QAAQ,GAAG5/C,IAAI,CAACwe,IAAI;QAC1B,MAAMozB,KAAK,GAAG5xC,IAAI,CAAC4xC,KAAK;QACxB,IAAI5xC,IAAI,CAACyiD,QAAQ,EAAE;UACjB3jC,GAAG,CAAC4L,SAAS,GAAG1qB,IAAI,CAACyiD,QAAQ,CAACrmC,KAAK;UACnC0C,GAAG,CAAC+jC,QAAQ,CAAC7iD,IAAI,CAACyiD,QAAQ,CAACx6C,IAAI,EAAEjI,IAAI,CAACyiD,QAAQ,CAACjgC,GAAG,EAAExiB,IAAI,CAACyiD,QAAQ,CAACngC,KAAK,EAAEtiB,IAAI,CAACyiD,QAAQ,CAAClgC,MAAM,CAAC;QAChG;QACA,IAAI5jB,CAAC,GAAGqB,IAAI,CAACoiD,UAAU;QACvBx4B,UAAU,CAAC9K,GAAG,EAAE8yB,KAAK,EAAE,CAAC,EAAEjzC,CAAC,EAAEihD,QAAQ,EAAE5/C,IAAI,CAAC;MAC9C;MACA,IAAI8oB,IAAI,EAAE;QACRI,UAAU,CAACpK,GAAG,CAAC;MACjB;IACF;IACAwkC,SAASA,CAAA,EAAG;MACV,MAAM;QAACxkC,GAAG;QAAEvhB,OAAO,EAAE;UAAC8+B,QAAQ;UAAE+Z,KAAK;UAAEr6C;QAAO;MAAC,CAAC,GAAG,IAAI;MACvD,IAAI,CAACq6C,KAAK,CAACtT,OAAO,EAAE;QAClB;MACF;MACA,MAAMtkB,IAAI,GAAGqY,MAAM,CAACuf,KAAK,CAAC53B,IAAI,CAAC;MAC/B,MAAMwjB,OAAO,GAAGpL,SAAS,CAACwf,KAAK,CAACpU,OAAO,CAAC;MACxC,MAAMl6B,KAAK,GAAGsuC,KAAK,CAACtuC,KAAK;MACzB,IAAI8tC,MAAM,GAAGp3B,IAAI,CAACG,UAAU,GAAG,CAAC;MAChC,IAAI0d,QAAQ,KAAK,QAAQ,IAAIA,QAAQ,KAAK,QAAQ,IAAIzhC,QAAQ,CAACyhC,QAAQ,CAAC,EAAE;QACxEuZ,MAAM,IAAI5T,OAAO,CAACvf,MAAM;QACxB,IAAIroB,OAAO,CAACg8C,KAAK,CAACvsB,IAAI,CAAC,EAAE;UACvB+rB,MAAM,IAAIp3B,IAAI,CAACG,UAAU,IAAIy3B,KAAK,CAACvsB,IAAI,CAAC1tB,MAAM,GAAG,CAAC,CAAC;QACrD;MACF,CAAC,MAAM;QACLy5C,MAAM,IAAI5T,OAAO,CAACxf,GAAG;MACvB;MACA,MAAM;QAACy3B,MAAM;QAAEC,MAAM;QAAEl2B,QAAQ;QAAE2D;MAAQ,CAAC,GAAGqyB,SAAS,CAAC,IAAI,EAAEpE,MAAM,EAAEvZ,QAAQ,EAAEv0B,KAAK,CAAC;MACrF8hB,UAAU,CAAC9K,GAAG,EAAEs3B,KAAK,CAACvsB,IAAI,EAAE,CAAC,EAAE,CAAC,EAAErL,IAAI,EAAE;QACtCpC,KAAK,EAAEg6B,KAAK,CAACh6B,KAAK;QAClB4H,QAAQ;QACR2D,QAAQ;QACRgD,SAAS,EAAEovB,UAAU,CAACjyC,KAAK,EAAEu0B,QAAQ,EAAEtgC,OAAO,CAAC;QAC/C6uB,YAAY,EAAE,QAAQ;QACtBH,WAAW,EAAE,CAACwvB,MAAM,EAAEC,MAAM;MAC9B,CAAC,CAAC;IACJ;IACA9uC,IAAIA,CAAC8xB,SAAS,EAAE;MACd,IAAI,CAAC,IAAI,CAAC8gB,UAAU,CAAC,CAAC,EAAE;QACtB;MACF;MACA,IAAI,CAAC4E,cAAc,CAAC,CAAC;MACrB,IAAI,CAACI,QAAQ,CAAC9lB,SAAS,CAAC;MACxB,IAAI,CAAC4Y,UAAU,CAAC,CAAC;MACjB,IAAI,CAACwN,SAAS,CAAC,CAAC;MAChB,IAAI,CAACD,UAAU,CAACnmB,SAAS,CAAC;IAC5B;IACAiF,OAAOA,CAAA,EAAG;MACR,MAAMrY,IAAI,GAAG,IAAI,CAACvsB,OAAO;MACzB,MAAMgmD,EAAE,GAAGz5B,IAAI,CAACorB,KAAK,IAAIprB,IAAI,CAACorB,KAAK,CAAC9S,CAAC,IAAI,CAAC;MAC1C,MAAMohB,EAAE,GAAGtoD,cAAc,CAAC4uB,IAAI,CAAC+rB,IAAI,IAAI/rB,IAAI,CAAC+rB,IAAI,CAACzT,CAAC,EAAE,CAAC,CAAC,CAAC;MACvD,IAAI,CAAC,IAAI,CAAC4b,UAAU,CAAC,CAAC,IAAI,IAAI,CAAC5yC,IAAI,KAAKgvC,KAAK,CAAC5/C,SAAS,CAAC4Q,IAAI,EAAE;QAC5D,OAAO,CAAC;UACNg3B,CAAC,EAAEmhB,EAAE;UACLn4C,IAAI,EAAG8xB,SAAS,IAAK;YACnB,IAAI,CAAC9xB,IAAI,CAAC8xB,SAAS,CAAC;UACtB;QACF,CAAC,CAAC;MACJ;MACA,OAAO,CAAC;QACNkF,CAAC,EAAEohB,EAAE;QACLp4C,IAAI,EAAG8xB,SAAS,IAAK;UACnB,IAAI,CAAC0lB,cAAc,CAAC,CAAC;UACrB,IAAI,CAACI,QAAQ,CAAC9lB,SAAS,CAAC;UACxB,IAAI,CAAComB,SAAS,CAAC,CAAC;QAClB;MACF,CAAC,EAAE;QACDlhB,CAAC,EAAEohB,EAAE,GAAG,CAAC;QACTp4C,IAAI,EAAEA,CAAA,KAAM;UACV,IAAI,CAAC0qC,UAAU,CAAC,CAAC;QACnB;MACF,CAAC,EAAE;QACD1T,CAAC,EAAEmhB,EAAE;QACLn4C,IAAI,EAAG8xB,SAAS,IAAK;UACnB,IAAI,CAACmmB,UAAU,CAACnmB,SAAS,CAAC;QAC5B;MACF,CAAC,CAAC;IACJ;IACA6O,uBAAuBA,CAACzxC,IAAI,EAAE;MAC5B,MAAMqhD,KAAK,GAAG,IAAI,CAACrxC,KAAK,CAACkyB,4BAA4B,CAAC,CAAC;MACvD,MAAMinB,MAAM,GAAG,IAAI,CAAC36C,IAAI,GAAG,QAAQ;MACnC,MAAMnH,MAAM,GAAG,EAAE;MACjB,IAAI3F,CAAC,EAAEO,IAAI;MACX,KAAKP,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAGo/C,KAAK,CAACx/C,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;QAC9C,MAAMsM,IAAI,GAAGqzC,KAAK,CAAC3/C,CAAC,CAAC;QACrB,IAAIsM,IAAI,CAACm7C,MAAM,CAAC,KAAK,IAAI,CAACxpD,EAAE,KAAK,CAACK,IAAI,IAAIgO,IAAI,CAAChO,IAAI,KAAKA,IAAI,CAAC,EAAE;UAC7DqH,MAAM,CAACtC,IAAI,CAACiJ,IAAI,CAAC;QACnB;MACF;MACA,OAAO3G,MAAM;IACf;IACAm+C,uBAAuBA,CAACnjD,KAAK,EAAE;MAC7B,MAAMmtB,IAAI,GAAG,IAAI,CAACvsB,OAAO,CAAC23C,KAAK,CAACpnB,UAAU,CAAC,IAAI,CAAC1G,UAAU,CAACzqB,KAAK,CAAC,CAAC;MAClE,OAAOk6B,MAAM,CAAC/M,IAAI,CAACtL,IAAI,CAAC;IAC1B;IACAklC,UAAUA,CAAA,EAAG;MACX,MAAMC,QAAQ,GAAG,IAAI,CAAC7D,uBAAuB,CAAC,CAAC,CAAC,CAACnhC,UAAU;MAC3D,OAAO,CAAC,IAAI,CAACsgB,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC3c,KAAK,GAAG,IAAI,CAACC,MAAM,IAAIohC,QAAQ;IACpE;EACF;EAEA,MAAMC,aAAa,CAAC;IAClB75C,WAAWA,CAACzP,IAAI,EAAE2D,KAAK,EAAEgiB,QAAQ,EAAE;MACjC,IAAI,CAAC3lB,IAAI,GAAGA,IAAI;MAChB,IAAI,CAAC2D,KAAK,GAAGA,KAAK;MAClB,IAAI,CAACgiB,QAAQ,GAAGA,QAAQ;MACxB,IAAI,CAAC1Z,KAAK,GAAGhM,MAAM,CAACyC,MAAM,CAAC,IAAI,CAAC;IAClC;IACA6mD,SAASA,CAACvpD,IAAI,EAAE;MACd,OAAOC,MAAM,CAACC,SAAS,CAACspD,aAAa,CAACppD,IAAI,CAAC,IAAI,CAACJ,IAAI,CAACE,SAAS,EAAEF,IAAI,CAACE,SAAS,CAAC;IACjF;IACAupD,QAAQA,CAAC/jD,IAAI,EAAE;MACb,MAAM2b,KAAK,GAAGphB,MAAM,CAACyyB,cAAc,CAAChtB,IAAI,CAAC;MACzC,IAAIgkD,WAAW;MACf,IAAIC,iBAAiB,CAACtoC,KAAK,CAAC,EAAE;QAC5BqoC,WAAW,GAAG,IAAI,CAACD,QAAQ,CAACpoC,KAAK,CAAC;MACpC;MACA,MAAMpV,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,MAAMtM,EAAE,GAAG+F,IAAI,CAAC/F,EAAE;MAClB,MAAMgE,KAAK,GAAG,IAAI,CAACA,KAAK,GAAG,GAAG,GAAGhE,EAAE;MACnC,IAAI,CAACA,EAAE,EAAE;QACP,MAAM,IAAI40B,KAAK,CAAC,0BAA0B,GAAG7uB,IAAI,CAAC;MACpD;MACA,IAAI/F,EAAE,IAAIsM,KAAK,EAAE;QACf,OAAOtI,KAAK;MACd;MACAsI,KAAK,CAACtM,EAAE,CAAC,GAAG+F,IAAI;MAChBkkD,gBAAgB,CAAClkD,IAAI,EAAE/B,KAAK,EAAE+lD,WAAW,CAAC;MAC1C,IAAI,IAAI,CAAC/jC,QAAQ,EAAE;QACjBW,QAAQ,CAACX,QAAQ,CAACjgB,IAAI,CAAC/F,EAAE,EAAE+F,IAAI,CAACud,SAAS,CAAC;MAC5C;MACA,OAAOtf,KAAK;IACd;IACAyN,GAAGA,CAACzR,EAAE,EAAE;MACN,OAAO,IAAI,CAACsM,KAAK,CAACtM,EAAE,CAAC;IACvB;IACAkqD,UAAUA,CAACnkD,IAAI,EAAE;MACf,MAAMuG,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,MAAMtM,EAAE,GAAG+F,IAAI,CAAC/F,EAAE;MAClB,MAAMgE,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAIhE,EAAE,IAAIsM,KAAK,EAAE;QACf,OAAOA,KAAK,CAACtM,EAAE,CAAC;MAClB;MACA,IAAIgE,KAAK,IAAIhE,EAAE,IAAI2mB,QAAQ,CAAC3iB,KAAK,CAAC,EAAE;QAClC,OAAO2iB,QAAQ,CAAC3iB,KAAK,CAAC,CAAChE,EAAE,CAAC;QAC1B,IAAI,IAAI,CAACgmB,QAAQ,EAAE;UACjB,OAAO1C,SAAS,CAACtjB,EAAE,CAAC;QACtB;MACF;IACF;EACF;EACA,SAASiqD,gBAAgBA,CAAClkD,IAAI,EAAE/B,KAAK,EAAE+lD,WAAW,EAAE;IAClD,MAAMI,YAAY,GAAG1mD,KAAK,CAACnD,MAAM,CAACyC,MAAM,CAAC,IAAI,CAAC,EAAE,CAC9CgnD,WAAW,GAAGpjC,QAAQ,CAAClV,GAAG,CAACs4C,WAAW,CAAC,GAAG,CAAC,CAAC,EAC5CpjC,QAAQ,CAAClV,GAAG,CAACzN,KAAK,CAAC,EACnB+B,IAAI,CAAC4gB,QAAQ,CACd,CAAC;IACFA,QAAQ,CAACpa,GAAG,CAACvI,KAAK,EAAEmmD,YAAY,CAAC;IACjC,IAAIpkD,IAAI,CAAC80C,aAAa,EAAE;MACtBuP,aAAa,CAACpmD,KAAK,EAAE+B,IAAI,CAAC80C,aAAa,CAAC;IAC1C;IACA,IAAI90C,IAAI,CAACwd,WAAW,EAAE;MACpBoD,QAAQ,CAACZ,QAAQ,CAAC/hB,KAAK,EAAE+B,IAAI,CAACwd,WAAW,CAAC;IAC5C;EACF;EACA,SAAS6mC,aAAaA,CAACpmD,KAAK,EAAEqmD,MAAM,EAAE;IACpC/pD,MAAM,CAAC2B,IAAI,CAACooD,MAAM,CAAC,CAACx+C,OAAO,CAACtD,QAAQ,IAAI;MACtC,MAAM+hD,aAAa,GAAG/hD,QAAQ,CAACtD,KAAK,CAAC,GAAG,CAAC;MACzC,MAAMslD,UAAU,GAAGD,aAAa,CAACziD,GAAG,CAAC,CAAC;MACtC,MAAM2iD,WAAW,GAAG,CAACxmD,KAAK,CAAC,CAACmiC,MAAM,CAACmkB,aAAa,CAAC,CAACz1B,IAAI,CAAC,GAAG,CAAC;MAC3D,MAAM7vB,KAAK,GAAGqlD,MAAM,CAAC9hD,QAAQ,CAAC,CAACtD,KAAK,CAAC,GAAG,CAAC;MACzC,MAAMmhB,UAAU,GAAGphB,KAAK,CAAC6C,GAAG,CAAC,CAAC;MAC9B,MAAMse,WAAW,GAAGnhB,KAAK,CAAC6vB,IAAI,CAAC,GAAG,CAAC;MACnClO,QAAQ,CAACV,KAAK,CAACukC,WAAW,EAAED,UAAU,EAAEpkC,WAAW,EAAEC,UAAU,CAAC;IAClE,CAAC,CAAC;EACJ;EACA,SAAS4jC,iBAAiBA,CAACtoC,KAAK,EAAE;IAChC,OAAO,IAAI,IAAIA,KAAK,IAAI,UAAU,IAAIA,KAAK;EAC7C;EAEA,MAAM+oC,QAAQ,CAAC;IACb36C,WAAWA,CAAA,EAAG;MACZ,IAAI,CAAC46C,WAAW,GAAG,IAAIf,aAAa,CAACtW,iBAAiB,EAAE,UAAU,EAAE,IAAI,CAAC;MACzE,IAAI,CAAChvB,QAAQ,GAAG,IAAIslC,aAAa,CAAClP,OAAO,EAAE,UAAU,CAAC;MACtD,IAAI,CAACh1B,OAAO,GAAG,IAAIkkC,aAAa,CAACrpD,MAAM,EAAE,SAAS,CAAC;MACnD,IAAI,CAACslB,MAAM,GAAG,IAAI+jC,aAAa,CAACxJ,KAAK,EAAE,QAAQ,CAAC;MAChD,IAAI,CAACwK,gBAAgB,GAAG,CAAC,IAAI,CAACD,WAAW,EAAE,IAAI,CAAC9kC,MAAM,EAAE,IAAI,CAACvB,QAAQ,CAAC;IACxE;IACA5X,GAAGA,CAAC,GAAGhL,IAAI,EAAE;MACX,IAAI,CAACmpD,KAAK,CAAC,UAAU,EAAEnpD,IAAI,CAAC;IAC9B;IACA4Q,MAAMA,CAAC,GAAG5Q,IAAI,EAAE;MACd,IAAI,CAACmpD,KAAK,CAAC,YAAY,EAAEnpD,IAAI,CAAC;IAChC;IACAopD,cAAcA,CAAC,GAAGppD,IAAI,EAAE;MACtB,IAAI,CAACmpD,KAAK,CAAC,UAAU,EAAEnpD,IAAI,EAAE,IAAI,CAACipD,WAAW,CAAC;IAChD;IACAtW,WAAWA,CAAC,GAAG3yC,IAAI,EAAE;MACnB,IAAI,CAACmpD,KAAK,CAAC,UAAU,EAAEnpD,IAAI,EAAE,IAAI,CAAC4iB,QAAQ,CAAC;IAC7C;IACAymC,UAAUA,CAAC,GAAGrpD,IAAI,EAAE;MAClB,IAAI,CAACmpD,KAAK,CAAC,UAAU,EAAEnpD,IAAI,EAAE,IAAI,CAACgkB,OAAO,CAAC;IAC5C;IACAslC,SAASA,CAAC,GAAGtpD,IAAI,EAAE;MACjB,IAAI,CAACmpD,KAAK,CAAC,UAAU,EAAEnpD,IAAI,EAAE,IAAI,CAACmkB,MAAM,CAAC;IAC3C;IACAolC,aAAaA,CAAChrD,EAAE,EAAE;MAChB,OAAO,IAAI,CAACirD,IAAI,CAACjrD,EAAE,EAAE,IAAI,CAAC0qD,WAAW,EAAE,YAAY,CAAC;IACtD;IACAQ,UAAUA,CAAClrD,EAAE,EAAE;MACb,OAAO,IAAI,CAACirD,IAAI,CAACjrD,EAAE,EAAE,IAAI,CAACqkB,QAAQ,EAAE,SAAS,CAAC;IAChD;IACA8mC,SAASA,CAACnrD,EAAE,EAAE;MACZ,OAAO,IAAI,CAACirD,IAAI,CAACjrD,EAAE,EAAE,IAAI,CAACylB,OAAO,EAAE,QAAQ,CAAC;IAC9C;IACA2lC,QAAQA,CAACprD,EAAE,EAAE;MACX,OAAO,IAAI,CAACirD,IAAI,CAACjrD,EAAE,EAAE,IAAI,CAAC4lB,MAAM,EAAE,OAAO,CAAC;IAC5C;IACAylC,iBAAiBA,CAAC,GAAG5pD,IAAI,EAAE;MACzB,IAAI,CAACmpD,KAAK,CAAC,YAAY,EAAEnpD,IAAI,EAAE,IAAI,CAACipD,WAAW,CAAC;IAClD;IACAY,cAAcA,CAAC,GAAG7pD,IAAI,EAAE;MACtB,IAAI,CAACmpD,KAAK,CAAC,YAAY,EAAEnpD,IAAI,EAAE,IAAI,CAAC4iB,QAAQ,CAAC;IAC/C;IACAknC,aAAaA,CAAC,GAAG9pD,IAAI,EAAE;MACrB,IAAI,CAACmpD,KAAK,CAAC,YAAY,EAAEnpD,IAAI,EAAE,IAAI,CAACgkB,OAAO,CAAC;IAC9C;IACA+lC,YAAYA,CAAC,GAAG/pD,IAAI,EAAE;MACpB,IAAI,CAACmpD,KAAK,CAAC,YAAY,EAAEnpD,IAAI,EAAE,IAAI,CAACmkB,MAAM,CAAC;IAC7C;IACAglC,KAAKA,CAAC9+C,MAAM,EAAErK,IAAI,EAAEgqD,aAAa,EAAE;MACjC,CAAC,GAAGhqD,IAAI,CAAC,CAACoK,OAAO,CAAC6/C,GAAG,IAAI;QACvB,MAAMC,GAAG,GAAGF,aAAa,IAAI,IAAI,CAACG,mBAAmB,CAACF,GAAG,CAAC;QAC1D,IAAID,aAAa,IAAIE,GAAG,CAAC/B,SAAS,CAAC8B,GAAG,CAAC,IAAKC,GAAG,KAAK,IAAI,CAAClmC,OAAO,IAAIimC,GAAG,CAAC1rD,EAAG,EAAE;UAC3E,IAAI,CAAC6rD,KAAK,CAAC//C,MAAM,EAAE6/C,GAAG,EAAED,GAAG,CAAC;QAC9B,CAAC,MAAM;UACL9pD,IAAI,CAAC8pD,GAAG,EAAE3lD,IAAI,IAAI;YAChB,MAAM+lD,OAAO,GAAGL,aAAa,IAAI,IAAI,CAACG,mBAAmB,CAAC7lD,IAAI,CAAC;YAC/D,IAAI,CAAC8lD,KAAK,CAAC//C,MAAM,EAAEggD,OAAO,EAAE/lD,IAAI,CAAC;UACnC,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ;IACA8lD,KAAKA,CAAC//C,MAAM,EAAEigD,QAAQ,EAAEC,SAAS,EAAE;MACjC,MAAMC,WAAW,GAAG5mD,WAAW,CAACyG,MAAM,CAAC;MACvCvK,QAAQ,CAACyqD,SAAS,CAAC,QAAQ,GAAGC,WAAW,CAAC,EAAE,EAAE,EAAED,SAAS,CAAC;MAC1DD,QAAQ,CAACjgD,MAAM,CAAC,CAACkgD,SAAS,CAAC;MAC3BzqD,QAAQ,CAACyqD,SAAS,CAAC,OAAO,GAAGC,WAAW,CAAC,EAAE,EAAE,EAAED,SAAS,CAAC;IAC3D;IACAJ,mBAAmBA,CAACvrD,IAAI,EAAE;MACxB,KAAK,IAAI0B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC4oD,gBAAgB,CAACzoD,MAAM,EAAEH,CAAC,EAAE,EAAE;QACrD,MAAM4pD,GAAG,GAAG,IAAI,CAAChB,gBAAgB,CAAC5oD,CAAC,CAAC;QACpC,IAAI4pD,GAAG,CAAC/B,SAAS,CAACvpD,IAAI,CAAC,EAAE;UACvB,OAAOsrD,GAAG;QACZ;MACF;MACA,OAAO,IAAI,CAAClmC,OAAO;IACrB;IACAwlC,IAAIA,CAACjrD,EAAE,EAAEyrD,aAAa,EAAEprD,IAAI,EAAE;MAC5B,MAAM0F,IAAI,GAAG0lD,aAAa,CAACh6C,GAAG,CAACzR,EAAE,CAAC;MAClC,IAAI+F,IAAI,KAAK5B,SAAS,EAAE;QACtB,MAAM,IAAIywB,KAAK,CAAC,GAAG,GAAG50B,EAAE,GAAG,wBAAwB,GAAGK,IAAI,GAAG,GAAG,CAAC;MACnE;MACA,OAAO0F,IAAI;IACb;EACF;EACA,IAAIgmD,QAAQ,GAAG,IAAItB,QAAQ,CAAC,CAAC;EAE7B,MAAMyB,aAAa,CAAC;IAClBp8C,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACq8C,KAAK,GAAG,EAAE;IACjB;IACAC,MAAMA,CAAC/7C,KAAK,EAAEg8C,IAAI,EAAE5qD,IAAI,EAAEuzB,MAAM,EAAE;MAChC,IAAIq3B,IAAI,KAAK,YAAY,EAAE;QACzB,IAAI,CAACF,KAAK,GAAG,IAAI,CAACG,kBAAkB,CAACj8C,KAAK,EAAE,IAAI,CAAC;QACjD,IAAI,CAACD,OAAO,CAAC,IAAI,CAAC+7C,KAAK,EAAE97C,KAAK,EAAE,SAAS,CAAC;MAC5C;MACA,MAAMkT,WAAW,GAAGyR,MAAM,GAAG,IAAI,CAACpR,YAAY,CAACvT,KAAK,CAAC,CAAC2kB,MAAM,CAACA,MAAM,CAAC,GAAG,IAAI,CAACpR,YAAY,CAACvT,KAAK,CAAC;MAC/F,MAAM3I,MAAM,GAAG,IAAI,CAAC0I,OAAO,CAACmT,WAAW,EAAElT,KAAK,EAAEg8C,IAAI,EAAE5qD,IAAI,CAAC;MAC3D,IAAI4qD,IAAI,KAAK,cAAc,EAAE;QAC3B,IAAI,CAACj8C,OAAO,CAACmT,WAAW,EAAElT,KAAK,EAAE,MAAM,CAAC;QACxC,IAAI,CAACD,OAAO,CAAC,IAAI,CAAC+7C,KAAK,EAAE97C,KAAK,EAAE,WAAW,CAAC;MAC9C;MACA,OAAO3I,MAAM;IACf;IACA0I,OAAOA,CAACmT,WAAW,EAAElT,KAAK,EAAEg8C,IAAI,EAAE5qD,IAAI,EAAE;MACtCA,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;MACjB,KAAK,MAAM8qD,UAAU,IAAIhpC,WAAW,EAAE;QACpC,MAAMipC,MAAM,GAAGD,UAAU,CAACC,MAAM;QAChC,MAAM1gD,MAAM,GAAG0gD,MAAM,CAACH,IAAI,CAAC;QAC3B,MAAM9mB,MAAM,GAAG,CAACl1B,KAAK,EAAE5O,IAAI,EAAE8qD,UAAU,CAACjpD,OAAO,CAAC;QAChD,IAAI/B,QAAQ,CAACuK,MAAM,EAAEy5B,MAAM,EAAEinB,MAAM,CAAC,KAAK,KAAK,IAAI/qD,IAAI,CAACgrD,UAAU,EAAE;UACjE,OAAO,KAAK;QACd;MACF;MACA,OAAO,IAAI;IACb;IACAC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACzsD,aAAa,CAAC,IAAI,CAACohD,MAAM,CAAC,EAAE;QAC/B,IAAI,CAACsL,SAAS,GAAG,IAAI,CAACtL,MAAM;QAC5B,IAAI,CAACA,MAAM,GAAGl9C,SAAS;MACzB;IACF;IACAyf,YAAYA,CAACvT,KAAK,EAAE;MAClB,IAAI,IAAI,CAACgxC,MAAM,EAAE;QACf,OAAO,IAAI,CAACA,MAAM;MACpB;MACA,MAAM99B,WAAW,GAAG,IAAI,CAAC89B,MAAM,GAAG,IAAI,CAACiL,kBAAkB,CAACj8C,KAAK,CAAC;MAChE,IAAI,CAACu8C,mBAAmB,CAACv8C,KAAK,CAAC;MAC/B,OAAOkT,WAAW;IACpB;IACA+oC,kBAAkBA,CAACj8C,KAAK,EAAE6/B,GAAG,EAAE;MAC7B,MAAM/G,MAAM,GAAG94B,KAAK,IAAIA,KAAK,CAAC84B,MAAM;MACpC,MAAM7lC,OAAO,GAAGrC,cAAc,CAACkoC,MAAM,CAAC7lC,OAAO,IAAI6lC,MAAM,CAAC7lC,OAAO,CAACmiB,OAAO,EAAE,CAAC,CAAC,CAAC;MAC5E,MAAMA,OAAO,GAAGonC,UAAU,CAAC1jB,MAAM,CAAC;MAClC,OAAO7lC,OAAO,KAAK,KAAK,IAAI,CAAC4sC,GAAG,GAAG,EAAE,GAAG4c,iBAAiB,CAACz8C,KAAK,EAAEoV,OAAO,EAAEniB,OAAO,EAAE4sC,GAAG,CAAC;IACzF;IACA0c,mBAAmBA,CAACv8C,KAAK,EAAE;MACzB,MAAM08C,mBAAmB,GAAG,IAAI,CAACJ,SAAS,IAAI,EAAE;MAChD,MAAMppC,WAAW,GAAG,IAAI,CAAC89B,MAAM;MAC/B,MAAM1C,IAAI,GAAGA,CAAC/4C,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACovB,MAAM,CAACxwB,CAAC,IAAI,CAACqB,CAAC,CAACmnD,IAAI,CAACtoD,CAAC,IAAIF,CAAC,CAACgoD,MAAM,CAACxsD,EAAE,KAAK0E,CAAC,CAAC8nD,MAAM,CAACxsD,EAAE,CAAC,CAAC;MAC/E,IAAI,CAACoQ,OAAO,CAACuuC,IAAI,CAACoO,mBAAmB,EAAExpC,WAAW,CAAC,EAAElT,KAAK,EAAE,MAAM,CAAC;MACnE,IAAI,CAACD,OAAO,CAACuuC,IAAI,CAACp7B,WAAW,EAAEwpC,mBAAmB,CAAC,EAAE18C,KAAK,EAAE,OAAO,CAAC;IACtE;EACF;EACA,SAASw8C,UAAUA,CAAC1jB,MAAM,EAAE;IAC1B,MAAM8jB,QAAQ,GAAG,CAAC,CAAC;IACnB,MAAMxnC,OAAO,GAAG,EAAE;IAClB,MAAMxjB,IAAI,GAAG3B,MAAM,CAAC2B,IAAI,CAAC8pD,QAAQ,CAACtmC,OAAO,CAACnZ,KAAK,CAAC;IAChD,KAAK,IAAIvK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGE,IAAI,CAACC,MAAM,EAAEH,CAAC,EAAE,EAAE;MACpC0jB,OAAO,CAACrgB,IAAI,CAAC2mD,QAAQ,CAACZ,SAAS,CAAClpD,IAAI,CAACF,CAAC,CAAC,CAAC,CAAC;IAC3C;IACA,MAAM2kB,KAAK,GAAGyiB,MAAM,CAAC1jB,OAAO,IAAI,EAAE;IAClC,KAAK,IAAI1jB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2kB,KAAK,CAACxkB,MAAM,EAAEH,CAAC,EAAE,EAAE;MACrC,MAAMyqD,MAAM,GAAG9lC,KAAK,CAAC3kB,CAAC,CAAC;MACvB,IAAI0jB,OAAO,CAACriB,OAAO,CAACopD,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;QAClC/mC,OAAO,CAACrgB,IAAI,CAAConD,MAAM,CAAC;QACpBS,QAAQ,CAACT,MAAM,CAACxsD,EAAE,CAAC,GAAG,IAAI;MAC5B;IACF;IACA,OAAO;MAACylB,OAAO;MAAEwnC;IAAQ,CAAC;EAC5B;EACA,SAASC,OAAOA,CAAC5pD,OAAO,EAAE4sC,GAAG,EAAE;IAC7B,IAAI,CAACA,GAAG,IAAI5sC,OAAO,KAAK,KAAK,EAAE;MAC7B,OAAO,IAAI;IACb;IACA,IAAIA,OAAO,KAAK,IAAI,EAAE;MACpB,OAAO,CAAC,CAAC;IACX;IACA,OAAOA,OAAO;EAChB;EACA,SAASwpD,iBAAiBA,CAACz8C,KAAK,EAAE;IAACoV,OAAO;IAAEwnC;EAAQ,CAAC,EAAE3pD,OAAO,EAAE4sC,GAAG,EAAE;IACnE,MAAMxoC,MAAM,GAAG,EAAE;IACjB,MAAMwc,OAAO,GAAG7T,KAAK,CAAC8c,UAAU,CAAC,CAAC;IAClC,KAAK,MAAMq/B,MAAM,IAAI/mC,OAAO,EAAE;MAC5B,MAAMzlB,EAAE,GAAGwsD,MAAM,CAACxsD,EAAE;MACpB,MAAM6vB,IAAI,GAAGq9B,OAAO,CAAC5pD,OAAO,CAACtD,EAAE,CAAC,EAAEkwC,GAAG,CAAC;MACtC,IAAIrgB,IAAI,KAAK,IAAI,EAAE;QACjB;MACF;MACAnoB,MAAM,CAACtC,IAAI,CAAC;QACVonD,MAAM;QACNlpD,OAAO,EAAE6pD,UAAU,CAAC98C,KAAK,CAAC84B,MAAM,EAAE;UAACqjB,MAAM;UAAE9lC,KAAK,EAAEumC,QAAQ,CAACjtD,EAAE;QAAC,CAAC,EAAE6vB,IAAI,EAAE3L,OAAO;MAChF,CAAC,CAAC;IACJ;IACA,OAAOxc,MAAM;EACf;EACA,SAASylD,UAAUA,CAAChkB,MAAM,EAAE;IAACqjB,MAAM;IAAE9lC;EAAK,CAAC,EAAEmJ,IAAI,EAAE3L,OAAO,EAAE;IAC1D,MAAMjiB,IAAI,GAAGknC,MAAM,CAACikB,eAAe,CAACZ,MAAM,CAAC;IAC3C,MAAM76B,MAAM,GAAGwX,MAAM,CAAC+M,eAAe,CAACrmB,IAAI,EAAE5tB,IAAI,CAAC;IACjD,IAAIykB,KAAK,IAAI8lC,MAAM,CAAC7lC,QAAQ,EAAE;MAC5BgL,MAAM,CAACvsB,IAAI,CAAConD,MAAM,CAAC7lC,QAAQ,CAAC;IAC9B;IACA,OAAOwiB,MAAM,CAACgN,cAAc,CAACxkB,MAAM,EAAEzN,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE;MAClD+P,UAAU,EAAE,KAAK;MACjBC,SAAS,EAAE,KAAK;MAChBF,OAAO,EAAE;IACX,CAAC,CAAC;EACJ;EAEA,SAASq5B,YAAYA,CAAChtD,IAAI,EAAEiD,OAAO,EAAE;IACnC,MAAMgqD,eAAe,GAAG3mC,QAAQ,CAAC3C,QAAQ,CAAC3jB,IAAI,CAAC,IAAI,CAAC,CAAC;IACrD,MAAMktD,cAAc,GAAG,CAACjqD,OAAO,CAAC0gB,QAAQ,IAAI,CAAC,CAAC,EAAE3jB,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3D,OAAOktD,cAAc,CAACvoC,SAAS,IAAI1hB,OAAO,CAAC0hB,SAAS,IAAIsoC,eAAe,CAACtoC,SAAS,IAAI,GAAG;EAC1F;EACA,SAASwoC,yBAAyBA,CAACxtD,EAAE,EAAEglB,SAAS,EAAE;IAChD,IAAInW,IAAI,GAAG7O,EAAE;IACb,IAAIA,EAAE,KAAK,SAAS,EAAE;MACpB6O,IAAI,GAAGmW,SAAS;IAClB,CAAC,MAAM,IAAIhlB,EAAE,KAAK,SAAS,EAAE;MAC3B6O,IAAI,GAAGmW,SAAS,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG;IACtC;IACA,OAAOnW,IAAI;EACb;EACA,SAAS4+C,yBAAyBA,CAAC5+C,IAAI,EAAEmW,SAAS,EAAE;IAClD,OAAOnW,IAAI,KAAKmW,SAAS,GAAG,SAAS,GAAG,SAAS;EACnD;EACA,SAAS0oC,gBAAgBA,CAACtrB,QAAQ,EAAE;IAClC,IAAIA,QAAQ,KAAK,KAAK,IAAIA,QAAQ,KAAK,QAAQ,EAAE;MAC/C,OAAO,GAAG;IACZ;IACA,IAAIA,QAAQ,KAAK,MAAM,IAAIA,QAAQ,KAAK,OAAO,EAAE;MAC/C,OAAO,GAAG;IACZ;EACF;EACA,SAASurB,aAAaA,CAAC3tD,EAAE,EAAE4tD,YAAY,EAAE;IACvC,IAAI5tD,EAAE,KAAK,GAAG,IAAIA,EAAE,KAAK,GAAG,EAAE;MAC5B,OAAOA,EAAE;IACX;IACA,OAAO4tD,YAAY,CAAC/+C,IAAI,IAAI6+C,gBAAgB,CAACE,YAAY,CAACxrB,QAAQ,CAAC,IAAIpiC,EAAE,CAACuF,MAAM,CAAC,CAAC,CAAC,CAACub,WAAW,CAAC,CAAC;EACnG;EACA,SAAS+sC,gBAAgBA,CAAC1kB,MAAM,EAAE7lC,OAAO,EAAE;IACzC,MAAMwqD,aAAa,GAAGxqC,SAAS,CAAC6lB,MAAM,CAAC9oC,IAAI,CAAC,IAAI;MAACulB,MAAM,EAAE,CAAC;IAAC,CAAC;IAC5D,MAAMmoC,YAAY,GAAGzqD,OAAO,CAACsiB,MAAM,IAAI,CAAC,CAAC;IACzC,MAAMooC,cAAc,GAAGX,YAAY,CAAClkB,MAAM,CAAC9oC,IAAI,EAAEiD,OAAO,CAAC;IACzD,MAAM2qD,QAAQ,GAAG3tD,MAAM,CAACyC,MAAM,CAAC,IAAI,CAAC;IACpC,MAAM6iB,MAAM,GAAGtlB,MAAM,CAACyC,MAAM,CAAC,IAAI,CAAC;IAClCzC,MAAM,CAAC2B,IAAI,CAAC8rD,YAAY,CAAC,CAACliD,OAAO,CAAC7L,EAAE,IAAI;MACtC,MAAMkuD,SAAS,GAAGH,YAAY,CAAC/tD,EAAE,CAAC;MAClC,IAAI,CAACW,QAAQ,CAACutD,SAAS,CAAC,EAAE;QACxB,OAAO9pD,OAAO,CAAC+pD,KAAK,CAAE,0CAAyCnuD,EAAG,EAAC,CAAC;MACtE;MACA,IAAIkuD,SAAS,CAACz6B,MAAM,EAAE;QACpB,OAAOrvB,OAAO,CAACC,IAAI,CAAE,kDAAiDrE,EAAG,EAAC,CAAC;MAC7E;MACA,MAAM6O,IAAI,GAAG8+C,aAAa,CAAC3tD,EAAE,EAAEkuD,SAAS,CAAC;MACzC,MAAME,SAAS,GAAGX,yBAAyB,CAAC5+C,IAAI,EAAEm/C,cAAc,CAAC;MACjE,MAAMK,mBAAmB,GAAGP,aAAa,CAACloC,MAAM,IAAI,CAAC,CAAC;MACtDqoC,QAAQ,CAACp/C,IAAI,CAAC,GAAGo/C,QAAQ,CAACp/C,IAAI,CAAC,IAAI7O,EAAE;MACrC4lB,MAAM,CAAC5lB,EAAE,CAAC,GAAG4D,OAAO,CAACtD,MAAM,CAACyC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;QAAC8L;MAAI,CAAC,EAAEq/C,SAAS,EAAEG,mBAAmB,CAACx/C,IAAI,CAAC,EAAEw/C,mBAAmB,CAACD,SAAS,CAAC,CAAC,CAAC;IAC3H,CAAC,CAAC;IACFjlB,MAAM,CAACpd,IAAI,CAAC/H,QAAQ,CAACnY,OAAO,CAACs4B,OAAO,IAAI;MACtC,MAAM9jC,IAAI,GAAG8jC,OAAO,CAAC9jC,IAAI,IAAI8oC,MAAM,CAAC9oC,IAAI;MACxC,MAAM2kB,SAAS,GAAGmf,OAAO,CAACnf,SAAS,IAAIqoC,YAAY,CAAChtD,IAAI,EAAEiD,OAAO,CAAC;MAClE,MAAMgqD,eAAe,GAAGhqC,SAAS,CAACjjB,IAAI,CAAC,IAAI,CAAC,CAAC;MAC7C,MAAMguD,mBAAmB,GAAGf,eAAe,CAAC1nC,MAAM,IAAI,CAAC,CAAC;MACxDtlB,MAAM,CAAC2B,IAAI,CAACosD,mBAAmB,CAAC,CAACxiD,OAAO,CAACyiD,SAAS,IAAI;QACpD,MAAMz/C,IAAI,GAAG2+C,yBAAyB,CAACc,SAAS,EAAEtpC,SAAS,CAAC;QAC5D,MAAMhlB,EAAE,GAAGmkC,OAAO,CAACt1B,IAAI,GAAG,QAAQ,CAAC,IAAIo/C,QAAQ,CAACp/C,IAAI,CAAC,IAAIA,IAAI;QAC7D+W,MAAM,CAAC5lB,EAAE,CAAC,GAAG4lB,MAAM,CAAC5lB,EAAE,CAAC,IAAIM,MAAM,CAACyC,MAAM,CAAC,IAAI,CAAC;QAC9Ca,OAAO,CAACgiB,MAAM,CAAC5lB,EAAE,CAAC,EAAE,CAAC;UAAC6O;QAAI,CAAC,EAAEk/C,YAAY,CAAC/tD,EAAE,CAAC,EAAEquD,mBAAmB,CAACC,SAAS,CAAC,CAAC,CAAC;MACjF,CAAC,CAAC;IACJ,CAAC,CAAC;IACFhuD,MAAM,CAAC2B,IAAI,CAAC2jB,MAAM,CAAC,CAAC/Z,OAAO,CAAC1I,GAAG,IAAI;MACjC,MAAMwiB,KAAK,GAAGC,MAAM,CAACziB,GAAG,CAAC;MACzBS,OAAO,CAAC+hB,KAAK,EAAE,CAACgB,QAAQ,CAACf,MAAM,CAACD,KAAK,CAACtlB,IAAI,CAAC,EAAEsmB,QAAQ,CAAChB,KAAK,CAAC,CAAC;IAC/D,CAAC,CAAC;IACF,OAAOC,MAAM;EACf;EACA,SAAS2oC,WAAWA,CAACplB,MAAM,EAAE;IAC3B,MAAM7lC,OAAO,GAAG6lC,MAAM,CAAC7lC,OAAO,KAAK6lC,MAAM,CAAC7lC,OAAO,GAAG,CAAC,CAAC,CAAC;IACvDA,OAAO,CAACmiB,OAAO,GAAGxkB,cAAc,CAACqC,OAAO,CAACmiB,OAAO,EAAE,CAAC,CAAC,CAAC;IACrDniB,OAAO,CAACsiB,MAAM,GAAGioC,gBAAgB,CAAC1kB,MAAM,EAAE7lC,OAAO,CAAC;EACpD;EACA,SAASkrD,QAAQA,CAACziC,IAAI,EAAE;IACtBA,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;IACjBA,IAAI,CAAC/H,QAAQ,GAAG+H,IAAI,CAAC/H,QAAQ,IAAI,EAAE;IACnC+H,IAAI,CAAC0qB,MAAM,GAAG1qB,IAAI,CAAC0qB,MAAM,IAAI,EAAE;IAC/B,OAAO1qB,IAAI;EACb;EACA,SAAS0iC,UAAUA,CAACtlB,MAAM,EAAE;IAC1BA,MAAM,GAAGA,MAAM,IAAI,CAAC,CAAC;IACrBA,MAAM,CAACpd,IAAI,GAAGyiC,QAAQ,CAACrlB,MAAM,CAACpd,IAAI,CAAC;IACnCwiC,WAAW,CAACplB,MAAM,CAAC;IACnB,OAAOA,MAAM;EACf;EACA,MAAMulB,QAAQ,GAAG,IAAIz+C,GAAG,CAAC,CAAC;EAC1B,MAAM0+C,UAAU,GAAG,IAAIniD,GAAG,CAAC,CAAC;EAC5B,SAASoiD,UAAUA,CAACrzB,QAAQ,EAAEszB,QAAQ,EAAE;IACtC,IAAI5sD,IAAI,GAAGysD,QAAQ,CAACj9C,GAAG,CAAC8pB,QAAQ,CAAC;IACjC,IAAI,CAACt5B,IAAI,EAAE;MACTA,IAAI,GAAG4sD,QAAQ,CAAC,CAAC;MACjBH,QAAQ,CAACniD,GAAG,CAACgvB,QAAQ,EAAEt5B,IAAI,CAAC;MAC5B0sD,UAAU,CAACliD,GAAG,CAACxK,IAAI,CAAC;IACtB;IACA,OAAOA,IAAI;EACb;EACA,MAAM6sD,UAAU,GAAGA,CAACviD,GAAG,EAAE3H,GAAG,EAAEzB,GAAG,KAAK;IACpC,MAAM0sB,IAAI,GAAGlrB,gBAAgB,CAACC,GAAG,EAAEzB,GAAG,CAAC;IACvC,IAAI0sB,IAAI,KAAK1rB,SAAS,EAAE;MACtBoI,GAAG,CAACE,GAAG,CAACojB,IAAI,CAAC;IACf;EACF,CAAC;EACD,MAAMk/B,MAAM,CAAC;IACXj/C,WAAWA,CAACq5B,MAAM,EAAE;MAClB,IAAI,CAAC6lB,OAAO,GAAGP,UAAU,CAACtlB,MAAM,CAAC;MACjC,IAAI,CAAC8lB,WAAW,GAAG,IAAIh/C,GAAG,CAAC,CAAC;MAC5B,IAAI,CAACi/C,cAAc,GAAG,IAAIj/C,GAAG,CAAC,CAAC;IACjC;IACA,IAAIkU,QAAQA,CAAA,EAAG;MACb,OAAO,IAAI,CAAC6qC,OAAO,CAAC7qC,QAAQ;IAC9B;IACA,IAAI9jB,IAAIA,CAAA,EAAG;MACT,OAAO,IAAI,CAAC2uD,OAAO,CAAC3uD,IAAI;IAC1B;IACA,IAAIA,IAAIA,CAACA,IAAI,EAAE;MACb,IAAI,CAAC2uD,OAAO,CAAC3uD,IAAI,GAAGA,IAAI;IAC1B;IACA,IAAI0rB,IAAIA,CAAA,EAAG;MACT,OAAO,IAAI,CAACijC,OAAO,CAACjjC,IAAI;IAC1B;IACA,IAAIA,IAAIA,CAACA,IAAI,EAAE;MACb,IAAI,CAACijC,OAAO,CAACjjC,IAAI,GAAGyiC,QAAQ,CAACziC,IAAI,CAAC;IACpC;IACA,IAAIzoB,OAAOA,CAAA,EAAG;MACZ,OAAO,IAAI,CAAC0rD,OAAO,CAAC1rD,OAAO;IAC7B;IACA,IAAIA,OAAOA,CAACA,OAAO,EAAE;MACnB,IAAI,CAAC0rD,OAAO,CAAC1rD,OAAO,GAAGA,OAAO;IAChC;IACA,IAAImiB,OAAOA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACupC,OAAO,CAACvpC,OAAO;IAC7B;IACAkiB,MAAMA,CAAA,EAAG;MACP,MAAMwB,MAAM,GAAG,IAAI,CAAC6lB,OAAO;MAC3B,IAAI,CAACG,UAAU,CAAC,CAAC;MACjBZ,WAAW,CAACplB,MAAM,CAAC;IACrB;IACAgmB,UAAUA,CAAA,EAAG;MACX,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC,CAAC;MACxB,IAAI,CAACF,cAAc,CAACE,KAAK,CAAC,CAAC;IAC7B;IACAnZ,gBAAgBA,CAACoZ,WAAW,EAAE;MAC5B,OAAOT,UAAU,CAACS,WAAW,EAC3B,MAAM,CAAC,CACJ,YAAWA,WAAY,EAAC,EACzB,EAAE,CACH,CAAC,CAAC;IACP;IACA7W,yBAAyBA,CAAC6W,WAAW,EAAE9W,UAAU,EAAE;MACjD,OAAOqW,UAAU,CAAE,GAAES,WAAY,eAAc9W,UAAW,EAAC,EACzD,MAAM,CACJ,CACG,YAAW8W,WAAY,gBAAe9W,UAAW,EAAC,EAClD,eAAcA,UAAW,EAAC,CAC5B,EACD,CACG,YAAW8W,WAAY,EAAC,EACzB,EAAE,CACH,CACF,CAAC;IACN;IACAjX,uBAAuBA,CAACiX,WAAW,EAAEnX,WAAW,EAAE;MAChD,OAAO0W,UAAU,CAAE,GAAES,WAAY,IAAGnX,WAAY,EAAC,EAC/C,MAAM,CAAC,CACJ,YAAWmX,WAAY,aAAYnX,WAAY,EAAC,EAChD,YAAWmX,WAAY,EAAC,EACxB,YAAWnX,WAAY,EAAC,EACzB,EAAE,CACH,CAAC,CAAC;IACP;IACAkV,eAAeA,CAACZ,MAAM,EAAE;MACtB,MAAMxsD,EAAE,GAAGwsD,MAAM,CAACxsD,EAAE;MACpB,MAAMK,IAAI,GAAG,IAAI,CAACA,IAAI;MACtB,OAAOuuD,UAAU,CAAE,GAAEvuD,IAAK,WAAUL,EAAG,EAAC,EACtC,MAAM,CAAC,CACJ,WAAUA,EAAG,EAAC,EACf,IAAGwsD,MAAM,CAAC8C,sBAAsB,IAAI,EAAE,EACvC,CAAC,CAAC;IACP;IACAC,aAAaA,CAACC,SAAS,EAAEC,UAAU,EAAE;MACnC,MAAMR,WAAW,GAAG,IAAI,CAACA,WAAW;MACpC,IAAI1iC,KAAK,GAAG0iC,WAAW,CAACx9C,GAAG,CAAC+9C,SAAS,CAAC;MACtC,IAAI,CAACjjC,KAAK,IAAIkjC,UAAU,EAAE;QACxBljC,KAAK,GAAG,IAAItc,GAAG,CAAC,CAAC;QACjBg/C,WAAW,CAAC1iD,GAAG,CAACijD,SAAS,EAAEjjC,KAAK,CAAC;MACnC;MACA,OAAOA,KAAK;IACd;IACA2pB,eAAeA,CAACsZ,SAAS,EAAEE,QAAQ,EAAED,UAAU,EAAE;MAC/C,MAAM;QAACnsD,OAAO;QAAEjD;MAAI,CAAC,GAAG,IAAI;MAC5B,MAAMksB,KAAK,GAAG,IAAI,CAACgjC,aAAa,CAACC,SAAS,EAAEC,UAAU,CAAC;MACvD,MAAM1c,MAAM,GAAGxmB,KAAK,CAAC9a,GAAG,CAACi+C,QAAQ,CAAC;MAClC,IAAI3c,MAAM,EAAE;QACV,OAAOA,MAAM;MACf;MACA,MAAMphB,MAAM,GAAG,IAAInlB,GAAG,CAAC,CAAC;MACxBkjD,QAAQ,CAAC7jD,OAAO,CAAC5J,IAAI,IAAI;QACvB,IAAIutD,SAAS,EAAE;UACb79B,MAAM,CAACllB,GAAG,CAAC+iD,SAAS,CAAC;UACrBvtD,IAAI,CAAC4J,OAAO,CAAC1I,GAAG,IAAI2rD,UAAU,CAACn9B,MAAM,EAAE69B,SAAS,EAAErsD,GAAG,CAAC,CAAC;QACzD;QACAlB,IAAI,CAAC4J,OAAO,CAAC1I,GAAG,IAAI2rD,UAAU,CAACn9B,MAAM,EAAEruB,OAAO,EAAEH,GAAG,CAAC,CAAC;QACrDlB,IAAI,CAAC4J,OAAO,CAAC1I,GAAG,IAAI2rD,UAAU,CAACn9B,MAAM,EAAErO,SAAS,CAACjjB,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE8C,GAAG,CAAC,CAAC;QACnElB,IAAI,CAAC4J,OAAO,CAAC1I,GAAG,IAAI2rD,UAAU,CAACn9B,MAAM,EAAEhL,QAAQ,EAAExjB,GAAG,CAAC,CAAC;QACtDlB,IAAI,CAAC4J,OAAO,CAAC1I,GAAG,IAAI2rD,UAAU,CAACn9B,MAAM,EAAEpO,WAAW,EAAEpgB,GAAG,CAAC,CAAC;MAC3D,CAAC,CAAC;MACF,MAAMmF,KAAK,GAAGlI,KAAK,CAACsM,IAAI,CAACilB,MAAM,CAAC;MAChC,IAAIrpB,KAAK,CAACpG,MAAM,KAAK,CAAC,EAAE;QACtBoG,KAAK,CAAClD,IAAI,CAAC9E,MAAM,CAACyC,MAAM,CAAC,IAAI,CAAC,CAAC;MACjC;MACA,IAAI4rD,UAAU,CAAC3oD,GAAG,CAAC0pD,QAAQ,CAAC,EAAE;QAC5BnjC,KAAK,CAAChgB,GAAG,CAACmjD,QAAQ,EAAEpnD,KAAK,CAAC;MAC5B;MACA,OAAOA,KAAK;IACd;IACAqnD,iBAAiBA,CAAA,EAAG;MAClB,MAAM;QAACrsD,OAAO;QAAEjD;MAAI,CAAC,GAAG,IAAI;MAC5B,OAAO,CACLiD,OAAO,EACPggB,SAAS,CAACjjB,IAAI,CAAC,IAAI,CAAC,CAAC,EACrBsmB,QAAQ,CAAC3C,QAAQ,CAAC3jB,IAAI,CAAC,IAAI,CAAC,CAAC,EAC7B;QAACA;MAAI,CAAC,EACNsmB,QAAQ,EACRpD,WAAW,CACZ;IACH;IACA80B,mBAAmBA,CAAC1mB,MAAM,EAAEhR,KAAK,EAAEuD,OAAO,EAAE0N,QAAQ,GAAG,CAAC,EAAE,CAAC,EAAE;MAC3D,MAAMlqB,MAAM,GAAG;QAACmoC,OAAO,EAAE;MAAI,CAAC;MAC9B,MAAM;QAAChrC,QAAQ;QAAE+qD;MAAW,CAAC,GAAGC,WAAW,CAAC,IAAI,CAACX,cAAc,EAAEv9B,MAAM,EAAEC,QAAQ,CAAC;MAClF,IAAItuB,OAAO,GAAGuB,QAAQ;MACtB,IAAIirD,WAAW,CAACjrD,QAAQ,EAAE8b,KAAK,CAAC,EAAE;QAChCjZ,MAAM,CAACmoC,OAAO,GAAG,KAAK;QACtB3rB,OAAO,GAAGxe,UAAU,CAACwe,OAAO,CAAC,GAAGA,OAAO,CAAC,CAAC,GAAGA,OAAO;QACnD,MAAM6rC,WAAW,GAAG,IAAI,CAAC5Z,cAAc,CAACxkB,MAAM,EAAEzN,OAAO,EAAE0rC,WAAW,CAAC;QACrEtsD,OAAO,GAAG+vB,cAAc,CAACxuB,QAAQ,EAAEqf,OAAO,EAAE6rC,WAAW,CAAC;MAC1D;MACA,KAAK,MAAMt9B,IAAI,IAAI9R,KAAK,EAAE;QACxBjZ,MAAM,CAAC+qB,IAAI,CAAC,GAAGnvB,OAAO,CAACmvB,IAAI,CAAC;MAC9B;MACA,OAAO/qB,MAAM;IACf;IACAyuC,cAAcA,CAACxkB,MAAM,EAAEzN,OAAO,EAAE0N,QAAQ,GAAG,CAAC,EAAE,CAAC,EAAE4B,kBAAkB,EAAE;MACnE,MAAM;QAAC3uB;MAAQ,CAAC,GAAGgrD,WAAW,CAAC,IAAI,CAACX,cAAc,EAAEv9B,MAAM,EAAEC,QAAQ,CAAC;MACrE,OAAOjxB,QAAQ,CAACujB,OAAO,CAAC,GACpBmP,cAAc,CAACxuB,QAAQ,EAAEqf,OAAO,EAAE/f,SAAS,EAAEqvB,kBAAkB,CAAC,GAChE3uB,QAAQ;IACd;EACF;EACA,SAASgrD,WAAWA,CAACG,aAAa,EAAEr+B,MAAM,EAAEC,QAAQ,EAAE;IACpD,IAAIrF,KAAK,GAAGyjC,aAAa,CAACv+C,GAAG,CAACkgB,MAAM,CAAC;IACrC,IAAI,CAACpF,KAAK,EAAE;MACVA,KAAK,GAAG,IAAItc,GAAG,CAAC,CAAC;MACjB+/C,aAAa,CAACzjD,GAAG,CAAColB,MAAM,EAAEpF,KAAK,CAAC;IAClC;IACA,MAAMgP,QAAQ,GAAG3J,QAAQ,CAACiD,IAAI,CAAC,CAAC;IAChC,IAAIke,MAAM,GAAGxmB,KAAK,CAAC9a,GAAG,CAAC8pB,QAAQ,CAAC;IAChC,IAAI,CAACwX,MAAM,EAAE;MACX,MAAMluC,QAAQ,GAAG6sB,eAAe,CAACC,MAAM,EAAEC,QAAQ,CAAC;MAClDmhB,MAAM,GAAG;QACPluC,QAAQ;QACR+qD,WAAW,EAAEh+B,QAAQ,CAACoD,MAAM,CAACjsB,CAAC,IAAI,CAACA,CAAC,CAAC+X,WAAW,CAAC,CAAC,CAACmS,QAAQ,CAAC,OAAO,CAAC;MACtE,CAAC;MACD1G,KAAK,CAAChgB,GAAG,CAACgvB,QAAQ,EAAEwX,MAAM,CAAC;IAC7B;IACA,OAAOA,MAAM;EACf;EACA,MAAMkd,WAAW,GAAG/vD,KAAK,IAAIS,QAAQ,CAACT,KAAK,CAAC,IACvCI,MAAM,CAACivC,mBAAmB,CAACrvC,KAAK,CAAC,CAAC6R,MAAM,CAAC,CAACC,GAAG,EAAE7O,GAAG,KAAK6O,GAAG,IAAItM,UAAU,CAACxF,KAAK,CAACiD,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC;EACjG,SAAS2sD,WAAWA,CAACx8B,KAAK,EAAE3S,KAAK,EAAE;IACjC,MAAM;MAACyT,YAAY;MAAEC;IAAW,CAAC,GAAGzQ,YAAY,CAAC0P,KAAK,CAAC;IACvD,KAAK,MAAMb,IAAI,IAAI9R,KAAK,EAAE;MACxB,MAAMsT,UAAU,GAAGG,YAAY,CAAC3B,IAAI,CAAC;MACrC,MAAMyB,SAAS,GAAGG,WAAW,CAAC5B,IAAI,CAAC;MACnC,MAAMvyB,KAAK,GAAG,CAACg0B,SAAS,IAAID,UAAU,KAAKX,KAAK,CAACb,IAAI,CAAC;MACtD,IAAKwB,UAAU,KAAKvuB,UAAU,CAACxF,KAAK,CAAC,IAAI+vD,WAAW,CAAC/vD,KAAK,CAAC,CAAC,IACtDg0B,SAAS,IAAI/zB,OAAO,CAACD,KAAK,CAAE,EAAE;QAClC,OAAO,IAAI;MACb;IACF;IACA,OAAO,KAAK;EACd;EAEA,IAAIgwD,OAAO,GAAG,OAAO;EAErB,MAAMC,eAAe,GAAG,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,WAAW,CAAC;EACvE,SAASC,oBAAoBA,CAAChuB,QAAQ,EAAEvzB,IAAI,EAAE;IAC5C,OAAOuzB,QAAQ,KAAK,KAAK,IAAIA,QAAQ,KAAK,QAAQ,IAAK+tB,eAAe,CAAC/sD,OAAO,CAACg/B,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAIvzB,IAAI,KAAK,GAAI;EAClH;EACA,SAASwhD,aAAaA,CAACC,EAAE,EAAEC,EAAE,EAAE;IAC7B,OAAO,UAAS3qD,CAAC,EAAEC,CAAC,EAAE;MACpB,OAAOD,CAAC,CAAC0qD,EAAE,CAAC,KAAKzqD,CAAC,CAACyqD,EAAE,CAAC,GAClB1qD,CAAC,CAAC2qD,EAAE,CAAC,GAAG1qD,CAAC,CAAC0qD,EAAE,CAAC,GACb3qD,CAAC,CAAC0qD,EAAE,CAAC,GAAGzqD,CAAC,CAACyqD,EAAE,CAAC;IACnB,CAAC;EACH;EACA,SAASE,oBAAoBA,CAACtsC,OAAO,EAAE;IACrC,MAAM7T,KAAK,GAAG6T,OAAO,CAAC7T,KAAK;IAC3B,MAAMy+B,gBAAgB,GAAGz+B,KAAK,CAAC/M,OAAO,CAACugB,SAAS;IAChDxT,KAAK,CAACozC,aAAa,CAAC,aAAa,CAAC;IAClCliD,QAAQ,CAACutC,gBAAgB,IAAIA,gBAAgB,CAAC2hB,UAAU,EAAE,CAACvsC,OAAO,CAAC,EAAE7T,KAAK,CAAC;EAC7E;EACA,SAASqgD,mBAAmBA,CAACxsC,OAAO,EAAE;IACpC,MAAM7T,KAAK,GAAG6T,OAAO,CAAC7T,KAAK;IAC3B,MAAMy+B,gBAAgB,GAAGz+B,KAAK,CAAC/M,OAAO,CAACugB,SAAS;IAChDtiB,QAAQ,CAACutC,gBAAgB,IAAIA,gBAAgB,CAAC6hB,UAAU,EAAE,CAACzsC,OAAO,CAAC,EAAE7T,KAAK,CAAC;EAC7E;EACA,SAASugD,SAASA,CAAC7qD,IAAI,EAAE;IACvB,IAAIihB,eAAe,CAAC,CAAC,IAAI,OAAOjhB,IAAI,KAAK,QAAQ,EAAE;MACjDA,IAAI,GAAGkhB,QAAQ,CAAC4pC,cAAc,CAAC9qD,IAAI,CAAC;IACtC,CAAC,MAAM,IAAIA,IAAI,IAAIA,IAAI,CAAC7D,MAAM,EAAE;MAC9B6D,IAAI,GAAGA,IAAI,CAAC,CAAC,CAAC;IAChB;IACA,IAAIA,IAAI,IAAIA,IAAI,CAAC6iB,MAAM,EAAE;MACvB7iB,IAAI,GAAGA,IAAI,CAAC6iB,MAAM;IACpB;IACA,OAAO7iB,IAAI;EACb;EACA,MAAM+qD,SAAS,GAAG,CAAC,CAAC;EACpB,MAAMC,QAAQ,GAAI5tD,GAAG,IAAK;IACxB,MAAMylB,MAAM,GAAGgoC,SAAS,CAACztD,GAAG,CAAC;IAC7B,OAAO7C,MAAM,CAAC8K,MAAM,CAAC0lD,SAAS,CAAC,CAAC97B,MAAM,CAAE1hB,CAAC,IAAKA,CAAC,CAACsV,MAAM,KAAKA,MAAM,CAAC,CAAC/gB,GAAG,CAAC,CAAC;EAC1E,CAAC;EACD,SAASmpD,eAAeA,CAACpsD,GAAG,EAAEmF,KAAK,EAAE8vC,IAAI,EAAE;IACzC,MAAM53C,IAAI,GAAG3B,MAAM,CAAC2B,IAAI,CAAC2C,GAAG,CAAC;IAC7B,KAAK,MAAMzB,GAAG,IAAIlB,IAAI,EAAE;MACtB,MAAMgvD,MAAM,GAAG,CAAC9tD,GAAG;MACnB,IAAI8tD,MAAM,IAAIlnD,KAAK,EAAE;QACnB,MAAM7J,KAAK,GAAG0E,GAAG,CAACzB,GAAG,CAAC;QACtB,OAAOyB,GAAG,CAACzB,GAAG,CAAC;QACf,IAAI02C,IAAI,GAAG,CAAC,IAAIoX,MAAM,GAAGlnD,KAAK,EAAE;UAC9BnF,GAAG,CAACqsD,MAAM,GAAGpX,IAAI,CAAC,GAAG35C,KAAK;QAC5B;MACF;IACF;EACF;EACA,SAASgxD,kBAAkBA,CAAChrD,CAAC,EAAEirD,SAAS,EAAEC,WAAW,EAAEC,OAAO,EAAE;IAC9D,IAAI,CAACD,WAAW,IAAIlrD,CAAC,CAAC7F,IAAI,KAAK,UAAU,EAAE;MACzC,OAAO,IAAI;IACb;IACA,IAAIgxD,OAAO,EAAE;MACX,OAAOF,SAAS;IAClB;IACA,OAAOjrD,CAAC;EACV;EACA,MAAMrG,KAAK,CAAC;IACViQ,WAAWA,CAAC/J,IAAI,EAAEurD,UAAU,EAAE;MAC5B,MAAMnoB,MAAM,GAAG,IAAI,CAACA,MAAM,GAAG,IAAI4lB,MAAM,CAACuC,UAAU,CAAC;MACnD,MAAMC,aAAa,GAAGX,SAAS,CAAC7qD,IAAI,CAAC;MACrC,MAAMyrD,aAAa,GAAGT,QAAQ,CAACQ,aAAa,CAAC;MAC7C,IAAIC,aAAa,EAAE;QACjB,MAAM,IAAI58B,KAAK,CACb,4CAA4C,GAAG48B,aAAa,CAACxxD,EAAE,GAAG,IAAI,GAC1E,iDAAiD,GAAGwxD,aAAa,CAAC5oC,MAAM,CAAC5oB,EAAE,GAAG,mBAC5E,CAAC;MACH;MACA,MAAMsD,OAAO,GAAG6lC,MAAM,CAACgN,cAAc,CAAChN,MAAM,CAACwmB,iBAAiB,CAAC,CAAC,EAAE,IAAI,CAACxiC,UAAU,CAAC,CAAC,CAAC;MACpF,IAAI,CAAChJ,QAAQ,GAAG,KAAKglB,MAAM,CAAChlB,QAAQ,IAAI8oB,eAAe,CAACskB,aAAa,CAAC,EAAE,CAAC;MACzE,IAAI,CAACptC,QAAQ,CAAC+kB,YAAY,CAACC,MAAM,CAAC;MAClC,MAAMjlB,OAAO,GAAG,IAAI,CAACC,QAAQ,CAAC4kB,cAAc,CAACwoB,aAAa,EAAEjuD,OAAO,CAACqnB,WAAW,CAAC;MAChF,MAAM/B,MAAM,GAAG1E,OAAO,IAAIA,OAAO,CAAC0E,MAAM;MACxC,MAAMN,MAAM,GAAGM,MAAM,IAAIA,MAAM,CAACN,MAAM;MACtC,MAAMD,KAAK,GAAGO,MAAM,IAAIA,MAAM,CAACP,KAAK;MACpC,IAAI,CAACroB,EAAE,GAAGD,GAAG,CAAC,CAAC;MACf,IAAI,CAAC8kB,GAAG,GAAGX,OAAO;MAClB,IAAI,CAAC0E,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACP,KAAK,GAAGA,KAAK;MAClB,IAAI,CAACC,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACmpC,QAAQ,GAAGnuD,OAAO;MACvB,IAAI,CAACouD,YAAY,GAAG,IAAI,CAAC/mC,WAAW;MACpC,IAAI,CAACud,OAAO,GAAG,EAAE;MACjB,IAAI,CAACypB,SAAS,GAAG,EAAE;MACnB,IAAI,CAAC3f,OAAO,GAAG7tC,SAAS;MACxB,IAAI,CAACwgC,KAAK,GAAG,EAAE;MACf,IAAI,CAACpb,uBAAuB,GAAGplB,SAAS;MACxC,IAAI,CAAC8+B,SAAS,GAAG9+B,SAAS;MAC1B,IAAI,CAACiN,OAAO,GAAG,EAAE;MACjB,IAAI,CAACwgD,UAAU,GAAGztD,SAAS;MAC3B,IAAI,CAAC0tD,UAAU,GAAG,CAAC,CAAC;MACpB,IAAI,CAACC,oBAAoB,GAAG3tD,SAAS;MACrC,IAAI,CAAC4tD,eAAe,GAAG,EAAE;MACzB,IAAI,CAACnsC,MAAM,GAAG,CAAC,CAAC;MAChB,IAAI,CAACosC,QAAQ,GAAG,IAAI9F,aAAa,CAAC,CAAC;MACnC,IAAI,CAACtf,QAAQ,GAAG,CAAC,CAAC;MAClB,IAAI,CAACqlB,cAAc,GAAG,CAAC,CAAC;MACxB,IAAI,CAACC,QAAQ,GAAG,KAAK;MACrB,IAAI,CAACtZ,mBAAmB,GAAGz0C,SAAS;MACpC,IAAI,CAAC6vC,QAAQ,GAAG7vC,SAAS;MACzB,IAAI,CAACguD,SAAS,GAAG5kD,QAAQ,CAAC2X,IAAI,IAAI,IAAI,CAACyiB,MAAM,CAACziB,IAAI,CAAC,EAAE5hB,OAAO,CAAC8uD,WAAW,IAAI,CAAC,CAAC;MAC9E,IAAI,CAACnY,YAAY,GAAG,EAAE;MACtB6W,SAAS,CAAC,IAAI,CAAC9wD,EAAE,CAAC,GAAG,IAAI;MACzB,IAAI,CAACkkB,OAAO,IAAI,CAAC0E,MAAM,EAAE;QACvBxkB,OAAO,CAAC+pD,KAAK,CAAC,mEAAmE,CAAC;QAClF;MACF;MACA57C,QAAQ,CAACX,MAAM,CAAC,IAAI,EAAE,UAAU,EAAE4+C,oBAAoB,CAAC;MACvDj+C,QAAQ,CAACX,MAAM,CAAC,IAAI,EAAE,UAAU,EAAE8+C,mBAAmB,CAAC;MACtD,IAAI,CAAC2B,WAAW,CAAC,CAAC;MAClB,IAAI,IAAI,CAACH,QAAQ,EAAE;QACjB,IAAI,CAACvqB,MAAM,CAAC,CAAC;MACf;IACF;IACA,IAAIhd,WAAWA,CAAA,EAAG;MAChB,MAAM;QAACrnB,OAAO,EAAE;UAACqnB,WAAW;UAAEtF;QAAmB,CAAC;QAAEgD,KAAK;QAAEC,MAAM;QAAEopC;MAAY,CAAC,GAAG,IAAI;MACvF,IAAI,CAACzxD,aAAa,CAAC0qB,WAAW,CAAC,EAAE;QAC/B,OAAOA,WAAW;MACpB;MACA,IAAItF,mBAAmB,IAAIqsC,YAAY,EAAE;QACvC,OAAOA,YAAY;MACrB;MACA,OAAOppC,MAAM,GAAGD,KAAK,GAAGC,MAAM,GAAG,IAAI;IACvC;IACA,IAAIyD,IAAIA,CAAA,EAAG;MACT,OAAO,IAAI,CAACod,MAAM,CAACpd,IAAI;IACzB;IACA,IAAIA,IAAIA,CAACA,IAAI,EAAE;MACb,IAAI,CAACod,MAAM,CAACpd,IAAI,GAAGA,IAAI;IACzB;IACA,IAAIzoB,OAAOA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACmuD,QAAQ;IACtB;IACA,IAAInuD,OAAOA,CAACA,OAAO,EAAE;MACnB,IAAI,CAAC6lC,MAAM,CAAC7lC,OAAO,GAAGA,OAAO;IAC/B;IACA+uD,WAAWA,CAAA,EAAG;MACZ,IAAI,CAAC5O,aAAa,CAAC,YAAY,CAAC;MAChC,IAAI,IAAI,CAACngD,OAAO,CAACoiB,UAAU,EAAE;QAC3B,IAAI,CAACqmB,MAAM,CAAC,CAAC;MACf,CAAC,MAAM;QACLjhB,WAAW,CAAC,IAAI,EAAE,IAAI,CAACxnB,OAAO,CAAC2gB,gBAAgB,CAAC;MAClD;MACA,IAAI,CAACquC,UAAU,CAAC,CAAC;MACjB,IAAI,CAAC7O,aAAa,CAAC,WAAW,CAAC;MAC/B,OAAO,IAAI;IACb;IACA2L,KAAKA,CAAA,EAAG;MACNliC,WAAW,CAAC,IAAI,CAACtE,MAAM,EAAE,IAAI,CAAC/D,GAAG,CAAC;MAClC,OAAO,IAAI;IACb;IACA1S,IAAIA,CAAA,EAAG;MACLI,QAAQ,CAACJ,IAAI,CAAC,IAAI,CAAC;MACnB,OAAO,IAAI;IACb;IACA45B,MAAMA,CAAC1jB,KAAK,EAAEC,MAAM,EAAE;MACpB,IAAI,CAAC/V,QAAQ,CAACrB,OAAO,CAAC,IAAI,CAAC,EAAE;QAC3B,IAAI,CAACqhD,OAAO,CAAClqC,KAAK,EAAEC,MAAM,CAAC;MAC7B,CAAC,MAAM;QACL,IAAI,CAACkqC,iBAAiB,GAAG;UAACnqC,KAAK;UAAEC;QAAM,CAAC;MAC1C;IACF;IACAiqC,OAAOA,CAAClqC,KAAK,EAAEC,MAAM,EAAE;MACrB,MAAMhlB,OAAO,GAAG,IAAI,CAACA,OAAO;MAC5B,MAAMslB,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,MAAM+B,WAAW,GAAGrnB,OAAO,CAAC+hB,mBAAmB,IAAI,IAAI,CAACsF,WAAW;MACnE,MAAM8nC,OAAO,GAAG,IAAI,CAACtuC,QAAQ,CAACqG,cAAc,CAAC5B,MAAM,EAAEP,KAAK,EAAEC,MAAM,EAAEqC,WAAW,CAAC;MAChF,MAAM+nC,QAAQ,GAAGpvD,OAAO,CAAC2gB,gBAAgB,IAAI,IAAI,CAACE,QAAQ,CAACC,mBAAmB,CAAC,CAAC;MAChF,MAAMc,IAAI,GAAG,IAAI,CAACmD,KAAK,GAAG,QAAQ,GAAG,QAAQ;MAC7C,IAAI,CAACA,KAAK,GAAGoqC,OAAO,CAACpqC,KAAK;MAC1B,IAAI,CAACC,MAAM,GAAGmqC,OAAO,CAACnqC,MAAM;MAC5B,IAAI,CAACopC,YAAY,GAAG,IAAI,CAAC/mC,WAAW;MACpC,IAAI,CAACG,WAAW,CAAC,IAAI,EAAE4nC,QAAQ,EAAE,IAAI,CAAC,EAAE;QACtC;MACF;MACA,IAAI,CAACjP,aAAa,CAAC,QAAQ,EAAE;QAAC39C,IAAI,EAAE2sD;MAAO,CAAC,CAAC;MAC7ClxD,QAAQ,CAAC+B,OAAO,CAACqvD,QAAQ,EAAE,CAAC,IAAI,EAAEF,OAAO,CAAC,EAAE,IAAI,CAAC;MACjD,IAAI,IAAI,CAACP,QAAQ,EAAE;QACjB,IAAI,IAAI,CAACC,SAAS,CAACjtC,IAAI,CAAC,EAAE;UACxB,IAAI,CAAC0tC,MAAM,CAAC,CAAC;QACf;MACF;IACF;IACAC,mBAAmBA,CAAA,EAAG;MACpB,MAAMvvD,OAAO,GAAG,IAAI,CAACA,OAAO;MAC5B,MAAMwvD,aAAa,GAAGxvD,OAAO,CAACsiB,MAAM,IAAI,CAAC,CAAC;MAC1ChkB,IAAI,CAACkxD,aAAa,EAAE,CAACC,WAAW,EAAEvJ,MAAM,KAAK;QAC3CuJ,WAAW,CAAC/yD,EAAE,GAAGwpD,MAAM;MACzB,CAAC,CAAC;IACJ;IACAwJ,mBAAmBA,CAAA,EAAG;MACpB,MAAM1vD,OAAO,GAAG,IAAI,CAACA,OAAO;MAC5B,MAAM2vD,SAAS,GAAG3vD,OAAO,CAACsiB,MAAM;MAChC,MAAMA,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,MAAMstC,OAAO,GAAG5yD,MAAM,CAAC2B,IAAI,CAAC2jB,MAAM,CAAC,CAAC7T,MAAM,CAAC,CAACnN,GAAG,EAAE5E,EAAE,KAAK;QACtD4E,GAAG,CAAC5E,EAAE,CAAC,GAAG,KAAK;QACf,OAAO4E,GAAG;MACZ,CAAC,EAAE,CAAC,CAAC,CAAC;MACN,IAAI0H,KAAK,GAAG,EAAE;MACd,IAAI2mD,SAAS,EAAE;QACb3mD,KAAK,GAAGA,KAAK,CAAC65B,MAAM,CAClB7lC,MAAM,CAAC2B,IAAI,CAACgxD,SAAS,CAAC,CAACpwD,GAAG,CAAE7C,EAAE,IAAK;UACjC,MAAM4tD,YAAY,GAAGqF,SAAS,CAACjzD,EAAE,CAAC;UAClC,MAAM6O,IAAI,GAAG8+C,aAAa,CAAC3tD,EAAE,EAAE4tD,YAAY,CAAC;UAC5C,MAAMuF,QAAQ,GAAGtkD,IAAI,KAAK,GAAG;UAC7B,MAAMm2B,YAAY,GAAGn2B,IAAI,KAAK,GAAG;UACjC,OAAO;YACLvL,OAAO,EAAEsqD,YAAY;YACrBwF,SAAS,EAAED,QAAQ,GAAG,WAAW,GAAGnuB,YAAY,GAAG,QAAQ,GAAG,MAAM;YACpEquB,KAAK,EAAEF,QAAQ,GAAG,cAAc,GAAGnuB,YAAY,GAAG,UAAU,GAAG;UACjE,CAAC;QACH,CAAC,CACH,CAAC;MACH;MACApjC,IAAI,CAAC0K,KAAK,EAAGvG,IAAI,IAAK;QACpB,MAAM6nD,YAAY,GAAG7nD,IAAI,CAACzC,OAAO;QACjC,MAAMtD,EAAE,GAAG4tD,YAAY,CAAC5tD,EAAE;QAC1B,MAAM6O,IAAI,GAAG8+C,aAAa,CAAC3tD,EAAE,EAAE4tD,YAAY,CAAC;QAC5C,MAAM0F,SAAS,GAAGryD,cAAc,CAAC2sD,YAAY,CAACvtD,IAAI,EAAE0F,IAAI,CAACstD,KAAK,CAAC;QAC/D,IAAIzF,YAAY,CAACxrB,QAAQ,KAAKj+B,SAAS,IAAIisD,oBAAoB,CAACxC,YAAY,CAACxrB,QAAQ,EAAEvzB,IAAI,CAAC,KAAKuhD,oBAAoB,CAACrqD,IAAI,CAACqtD,SAAS,CAAC,EAAE;UACrIxF,YAAY,CAACxrB,QAAQ,GAAGr8B,IAAI,CAACqtD,SAAS;QACxC;QACAF,OAAO,CAAClzD,EAAE,CAAC,GAAG,IAAI;QAClB,IAAI2lB,KAAK,GAAG,IAAI;QAChB,IAAI3lB,EAAE,IAAI4lB,MAAM,IAAIA,MAAM,CAAC5lB,EAAE,CAAC,CAACK,IAAI,KAAKizD,SAAS,EAAE;UACjD3tC,KAAK,GAAGC,MAAM,CAAC5lB,EAAE,CAAC;QACpB,CAAC,MAAM;UACL,MAAMuzD,UAAU,GAAGxH,QAAQ,CAACX,QAAQ,CAACkI,SAAS,CAAC;UAC/C3tC,KAAK,GAAG,IAAI4tC,UAAU,CAAC;YACrBvzD,EAAE;YACFK,IAAI,EAAEizD,SAAS;YACfzuC,GAAG,EAAE,IAAI,CAACA,GAAG;YACbxU,KAAK,EAAE;UACT,CAAC,CAAC;UACFuV,MAAM,CAACD,KAAK,CAAC3lB,EAAE,CAAC,GAAG2lB,KAAK;QAC1B;QACAA,KAAK,CAAC47B,IAAI,CAACqM,YAAY,EAAEtqD,OAAO,CAAC;MACnC,CAAC,CAAC;MACF1B,IAAI,CAACsxD,OAAO,EAAE,CAACM,UAAU,EAAExzD,EAAE,KAAK;QAChC,IAAI,CAACwzD,UAAU,EAAE;UACf,OAAO5tC,MAAM,CAAC5lB,EAAE,CAAC;QACnB;MACF,CAAC,CAAC;MACF4B,IAAI,CAACgkB,MAAM,EAAGD,KAAK,IAAK;QACtBuf,OAAO,CAACoD,SAAS,CAAC,IAAI,EAAE3iB,KAAK,EAAEA,KAAK,CAACriB,OAAO,CAAC;QAC7C4hC,OAAO,CAAC+C,MAAM,CAAC,IAAI,EAAEtiB,KAAK,CAAC;MAC7B,CAAC,CAAC;IACJ;IACA8tC,eAAeA,CAAA,EAAG;MAChB,MAAMnxB,QAAQ,GAAG,IAAI,CAACqvB,SAAS;MAC/B,MAAMjY,OAAO,GAAG,IAAI,CAAC3tB,IAAI,CAAC/H,QAAQ,CAAC9hB,MAAM;MACzC,MAAMu3C,OAAO,GAAGnX,QAAQ,CAACpgC,MAAM;MAC/BogC,QAAQ,CAAC16B,IAAI,CAAC,CAAChC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAAClD,KAAK,GAAGmD,CAAC,CAACnD,KAAK,CAAC;MAC1C,IAAI+2C,OAAO,GAAGC,OAAO,EAAE;QACrB,KAAK,IAAI33C,CAAC,GAAG23C,OAAO,EAAE33C,CAAC,GAAG03C,OAAO,EAAE,EAAE13C,CAAC,EAAE;UACtC,IAAI,CAAC2xD,mBAAmB,CAAC3xD,CAAC,CAAC;QAC7B;QACAugC,QAAQ,CAACl2B,MAAM,CAACstC,OAAO,EAAED,OAAO,GAAGC,OAAO,CAAC;MAC7C;MACA,IAAI,CAACqY,eAAe,GAAGzvB,QAAQ,CAAC5hC,KAAK,CAAC,CAAC,CAAC,CAACkH,IAAI,CAACyoD,aAAa,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAChF;IACAsD,2BAA2BA,CAAA,EAAG;MAC5B,MAAM;QAAChC,SAAS,EAAErvB,QAAQ;QAAEvW,IAAI,EAAE;UAAC/H;QAAQ;MAAC,CAAC,GAAG,IAAI;MACpD,IAAIse,QAAQ,CAACpgC,MAAM,GAAG8hB,QAAQ,CAAC9hB,MAAM,EAAE;QACrC,OAAO,IAAI,CAAC8vC,OAAO;MACrB;MACA1P,QAAQ,CAACz2B,OAAO,CAAC,CAACwC,IAAI,EAAE3L,KAAK,KAAK;QAChC,IAAIshB,QAAQ,CAACgR,MAAM,CAACxwB,CAAC,IAAIA,CAAC,KAAK6J,IAAI,CAACulD,QAAQ,CAAC,CAAC1xD,MAAM,KAAK,CAAC,EAAE;UAC1D,IAAI,CAACwxD,mBAAmB,CAAChxD,KAAK,CAAC;QACjC;MACF,CAAC,CAAC;IACJ;IACAmxD,wBAAwBA,CAAA,EAAG;MACzB,MAAMC,cAAc,GAAG,EAAE;MACzB,MAAM9vC,QAAQ,GAAG,IAAI,CAAC+H,IAAI,CAAC/H,QAAQ;MACnC,IAAIjiB,CAAC,EAAEO,IAAI;MACX,IAAI,CAACqxD,2BAA2B,CAAC,CAAC;MAClC,KAAK5xD,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAG0hB,QAAQ,CAAC9hB,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAEP,CAAC,EAAE,EAAE;QACjD,MAAMoiC,OAAO,GAAGngB,QAAQ,CAACjiB,CAAC,CAAC;QAC3B,IAAIsM,IAAI,GAAG,IAAI,CAAC+1B,cAAc,CAACriC,CAAC,CAAC;QACjC,MAAM1B,IAAI,GAAG8jC,OAAO,CAAC9jC,IAAI,IAAI,IAAI,CAAC8oC,MAAM,CAAC9oC,IAAI;QAC7C,IAAIgO,IAAI,CAAChO,IAAI,IAAIgO,IAAI,CAAChO,IAAI,KAAKA,IAAI,EAAE;UACnC,IAAI,CAACqzD,mBAAmB,CAAC3xD,CAAC,CAAC;UAC3BsM,IAAI,GAAG,IAAI,CAAC+1B,cAAc,CAACriC,CAAC,CAAC;QAC/B;QACAsM,IAAI,CAAChO,IAAI,GAAGA,IAAI;QAChBgO,IAAI,CAAC2W,SAAS,GAAGmf,OAAO,CAACnf,SAAS,IAAIqoC,YAAY,CAAChtD,IAAI,EAAE,IAAI,CAACiD,OAAO,CAAC;QACtE+K,IAAI,CAAC0lD,KAAK,GAAG5vB,OAAO,CAAC4vB,KAAK,IAAI,CAAC;QAC/B1lD,IAAI,CAAC3L,KAAK,GAAGX,CAAC;QACdsM,IAAI,CAACspC,KAAK,GAAG,EAAE,GAAGxT,OAAO,CAACwT,KAAK;QAC/BtpC,IAAI,CAAC6gC,OAAO,GAAG,IAAI,CAAC8kB,gBAAgB,CAACjyD,CAAC,CAAC;QACvC,IAAIsM,IAAI,CAACwzB,UAAU,EAAE;UACnBxzB,IAAI,CAACwzB,UAAU,CAACwS,WAAW,CAACtyC,CAAC,CAAC;UAC9BsM,IAAI,CAACwzB,UAAU,CAACsS,UAAU,CAAC,CAAC;QAC9B,CAAC,MAAM;UACL,MAAM8f,eAAe,GAAGlI,QAAQ,CAACf,aAAa,CAAC3qD,IAAI,CAAC;UACpD,MAAM;YAACq1C,kBAAkB;YAAEuC;UAAe,CAAC,GAAGtxB,QAAQ,CAAC3C,QAAQ,CAAC3jB,IAAI,CAAC;UACrEC,MAAM,CAACsP,MAAM,CAACqkD,eAAe,CAAC1zD,SAAS,EAAE;YACvC03C,eAAe,EAAE8T,QAAQ,CAACb,UAAU,CAACjT,eAAe,CAAC;YACrDvC,kBAAkB,EAAEA,kBAAkB,IAAIqW,QAAQ,CAACb,UAAU,CAACxV,kBAAkB;UAClF,CAAC,CAAC;UACFrnC,IAAI,CAACwzB,UAAU,GAAG,IAAIoyB,eAAe,CAAC,IAAI,EAAElyD,CAAC,CAAC;UAC9C+xD,cAAc,CAAC1uD,IAAI,CAACiJ,IAAI,CAACwzB,UAAU,CAAC;QACtC;MACF;MACA,IAAI,CAAC4xB,eAAe,CAAC,CAAC;MACtB,OAAOK,cAAc;IACvB;IACAI,cAAcA,CAAA,EAAG;MACftyD,IAAI,CAAC,IAAI,CAACmqB,IAAI,CAAC/H,QAAQ,EAAE,CAACmgB,OAAO,EAAE1hC,YAAY,KAAK;QAClD,IAAI,CAAC2hC,cAAc,CAAC3hC,YAAY,CAAC,CAACo/B,UAAU,CAACyT,KAAK,CAAC,CAAC;MACtD,CAAC,EAAE,IAAI,CAAC;IACV;IACAA,KAAKA,CAAA,EAAG;MACN,IAAI,CAAC4e,cAAc,CAAC,CAAC;MACrB,IAAI,CAACzQ,aAAa,CAAC,OAAO,CAAC;IAC7B;IACA9b,MAAMA,CAACziB,IAAI,EAAE;MACX,MAAMikB,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1BA,MAAM,CAACxB,MAAM,CAAC,CAAC;MACf,MAAMrkC,OAAO,GAAG,IAAI,CAACmuD,QAAQ,GAAGtoB,MAAM,CAACgN,cAAc,CAAChN,MAAM,CAACwmB,iBAAiB,CAAC,CAAC,EAAE,IAAI,CAACxiC,UAAU,CAAC,CAAC,CAAC;MACpG,MAAMgnC,aAAa,GAAG,IAAI,CAACvb,mBAAmB,GAAG,CAACt1C,OAAO,CAACugB,SAAS;MACnE,IAAI,CAACuwC,aAAa,CAAC,CAAC;MACpB,IAAI,CAACC,mBAAmB,CAAC,CAAC;MAC1B,IAAI,CAACC,oBAAoB,CAAC,CAAC;MAC3B,IAAI,CAACtC,QAAQ,CAACtF,UAAU,CAAC,CAAC;MAC1B,IAAI,IAAI,CAACjJ,aAAa,CAAC,cAAc,EAAE;QAACv+B,IAAI;QAAEunC,UAAU,EAAE;MAAI,CAAC,CAAC,KAAK,KAAK,EAAE;QAC1E;MACF;MACA,MAAMqH,cAAc,GAAG,IAAI,CAACD,wBAAwB,CAAC,CAAC;MACtD,IAAI,CAACpQ,aAAa,CAAC,sBAAsB,CAAC;MAC1C,IAAIlb,UAAU,GAAG,CAAC;MAClB,KAAK,IAAIxmC,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAG,IAAI,CAACypB,IAAI,CAAC/H,QAAQ,CAAC9hB,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAEP,CAAC,EAAE,EAAE;QAC/D,MAAM;UAAC8/B;QAAU,CAAC,GAAG,IAAI,CAACuC,cAAc,CAACriC,CAAC,CAAC;QAC3C,MAAMuzC,KAAK,GAAG,CAAC6e,aAAa,IAAIL,cAAc,CAAC1wD,OAAO,CAACy+B,UAAU,CAAC,KAAK,CAAC,CAAC;QACzEA,UAAU,CAAC8T,qBAAqB,CAACL,KAAK,CAAC;QACvC/M,UAAU,GAAGniC,IAAI,CAACqC,GAAG,CAAC,CAACo5B,UAAU,CAAC4V,cAAc,CAAC,CAAC,EAAElP,UAAU,CAAC;MACjE;MACAA,UAAU,GAAG,IAAI,CAACgsB,WAAW,GAAGjxD,OAAO,CAACoiC,MAAM,CAACsC,WAAW,GAAGO,UAAU,GAAG,CAAC;MAC3E,IAAI,CAACisB,aAAa,CAACjsB,UAAU,CAAC;MAC9B,IAAI,CAAC4rB,aAAa,EAAE;QAClBvyD,IAAI,CAACkyD,cAAc,EAAGjyB,UAAU,IAAK;UACnCA,UAAU,CAACyT,KAAK,CAAC,CAAC;QACpB,CAAC,CAAC;MACJ;MACA,IAAI,CAACmf,eAAe,CAACvvC,IAAI,CAAC;MAC1B,IAAI,CAACu+B,aAAa,CAAC,aAAa,EAAE;QAACv+B;MAAI,CAAC,CAAC;MACzC,IAAI,CAACgjB,OAAO,CAACtgC,IAAI,CAACyoD,aAAa,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;MAC7C,MAAM;QAACj/C,OAAO;QAAEwgD;MAAU,CAAC,GAAG,IAAI;MAClC,IAAIA,UAAU,EAAE;QACd,IAAI,CAAC8C,aAAa,CAAC9C,UAAU,EAAE,IAAI,CAAC;MACtC,CAAC,MAAM,IAAIxgD,OAAO,CAAClP,MAAM,EAAE;QACzB,IAAI,CAACyyD,kBAAkB,CAACvjD,OAAO,EAAEA,OAAO,EAAE,IAAI,CAAC;MACjD;MACA,IAAI,CAACwhD,MAAM,CAAC,CAAC;IACf;IACAwB,aAAaA,CAAA,EAAG;MACdxyD,IAAI,CAAC,IAAI,CAACgkB,MAAM,EAAGD,KAAK,IAAK;QAC3Buf,OAAO,CAACkD,SAAS,CAAC,IAAI,EAAEziB,KAAK,CAAC;MAChC,CAAC,CAAC;MACF,IAAI,CAACktC,mBAAmB,CAAC,CAAC;MAC1B,IAAI,CAACG,mBAAmB,CAAC,CAAC;IAC5B;IACAqB,mBAAmBA,CAAA,EAAG;MACpB,MAAM/wD,OAAO,GAAG,IAAI,CAACA,OAAO;MAC5B,MAAMsxD,cAAc,GAAG,IAAIpoD,GAAG,CAAClM,MAAM,CAAC2B,IAAI,CAAC,IAAI,CAAC4vD,UAAU,CAAC,CAAC;MAC5D,MAAMgD,SAAS,GAAG,IAAIroD,GAAG,CAAClJ,OAAO,CAACghB,MAAM,CAAC;MACzC,IAAI,CAAC3e,SAAS,CAACivD,cAAc,EAAEC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC/C,oBAAoB,KAAKxuD,OAAO,CAACoiB,UAAU,EAAE;QAC/F,IAAI,CAACovC,YAAY,CAAC,CAAC;QACnB,IAAI,CAACxC,UAAU,CAAC,CAAC;MACnB;IACF;IACAgC,oBAAoBA,CAAA,EAAG;MACrB,MAAM;QAACrC;MAAc,CAAC,GAAG,IAAI;MAC7B,MAAM8C,OAAO,GAAG,IAAI,CAACC,sBAAsB,CAAC,CAAC,IAAI,EAAE;MACnD,KAAK,MAAM;QAAClpD,MAAM;QAAE/B,KAAK;QAAE0E;MAAK,CAAC,IAAIsmD,OAAO,EAAE;QAC5C,MAAMlb,IAAI,GAAG/tC,MAAM,KAAK,iBAAiB,GAAG,CAAC2C,KAAK,GAAGA,KAAK;QAC1DuiD,eAAe,CAACiB,cAAc,EAAEloD,KAAK,EAAE8vC,IAAI,CAAC;MAC9C;IACF;IACAmb,sBAAsBA,CAAA,EAAG;MACvB,MAAM/a,YAAY,GAAG,IAAI,CAACA,YAAY;MACtC,IAAI,CAACA,YAAY,IAAI,CAACA,YAAY,CAAC/3C,MAAM,EAAE;QACzC;MACF;MACA,IAAI,CAAC+3C,YAAY,GAAG,EAAE;MACtB,MAAMgb,YAAY,GAAG,IAAI,CAAClpC,IAAI,CAAC/H,QAAQ,CAAC9hB,MAAM;MAC9C,MAAMgzD,OAAO,GAAInP,GAAG,IAAK,IAAIv5C,GAAG,CAC9BytC,YAAY,CACTjlB,MAAM,CAAC1hB,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC,KAAKyyC,GAAG,CAAC,CACzBljD,GAAG,CAAC,CAACyQ,CAAC,EAAEvR,CAAC,KAAKA,CAAC,GAAG,GAAG,GAAGuR,CAAC,CAAClH,MAAM,CAAC,CAAC,CAAC,CAACyoB,IAAI,CAAC,GAAG,CAAC,CAClD,CAAC;MACD,MAAMsgC,SAAS,GAAGD,OAAO,CAAC,CAAC,CAAC;MAC5B,KAAK,IAAInzD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkzD,YAAY,EAAElzD,CAAC,EAAE,EAAE;QACrC,IAAI,CAAC4D,SAAS,CAACwvD,SAAS,EAAED,OAAO,CAACnzD,CAAC,CAAC,CAAC,EAAE;UACrC;QACF;MACF;MACA,OAAO3B,KAAK,CAACsM,IAAI,CAACyoD,SAAS,CAAC,CACzBtyD,GAAG,CAACyQ,CAAC,IAAIA,CAAC,CAACrO,KAAK,CAAC,GAAG,CAAC,CAAC,CACtBpC,GAAG,CAAC+C,CAAC,KAAK;QAACkG,MAAM,EAAElG,CAAC,CAAC,CAAC,CAAC;QAAEmE,KAAK,EAAE,CAACnE,CAAC,CAAC,CAAC,CAAC;QAAE6I,KAAK,EAAE,CAAC7I,CAAC,CAAC,CAAC;MAAC,CAAC,CAAC,CAAC;IAC3D;IACA4uD,aAAaA,CAACjsB,UAAU,EAAE;MACxB,IAAI,IAAI,CAACkb,aAAa,CAAC,cAAc,EAAE;QAACgJ,UAAU,EAAE;MAAI,CAAC,CAAC,KAAK,KAAK,EAAE;QACpE;MACF;MACAvnB,OAAO,CAACyC,MAAM,CAAC,IAAI,EAAE,IAAI,CAACtf,KAAK,EAAE,IAAI,CAACC,MAAM,EAAEigB,UAAU,CAAC;MACzD,MAAM1Z,IAAI,GAAG,IAAI,CAACoU,SAAS;MAC3B,MAAMmyB,MAAM,GAAGvmC,IAAI,CAACxG,KAAK,IAAI,CAAC,IAAIwG,IAAI,CAACvG,MAAM,IAAI,CAAC;MAClD,IAAI,CAAC4f,OAAO,GAAG,EAAE;MACjBtmC,IAAI,CAAC,IAAI,CAAC+iC,KAAK,EAAG3b,GAAG,IAAK;QACxB,IAAIosC,MAAM,IAAIpsC,GAAG,CAACoZ,QAAQ,KAAK,WAAW,EAAE;UAC1C;QACF;QACA,IAAIpZ,GAAG,CAACsf,SAAS,EAAE;UACjBtf,GAAG,CAACsf,SAAS,CAAC,CAAC;QACjB;QACA,IAAI,CAACJ,OAAO,CAAC9iC,IAAI,CAAC,GAAG4jB,GAAG,CAACkf,OAAO,CAAC,CAAC,CAAC;MACrC,CAAC,EAAE,IAAI,CAAC;MACR,IAAI,CAACA,OAAO,CAACr8B,OAAO,CAAC,CAAC9F,IAAI,EAAErD,KAAK,KAAK;QACpCqD,IAAI,CAACsvD,IAAI,GAAG3yD,KAAK;MACnB,CAAC,CAAC;MACF,IAAI,CAAC+gD,aAAa,CAAC,aAAa,CAAC;IACnC;IACAgR,eAAeA,CAACvvC,IAAI,EAAE;MACpB,IAAI,IAAI,CAACu+B,aAAa,CAAC,sBAAsB,EAAE;QAACv+B,IAAI;QAAEunC,UAAU,EAAE;MAAI,CAAC,CAAC,KAAK,KAAK,EAAE;QAClF;MACF;MACA,KAAK,IAAI1qD,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAG,IAAI,CAACypB,IAAI,CAAC/H,QAAQ,CAAC9hB,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;QAC/D,IAAI,CAACqiC,cAAc,CAACriC,CAAC,CAAC,CAAC8/B,UAAU,CAACyG,SAAS,CAAC,CAAC;MAC/C;MACA,KAAK,IAAIvmC,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAG,IAAI,CAACypB,IAAI,CAAC/H,QAAQ,CAAC9hB,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;QAC/D,IAAI,CAACuzD,cAAc,CAACvzD,CAAC,EAAE2D,UAAU,CAACwf,IAAI,CAAC,GAAGA,IAAI,CAAC;UAACziB,YAAY,EAAEV;QAAC,CAAC,CAAC,GAAGmjB,IAAI,CAAC;MAC3E;MACA,IAAI,CAACu+B,aAAa,CAAC,qBAAqB,EAAE;QAACv+B;MAAI,CAAC,CAAC;IACnD;IACAowC,cAAcA,CAAC5yD,KAAK,EAAEwiB,IAAI,EAAE;MAC1B,MAAM7W,IAAI,GAAG,IAAI,CAAC+1B,cAAc,CAAC1hC,KAAK,CAAC;MACvC,MAAMjB,IAAI,GAAG;QAAC4M,IAAI;QAAE3L,KAAK;QAAEwiB,IAAI;QAAEunC,UAAU,EAAE;MAAI,CAAC;MAClD,IAAI,IAAI,CAAChJ,aAAa,CAAC,qBAAqB,EAAEhiD,IAAI,CAAC,KAAK,KAAK,EAAE;QAC7D;MACF;MACA4M,IAAI,CAACwzB,UAAU,CAAC/wB,OAAO,CAACoU,IAAI,CAAC;MAC7BzjB,IAAI,CAACgrD,UAAU,GAAG,KAAK;MACvB,IAAI,CAAChJ,aAAa,CAAC,oBAAoB,EAAEhiD,IAAI,CAAC;IAChD;IACAmxD,MAAMA,CAAA,EAAG;MACP,IAAI,IAAI,CAACnP,aAAa,CAAC,cAAc,EAAE;QAACgJ,UAAU,EAAE;MAAI,CAAC,CAAC,KAAK,KAAK,EAAE;QACpE;MACF;MACA,IAAIl6C,QAAQ,CAACvM,GAAG,CAAC,IAAI,CAAC,EAAE;QACtB,IAAI,IAAI,CAACksD,QAAQ,IAAI,CAAC3/C,QAAQ,CAACrB,OAAO,CAAC,IAAI,CAAC,EAAE;UAC5CqB,QAAQ,CAACxI,KAAK,CAAC,IAAI,CAAC;QACtB;MACF,CAAC,MAAM;QACL,IAAI,CAACoH,IAAI,CAAC,CAAC;QACXq/C,oBAAoB,CAAC;UAACngD,KAAK,EAAE;QAAI,CAAC,CAAC;MACrC;IACF;IACAc,IAAIA,CAAA,EAAG;MACL,IAAIpP,CAAC;MACL,IAAI,IAAI,CAACywD,iBAAiB,EAAE;QAC1B,MAAM;UAACnqC,KAAK;UAAEC;QAAM,CAAC,GAAG,IAAI,CAACkqC,iBAAiB;QAC9C,IAAI,CAACD,OAAO,CAAClqC,KAAK,EAAEC,MAAM,CAAC;QAC3B,IAAI,CAACkqC,iBAAiB,GAAG,IAAI;MAC/B;MACA,IAAI,CAACpD,KAAK,CAAC,CAAC;MACZ,IAAI,IAAI,CAAC/mC,KAAK,IAAI,CAAC,IAAI,IAAI,CAACC,MAAM,IAAI,CAAC,EAAE;QACvC;MACF;MACA,IAAI,IAAI,CAACm7B,aAAa,CAAC,YAAY,EAAE;QAACgJ,UAAU,EAAE;MAAI,CAAC,CAAC,KAAK,KAAK,EAAE;QAClE;MACF;MACA,MAAM8I,MAAM,GAAG,IAAI,CAACrtB,OAAO;MAC3B,KAAKnmC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwzD,MAAM,CAACrzD,MAAM,IAAIqzD,MAAM,CAACxzD,CAAC,CAAC,CAAComC,CAAC,IAAI,CAAC,EAAE,EAAEpmC,CAAC,EAAE;QACtDwzD,MAAM,CAACxzD,CAAC,CAAC,CAACoP,IAAI,CAAC,IAAI,CAAC8xB,SAAS,CAAC;MAChC;MACA,IAAI,CAACuyB,aAAa,CAAC,CAAC;MACpB,OAAOzzD,CAAC,GAAGwzD,MAAM,CAACrzD,MAAM,EAAE,EAAEH,CAAC,EAAE;QAC7BwzD,MAAM,CAACxzD,CAAC,CAAC,CAACoP,IAAI,CAAC,IAAI,CAAC8xB,SAAS,CAAC;MAChC;MACA,IAAI,CAACwgB,aAAa,CAAC,WAAW,CAAC;IACjC;IACA/S,sBAAsBA,CAACD,aAAa,EAAE;MACpC,MAAMnO,QAAQ,GAAG,IAAI,CAACyvB,eAAe;MACrC,MAAMrqD,MAAM,GAAG,EAAE;MACjB,IAAI3F,CAAC,EAAEO,IAAI;MACX,KAAKP,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAGggC,QAAQ,CAACpgC,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;QACjD,MAAMsM,IAAI,GAAGi0B,QAAQ,CAACvgC,CAAC,CAAC;QACxB,IAAI,CAAC0uC,aAAa,IAAIpiC,IAAI,CAAC6gC,OAAO,EAAE;UAClCxnC,MAAM,CAACtC,IAAI,CAACiJ,IAAI,CAAC;QACnB;MACF;MACA,OAAO3G,MAAM;IACf;IACA66B,4BAA4BA,CAAA,EAAG;MAC7B,OAAO,IAAI,CAACmO,sBAAsB,CAAC,IAAI,CAAC;IAC1C;IACA8kB,aAAaA,CAAA,EAAG;MACd,IAAI,IAAI,CAAC/R,aAAa,CAAC,oBAAoB,EAAE;QAACgJ,UAAU,EAAE;MAAI,CAAC,CAAC,KAAK,KAAK,EAAE;QAC1E;MACF;MACA,MAAMnqB,QAAQ,GAAG,IAAI,CAACC,4BAA4B,CAAC,CAAC;MACpD,KAAK,IAAIxgC,CAAC,GAAGugC,QAAQ,CAACpgC,MAAM,GAAG,CAAC,EAAEH,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;QAC7C,IAAI,CAAC0zD,YAAY,CAACnzB,QAAQ,CAACvgC,CAAC,CAAC,CAAC;MAChC;MACA,IAAI,CAAC0hD,aAAa,CAAC,mBAAmB,CAAC;IACzC;IACAgS,YAAYA,CAACpnD,IAAI,EAAE;MACjB,MAAMwW,GAAG,GAAG,IAAI,CAACA,GAAG;MACpB,MAAMmK,IAAI,GAAG3gB,IAAI,CAACwpC,KAAK;MACvB,MAAM6d,OAAO,GAAG,CAAC1mC,IAAI,CAACuhB,QAAQ;MAC9B,MAAM1hB,IAAI,GAAG,IAAI,CAACoU,SAAS;MAC3B,MAAMxhC,IAAI,GAAG;QACX4M,IAAI;QACJ3L,KAAK,EAAE2L,IAAI,CAAC3L,KAAK;QACjB+pD,UAAU,EAAE;MACd,CAAC;MACD,IAAI,IAAI,CAAChJ,aAAa,CAAC,mBAAmB,EAAEhiD,IAAI,CAAC,KAAK,KAAK,EAAE;QAC3D;MACF;MACA,IAAIi0D,OAAO,EAAE;QACX3mC,QAAQ,CAAClK,GAAG,EAAE;UACZ7W,IAAI,EAAEghB,IAAI,CAAChhB,IAAI,KAAK,KAAK,GAAG,CAAC,GAAG6gB,IAAI,CAAC7gB,IAAI,GAAGghB,IAAI,CAAChhB,IAAI;UACrDC,KAAK,EAAE+gB,IAAI,CAAC/gB,KAAK,KAAK,KAAK,GAAG,IAAI,CAACoa,KAAK,GAAGwG,IAAI,CAAC5gB,KAAK,GAAG+gB,IAAI,CAAC/gB,KAAK;UAClEsa,GAAG,EAAEyG,IAAI,CAACzG,GAAG,KAAK,KAAK,GAAG,CAAC,GAAGsG,IAAI,CAACtG,GAAG,GAAGyG,IAAI,CAACzG,GAAG;UACjDC,MAAM,EAAEwG,IAAI,CAACxG,MAAM,KAAK,KAAK,GAAG,IAAI,CAACF,MAAM,GAAGuG,IAAI,CAACrG,MAAM,GAAGwG,IAAI,CAACxG;QACnE,CAAC,CAAC;MACJ;MACAna,IAAI,CAACwzB,UAAU,CAAC1wB,IAAI,CAAC,CAAC;MACtB,IAAIukD,OAAO,EAAE;QACXzmC,UAAU,CAACpK,GAAG,CAAC;MACjB;MACApjB,IAAI,CAACgrD,UAAU,GAAG,KAAK;MACvB,IAAI,CAAChJ,aAAa,CAAC,kBAAkB,EAAEhiD,IAAI,CAAC;IAC9C;IACAshC,aAAaA,CAACnU,KAAK,EAAE;MACnB,OAAOD,cAAc,CAACC,KAAK,EAAE,IAAI,CAACqU,SAAS,EAAE,IAAI,CAACsxB,WAAW,CAAC;IAChE;IACAoB,yBAAyBA,CAACzvD,CAAC,EAAEgf,IAAI,EAAE5hB,OAAO,EAAEw/B,gBAAgB,EAAE;MAC5D,MAAMh3B,MAAM,GAAGm4B,WAAW,CAACC,KAAK,CAAChf,IAAI,CAAC;MACtC,IAAI,OAAOpZ,MAAM,KAAK,UAAU,EAAE;QAChC,OAAOA,MAAM,CAAC,IAAI,EAAE5F,CAAC,EAAE5C,OAAO,EAAEw/B,gBAAgB,CAAC;MACnD;MACA,OAAO,EAAE;IACX;IACAsB,cAAcA,CAAC3hC,YAAY,EAAE;MAC3B,MAAM0hC,OAAO,GAAG,IAAI,CAACpY,IAAI,CAAC/H,QAAQ,CAACvhB,YAAY,CAAC;MAChD,MAAM6/B,QAAQ,GAAG,IAAI,CAACqvB,SAAS;MAC/B,IAAItjD,IAAI,GAAGi0B,QAAQ,CAACtN,MAAM,CAACxwB,CAAC,IAAIA,CAAC,IAAIA,CAAC,CAACovD,QAAQ,KAAKzvB,OAAO,CAAC,CAACt8B,GAAG,CAAC,CAAC;MAClE,IAAI,CAACwG,IAAI,EAAE;QACTA,IAAI,GAAG;UACLhO,IAAI,EAAE,IAAI;UACV0rB,IAAI,EAAE,EAAE;UACRoY,OAAO,EAAE,IAAI;UACbtC,UAAU,EAAE,IAAI;UAChBsR,MAAM,EAAE,IAAI;UACZsB,OAAO,EAAE,IAAI;UACbE,OAAO,EAAE,IAAI;UACbof,KAAK,EAAE5vB,OAAO,IAAIA,OAAO,CAAC4vB,KAAK,IAAI,CAAC;UACpCrxD,KAAK,EAAED,YAAY;UACnBmxD,QAAQ,EAAEzvB,OAAO;UACjBv1B,OAAO,EAAE,EAAE;UACXF,OAAO,EAAE;QACX,CAAC;QACD4zB,QAAQ,CAACl9B,IAAI,CAACiJ,IAAI,CAAC;MACrB;MACA,OAAOA,IAAI;IACb;IACA8e,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAAC6mB,QAAQ,KAAK,IAAI,CAACA,QAAQ,GAAG1W,aAAa,CAAC,IAAI,EAAE;QAACjtB,KAAK,EAAE,IAAI;QAAEhQ,IAAI,EAAE;MAAO,CAAC,CAAC,CAAC;IAC7F;IACAu1D,sBAAsBA,CAAA,EAAG;MACvB,OAAO,IAAI,CAACrzB,4BAA4B,CAAC,CAAC,CAACrgC,MAAM;IACnD;IACA8xD,gBAAgBA,CAACvxD,YAAY,EAAE;MAC7B,MAAM0hC,OAAO,GAAG,IAAI,CAACpY,IAAI,CAAC/H,QAAQ,CAACvhB,YAAY,CAAC;MAChD,IAAI,CAAC0hC,OAAO,EAAE;QACZ,OAAO,KAAK;MACd;MACA,MAAM91B,IAAI,GAAG,IAAI,CAAC+1B,cAAc,CAAC3hC,YAAY,CAAC;MAC9C,OAAO,OAAO4L,IAAI,CAAC8kC,MAAM,KAAK,SAAS,GAAG,CAAC9kC,IAAI,CAAC8kC,MAAM,GAAG,CAAChP,OAAO,CAACgP,MAAM;IAC1E;IACA0iB,oBAAoBA,CAACpzD,YAAY,EAAEysC,OAAO,EAAE;MAC1C,MAAM7gC,IAAI,GAAG,IAAI,CAAC+1B,cAAc,CAAC3hC,YAAY,CAAC;MAC9C4L,IAAI,CAAC8kC,MAAM,GAAG,CAACjE,OAAO;IACxB;IACA4mB,oBAAoBA,CAACpzD,KAAK,EAAE;MAC1B,IAAI,CAACuvD,cAAc,CAACvvD,KAAK,CAAC,GAAG,CAAC,IAAI,CAACuvD,cAAc,CAACvvD,KAAK,CAAC;IAC1D;IACAqzD,iBAAiBA,CAACrzD,KAAK,EAAE;MACvB,OAAO,CAAC,IAAI,CAACuvD,cAAc,CAACvvD,KAAK,CAAC;IACpC;IACAszD,iBAAiBA,CAACvzD,YAAY,EAAEiwC,SAAS,EAAExD,OAAO,EAAE;MAClD,MAAMhqB,IAAI,GAAGgqB,OAAO,GAAG,MAAM,GAAG,MAAM;MACtC,MAAM7gC,IAAI,GAAG,IAAI,CAAC+1B,cAAc,CAAC3hC,YAAY,CAAC;MAC9C,MAAM6N,KAAK,GAAGjC,IAAI,CAACwzB,UAAU,CAACyW,kBAAkB,CAACn0C,SAAS,EAAE+gB,IAAI,CAAC;MACjE,IAAIzf,OAAO,CAACitC,SAAS,CAAC,EAAE;QACtBrkC,IAAI,CAAC0d,IAAI,CAAC2mB,SAAS,CAAC,CAACS,MAAM,GAAG,CAACjE,OAAO;QACtC,IAAI,CAACvH,MAAM,CAAC,CAAC;MACf,CAAC,MAAM;QACL,IAAI,CAACkuB,oBAAoB,CAACpzD,YAAY,EAAEysC,OAAO,CAAC;QAChD5+B,KAAK,CAACq3B,MAAM,CAACt5B,IAAI,EAAE;UAAC6gC;QAAO,CAAC,CAAC;QAC7B,IAAI,CAACvH,MAAM,CAAE9iB,GAAG,IAAKA,GAAG,CAACpiB,YAAY,KAAKA,YAAY,GAAGyiB,IAAI,GAAG/gB,SAAS,CAAC;MAC5E;IACF;IACAgrC,IAAIA,CAAC1sC,YAAY,EAAEiwC,SAAS,EAAE;MAC5B,IAAI,CAACsjB,iBAAiB,CAACvzD,YAAY,EAAEiwC,SAAS,EAAE,KAAK,CAAC;IACxD;IACA1D,IAAIA,CAACvsC,YAAY,EAAEiwC,SAAS,EAAE;MAC5B,IAAI,CAACsjB,iBAAiB,CAACvzD,YAAY,EAAEiwC,SAAS,EAAE,IAAI,CAAC;IACvD;IACAghB,mBAAmBA,CAACjxD,YAAY,EAAE;MAChC,MAAM4L,IAAI,GAAG,IAAI,CAACsjD,SAAS,CAAClvD,YAAY,CAAC;MACzC,IAAI4L,IAAI,IAAIA,IAAI,CAACwzB,UAAU,EAAE;QAC3BxzB,IAAI,CAACwzB,UAAU,CAAC0T,QAAQ,CAAC,CAAC;MAC5B;MACA,OAAO,IAAI,CAACoc,SAAS,CAAClvD,YAAY,CAAC;IACrC;IACAwzD,KAAKA,CAAA,EAAG;MACN,IAAIl0D,CAAC,EAAEO,IAAI;MACX,IAAI,CAAC6P,IAAI,CAAC,CAAC;MACXI,QAAQ,CAACF,MAAM,CAAC,IAAI,CAAC;MACrB,KAAKtQ,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAG,IAAI,CAACypB,IAAI,CAAC/H,QAAQ,CAAC9hB,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;QAC3D,IAAI,CAAC2xD,mBAAmB,CAAC3xD,CAAC,CAAC;MAC7B;IACF;IACAm0D,OAAOA,CAAA,EAAG;MACR,IAAI,CAACzS,aAAa,CAAC,eAAe,CAAC;MACnC,MAAM;QAAC76B,MAAM;QAAE/D;MAAG,CAAC,GAAG,IAAI;MAC1B,IAAI,CAACoxC,KAAK,CAAC,CAAC;MACZ,IAAI,CAAC9sB,MAAM,CAACgmB,UAAU,CAAC,CAAC;MACxB,IAAIvmC,MAAM,EAAE;QACV,IAAI,CAACksC,YAAY,CAAC,CAAC;QACnB5nC,WAAW,CAACtE,MAAM,EAAE/D,GAAG,CAAC;QACxB,IAAI,CAACV,QAAQ,CAAC6kB,cAAc,CAACnkB,GAAG,CAAC;QACjC,IAAI,CAAC+D,MAAM,GAAG,IAAI;QAClB,IAAI,CAAC/D,GAAG,GAAG,IAAI;MACjB;MACA,IAAI,CAAC4+B,aAAa,CAAC,SAAS,CAAC;MAC7B,OAAOqN,SAAS,CAAC,IAAI,CAAC9wD,EAAE,CAAC;MACzB,IAAI,CAACyjD,aAAa,CAAC,cAAc,CAAC;IACpC;IACA0S,aAAaA,CAAC,GAAG10D,IAAI,EAAE;MACrB,OAAO,IAAI,CAACmnB,MAAM,CAACwtC,SAAS,CAAC,GAAG30D,IAAI,CAAC;IACvC;IACA6wD,UAAUA,CAAA,EAAG;MACX,IAAI,CAAC+D,cAAc,CAAC,CAAC;MACrB,IAAI,IAAI,CAAC/yD,OAAO,CAACoiB,UAAU,EAAE;QAC3B,IAAI,CAAC4wC,oBAAoB,CAAC,CAAC;MAC7B,CAAC,MAAM;QACL,IAAI,CAACpE,QAAQ,GAAG,IAAI;MACtB;IACF;IACAmE,cAAcA,CAAA,EAAG;MACf,MAAM5qD,SAAS,GAAG,IAAI,CAAComD,UAAU;MACjC,MAAM1tC,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,MAAMoyC,IAAI,GAAGA,CAACl2D,IAAI,EAAEkL,QAAQ,KAAK;QAC/B4Y,QAAQ,CAACqH,gBAAgB,CAAC,IAAI,EAAEnrB,IAAI,EAAEkL,QAAQ,CAAC;QAC/CE,SAAS,CAACpL,IAAI,CAAC,GAAGkL,QAAQ;MAC5B,CAAC;MACD,MAAMA,QAAQ,GAAGA,CAACrF,CAAC,EAAE1B,CAAC,EAAEE,CAAC,KAAK;QAC5BwB,CAAC,CAAC4iB,OAAO,GAAGtkB,CAAC;QACb0B,CAAC,CAAC6iB,OAAO,GAAGrkB,CAAC;QACb,IAAI,CAACgwD,aAAa,CAACxuD,CAAC,CAAC;MACvB,CAAC;MACDtE,IAAI,CAAC,IAAI,CAAC0B,OAAO,CAACghB,MAAM,EAAGjkB,IAAI,IAAKk2D,IAAI,CAACl2D,IAAI,EAAEkL,QAAQ,CAAC,CAAC;IAC3D;IACA+qD,oBAAoBA,CAAA,EAAG;MACrB,IAAI,CAAC,IAAI,CAACxE,oBAAoB,EAAE;QAC9B,IAAI,CAACA,oBAAoB,GAAG,CAAC,CAAC;MAChC;MACA,MAAMrmD,SAAS,GAAG,IAAI,CAACqmD,oBAAoB;MAC3C,MAAM3tC,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,MAAMoyC,IAAI,GAAGA,CAACl2D,IAAI,EAAEkL,QAAQ,KAAK;QAC/B4Y,QAAQ,CAACqH,gBAAgB,CAAC,IAAI,EAAEnrB,IAAI,EAAEkL,QAAQ,CAAC;QAC/CE,SAAS,CAACpL,IAAI,CAAC,GAAGkL,QAAQ;MAC5B,CAAC;MACD,MAAMirD,OAAO,GAAGA,CAACn2D,IAAI,EAAEkL,QAAQ,KAAK;QAClC,IAAIE,SAAS,CAACpL,IAAI,CAAC,EAAE;UACnB8jB,QAAQ,CAACsH,mBAAmB,CAAC,IAAI,EAAEprB,IAAI,EAAEkL,QAAQ,CAAC;UAClD,OAAOE,SAAS,CAACpL,IAAI,CAAC;QACxB;MACF,CAAC;MACD,MAAMkL,QAAQ,GAAGA,CAAC8c,KAAK,EAAEC,MAAM,KAAK;QAClC,IAAI,IAAI,CAACM,MAAM,EAAE;UACf,IAAI,CAACmjB,MAAM,CAAC1jB,KAAK,EAAEC,MAAM,CAAC;QAC5B;MACF,CAAC;MACD,IAAImuC,QAAQ;MACZ,MAAMvE,QAAQ,GAAGA,CAAA,KAAM;QACrBsE,OAAO,CAAC,QAAQ,EAAEtE,QAAQ,CAAC;QAC3B,IAAI,CAACA,QAAQ,GAAG,IAAI;QACpB,IAAI,CAACnmB,MAAM,CAAC,CAAC;QACbwqB,IAAI,CAAC,QAAQ,EAAEhrD,QAAQ,CAAC;QACxBgrD,IAAI,CAAC,QAAQ,EAAEE,QAAQ,CAAC;MAC1B,CAAC;MACDA,QAAQ,GAAGA,CAAA,KAAM;QACf,IAAI,CAACvE,QAAQ,GAAG,KAAK;QACrBsE,OAAO,CAAC,QAAQ,EAAEjrD,QAAQ,CAAC;QAC3B,IAAI,CAAC0qD,KAAK,CAAC,CAAC;QACZ,IAAI,CAAC1D,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;QAClBgE,IAAI,CAAC,QAAQ,EAAErE,QAAQ,CAAC;MAC1B,CAAC;MACD,IAAI/tC,QAAQ,CAAC8kB,UAAU,CAAC,IAAI,CAACrgB,MAAM,CAAC,EAAE;QACpCspC,QAAQ,CAAC,CAAC;MACZ,CAAC,MAAM;QACLuE,QAAQ,CAAC,CAAC;MACZ;IACF;IACA3B,YAAYA,CAAA,EAAG;MACblzD,IAAI,CAAC,IAAI,CAACiwD,UAAU,EAAE,CAACtmD,QAAQ,EAAElL,IAAI,KAAK;QACxC,IAAI,CAAC8jB,QAAQ,CAACsH,mBAAmB,CAAC,IAAI,EAAEprB,IAAI,EAAEkL,QAAQ,CAAC;MACzD,CAAC,CAAC;MACF,IAAI,CAACsmD,UAAU,GAAG,CAAC,CAAC;MACpBjwD,IAAI,CAAC,IAAI,CAACkwD,oBAAoB,EAAE,CAACvmD,QAAQ,EAAElL,IAAI,KAAK;QAClD,IAAI,CAAC8jB,QAAQ,CAACsH,mBAAmB,CAAC,IAAI,EAAEprB,IAAI,EAAEkL,QAAQ,CAAC;MACzD,CAAC,CAAC;MACF,IAAI,CAACumD,oBAAoB,GAAG3tD,SAAS;IACvC;IACAuyD,gBAAgBA,CAACpqD,KAAK,EAAE4Y,IAAI,EAAEq4B,OAAO,EAAE;MACrC,MAAMhpB,MAAM,GAAGgpB,OAAO,GAAG,KAAK,GAAG,QAAQ;MACzC,IAAIlvC,IAAI,EAAEtI,IAAI,EAAEhE,CAAC,EAAEO,IAAI;MACvB,IAAI4iB,IAAI,KAAK,SAAS,EAAE;QACtB7W,IAAI,GAAG,IAAI,CAAC+1B,cAAc,CAAC93B,KAAK,CAAC,CAAC,CAAC,CAAC7J,YAAY,CAAC;QACjD4L,IAAI,CAACwzB,UAAU,CAAC,GAAG,GAAGtN,MAAM,GAAG,mBAAmB,CAAC,CAAC,CAAC;MACvD;MACA,KAAKxyB,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAGgK,KAAK,CAACpK,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;QAC9CgE,IAAI,GAAGuG,KAAK,CAACvK,CAAC,CAAC;QACf,MAAM8/B,UAAU,GAAG97B,IAAI,IAAI,IAAI,CAACq+B,cAAc,CAACr+B,IAAI,CAACtD,YAAY,CAAC,CAACo/B,UAAU;QAC5E,IAAIA,UAAU,EAAE;UACdA,UAAU,CAACtN,MAAM,GAAG,YAAY,CAAC,CAACxuB,IAAI,CAAC6hB,OAAO,EAAE7hB,IAAI,CAACtD,YAAY,EAAEsD,IAAI,CAACrD,KAAK,CAAC;QAChF;MACF;IACF;IACAi0D,iBAAiBA,CAAA,EAAG;MAClB,OAAO,IAAI,CAACvlD,OAAO,IAAI,EAAE;IAC3B;IACAwlD,iBAAiBA,CAACC,cAAc,EAAE;MAChC,MAAMC,UAAU,GAAG,IAAI,CAAC1lD,OAAO,IAAI,EAAE;MACrC,MAAMg9B,MAAM,GAAGyoB,cAAc,CAACh0D,GAAG,CAAC,CAAC;QAACJ,YAAY;QAAEC;MAAK,CAAC,KAAK;QAC3D,MAAM2L,IAAI,GAAG,IAAI,CAAC+1B,cAAc,CAAC3hC,YAAY,CAAC;QAC9C,IAAI,CAAC4L,IAAI,EAAE;UACT,MAAM,IAAIumB,KAAK,CAAC,4BAA4B,GAAGnyB,YAAY,CAAC;QAC9D;QACA,OAAO;UACLA,YAAY;UACZmlB,OAAO,EAAEvZ,IAAI,CAAC0d,IAAI,CAACrpB,KAAK,CAAC;UACzBA;QACF,CAAC;MACH,CAAC,CAAC;MACF,MAAMiN,OAAO,GAAG,CAACxN,cAAc,CAACisC,MAAM,EAAE0oB,UAAU,CAAC;MACnD,IAAInnD,OAAO,EAAE;QACX,IAAI,CAACyB,OAAO,GAAGg9B,MAAM;QACrB,IAAI,CAACwjB,UAAU,GAAG,IAAI;QACtB,IAAI,CAAC+C,kBAAkB,CAACvmB,MAAM,EAAE0oB,UAAU,CAAC;MAC7C;IACF;IACArT,aAAaA,CAAC4I,IAAI,EAAE5qD,IAAI,EAAEuzB,MAAM,EAAE;MAChC,OAAO,IAAI,CAACg9B,QAAQ,CAAC5F,MAAM,CAAC,IAAI,EAAEC,IAAI,EAAE5qD,IAAI,EAAEuzB,MAAM,CAAC;IACvD;IACA2/B,kBAAkBA,CAACvmB,MAAM,EAAE0oB,UAAU,EAAEC,MAAM,EAAE;MAC7C,MAAMC,YAAY,GAAG,IAAI,CAAC1zD,OAAO,CAACqhB,KAAK;MACvC,MAAMg6B,IAAI,GAAGA,CAAC/4C,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACovB,MAAM,CAACxwB,CAAC,IAAI,CAACqB,CAAC,CAACmnD,IAAI,CAACtoD,CAAC,IAAIF,CAAC,CAAC/B,YAAY,KAAKiC,CAAC,CAACjC,YAAY,IAAI+B,CAAC,CAAC9B,KAAK,KAAKgC,CAAC,CAAChC,KAAK,CAAC,CAAC;MAC5G,MAAMu0D,WAAW,GAAGtY,IAAI,CAACmY,UAAU,EAAE1oB,MAAM,CAAC;MAC5C,MAAM8oB,SAAS,GAAGH,MAAM,GAAG3oB,MAAM,GAAGuQ,IAAI,CAACvQ,MAAM,EAAE0oB,UAAU,CAAC;MAC5D,IAAIG,WAAW,CAAC/0D,MAAM,EAAE;QACtB,IAAI,CAACw0D,gBAAgB,CAACO,WAAW,EAAED,YAAY,CAAC9xC,IAAI,EAAE,KAAK,CAAC;MAC9D;MACA,IAAIgyC,SAAS,CAACh1D,MAAM,IAAI80D,YAAY,CAAC9xC,IAAI,EAAE;QACzC,IAAI,CAACwxC,gBAAgB,CAACQ,SAAS,EAAEF,YAAY,CAAC9xC,IAAI,EAAE,IAAI,CAAC;MAC3D;IACF;IACAwvC,aAAaA,CAACxuD,CAAC,EAAE6wD,MAAM,EAAE;MACvB,MAAMt1D,IAAI,GAAG;QACXoQ,KAAK,EAAE3L,CAAC;QACR6wD,MAAM;QACNtK,UAAU,EAAE,IAAI;QAChB2E,WAAW,EAAE,IAAI,CAACruB,aAAa,CAAC78B,CAAC;MACnC,CAAC;MACD,MAAMixD,WAAW,GAAI3K,MAAM,IAAK,CAACA,MAAM,CAAClpD,OAAO,CAACghB,MAAM,IAAI,IAAI,CAAChhB,OAAO,CAACghB,MAAM,EAAE2O,QAAQ,CAAC/sB,CAAC,CAACykC,MAAM,CAACtqC,IAAI,CAAC;MACtG,IAAI,IAAI,CAACojD,aAAa,CAAC,aAAa,EAAEhiD,IAAI,EAAE01D,WAAW,CAAC,KAAK,KAAK,EAAE;QAClE;MACF;MACA,MAAMxnD,OAAO,GAAG,IAAI,CAACynD,YAAY,CAAClxD,CAAC,EAAE6wD,MAAM,EAAEt1D,IAAI,CAAC2vD,WAAW,CAAC;MAC9D3vD,IAAI,CAACgrD,UAAU,GAAG,KAAK;MACvB,IAAI,CAAChJ,aAAa,CAAC,YAAY,EAAEhiD,IAAI,EAAE01D,WAAW,CAAC;MACnD,IAAIxnD,OAAO,IAAIlO,IAAI,CAACkO,OAAO,EAAE;QAC3B,IAAI,CAACijD,MAAM,CAAC,CAAC;MACf;MACA,OAAO,IAAI;IACb;IACAwE,YAAYA,CAAClxD,CAAC,EAAE6wD,MAAM,EAAE3F,WAAW,EAAE;MACnC,MAAM;QAAChgD,OAAO,EAAE0lD,UAAU,GAAG,EAAE;QAAExzD;MAAO,CAAC,GAAG,IAAI;MAChD,MAAMw/B,gBAAgB,GAAGi0B,MAAM;MAC/B,MAAM3oB,MAAM,GAAG,IAAI,CAACipB,kBAAkB,CAACnxD,CAAC,EAAE4wD,UAAU,EAAE1F,WAAW,EAAEtuB,gBAAgB,CAAC;MACpF,MAAMuuB,OAAO,GAAGprD,aAAa,CAACC,CAAC,CAAC;MAChC,MAAMirD,SAAS,GAAGD,kBAAkB,CAAChrD,CAAC,EAAE,IAAI,CAAC0rD,UAAU,EAAER,WAAW,EAAEC,OAAO,CAAC;MAC9E,IAAID,WAAW,EAAE;QACf,IAAI,CAACQ,UAAU,GAAG,IAAI;QACtBrwD,QAAQ,CAAC+B,OAAO,CAACgiB,OAAO,EAAE,CAACpf,CAAC,EAAEkoC,MAAM,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC;QAClD,IAAIijB,OAAO,EAAE;UACX9vD,QAAQ,CAAC+B,OAAO,CAACiiB,OAAO,EAAE,CAACrf,CAAC,EAAEkoC,MAAM,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC;QACpD;MACF;MACA,MAAMz+B,OAAO,GAAG,CAACxN,cAAc,CAACisC,MAAM,EAAE0oB,UAAU,CAAC;MACnD,IAAInnD,OAAO,IAAIonD,MAAM,EAAE;QACrB,IAAI,CAAC3lD,OAAO,GAAGg9B,MAAM;QACrB,IAAI,CAACumB,kBAAkB,CAACvmB,MAAM,EAAE0oB,UAAU,EAAEC,MAAM,CAAC;MACrD;MACA,IAAI,CAACnF,UAAU,GAAGT,SAAS;MAC3B,OAAOxhD,OAAO;IAChB;IACA0nD,kBAAkBA,CAACnxD,CAAC,EAAE4wD,UAAU,EAAE1F,WAAW,EAAEtuB,gBAAgB,EAAE;MAC/D,IAAI58B,CAAC,CAAC7F,IAAI,KAAK,UAAU,EAAE;QACzB,OAAO,EAAE;MACX;MACA,IAAI,CAAC+wD,WAAW,EAAE;QAChB,OAAO0F,UAAU;MACnB;MACA,MAAME,YAAY,GAAG,IAAI,CAAC1zD,OAAO,CAACqhB,KAAK;MACvC,OAAO,IAAI,CAACgxC,yBAAyB,CAACzvD,CAAC,EAAE8wD,YAAY,CAAC9xC,IAAI,EAAE8xC,YAAY,EAAEl0B,gBAAgB,CAAC;IAC7F;EACF;EACA,MAAMw0B,iBAAiB,GAAGA,CAAA,KAAM11D,IAAI,CAAC/B,KAAK,CAACixD,SAAS,EAAGzgD,KAAK,IAAKA,KAAK,CAAC2hD,QAAQ,CAACtF,UAAU,CAAC,CAAC,CAAC;EAC7F,MAAM9gD,UAAU,GAAG,IAAI;EACvBtL,MAAM,CAACkmB,gBAAgB,CAAC3mB,KAAK,EAAE;IAC7B8mB,QAAQ,EAAE;MACR/a,UAAU;MACV1L,KAAK,EAAEymB;IACT,CAAC;IACDmqC,SAAS,EAAE;MACTllD,UAAU;MACV1L,KAAK,EAAE4wD;IACT,CAAC;IACDxtC,SAAS,EAAE;MACT1X,UAAU;MACV1L,KAAK,EAAEojB;IACT,CAAC;IACDyoC,QAAQ,EAAE;MACRngD,UAAU;MACV1L,KAAK,EAAE6rD;IACT,CAAC;IACDmE,OAAO,EAAE;MACPtkD,UAAU;MACV1L,KAAK,EAAEgwD;IACT,CAAC;IACDa,QAAQ,EAAE;MACRnlD,UAAU;MACV1L,KAAK,EAAE6wD;IACT,CAAC;IACDjH,QAAQ,EAAE;MACRl+C,UAAU;MACV1L,KAAK,EAAEA,CAAC,GAAGoM,KAAK,KAAK;QACnBy/C,QAAQ,CAACt/C,GAAG,CAAC,GAAGH,KAAK,CAAC;QACtBgrD,iBAAiB,CAAC,CAAC;MACrB;IACF,CAAC;IACDpN,UAAU,EAAE;MACVt+C,UAAU;MACV1L,KAAK,EAAEA,CAAC,GAAGoM,KAAK,KAAK;QACnBy/C,QAAQ,CAAC15C,MAAM,CAAC,GAAG/F,KAAK,CAAC;QACzBgrD,iBAAiB,CAAC,CAAC;MACrB;IACF;EACF,CAAC,CAAC;EAEF,SAASC,QAAQA,CAAA,EAAG;IAClB,MAAM,IAAI3iC,KAAK,CAAC,iFAAiF,CAAC;EACpG;EACA,MAAM4iC,WAAW,CAAC;IAChB1nD,WAAWA,CAACxM,OAAO,EAAE;MACnB,IAAI,CAACA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;IAC9B;IACAi+C,IAAIA,CAACkW,YAAY,EAAE,CAAC;IACpBC,OAAOA,CAAA,EAAG;MACR,OAAOH,QAAQ,CAAC,CAAC;IACnB;IACA1hC,KAAKA,CAAC31B,KAAK,EAAE67B,MAAM,EAAE;MACnB,OAAOw7B,QAAQ,CAAC,CAAC;IACnB;IACAx7B,MAAMA,CAAC47B,SAAS,EAAE57B,MAAM,EAAE;MACxB,OAAOw7B,QAAQ,CAAC,CAAC;IACnB;IACA9qD,GAAGA,CAACkrD,SAAS,EAAEC,MAAM,EAAEC,IAAI,EAAE;MAC3B,OAAON,QAAQ,CAAC,CAAC;IACnB;IACA5Y,IAAIA,CAAC/4C,CAAC,EAAEC,CAAC,EAAEgyD,IAAI,EAAE;MACf,OAAON,QAAQ,CAAC,CAAC;IACnB;IACAO,OAAOA,CAACH,SAAS,EAAEE,IAAI,EAAEE,OAAO,EAAE;MAChC,OAAOR,QAAQ,CAAC,CAAC;IACnB;IACAS,KAAKA,CAACL,SAAS,EAAEE,IAAI,EAAE;MACrB,OAAON,QAAQ,CAAC,CAAC;IACnB;EACF;EACAC,WAAW,CAACxxC,QAAQ,GAAG,UAASiyC,OAAO,EAAE;IACvC33D,MAAM,CAACsP,MAAM,CAAC4nD,WAAW,CAACj3D,SAAS,EAAE03D,OAAO,CAAC;EAC/C,CAAC;EACD,IAAIC,SAAS,GAAG;IACdC,KAAK,EAAEX;EACT,CAAC;EAED,SAASY,iBAAiBA,CAACzyC,KAAK,EAAEtlB,IAAI,EAAE;IACtC,IAAI,CAACslB,KAAK,CAAC07B,MAAM,CAACgX,IAAI,EAAE;MACtB,MAAMC,YAAY,GAAG3yC,KAAK,CAACmsB,uBAAuB,CAACzxC,IAAI,CAAC;MACxD,IAAI+K,MAAM,GAAG,EAAE;MACf,KAAK,IAAIrJ,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAGg2D,YAAY,CAACp2D,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAEP,CAAC,EAAE,EAAE;QACzDqJ,MAAM,GAAGA,MAAM,CAAC+6B,MAAM,CAACmyB,YAAY,CAACv2D,CAAC,CAAC,CAAC8/B,UAAU,CAAC2V,kBAAkB,CAAC7xB,KAAK,CAAC,CAAC;MAC9E;MACAA,KAAK,CAAC07B,MAAM,CAACgX,IAAI,GAAGhsD,YAAY,CAACjB,MAAM,CAACxD,IAAI,CAAC,CAAChC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,CAAC,CAAC;IAChE;IACA,OAAO8f,KAAK,CAAC07B,MAAM,CAACgX,IAAI;EAC1B;EACA,SAASE,oBAAoBA,CAAClqD,IAAI,EAAE;IAClC,MAAMsX,KAAK,GAAGtX,IAAI,CAACM,MAAM;IACzB,MAAMvD,MAAM,GAAGgtD,iBAAiB,CAACzyC,KAAK,EAAEtX,IAAI,CAAChO,IAAI,CAAC;IAClD,IAAImI,GAAG,GAAGmd,KAAK,CAACu4B,OAAO;IACvB,IAAIn8C,CAAC,EAAEO,IAAI,EAAEk2D,IAAI,EAAE9/B,IAAI;IACvB,MAAM+/B,gBAAgB,GAAGA,CAAA,KAAM;MAC7B,IAAID,IAAI,KAAK,KAAK,IAAIA,IAAI,KAAK,CAAC,KAAK,EAAE;QACrC;MACF;MACA,IAAI/yD,OAAO,CAACizB,IAAI,CAAC,EAAE;QACjBlwB,GAAG,GAAGpC,IAAI,CAACoC,GAAG,CAACA,GAAG,EAAEpC,IAAI,CAAC8B,GAAG,CAACswD,IAAI,GAAG9/B,IAAI,CAAC,IAAIlwB,GAAG,CAAC;MACnD;MACAkwB,IAAI,GAAG8/B,IAAI;IACb,CAAC;IACD,KAAKz2D,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAG8I,MAAM,CAAClJ,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;MAC/Cy2D,IAAI,GAAG7yC,KAAK,CAAC1W,gBAAgB,CAAC7D,MAAM,CAACrJ,CAAC,CAAC,CAAC;MACxC02D,gBAAgB,CAAC,CAAC;IACpB;IACA//B,IAAI,GAAGv0B,SAAS;IAChB,KAAKpC,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAGqjB,KAAK,CAACs1B,KAAK,CAAC/4C,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;MACpDy2D,IAAI,GAAG7yC,KAAK,CAAC65B,eAAe,CAACz9C,CAAC,CAAC;MAC/B02D,gBAAgB,CAAC,CAAC;IACpB;IACA,OAAOjwD,GAAG;EACZ;EACA,SAASkwD,wBAAwBA,CAACh2D,KAAK,EAAEi2D,KAAK,EAAEr1D,OAAO,EAAEs1D,UAAU,EAAE;IACnE,MAAMC,SAAS,GAAGv1D,OAAO,CAACw1D,YAAY;IACtC,IAAIhzD,IAAI,EAAE0b,KAAK;IACf,IAAIvhB,aAAa,CAAC44D,SAAS,CAAC,EAAE;MAC5B/yD,IAAI,GAAG6yD,KAAK,CAACnwD,GAAG,GAAGlF,OAAO,CAACy1D,kBAAkB;MAC7Cv3C,KAAK,GAAGle,OAAO,CAAC01D,aAAa;IAC/B,CAAC,MAAM;MACLlzD,IAAI,GAAG+yD,SAAS,GAAGD,UAAU;MAC7Bp3C,KAAK,GAAG,CAAC;IACX;IACA,OAAO;MACLy3C,KAAK,EAAEnzD,IAAI,GAAG8yD,UAAU;MACxBp3C,KAAK;MACLzX,KAAK,EAAE4uD,KAAK,CAACO,MAAM,CAACx2D,KAAK,CAAC,GAAIoD,IAAI,GAAG;IACvC,CAAC;EACH;EACA,SAASqzD,yBAAyBA,CAACz2D,KAAK,EAAEi2D,KAAK,EAAEr1D,OAAO,EAAEs1D,UAAU,EAAE;IACpE,MAAMM,MAAM,GAAGP,KAAK,CAACO,MAAM;IAC3B,MAAMV,IAAI,GAAGU,MAAM,CAACx2D,KAAK,CAAC;IAC1B,IAAIg2B,IAAI,GAAGh2B,KAAK,GAAG,CAAC,GAAGw2D,MAAM,CAACx2D,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI;IAC/C,IAAI4zB,IAAI,GAAG5zB,KAAK,GAAGw2D,MAAM,CAACh3D,MAAM,GAAG,CAAC,GAAGg3D,MAAM,CAACx2D,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI;IAC/D,MAAM02D,OAAO,GAAG91D,OAAO,CAACy1D,kBAAkB;IAC1C,IAAIrgC,IAAI,KAAK,IAAI,EAAE;MACjBA,IAAI,GAAG8/B,IAAI,IAAIliC,IAAI,KAAK,IAAI,GAAGqiC,KAAK,CAAC3uD,GAAG,GAAG2uD,KAAK,CAAC5uD,KAAK,GAAGusB,IAAI,GAAGkiC,IAAI,CAAC;IACvE;IACA,IAAIliC,IAAI,KAAK,IAAI,EAAE;MACjBA,IAAI,GAAGkiC,IAAI,GAAGA,IAAI,GAAG9/B,IAAI;IAC3B;IACA,MAAM3uB,KAAK,GAAGyuD,IAAI,GAAG,CAACA,IAAI,GAAGpyD,IAAI,CAACoC,GAAG,CAACkwB,IAAI,EAAEpC,IAAI,CAAC,IAAI,CAAC,GAAG8iC,OAAO;IAChE,MAAMtzD,IAAI,GAAGM,IAAI,CAAC8B,GAAG,CAACouB,IAAI,GAAGoC,IAAI,CAAC,GAAG,CAAC,GAAG0gC,OAAO;IAChD,OAAO;MACLH,KAAK,EAAEnzD,IAAI,GAAG8yD,UAAU;MACxBp3C,KAAK,EAAEle,OAAO,CAAC01D,aAAa;MAC5BjvD;IACF,CAAC;EACH;EACA,SAASsvD,aAAaA,CAACjuB,KAAK,EAAErlC,IAAI,EAAE6rC,MAAM,EAAE7vC,CAAC,EAAE;IAC7C,MAAMu3D,UAAU,GAAG1nB,MAAM,CAAC/b,KAAK,CAACuV,KAAK,CAAC,CAAC,CAAC,EAAErpC,CAAC,CAAC;IAC5C,MAAMw3D,QAAQ,GAAG3nB,MAAM,CAAC/b,KAAK,CAACuV,KAAK,CAAC,CAAC,CAAC,EAAErpC,CAAC,CAAC;IAC1C,MAAMyG,GAAG,GAAGpC,IAAI,CAACoC,GAAG,CAAC8wD,UAAU,EAAEC,QAAQ,CAAC;IAC1C,MAAM9wD,GAAG,GAAGrC,IAAI,CAACqC,GAAG,CAAC6wD,UAAU,EAAEC,QAAQ,CAAC;IAC1C,IAAIC,QAAQ,GAAGhxD,GAAG;IAClB,IAAIixD,MAAM,GAAGhxD,GAAG;IAChB,IAAIrC,IAAI,CAAC8B,GAAG,CAACM,GAAG,CAAC,GAAGpC,IAAI,CAAC8B,GAAG,CAACO,GAAG,CAAC,EAAE;MACjC+wD,QAAQ,GAAG/wD,GAAG;MACdgxD,MAAM,GAAGjxD,GAAG;IACd;IACAzC,IAAI,CAAC6rC,MAAM,CAAC/iC,IAAI,CAAC,GAAG4qD,MAAM;IAC1B1zD,IAAI,CAAC2zD,OAAO,GAAG;MACbF,QAAQ;MACRC,MAAM;MACN1vD,KAAK,EAAEuvD,UAAU;MACjBtvD,GAAG,EAAEuvD,QAAQ;MACb/wD,GAAG;MACHC;IACF,CAAC;EACH;EACA,SAASkxD,UAAUA,CAACvuB,KAAK,EAAErlC,IAAI,EAAE6rC,MAAM,EAAE7vC,CAAC,EAAE;IAC1C,IAAI5B,OAAO,CAACirC,KAAK,CAAC,EAAE;MAClBiuB,aAAa,CAACjuB,KAAK,EAAErlC,IAAI,EAAE6rC,MAAM,EAAE7vC,CAAC,CAAC;IACvC,CAAC,MAAM;MACLgE,IAAI,CAAC6rC,MAAM,CAAC/iC,IAAI,CAAC,GAAG+iC,MAAM,CAAC/b,KAAK,CAACuV,KAAK,EAAErpC,CAAC,CAAC;IAC5C;IACA,OAAOgE,IAAI;EACb;EACA,SAAS6zD,qBAAqBA,CAACvrD,IAAI,EAAE0d,IAAI,EAAEhiB,KAAK,EAAE0E,KAAK,EAAE;IACvD,MAAME,MAAM,GAAGN,IAAI,CAACM,MAAM;IAC1B,MAAMijC,MAAM,GAAGvjC,IAAI,CAACujC,MAAM;IAC1B,MAAM6E,MAAM,GAAG9nC,MAAM,CAAC+nC,SAAS,CAAC,CAAC;IACjC,MAAMC,WAAW,GAAGhoC,MAAM,KAAKijC,MAAM;IACrC,MAAMhc,MAAM,GAAG,EAAE;IACjB,IAAI7zB,CAAC,EAAEO,IAAI,EAAEyD,IAAI,EAAEqlC,KAAK;IACxB,KAAKrpC,CAAC,GAAGgI,KAAK,EAAEzH,IAAI,GAAGyH,KAAK,GAAG0E,KAAK,EAAE1M,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;MACnDqpC,KAAK,GAAGrf,IAAI,CAAChqB,CAAC,CAAC;MACfgE,IAAI,GAAG,CAAC,CAAC;MACTA,IAAI,CAAC4I,MAAM,CAACE,IAAI,CAAC,GAAG8nC,WAAW,IAAIhoC,MAAM,CAACknB,KAAK,CAAC4gB,MAAM,CAAC10C,CAAC,CAAC,EAAEA,CAAC,CAAC;MAC7D6zB,MAAM,CAACxwB,IAAI,CAACu0D,UAAU,CAACvuB,KAAK,EAAErlC,IAAI,EAAE6rC,MAAM,EAAE7vC,CAAC,CAAC,CAAC;IACjD;IACA,OAAO6zB,MAAM;EACf;EACA,SAASikC,UAAUA,CAACC,MAAM,EAAE;IAC1B,OAAOA,MAAM,IAAIA,MAAM,CAACN,QAAQ,KAAKr1D,SAAS,IAAI21D,MAAM,CAACL,MAAM,KAAKt1D,SAAS;EAC/E;EACA,SAAS41D,OAAOA,CAACj0D,IAAI,EAAE8rC,MAAM,EAAEooB,UAAU,EAAE;IACzC,IAAIl0D,IAAI,KAAK,CAAC,EAAE;MACd,OAAOgB,IAAI,CAAChB,IAAI,CAAC;IACnB;IACA,OAAO,CAAC8rC,MAAM,CAAC5M,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK4M,MAAM,CAACppC,GAAG,IAAIwxD,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;EAC/E;EACA,SAASC,WAAWA,CAAClrB,UAAU,EAAE;IAC/B,IAAIjtC,OAAO,EAAEiI,KAAK,EAAEC,GAAG,EAAEue,GAAG,EAAEC,MAAM;IACpC,IAAIumB,UAAU,CAAChK,UAAU,EAAE;MACzBjjC,OAAO,GAAGitC,UAAU,CAAChjC,IAAI,GAAGgjC,UAAU,CAACvqC,CAAC;MACxCuF,KAAK,GAAG,MAAM;MACdC,GAAG,GAAG,OAAO;IACf,CAAC,MAAM;MACLlI,OAAO,GAAGitC,UAAU,CAAChjC,IAAI,GAAGgjC,UAAU,CAACrqC,CAAC;MACxCqF,KAAK,GAAG,QAAQ;MAChBC,GAAG,GAAG,KAAK;IACb;IACA,IAAIlI,OAAO,EAAE;MACXymB,GAAG,GAAG,KAAK;MACXC,MAAM,GAAG,OAAO;IAClB,CAAC,MAAM;MACLD,GAAG,GAAG,OAAO;MACbC,MAAM,GAAG,KAAK;IAChB;IACA,OAAO;MAACze,KAAK;MAAEC,GAAG;MAAElI,OAAO;MAAEymB,GAAG;MAAEC;IAAM,CAAC;EAC3C;EACA,SAAS0xC,gBAAgBA,CAACnrB,UAAU,EAAEzrC,OAAO,EAAEuhC,KAAK,EAAEniC,KAAK,EAAE;IAC3D,IAAIo8C,IAAI,GAAGx7C,OAAO,CAAC62D,aAAa;IAChC,MAAMnuD,GAAG,GAAG,CAAC,CAAC;IACd,IAAI,CAAC8yC,IAAI,EAAE;MACT/P,UAAU,CAACorB,aAAa,GAAGnuD,GAAG;MAC9B;IACF;IACA,IAAI8yC,IAAI,KAAK,IAAI,EAAE;MACjB/P,UAAU,CAACorB,aAAa,GAAG;QAAC5xC,GAAG,EAAE,IAAI;QAAEta,KAAK,EAAE,IAAI;QAAEua,MAAM,EAAE,IAAI;QAAExa,IAAI,EAAE;MAAI,CAAC;MAC7E;IACF;IACA,MAAM;MAACjE,KAAK;MAAEC,GAAG;MAAElI,OAAO;MAAEymB,GAAG;MAAEC;IAAM,CAAC,GAAGyxC,WAAW,CAAClrB,UAAU,CAAC;IAClE,IAAI+P,IAAI,KAAK,QAAQ,IAAIja,KAAK,EAAE;MAC9BkK,UAAU,CAACqrB,kBAAkB,GAAG,IAAI;MACpC,IAAI,CAACv1B,KAAK,CAACuN,IAAI,IAAI,CAAC,MAAM1vC,KAAK,EAAE;QAC/Bo8C,IAAI,GAAGv2B,GAAG;MACZ,CAAC,MAAM,IAAI,CAACsc,KAAK,CAACwN,OAAO,IAAI,CAAC,MAAM3vC,KAAK,EAAE;QACzCo8C,IAAI,GAAGt2B,MAAM;MACf,CAAC,MAAM;QACLxc,GAAG,CAACquD,SAAS,CAAC7xC,MAAM,EAAEze,KAAK,EAAEC,GAAG,EAAElI,OAAO,CAAC,CAAC,GAAG,IAAI;QAClDg9C,IAAI,GAAGv2B,GAAG;MACZ;IACF;IACAvc,GAAG,CAACquD,SAAS,CAACvb,IAAI,EAAE/0C,KAAK,EAAEC,GAAG,EAAElI,OAAO,CAAC,CAAC,GAAG,IAAI;IAChDitC,UAAU,CAACorB,aAAa,GAAGnuD,GAAG;EAChC;EACA,SAASquD,SAASA,CAACvb,IAAI,EAAEl5C,CAAC,EAAEC,CAAC,EAAE/D,OAAO,EAAE;IACtC,IAAIA,OAAO,EAAE;MACXg9C,IAAI,GAAGwb,IAAI,CAACxb,IAAI,EAAEl5C,CAAC,EAAEC,CAAC,CAAC;MACvBi5C,IAAI,GAAGyb,QAAQ,CAACzb,IAAI,EAAEj5C,CAAC,EAAED,CAAC,CAAC;IAC7B,CAAC,MAAM;MACLk5C,IAAI,GAAGyb,QAAQ,CAACzb,IAAI,EAAEl5C,CAAC,EAAEC,CAAC,CAAC;IAC7B;IACA,OAAOi5C,IAAI;EACb;EACA,SAASwb,IAAIA,CAACE,IAAI,EAAEh4D,EAAE,EAAEi4D,EAAE,EAAE;IAC1B,OAAOD,IAAI,KAAKh4D,EAAE,GAAGi4D,EAAE,GAAGD,IAAI,KAAKC,EAAE,GAAGj4D,EAAE,GAAGg4D,IAAI;EACnD;EACA,SAASD,QAAQA,CAACh2D,CAAC,EAAEwF,KAAK,EAAEC,GAAG,EAAE;IAC/B,OAAOzF,CAAC,KAAK,OAAO,GAAGwF,KAAK,GAAGxF,CAAC,KAAK,KAAK,GAAGyF,GAAG,GAAGzF,CAAC;EACtD;EACA,SAASm2D,gBAAgBA,CAAC3rB,UAAU,EAAE;IAAC4rB;EAAa,CAAC,EAAEn5C,KAAK,EAAE;IAC5DutB,UAAU,CAAC4rB,aAAa,GAAGA,aAAa,KAAK,MAAM,GAC/Cn5C,KAAK,KAAK,CAAC,GAAG,IAAI,GAAG,CAAC,GACtBm5C,aAAa;EACnB;EACA,MAAMC,aAAa,SAASvnB,iBAAiB,CAAC;IAC5CkD,kBAAkBA,CAACloC,IAAI,EAAE0d,IAAI,EAAEhiB,KAAK,EAAE0E,KAAK,EAAE;MAC3C,OAAOmrD,qBAAqB,CAACvrD,IAAI,EAAE0d,IAAI,EAAEhiB,KAAK,EAAE0E,KAAK,CAAC;IACxD;IACA4nC,cAAcA,CAAChoC,IAAI,EAAE0d,IAAI,EAAEhiB,KAAK,EAAE0E,KAAK,EAAE;MACvC,OAAOmrD,qBAAqB,CAACvrD,IAAI,EAAE0d,IAAI,EAAEhiB,KAAK,EAAE0E,KAAK,CAAC;IACxD;IACA6nC,eAAeA,CAACjoC,IAAI,EAAE0d,IAAI,EAAEhiB,KAAK,EAAE0E,KAAK,EAAE;MACxC,MAAM;QAACE,MAAM;QAAEijC;MAAM,CAAC,GAAGvjC,IAAI;MAC7B,MAAM;QAACuoC,QAAQ,GAAG,GAAG;QAAEC,QAAQ,GAAG;MAAG,CAAC,GAAG,IAAI,CAAClhB,QAAQ;MACtD,MAAMklC,QAAQ,GAAGlsD,MAAM,CAACE,IAAI,KAAK,GAAG,GAAG+nC,QAAQ,GAAGC,QAAQ;MAC1D,MAAMikB,QAAQ,GAAGlpB,MAAM,CAAC/iC,IAAI,KAAK,GAAG,GAAG+nC,QAAQ,GAAGC,QAAQ;MAC1D,MAAMjhB,MAAM,GAAG,EAAE;MACjB,IAAI7zB,CAAC,EAAEO,IAAI,EAAEyD,IAAI,EAAEnB,GAAG;MACtB,KAAK7C,CAAC,GAAGgI,KAAK,EAAEzH,IAAI,GAAGyH,KAAK,GAAG0E,KAAK,EAAE1M,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;QACnD6C,GAAG,GAAGmnB,IAAI,CAAChqB,CAAC,CAAC;QACbgE,IAAI,GAAG,CAAC,CAAC;QACTA,IAAI,CAAC4I,MAAM,CAACE,IAAI,CAAC,GAAGF,MAAM,CAACknB,KAAK,CAAClxB,gBAAgB,CAACC,GAAG,EAAEi2D,QAAQ,CAAC,EAAE94D,CAAC,CAAC;QACpE6zB,MAAM,CAACxwB,IAAI,CAACu0D,UAAU,CAACh1D,gBAAgB,CAACC,GAAG,EAAEk2D,QAAQ,CAAC,EAAE/0D,IAAI,EAAE6rC,MAAM,EAAE7vC,CAAC,CAAC,CAAC;MAC3E;MACA,OAAO6zB,MAAM;IACf;IACAohB,qBAAqBA,CAAChwC,KAAK,EAAE2e,KAAK,EAAEiQ,MAAM,EAAEiP,KAAK,EAAE;MACjD,KAAK,CAACmS,qBAAqB,CAAChwC,KAAK,EAAE2e,KAAK,EAAEiQ,MAAM,EAAEiP,KAAK,CAAC;MACxD,MAAMi1B,MAAM,GAAGlkC,MAAM,CAAC8jC,OAAO;MAC7B,IAAII,MAAM,IAAIn0C,KAAK,KAAK,IAAI,CAACmc,WAAW,CAAC8P,MAAM,EAAE;QAC/C5qC,KAAK,CAACwB,GAAG,GAAGpC,IAAI,CAACoC,GAAG,CAACxB,KAAK,CAACwB,GAAG,EAAEsxD,MAAM,CAACtxD,GAAG,CAAC;QAC3CxB,KAAK,CAACyB,GAAG,GAAGrC,IAAI,CAACqC,GAAG,CAACzB,KAAK,CAACyB,GAAG,EAAEqxD,MAAM,CAACrxD,GAAG,CAAC;MAC7C;IACF;IACAgvC,cAAcA,CAAA,EAAG;MACf,OAAO,CAAC;IACV;IACAC,gBAAgBA,CAACh1C,KAAK,EAAE;MACtB,MAAM2L,IAAI,GAAG,IAAI,CAACyzB,WAAW;MAC7B,MAAM;QAACnzB,MAAM;QAAEijC;MAAM,CAAC,GAAGvjC,IAAI;MAC7B,MAAMunB,MAAM,GAAG,IAAI,CAACkhB,SAAS,CAACp0C,KAAK,CAAC;MACpC,MAAMo3D,MAAM,GAAGlkC,MAAM,CAAC8jC,OAAO;MAC7B,MAAMx5D,KAAK,GAAG25D,UAAU,CAACC,MAAM,CAAC,GAC5B,GAAG,GAAGA,MAAM,CAAC/vD,KAAK,GAAG,IAAI,GAAG+vD,MAAM,CAAC9vD,GAAG,GAAG,GAAG,GAC5C,EAAE,GAAG4nC,MAAM,CAACgG,gBAAgB,CAAChiB,MAAM,CAACgc,MAAM,CAAC/iC,IAAI,CAAC,CAAC;MACrD,OAAO;QACL8oC,KAAK,EAAE,EAAE,GAAGhpC,MAAM,CAACipC,gBAAgB,CAAChiB,MAAM,CAACjnB,MAAM,CAACE,IAAI,CAAC,CAAC;QACxD3O;MACF,CAAC;IACH;IACAg0C,UAAUA,CAAA,EAAG;MACX,IAAI,CAACJ,mBAAmB,GAAG,IAAI;MAC/B,KAAK,CAACI,UAAU,CAAC,CAAC;MAClB,MAAM7lC,IAAI,GAAG,IAAI,CAACyzB,WAAW;MAC7BzzB,IAAI,CAACw2B,KAAK,GAAG,IAAI,CAACyP,UAAU,CAAC,CAAC,CAACzP,KAAK;IACtC;IACA8C,MAAMA,CAACziB,IAAI,EAAE;MACX,MAAM7W,IAAI,GAAG,IAAI,CAACyzB,WAAW;MAC7B,IAAI,CAACgY,cAAc,CAACzrC,IAAI,CAAC0d,IAAI,EAAE,CAAC,EAAE1d,IAAI,CAAC0d,IAAI,CAAC7pB,MAAM,EAAEgjB,IAAI,CAAC;IAC3D;IACA40B,cAAcA,CAACihB,IAAI,EAAEhxD,KAAK,EAAE0E,KAAK,EAAEyW,IAAI,EAAE;MACvC,MAAMowB,KAAK,GAAGpwB,IAAI,KAAK,OAAO;MAC9B,MAAM;QAACxiB,KAAK;QAAEo/B,WAAW,EAAE;UAAC8P;QAAM;MAAC,CAAC,GAAG,IAAI;MAC3C,MAAM7lC,IAAI,GAAG6lC,MAAM,CAACwU,YAAY,CAAC,CAAC;MAClC,MAAMrhB,UAAU,GAAG6M,MAAM,CAAC5M,YAAY,CAAC,CAAC;MACxC,MAAM2zB,KAAK,GAAG,IAAI,CAACqC,SAAS,CAAC,CAAC;MAC9B,MAAM;QAACriB,aAAa;QAAED;MAAc,CAAC,GAAG,IAAI,CAACG,iBAAiB,CAAC9uC,KAAK,EAAEmb,IAAI,CAAC;MAC3E,KAAK,IAAInjB,CAAC,GAAGgI,KAAK,EAAEhI,CAAC,GAAGgI,KAAK,GAAG0E,KAAK,EAAE1M,CAAC,EAAE,EAAE;QAC1C,MAAM6zB,MAAM,GAAG,IAAI,CAACkhB,SAAS,CAAC/0C,CAAC,CAAC;QAChC,MAAMk5D,OAAO,GAAG3lB,KAAK,IAAIr1C,aAAa,CAAC21B,MAAM,CAACgc,MAAM,CAAC/iC,IAAI,CAAC,CAAC,GAAG;UAAC9C,IAAI;UAAEmvD,IAAI,EAAEnvD;QAAI,CAAC,GAAG,IAAI,CAACovD,wBAAwB,CAACp5D,CAAC,CAAC;QACnH,MAAMq5D,OAAO,GAAG,IAAI,CAACC,wBAAwB,CAACt5D,CAAC,EAAE42D,KAAK,CAAC;QACvD,MAAM9zB,KAAK,GAAG,CAACjP,MAAM,CAACoc,OAAO,IAAI,CAAC,CAAC,EAAEJ,MAAM,CAAC/iC,IAAI,CAAC;QACjD,MAAMkgC,UAAU,GAAG;UACjBhK,UAAU;UACVh5B,IAAI,EAAEkvD,OAAO,CAAClvD,IAAI;UAClBquD,kBAAkB,EAAE,CAACv1B,KAAK,IAAIg1B,UAAU,CAACjkC,MAAM,CAAC8jC,OAAO,CAAC,IAAKh3D,KAAK,KAAKmiC,KAAK,CAACuN,IAAI,IAAI1vC,KAAK,KAAKmiC,KAAK,CAACwN,OAAQ;UAC7G7tC,CAAC,EAAEugC,UAAU,GAAGk2B,OAAO,CAACC,IAAI,GAAGE,OAAO,CAAC13B,MAAM;UAC7Ch/B,CAAC,EAAEqgC,UAAU,GAAGq2B,OAAO,CAAC13B,MAAM,GAAGu3B,OAAO,CAACC,IAAI;UAC7C5yC,MAAM,EAAEyc,UAAU,GAAGq2B,OAAO,CAACt1D,IAAI,GAAGM,IAAI,CAAC8B,GAAG,CAAC+yD,OAAO,CAACn1D,IAAI,CAAC;UAC1DuiB,KAAK,EAAE0c,UAAU,GAAG3+B,IAAI,CAAC8B,GAAG,CAAC+yD,OAAO,CAACn1D,IAAI,CAAC,GAAGs1D,OAAO,CAACt1D;QACvD,CAAC;QACD,IAAI4yC,cAAc,EAAE;UAClB3J,UAAU,CAACzrC,OAAO,GAAGq1C,aAAa,IAAI,IAAI,CAACZ,yBAAyB,CAACh2C,CAAC,EAAEg5D,IAAI,CAACh5D,CAAC,CAAC,CAACqsC,MAAM,GAAG,QAAQ,GAAGlpB,IAAI,CAAC;QAC3G;QACA,MAAM5hB,OAAO,GAAGyrC,UAAU,CAACzrC,OAAO,IAAIy3D,IAAI,CAACh5D,CAAC,CAAC,CAACuB,OAAO;QACrD42D,gBAAgB,CAACnrB,UAAU,EAAEzrC,OAAO,EAAEuhC,KAAK,EAAEniC,KAAK,CAAC;QACnDg4D,gBAAgB,CAAC3rB,UAAU,EAAEzrC,OAAO,EAAEq1D,KAAK,CAACn3C,KAAK,CAAC;QAClD,IAAI,CAACy3B,aAAa,CAAC8hB,IAAI,CAACh5D,CAAC,CAAC,EAAEA,CAAC,EAAEgtC,UAAU,EAAE7pB,IAAI,CAAC;MAClD;IACF;IACAo2C,UAAUA,CAACrwD,IAAI,EAAEynC,SAAS,EAAE;MAC1B,MAAM;QAAC/jC;MAAM,CAAC,GAAG,IAAI,CAACmzB,WAAW;MACjC,MAAMQ,QAAQ,GAAG3zB,MAAM,CAACmjC,uBAAuB,CAAC,IAAI,CAAC2B,KAAK,CAAC,CACxDze,MAAM,CAAC3mB,IAAI,IAAIA,IAAI,CAACwzB,UAAU,CAACv+B,OAAO,CAACi4D,OAAO,CAAC;MAClD,MAAMrqB,OAAO,GAAGviC,MAAM,CAACrL,OAAO,CAAC4tC,OAAO;MACtC,MAAM/L,MAAM,GAAG,EAAE;MACjB,MAAMq2B,QAAQ,GAAIntD,IAAI,IAAK;QACzB,MAAMunB,MAAM,GAAGvnB,IAAI,CAACwzB,UAAU,CAACiV,SAAS,CAACpE,SAAS,CAAC;QACnD,MAAM9vB,GAAG,GAAGgT,MAAM,IAAIA,MAAM,CAACvnB,IAAI,CAACujC,MAAM,CAAC/iC,IAAI,CAAC;QAC9C,IAAI5O,aAAa,CAAC2iB,GAAG,CAAC,IAAI5a,KAAK,CAAC4a,GAAG,CAAC,EAAE;UACpC,OAAO,IAAI;QACb;MACF,CAAC;MACD,KAAK,MAAMvU,IAAI,IAAIi0B,QAAQ,EAAE;QAC3B,IAAIoQ,SAAS,KAAKvuC,SAAS,IAAIq3D,QAAQ,CAACntD,IAAI,CAAC,EAAE;UAC7C;QACF;QACA,IAAI6iC,OAAO,KAAK,KAAK,IAAI/L,MAAM,CAAC/hC,OAAO,CAACiL,IAAI,CAACw2B,KAAK,CAAC,KAAK,CAAC,CAAC,IAC3DqM,OAAO,KAAK/sC,SAAS,IAAIkK,IAAI,CAACw2B,KAAK,KAAK1gC,SAAU,EAAE;UACjDghC,MAAM,CAAC//B,IAAI,CAACiJ,IAAI,CAACw2B,KAAK,CAAC;QACzB;QACA,IAAIx2B,IAAI,CAAC3L,KAAK,KAAKuI,IAAI,EAAE;UACvB;QACF;MACF;MACA,IAAI,CAACk6B,MAAM,CAACjjC,MAAM,EAAE;QAClBijC,MAAM,CAAC//B,IAAI,CAACjB,SAAS,CAAC;MACxB;MACA,OAAOghC,MAAM;IACf;IACAs2B,cAAcA,CAAC/4D,KAAK,EAAE;MACpB,OAAO,IAAI,CAAC44D,UAAU,CAACn3D,SAAS,EAAEzB,KAAK,CAAC,CAACR,MAAM;IACjD;IACAw5D,cAAcA,CAACj5D,YAAY,EAAEyjB,IAAI,EAAEwsB,SAAS,EAAE;MAC5C,MAAMvN,MAAM,GAAG,IAAI,CAACm2B,UAAU,CAAC74D,YAAY,EAAEiwC,SAAS,CAAC;MACvD,MAAMhwC,KAAK,GAAIwjB,IAAI,KAAK/hB,SAAS,GAC7BghC,MAAM,CAAC/hC,OAAO,CAAC8iB,IAAI,CAAC,GACpB,CAAC,CAAC;MACN,OAAQxjB,KAAK,KAAK,CAAC,CAAC,GAChByiC,MAAM,CAACjjC,MAAM,GAAG,CAAC,GACjBQ,KAAK;IACX;IACAs4D,SAASA,CAAA,EAAG;MACV,MAAMnrC,IAAI,GAAG,IAAI,CAACvsB,OAAO;MACzB,MAAM+K,IAAI,GAAG,IAAI,CAACyzB,WAAW;MAC7B,MAAMnzB,MAAM,GAAGN,IAAI,CAACM,MAAM;MAC1B,MAAMuqD,MAAM,GAAG,EAAE;MACjB,IAAIn3D,CAAC,EAAEO,IAAI;MACX,KAAKP,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAG+L,IAAI,CAAC0d,IAAI,CAAC7pB,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;QAClDm3D,MAAM,CAAC9zD,IAAI,CAACuJ,MAAM,CAACM,gBAAgB,CAAC,IAAI,CAAC6nC,SAAS,CAAC/0C,CAAC,CAAC,CAAC4M,MAAM,CAACE,IAAI,CAAC,EAAE9M,CAAC,CAAC,CAAC;MACzE;MACA,MAAM+2D,YAAY,GAAGjpC,IAAI,CAACipC,YAAY;MACtC,MAAMtwD,GAAG,GAAGswD,YAAY,IAAIP,oBAAoB,CAAClqD,IAAI,CAAC;MACtD,OAAO;QACL7F,GAAG;QACH0wD,MAAM;QACNnvD,KAAK,EAAE4E,MAAM,CAAC0wC,WAAW;QACzBr1C,GAAG,EAAE2E,MAAM,CAAC2wC,SAAS;QACrBsZ,UAAU,EAAE,IAAI,CAAC6C,cAAc,CAAC,CAAC;QACjC91C,KAAK,EAAEhX,MAAM;QACb4sD,OAAO,EAAE1rC,IAAI,CAAC0rC,OAAO;QACrB/5C,KAAK,EAAEs3C,YAAY,GAAG,CAAC,GAAGjpC,IAAI,CAACkpC,kBAAkB,GAAGlpC,IAAI,CAACmpC;MAC3D,CAAC;IACH;IACAmC,wBAAwBA,CAACz4D,KAAK,EAAE;MAC9B,MAAM;QAACo/B,WAAW,EAAE;UAAC8P,MAAM;UAAEwB;QAAQ,CAAC;QAAE9vC,OAAO,EAAE;UAACyI,IAAI,EAAE4vD,SAAS;UAAEC;QAAY;MAAC,CAAC,GAAG,IAAI;MACxF,MAAM5B,UAAU,GAAG2B,SAAS,IAAI,CAAC;MACjC,MAAM/lC,MAAM,GAAG,IAAI,CAACkhB,SAAS,CAACp0C,KAAK,CAAC;MACpC,MAAMo3D,MAAM,GAAGlkC,MAAM,CAAC8jC,OAAO;MAC7B,MAAMmC,QAAQ,GAAGhC,UAAU,CAACC,MAAM,CAAC;MACnC,IAAI55D,KAAK,GAAG01B,MAAM,CAACgc,MAAM,CAAC/iC,IAAI,CAAC;MAC/B,IAAI9E,KAAK,GAAG,CAAC;MACb,IAAI7H,MAAM,GAAGkxC,QAAQ,GAAG,IAAI,CAACzC,UAAU,CAACiB,MAAM,EAAEhc,MAAM,EAAEwd,QAAQ,CAAC,GAAGlzC,KAAK;MACzE,IAAIg7D,IAAI,EAAEp1D,IAAI;MACd,IAAI5D,MAAM,KAAKhC,KAAK,EAAE;QACpB6J,KAAK,GAAG7H,MAAM,GAAGhC,KAAK;QACtBgC,MAAM,GAAGhC,KAAK;MAChB;MACA,IAAI27D,QAAQ,EAAE;QACZ37D,KAAK,GAAG45D,MAAM,CAACN,QAAQ;QACvBt3D,MAAM,GAAG43D,MAAM,CAACL,MAAM,GAAGK,MAAM,CAACN,QAAQ;QACxC,IAAIt5D,KAAK,KAAK,CAAC,IAAI4G,IAAI,CAAC5G,KAAK,CAAC,KAAK4G,IAAI,CAACgzD,MAAM,CAACL,MAAM,CAAC,EAAE;UACtD1vD,KAAK,GAAG,CAAC;QACX;QACAA,KAAK,IAAI7J,KAAK;MAChB;MACA,MAAMo5D,UAAU,GAAG,CAACr5D,aAAa,CAAC07D,SAAS,CAAC,IAAI,CAACE,QAAQ,GAAGF,SAAS,GAAG5xD,KAAK;MAC7E,IAAIgC,IAAI,GAAG6lC,MAAM,CAAC3iC,gBAAgB,CAACqqD,UAAU,CAAC;MAC9C,IAAI,IAAI,CAACjpD,KAAK,CAAC0lD,iBAAiB,CAACrzD,KAAK,CAAC,EAAE;QACvCw4D,IAAI,GAAGtpB,MAAM,CAAC3iC,gBAAgB,CAAClF,KAAK,GAAG7H,MAAM,CAAC;MAChD,CAAC,MAAM;QACLg5D,IAAI,GAAGnvD,IAAI;MACb;MACAjG,IAAI,GAAGo1D,IAAI,GAAGnvD,IAAI;MAClB,IAAI3F,IAAI,CAAC8B,GAAG,CAACpC,IAAI,CAAC,GAAG81D,YAAY,EAAE;QACjC91D,IAAI,GAAGi0D,OAAO,CAACj0D,IAAI,EAAE8rC,MAAM,EAAEooB,UAAU,CAAC,GAAG4B,YAAY;QACvD,IAAI17D,KAAK,KAAK85D,UAAU,EAAE;UACxBjuD,IAAI,IAAIjG,IAAI,GAAG,CAAC;QAClB;QACA,MAAMs9C,UAAU,GAAGxR,MAAM,CAACqU,kBAAkB,CAAC,CAAC,CAAC;QAC/C,MAAM5C,QAAQ,GAAGzR,MAAM,CAACqU,kBAAkB,CAAC,CAAC,CAAC;QAC7C,MAAMz9C,GAAG,GAAGpC,IAAI,CAACoC,GAAG,CAAC46C,UAAU,EAAEC,QAAQ,CAAC;QAC1C,MAAM56C,GAAG,GAAGrC,IAAI,CAACqC,GAAG,CAAC26C,UAAU,EAAEC,QAAQ,CAAC;QAC1Ct3C,IAAI,GAAG3F,IAAI,CAACqC,GAAG,CAACrC,IAAI,CAACoC,GAAG,CAACuD,IAAI,EAAEtD,GAAG,CAAC,EAAED,GAAG,CAAC;QACzC0yD,IAAI,GAAGnvD,IAAI,GAAGjG,IAAI;MACpB;MACA,IAAIiG,IAAI,KAAK6lC,MAAM,CAAC3iC,gBAAgB,CAAC+qD,UAAU,CAAC,EAAE;QAChD,MAAM8B,QAAQ,GAAGh1D,IAAI,CAAChB,IAAI,CAAC,GAAG8rC,MAAM,CAACiX,oBAAoB,CAACmR,UAAU,CAAC,GAAG,CAAC;QACzEjuD,IAAI,IAAI+vD,QAAQ;QAChBh2D,IAAI,IAAIg2D,QAAQ;MAClB;MACA,OAAO;QACLh2D,IAAI;QACJiG,IAAI;QACJmvD,IAAI;QACJx3B,MAAM,EAAEw3B,IAAI,GAAGp1D,IAAI,GAAG;MACxB,CAAC;IACH;IACAu1D,wBAAwBA,CAAC34D,KAAK,EAAEi2D,KAAK,EAAE;MACrC,MAAMhzC,KAAK,GAAGgzC,KAAK,CAAChzC,KAAK;MACzB,MAAMriB,OAAO,GAAG,IAAI,CAACA,OAAO;MAC5B,MAAMk4D,QAAQ,GAAGl4D,OAAO,CAACk4D,QAAQ;MACjC,MAAMO,eAAe,GAAG96D,cAAc,CAACqC,OAAO,CAACy4D,eAAe,EAAEC,QAAQ,CAAC;MACzE,IAAIt4B,MAAM,EAAE59B,IAAI;MAChB,IAAI6yD,KAAK,CAAC4C,OAAO,EAAE;QACjB,MAAM3C,UAAU,GAAG4C,QAAQ,GAAG,IAAI,CAACC,cAAc,CAAC/4D,KAAK,CAAC,GAAGi2D,KAAK,CAACC,UAAU;QAC3E,MAAM5xD,KAAK,GAAG1D,OAAO,CAACw1D,YAAY,KAAK,MAAM,GACzCK,yBAAyB,CAACz2D,KAAK,EAAEi2D,KAAK,EAAEr1D,OAAO,EAAEs1D,UAAU,CAAC,GAC5DF,wBAAwB,CAACh2D,KAAK,EAAEi2D,KAAK,EAAEr1D,OAAO,EAAEs1D,UAAU,CAAC;QAC/D,MAAMqD,UAAU,GAAG,IAAI,CAACP,cAAc,CAAC,IAAI,CAACh5D,KAAK,EAAE,IAAI,CAACo/B,WAAW,CAAC+C,KAAK,EAAE22B,QAAQ,GAAG94D,KAAK,GAAGyB,SAAS,CAAC;QACxGu/B,MAAM,GAAG18B,KAAK,CAAC+C,KAAK,GAAI/C,KAAK,CAACiyD,KAAK,GAAGgD,UAAW,GAAIj1D,KAAK,CAACiyD,KAAK,GAAG,CAAE;QACrEnzD,IAAI,GAAGM,IAAI,CAACoC,GAAG,CAACuzD,eAAe,EAAE/0D,KAAK,CAACiyD,KAAK,GAAGjyD,KAAK,CAACwa,KAAK,CAAC;MAC7D,CAAC,MAAM;QACLkiB,MAAM,GAAG/d,KAAK,CAAC1W,gBAAgB,CAAC,IAAI,CAAC6nC,SAAS,CAACp0C,KAAK,CAAC,CAACijB,KAAK,CAAC9W,IAAI,CAAC,EAAEnM,KAAK,CAAC;QACzEoD,IAAI,GAAGM,IAAI,CAACoC,GAAG,CAACuzD,eAAe,EAAEpD,KAAK,CAACnwD,GAAG,GAAGmwD,KAAK,CAACn3C,KAAK,CAAC;MAC3D;MACA,OAAO;QACLzV,IAAI,EAAE23B,MAAM,GAAG59B,IAAI,GAAG,CAAC;QACvBo1D,IAAI,EAAEx3B,MAAM,GAAG59B,IAAI,GAAG,CAAC;QACvB49B,MAAM;QACN59B;MACF,CAAC;IACH;IACAqL,IAAIA,CAAA,EAAG;MACL,MAAM9C,IAAI,GAAG,IAAI,CAACyzB,WAAW;MAC7B,MAAM8P,MAAM,GAAGvjC,IAAI,CAACujC,MAAM;MAC1B,MAAMsqB,KAAK,GAAG7tD,IAAI,CAAC0d,IAAI;MACvB,MAAMzpB,IAAI,GAAG45D,KAAK,CAACh6D,MAAM;MACzB,IAAIH,CAAC,GAAG,CAAC;MACT,OAAOA,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;QACpB,IAAI,IAAI,CAAC+0C,SAAS,CAAC/0C,CAAC,CAAC,CAAC6vC,MAAM,CAAC/iC,IAAI,CAAC,KAAK,IAAI,EAAE;UAC3CqtD,KAAK,CAACn6D,CAAC,CAAC,CAACoP,IAAI,CAAC,IAAI,CAACmiC,IAAI,CAAC;QAC1B;MACF;IACF;EACF;EACAsnB,aAAa,CAAC56D,EAAE,GAAG,KAAK;EACxB46D,aAAa,CAACj0C,QAAQ,GAAG;IACvB+uB,kBAAkB,EAAE,KAAK;IACzBuC,eAAe,EAAE,KAAK;IACtB8gB,kBAAkB,EAAE,GAAG;IACvBC,aAAa,EAAE,GAAG;IAClBuC,OAAO,EAAE,IAAI;IACbtsB,UAAU,EAAE;MACVL,OAAO,EAAE;QACPvuC,IAAI,EAAE,QAAQ;QACd0uC,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ;MAClD;IACF;EACF,CAAC;EACD6rB,aAAa,CAACt3C,SAAS,GAAG;IACxBsC,MAAM,EAAE;MACNu2C,OAAO,EAAE;QACP97D,IAAI,EAAE,UAAU;QAChBs7C,MAAM,EAAE,IAAI;QACZC,IAAI,EAAE;UACJD,MAAM,EAAE;QACV;MACF,CAAC;MACDygB,OAAO,EAAE;QACP/7D,IAAI,EAAE,QAAQ;QACd88B,WAAW,EAAE;MACf;IACF;EACF,CAAC;EAED,MAAMk/B,gBAAgB,SAAShpB,iBAAiB,CAAC;IAC/Ca,UAAUA,CAAA,EAAG;MACX,IAAI,CAACJ,mBAAmB,GAAG,IAAI;MAC/B,KAAK,CAACI,UAAU,CAAC,CAAC;IACpB;IACAqC,kBAAkBA,CAACloC,IAAI,EAAE0d,IAAI,EAAEhiB,KAAK,EAAE0E,KAAK,EAAE;MAC3C,MAAMmnB,MAAM,GAAG,KAAK,CAAC2gB,kBAAkB,CAACloC,IAAI,EAAE0d,IAAI,EAAEhiB,KAAK,EAAE0E,KAAK,CAAC;MACjE,KAAK,IAAI1M,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6zB,MAAM,CAAC1zB,MAAM,EAAEH,CAAC,EAAE,EAAE;QACtC6zB,MAAM,CAAC7zB,CAAC,CAAC,CAAC23D,OAAO,GAAG,IAAI,CAAC3hB,yBAAyB,CAACh2C,CAAC,GAAGgI,KAAK,CAAC,CAAC4jB,MAAM;MACtE;MACA,OAAOiI,MAAM;IACf;IACAygB,cAAcA,CAAChoC,IAAI,EAAE0d,IAAI,EAAEhiB,KAAK,EAAE0E,KAAK,EAAE;MACvC,MAAMmnB,MAAM,GAAG,KAAK,CAACygB,cAAc,CAAChoC,IAAI,EAAE0d,IAAI,EAAEhiB,KAAK,EAAE0E,KAAK,CAAC;MAC7D,KAAK,IAAI1M,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6zB,MAAM,CAAC1zB,MAAM,EAAEH,CAAC,EAAE,EAAE;QACtC,MAAMgE,IAAI,GAAGgmB,IAAI,CAAChiB,KAAK,GAAGhI,CAAC,CAAC;QAC5B6zB,MAAM,CAAC7zB,CAAC,CAAC,CAAC23D,OAAO,GAAGz4D,cAAc,CAAC8E,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAACgyC,yBAAyB,CAACh2C,CAAC,GAAGgI,KAAK,CAAC,CAAC4jB,MAAM,CAAC;MAC/F;MACA,OAAOiI,MAAM;IACf;IACA0gB,eAAeA,CAACjoC,IAAI,EAAE0d,IAAI,EAAEhiB,KAAK,EAAE0E,KAAK,EAAE;MACxC,MAAMmnB,MAAM,GAAG,KAAK,CAAC0gB,eAAe,CAACjoC,IAAI,EAAE0d,IAAI,EAAEhiB,KAAK,EAAE0E,KAAK,CAAC;MAC9D,KAAK,IAAI1M,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6zB,MAAM,CAAC1zB,MAAM,EAAEH,CAAC,EAAE,EAAE;QACtC,MAAMgE,IAAI,GAAGgmB,IAAI,CAAChiB,KAAK,GAAGhI,CAAC,CAAC;QAC5B6zB,MAAM,CAAC7zB,CAAC,CAAC,CAAC23D,OAAO,GAAGz4D,cAAc,CAAC8E,IAAI,IAAIA,IAAI,CAAC+N,CAAC,IAAI,CAAC/N,IAAI,CAAC+N,CAAC,EAAE,IAAI,CAACikC,yBAAyB,CAACh2C,CAAC,GAAGgI,KAAK,CAAC,CAAC4jB,MAAM,CAAC;MACjH;MACA,OAAOiI,MAAM;IACf;IACA6hB,cAAcA,CAAA,EAAG;MACf,MAAM1rB,IAAI,GAAG,IAAI,CAAC+V,WAAW,CAAC/V,IAAI;MAClC,IAAItjB,GAAG,GAAG,CAAC;MACX,KAAK,IAAI1G,CAAC,GAAGgqB,IAAI,CAAC7pB,MAAM,GAAG,CAAC,EAAEH,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;QACzC0G,GAAG,GAAGrC,IAAI,CAACqC,GAAG,CAACA,GAAG,EAAEsjB,IAAI,CAAChqB,CAAC,CAAC,CAAC+D,IAAI,CAAC,IAAI,CAACiyC,yBAAyB,CAACh2C,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;MAC1E;MACA,OAAO0G,GAAG,GAAG,CAAC,IAAIA,GAAG;IACvB;IACAivC,gBAAgBA,CAACh1C,KAAK,EAAE;MACtB,MAAM2L,IAAI,GAAG,IAAI,CAACyzB,WAAW;MAC7B,MAAM;QAAC3yB,MAAM;QAAEC;MAAM,CAAC,GAAGf,IAAI;MAC7B,MAAMunB,MAAM,GAAG,IAAI,CAACkhB,SAAS,CAACp0C,KAAK,CAAC;MACpC,MAAM8B,CAAC,GAAG2K,MAAM,CAACyoC,gBAAgB,CAAChiB,MAAM,CAACpxB,CAAC,CAAC;MAC3C,MAAME,CAAC,GAAG0K,MAAM,CAACwoC,gBAAgB,CAAChiB,MAAM,CAAClxB,CAAC,CAAC;MAC3C,MAAMoP,CAAC,GAAG8hB,MAAM,CAAC8jC,OAAO;MACxB,OAAO;QACL/hB,KAAK,EAAEtpC,IAAI,CAACspC,KAAK;QACjBz3C,KAAK,EAAE,GAAG,GAAGsE,CAAC,GAAG,IAAI,GAAGE,CAAC,IAAIoP,CAAC,GAAG,IAAI,GAAGA,CAAC,GAAG,EAAE,CAAC,GAAG;MACpD,CAAC;IACH;IACA6zB,MAAMA,CAACziB,IAAI,EAAE;MACX,MAAM5W,MAAM,GAAG,IAAI,CAACwzB,WAAW,CAAC/V,IAAI;MACpC,IAAI,CAAC+tB,cAAc,CAACxrC,MAAM,EAAE,CAAC,EAAEA,MAAM,CAACpM,MAAM,EAAEgjB,IAAI,CAAC;IACrD;IACA40B,cAAcA,CAACxrC,MAAM,EAAEvE,KAAK,EAAE0E,KAAK,EAAEyW,IAAI,EAAE;MACzC,MAAMowB,KAAK,GAAGpwB,IAAI,KAAK,OAAO;MAC9B,MAAM;QAACvW,MAAM;QAAEijC;MAAM,CAAC,GAAG,IAAI,CAAC9P,WAAW;MACzC,MAAM;QAAC6W,aAAa;QAAED;MAAc,CAAC,GAAG,IAAI,CAACG,iBAAiB,CAAC9uC,KAAK,EAAEmb,IAAI,CAAC;MAC3E,MAAM+sB,KAAK,GAAGtjC,MAAM,CAACE,IAAI;MACzB,MAAMqjC,KAAK,GAAGN,MAAM,CAAC/iC,IAAI;MACzB,KAAK,IAAI9M,CAAC,GAAGgI,KAAK,EAAEhI,CAAC,GAAGgI,KAAK,GAAG0E,KAAK,EAAE1M,CAAC,EAAE,EAAE;QAC1C,MAAM6sB,KAAK,GAAGtgB,MAAM,CAACvM,CAAC,CAAC;QACvB,MAAM6zB,MAAM,GAAG,CAAC0f,KAAK,IAAI,IAAI,CAACwB,SAAS,CAAC/0C,CAAC,CAAC;QAC1C,MAAMgtC,UAAU,GAAG,CAAC,CAAC;QACrB,MAAMpX,MAAM,GAAGoX,UAAU,CAACkD,KAAK,CAAC,GAAGqD,KAAK,GAAG3mC,MAAM,CAACs3C,kBAAkB,CAAC,GAAG,CAAC,GAAGt3C,MAAM,CAACM,gBAAgB,CAAC2mB,MAAM,CAACqc,KAAK,CAAC,CAAC;QAClH,MAAMra,MAAM,GAAGmX,UAAU,CAACmD,KAAK,CAAC,GAAGoD,KAAK,GAAG1D,MAAM,CAACwU,YAAY,CAAC,CAAC,GAAGxU,MAAM,CAAC3iC,gBAAgB,CAAC2mB,MAAM,CAACsc,KAAK,CAAC,CAAC;QACzGnD,UAAU,CAAC/Y,IAAI,GAAGhuB,KAAK,CAAC2vB,MAAM,CAAC,IAAI3vB,KAAK,CAAC4vB,MAAM,CAAC;QAChD,IAAI8gB,cAAc,EAAE;UAClB3J,UAAU,CAACzrC,OAAO,GAAGq1C,aAAa,IAAI,IAAI,CAACZ,yBAAyB,CAACh2C,CAAC,EAAE6sB,KAAK,CAACwf,MAAM,GAAG,QAAQ,GAAGlpB,IAAI,CAAC;UACvG,IAAIowB,KAAK,EAAE;YACTvG,UAAU,CAACzrC,OAAO,CAACqqB,MAAM,GAAG,CAAC;UAC/B;QACF;QACA,IAAI,CAACsrB,aAAa,CAACrqB,KAAK,EAAE7sB,CAAC,EAAEgtC,UAAU,EAAE7pB,IAAI,CAAC;MAChD;IACF;IACA6yB,yBAAyBA,CAACr1C,KAAK,EAAEwiB,IAAI,EAAE;MACrC,MAAM0Q,MAAM,GAAG,IAAI,CAACkhB,SAAS,CAACp0C,KAAK,CAAC;MACpC,IAAI0I,MAAM,GAAG,KAAK,CAAC2sC,yBAAyB,CAACr1C,KAAK,EAAEwiB,IAAI,CAAC;MACzD,IAAI9Z,MAAM,CAACykC,OAAO,EAAE;QAClBzkC,MAAM,GAAG9K,MAAM,CAACsP,MAAM,CAAC,CAAC,CAAC,EAAExE,MAAM,EAAE;UAACykC,OAAO,EAAE;QAAK,CAAC,CAAC;MACtD;MACA,MAAMliB,MAAM,GAAGviB,MAAM,CAACuiB,MAAM;MAC5B,IAAIzI,IAAI,KAAK,QAAQ,EAAE;QACrB9Z,MAAM,CAACuiB,MAAM,GAAG,CAAC;MACnB;MACAviB,MAAM,CAACuiB,MAAM,IAAI1sB,cAAc,CAAC20B,MAAM,IAAIA,MAAM,CAAC8jC,OAAO,EAAE/rC,MAAM,CAAC;MACjE,OAAOviB,MAAM;IACf;EACF;EACAixD,gBAAgB,CAACr8D,EAAE,GAAG,QAAQ;EAC9Bq8D,gBAAgB,CAAC11C,QAAQ,GAAG;IAC1B+uB,kBAAkB,EAAE,KAAK;IACzBuC,eAAe,EAAE,OAAO;IACxBhJ,UAAU,EAAE;MACVL,OAAO,EAAE;QACPvuC,IAAI,EAAE,QAAQ;QACd0uC,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,aAAa,EAAE,QAAQ;MAChD;IACF;EACF,CAAC;EACDstB,gBAAgB,CAAC/4C,SAAS,GAAG;IAC3BsC,MAAM,EAAE;MACNphB,CAAC,EAAE;QACDnE,IAAI,EAAE;MACR,CAAC;MACDqE,CAAC,EAAE;QACDrE,IAAI,EAAE;MACR;IACF,CAAC;IACDolB,OAAO,EAAE;MACP62C,OAAO,EAAE;QACP9rD,SAAS,EAAE;UACT2rC,KAAKA,CAAA,EAAG;YACN,OAAO,EAAE;UACX;QACF;MACF;IACF;EACF,CAAC;EAED,SAASogB,iBAAiBA,CAAC7uC,QAAQ,EAAE8uC,aAAa,EAAEC,MAAM,EAAE;IAC1D,IAAIC,MAAM,GAAG,CAAC;IACd,IAAIC,MAAM,GAAG,CAAC;IACd,IAAI7zC,OAAO,GAAG,CAAC;IACf,IAAIC,OAAO,GAAG,CAAC;IACf,IAAIyzC,aAAa,GAAGn2D,GAAG,EAAE;MACvB,MAAM+8B,UAAU,GAAG1V,QAAQ;MAC3B,MAAM2V,QAAQ,GAAGD,UAAU,GAAGo5B,aAAa;MAC3C,MAAMI,MAAM,GAAGx2D,IAAI,CAACioB,GAAG,CAAC+U,UAAU,CAAC;MACnC,MAAMy5B,MAAM,GAAGz2D,IAAI,CAACgoB,GAAG,CAACgV,UAAU,CAAC;MACnC,MAAM05B,IAAI,GAAG12D,IAAI,CAACioB,GAAG,CAACgV,QAAQ,CAAC;MAC/B,MAAM05B,IAAI,GAAG32D,IAAI,CAACgoB,GAAG,CAACiV,QAAQ,CAAC;MAC/B,MAAM25B,OAAO,GAAGA,CAAC1zD,KAAK,EAAE1D,CAAC,EAAEC,CAAC,KAAKiE,aAAa,CAACR,KAAK,EAAE85B,UAAU,EAAEC,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,GAAGj9B,IAAI,CAACqC,GAAG,CAAC7C,CAAC,EAAEA,CAAC,GAAG62D,MAAM,EAAE52D,CAAC,EAAEA,CAAC,GAAG42D,MAAM,CAAC;MAC9H,MAAMQ,OAAO,GAAGA,CAAC3zD,KAAK,EAAE1D,CAAC,EAAEC,CAAC,KAAKiE,aAAa,CAACR,KAAK,EAAE85B,UAAU,EAAEC,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,GAAGj9B,IAAI,CAACoC,GAAG,CAAC5C,CAAC,EAAEA,CAAC,GAAG62D,MAAM,EAAE52D,CAAC,EAAEA,CAAC,GAAG42D,MAAM,CAAC;MAC/H,MAAMS,IAAI,GAAGF,OAAO,CAAC,CAAC,EAAEJ,MAAM,EAAEE,IAAI,CAAC;MACrC,MAAMK,IAAI,GAAGH,OAAO,CAACt2D,OAAO,EAAEm2D,MAAM,EAAEE,IAAI,CAAC;MAC3C,MAAMK,IAAI,GAAGH,OAAO,CAAC92D,EAAE,EAAEy2D,MAAM,EAAEE,IAAI,CAAC;MACtC,MAAMO,IAAI,GAAGJ,OAAO,CAAC92D,EAAE,GAAGO,OAAO,EAAEm2D,MAAM,EAAEE,IAAI,CAAC;MAChDL,MAAM,GAAG,CAACQ,IAAI,GAAGE,IAAI,IAAI,CAAC;MAC1BT,MAAM,GAAG,CAACQ,IAAI,GAAGE,IAAI,IAAI,CAAC;MAC1Bv0C,OAAO,GAAG,EAAEo0C,IAAI,GAAGE,IAAI,CAAC,GAAG,CAAC;MAC5Br0C,OAAO,GAAG,EAAEo0C,IAAI,GAAGE,IAAI,CAAC,GAAG,CAAC;IAC9B;IACA,OAAO;MAACX,MAAM;MAAEC,MAAM;MAAE7zC,OAAO;MAAEC;IAAO,CAAC;EAC3C;EACA,MAAMu0C,kBAAkB,SAASjqB,iBAAiB,CAAC;IACjDvjC,WAAWA,CAACO,KAAK,EAAE5N,YAAY,EAAE;MAC/B,KAAK,CAAC4N,KAAK,EAAE5N,YAAY,CAAC;MAC1B,IAAI,CAACqxC,mBAAmB,GAAG,IAAI;MAC/B,IAAI,CAACypB,WAAW,GAAGp5D,SAAS;MAC5B,IAAI,CAACq5D,WAAW,GAAGr5D,SAAS;MAC5B,IAAI,CAAC2kB,OAAO,GAAG3kB,SAAS;MACxB,IAAI,CAAC4kB,OAAO,GAAG5kB,SAAS;IAC1B;IACAgwC,UAAUA,CAAA,EAAG,CAAC;IACdte,KAAKA,CAAC9rB,KAAK,EAAE0E,KAAK,EAAE;MAClB,MAAMsd,IAAI,GAAG,IAAI,CAACuoB,UAAU,CAAC,CAAC,CAACvoB,IAAI;MACnC,MAAM1d,IAAI,GAAG,IAAI,CAACyzB,WAAW;MAC7B,IAAI,IAAI,CAACnM,QAAQ,KAAK,KAAK,EAAE;QAC3BtnB,IAAI,CAACO,OAAO,GAAGmd,IAAI;MACrB,CAAC,MAAM;QACL,IAAI0xC,MAAM,GAAI17D,CAAC,IAAK,CAACgqB,IAAI,CAAChqB,CAAC,CAAC;QAC5B,IAAIpB,QAAQ,CAACorB,IAAI,CAAChiB,KAAK,CAAC,CAAC,EAAE;UACzB,MAAM;YAAC5G,GAAG,GAAG;UAAO,CAAC,GAAG,IAAI,CAACwyB,QAAQ;UACrC8nC,MAAM,GAAI17D,CAAC,IAAK,CAAC4C,gBAAgB,CAAConB,IAAI,CAAChqB,CAAC,CAAC,EAAEoB,GAAG,CAAC;QACjD;QACA,IAAIpB,CAAC,EAAEO,IAAI;QACX,KAAKP,CAAC,GAAGgI,KAAK,EAAEzH,IAAI,GAAGyH,KAAK,GAAG0E,KAAK,EAAE1M,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;UACnDsM,IAAI,CAACO,OAAO,CAAC7M,CAAC,CAAC,GAAG07D,MAAM,CAAC17D,CAAC,CAAC;QAC7B;MACF;IACF;IACA27D,YAAYA,CAAA,EAAG;MACb,OAAOh1D,SAAS,CAAC,IAAI,CAACpF,OAAO,CAACoqB,QAAQ,GAAG,EAAE,CAAC;IAC9C;IACAiwC,iBAAiBA,CAAA,EAAG;MAClB,OAAOj1D,SAAS,CAAC,IAAI,CAACpF,OAAO,CAACk5D,aAAa,CAAC;IAC9C;IACAoB,mBAAmBA,CAAA,EAAG;MACpB,IAAIp1D,GAAG,GAAGnC,GAAG;MACb,IAAIoC,GAAG,GAAG,CAACpC,GAAG;MACd,KAAK,IAAItE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACsO,KAAK,CAAC0b,IAAI,CAAC/H,QAAQ,CAAC9hB,MAAM,EAAE,EAAEH,CAAC,EAAE;QACxD,IAAI,IAAI,CAACsO,KAAK,CAAC2jD,gBAAgB,CAACjyD,CAAC,CAAC,EAAE;UAClC,MAAM8/B,UAAU,GAAG,IAAI,CAACxxB,KAAK,CAAC+zB,cAAc,CAACriC,CAAC,CAAC,CAAC8/B,UAAU;UAC1D,MAAMnU,QAAQ,GAAGmU,UAAU,CAAC67B,YAAY,CAAC,CAAC;UAC1C,MAAMlB,aAAa,GAAG36B,UAAU,CAAC87B,iBAAiB,CAAC,CAAC;UACpDn1D,GAAG,GAAGpC,IAAI,CAACoC,GAAG,CAACA,GAAG,EAAEklB,QAAQ,CAAC;UAC7BjlB,GAAG,GAAGrC,IAAI,CAACqC,GAAG,CAACA,GAAG,EAAEilB,QAAQ,GAAG8uC,aAAa,CAAC;QAC/C;MACF;MACA,OAAO;QACL9uC,QAAQ,EAAEllB,GAAG;QACbg0D,aAAa,EAAE/zD,GAAG,GAAGD;MACvB,CAAC;IACH;IACAm/B,MAAMA,CAACziB,IAAI,EAAE;MACX,MAAM7U,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,MAAM;QAAC4yB;MAAS,CAAC,GAAG5yB,KAAK;MACzB,MAAMhC,IAAI,GAAG,IAAI,CAACyzB,WAAW;MAC7B,MAAM+7B,IAAI,GAAGxvD,IAAI,CAAC0d,IAAI;MACtB,MAAM8xB,OAAO,GAAG,IAAI,CAACigB,iBAAiB,CAAC,CAAC,GAAG,IAAI,CAACC,YAAY,CAACF,IAAI,CAAC,GAAG,IAAI,CAACv6D,OAAO,CAACu6C,OAAO;MACzF,MAAMmgB,OAAO,GAAG53D,IAAI,CAACqC,GAAG,CAAC,CAACrC,IAAI,CAACoC,GAAG,CAACy6B,SAAS,CAAC5a,KAAK,EAAE4a,SAAS,CAAC3a,MAAM,CAAC,GAAGu1B,OAAO,IAAI,CAAC,EAAE,CAAC,CAAC;MACxF,MAAM4e,MAAM,GAAGr2D,IAAI,CAACoC,GAAG,CAACtH,YAAY,CAAC,IAAI,CAACoC,OAAO,CAACm5D,MAAM,EAAEuB,OAAO,CAAC,EAAE,CAAC,CAAC;MACtE,MAAMC,WAAW,GAAG,IAAI,CAACC,cAAc,CAAC,IAAI,CAACx7D,KAAK,CAAC;MACnD,MAAM;QAAC85D,aAAa;QAAE9uC;MAAQ,CAAC,GAAG,IAAI,CAACkwC,mBAAmB,CAAC,CAAC;MAC5D,MAAM;QAAClB,MAAM;QAAEC,MAAM;QAAE7zC,OAAO;QAAEC;MAAO,CAAC,GAAGwzC,iBAAiB,CAAC7uC,QAAQ,EAAE8uC,aAAa,EAAEC,MAAM,CAAC;MAC7F,MAAM1yC,QAAQ,GAAG,CAACkZ,SAAS,CAAC5a,KAAK,GAAGw1B,OAAO,IAAI6e,MAAM;MACrD,MAAM1yC,SAAS,GAAG,CAACiZ,SAAS,CAAC3a,MAAM,GAAGu1B,OAAO,IAAI8e,MAAM;MACvD,MAAMwB,SAAS,GAAG/3D,IAAI,CAACqC,GAAG,CAACrC,IAAI,CAACoC,GAAG,CAACuhB,QAAQ,EAAEC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;MAChE,MAAMwzC,WAAW,GAAGl8D,WAAW,CAAC,IAAI,CAACgC,OAAO,CAACqqB,MAAM,EAAEwwC,SAAS,CAAC;MAC/D,MAAMZ,WAAW,GAAGn3D,IAAI,CAACqC,GAAG,CAAC+0D,WAAW,GAAGf,MAAM,EAAE,CAAC,CAAC;MACrD,MAAM2B,YAAY,GAAG,CAACZ,WAAW,GAAGD,WAAW,IAAI,IAAI,CAACc,6BAA6B,CAAC,CAAC;MACvF,IAAI,CAACv1C,OAAO,GAAGA,OAAO,GAAG00C,WAAW;MACpC,IAAI,CAACz0C,OAAO,GAAGA,OAAO,GAAGy0C,WAAW;MACpCnvD,IAAI,CAACu6B,KAAK,GAAG,IAAI,CAAC01B,cAAc,CAAC,CAAC;MAClC,IAAI,CAACd,WAAW,GAAGA,WAAW,GAAGY,YAAY,GAAG,IAAI,CAACG,oBAAoB,CAAC,IAAI,CAAC77D,KAAK,CAAC;MACrF,IAAI,CAAC66D,WAAW,GAAGn3D,IAAI,CAACqC,GAAG,CAAC,IAAI,CAAC+0D,WAAW,GAAGY,YAAY,GAAGH,WAAW,EAAE,CAAC,CAAC;MAC7E,IAAI,CAACnkB,cAAc,CAAC+jB,IAAI,EAAE,CAAC,EAAEA,IAAI,CAAC37D,MAAM,EAAEgjB,IAAI,CAAC;IACjD;IACAs5C,cAAcA,CAACz8D,CAAC,EAAEuzC,KAAK,EAAE;MACvB,MAAMzlB,IAAI,GAAG,IAAI,CAACvsB,OAAO;MACzB,MAAM+K,IAAI,GAAG,IAAI,CAACyzB,WAAW;MAC7B,MAAM06B,aAAa,GAAG,IAAI,CAACmB,iBAAiB,CAAC,CAAC;MAC9C,IAAKroB,KAAK,IAAIzlB,IAAI,CAAChM,SAAS,CAAC46C,aAAa,IAAK,CAAC,IAAI,CAACpuD,KAAK,CAAC0lD,iBAAiB,CAACh0D,CAAC,CAAC,IAAIsM,IAAI,CAACO,OAAO,CAAC7M,CAAC,CAAC,KAAK,IAAI,IAAIsM,IAAI,CAAC0d,IAAI,CAAChqB,CAAC,CAAC,CAACoxC,MAAM,EAAE;QAClI,OAAO,CAAC;MACV;MACA,OAAO,IAAI,CAACurB,sBAAsB,CAACrwD,IAAI,CAACO,OAAO,CAAC7M,CAAC,CAAC,GAAGy6D,aAAa,GAAGn2D,GAAG,CAAC;IAC3E;IACAyzC,cAAcA,CAAC+jB,IAAI,EAAE9zD,KAAK,EAAE0E,KAAK,EAAEyW,IAAI,EAAE;MACvC,MAAMowB,KAAK,GAAGpwB,IAAI,KAAK,OAAO;MAC9B,MAAM7U,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,MAAM4yB,SAAS,GAAG5yB,KAAK,CAAC4yB,SAAS;MACjC,MAAMpT,IAAI,GAAGxf,KAAK,CAAC/M,OAAO;MAC1B,MAAMq7D,aAAa,GAAG9uC,IAAI,CAAChM,SAAS;MACpC,MAAM+6C,OAAO,GAAG,CAAC37B,SAAS,CAACj1B,IAAI,GAAGi1B,SAAS,CAACh1B,KAAK,IAAI,CAAC;MACtD,MAAM4wD,OAAO,GAAG,CAAC57B,SAAS,CAAC1a,GAAG,GAAG0a,SAAS,CAACza,MAAM,IAAI,CAAC;MACtD,MAAMs2C,YAAY,GAAGxpB,KAAK,IAAIqpB,aAAa,CAACG,YAAY;MACxD,MAAMvB,WAAW,GAAGuB,YAAY,GAAG,CAAC,GAAG,IAAI,CAACvB,WAAW;MACvD,MAAMC,WAAW,GAAGsB,YAAY,GAAG,CAAC,GAAG,IAAI,CAACtB,WAAW;MACvD,MAAM;QAAC7kB,aAAa;QAAED;MAAc,CAAC,GAAG,IAAI,CAACG,iBAAiB,CAAC9uC,KAAK,EAAEmb,IAAI,CAAC;MAC3E,IAAIke,UAAU,GAAG,IAAI,CAACs6B,YAAY,CAAC,CAAC;MACpC,IAAI37D,CAAC;MACL,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgI,KAAK,EAAE,EAAEhI,CAAC,EAAE;QAC1BqhC,UAAU,IAAI,IAAI,CAACo7B,cAAc,CAACz8D,CAAC,EAAEuzC,KAAK,CAAC;MAC7C;MACA,KAAKvzC,CAAC,GAAGgI,KAAK,EAAEhI,CAAC,GAAGgI,KAAK,GAAG0E,KAAK,EAAE,EAAE1M,CAAC,EAAE;QACtC,MAAMy6D,aAAa,GAAG,IAAI,CAACgC,cAAc,CAACz8D,CAAC,EAAEuzC,KAAK,CAAC;QACnD,MAAMrnB,GAAG,GAAG4vC,IAAI,CAAC97D,CAAC,CAAC;QACnB,MAAMgtC,UAAU,GAAG;UACjBvqC,CAAC,EAAEo6D,OAAO,GAAG,IAAI,CAAC91C,OAAO;UACzBpkB,CAAC,EAAEm6D,OAAO,GAAG,IAAI,CAAC91C,OAAO;UACzBqa,UAAU;UACVC,QAAQ,EAAED,UAAU,GAAGo5B,aAAa;UACpCA,aAAa;UACbgB,WAAW;UACXD;QACF,CAAC;QACD,IAAI7kB,cAAc,EAAE;UAClB3J,UAAU,CAACzrC,OAAO,GAAGq1C,aAAa,IAAI,IAAI,CAACZ,yBAAyB,CAACh2C,CAAC,EAAEksB,GAAG,CAACmgB,MAAM,GAAG,QAAQ,GAAGlpB,IAAI,CAAC;QACvG;QACAke,UAAU,IAAIo5B,aAAa;QAC3B,IAAI,CAACvjB,aAAa,CAAChrB,GAAG,EAAElsB,CAAC,EAAEgtC,UAAU,EAAE7pB,IAAI,CAAC;MAC9C;IACF;IACAo5C,cAAcA,CAAA,EAAG;MACf,MAAMjwD,IAAI,GAAG,IAAI,CAACyzB,WAAW;MAC7B,MAAMi9B,QAAQ,GAAG1wD,IAAI,CAAC0d,IAAI;MAC1B,IAAI6c,KAAK,GAAG,CAAC;MACb,IAAI7mC,CAAC;MACL,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGg9D,QAAQ,CAAC78D,MAAM,EAAEH,CAAC,EAAE,EAAE;QACpC,MAAM7B,KAAK,GAAGmO,IAAI,CAACO,OAAO,CAAC7M,CAAC,CAAC;QAC7B,IAAI7B,KAAK,KAAK,IAAI,IAAI,CAAC8H,KAAK,CAAC9H,KAAK,CAAC,IAAI,IAAI,CAACmQ,KAAK,CAAC0lD,iBAAiB,CAACh0D,CAAC,CAAC,IAAI,CAACg9D,QAAQ,CAACh9D,CAAC,CAAC,CAACoxC,MAAM,EAAE;UAC7FvK,KAAK,IAAIxiC,IAAI,CAAC8B,GAAG,CAAChI,KAAK,CAAC;QAC1B;MACF;MACA,OAAO0oC,KAAK;IACd;IACA81B,sBAAsBA,CAACx+D,KAAK,EAAE;MAC5B,MAAM0oC,KAAK,GAAG,IAAI,CAAC9G,WAAW,CAAC8G,KAAK;MACpC,IAAIA,KAAK,GAAG,CAAC,IAAI,CAAC5gC,KAAK,CAAC9H,KAAK,CAAC,EAAE;QAC9B,OAAOmG,GAAG,IAAID,IAAI,CAAC8B,GAAG,CAAChI,KAAK,CAAC,GAAG0oC,KAAK,CAAC;MACxC;MACA,OAAO,CAAC;IACV;IACA8O,gBAAgBA,CAACh1C,KAAK,EAAE;MACtB,MAAM2L,IAAI,GAAG,IAAI,CAACyzB,WAAW;MAC7B,MAAMzxB,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,MAAMomC,MAAM,GAAGpmC,KAAK,CAAC0b,IAAI,CAAC0qB,MAAM,IAAI,EAAE;MACtC,MAAMv2C,KAAK,GAAG27B,YAAY,CAACxtB,IAAI,CAACO,OAAO,CAAClM,KAAK,CAAC,EAAE2N,KAAK,CAAC/M,OAAO,CAACg4B,MAAM,CAAC;MACrE,OAAO;QACLqc,KAAK,EAAElB,MAAM,CAAC/zC,KAAK,CAAC,IAAI,EAAE;QAC1BxC;MACF,CAAC;IACH;IACA49D,iBAAiBA,CAACD,IAAI,EAAE;MACtB,IAAIp1D,GAAG,GAAG,CAAC;MACX,MAAM4H,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAItO,CAAC,EAAEO,IAAI,EAAE+L,IAAI,EAAEwzB,UAAU,EAAEv+B,OAAO;MACtC,IAAI,CAACu6D,IAAI,EAAE;QACT,KAAK97D,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAG+N,KAAK,CAAC0b,IAAI,CAAC/H,QAAQ,CAAC9hB,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;UAC5D,IAAIsO,KAAK,CAAC2jD,gBAAgB,CAACjyD,CAAC,CAAC,EAAE;YAC7BsM,IAAI,GAAGgC,KAAK,CAAC+zB,cAAc,CAACriC,CAAC,CAAC;YAC9B87D,IAAI,GAAGxvD,IAAI,CAAC0d,IAAI;YAChB8V,UAAU,GAAGxzB,IAAI,CAACwzB,UAAU;YAC5B;UACF;QACF;MACF;MACA,IAAI,CAACg8B,IAAI,EAAE;QACT,OAAO,CAAC;MACV;MACA,KAAK97D,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAGu7D,IAAI,CAAC37D,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;QAC7CuB,OAAO,GAAGu+B,UAAU,CAACkW,yBAAyB,CAACh2C,CAAC,CAAC;QACjD,IAAIuB,OAAO,CAAC07D,WAAW,KAAK,OAAO,EAAE;UACnCv2D,GAAG,GAAGrC,IAAI,CAACqC,GAAG,CAACA,GAAG,EAAEnF,OAAO,CAACmrB,WAAW,IAAI,CAAC,EAAEnrB,OAAO,CAAC27D,gBAAgB,IAAI,CAAC,CAAC;QAC9E;MACF;MACA,OAAOx2D,GAAG;IACZ;IACAs1D,YAAYA,CAACF,IAAI,EAAE;MACjB,IAAIp1D,GAAG,GAAG,CAAC;MACX,KAAK,IAAI1G,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAGu7D,IAAI,CAAC37D,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;QACjD,MAAMuB,OAAO,GAAG,IAAI,CAACy0C,yBAAyB,CAACh2C,CAAC,CAAC;QACjD0G,GAAG,GAAGrC,IAAI,CAACqC,GAAG,CAACA,GAAG,EAAEnF,OAAO,CAACq4C,MAAM,IAAI,CAAC,EAAEr4C,OAAO,CAAC47D,WAAW,IAAI,CAAC,CAAC;MACpE;MACA,OAAOz2D,GAAG;IACZ;IACA81D,oBAAoBA,CAAC97D,YAAY,EAAE;MACjC,IAAI08D,gBAAgB,GAAG,CAAC;MACxB,KAAK,IAAIp9D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGU,YAAY,EAAE,EAAEV,CAAC,EAAE;QACrC,IAAI,IAAI,CAACsO,KAAK,CAAC2jD,gBAAgB,CAACjyD,CAAC,CAAC,EAAE;UAClCo9D,gBAAgB,IAAI,IAAI,CAACjB,cAAc,CAACn8D,CAAC,CAAC;QAC5C;MACF;MACA,OAAOo9D,gBAAgB;IACzB;IACAjB,cAAcA,CAACz7D,YAAY,EAAE;MAC3B,OAAO2D,IAAI,CAACqC,GAAG,CAACxH,cAAc,CAAC,IAAI,CAACoP,KAAK,CAAC0b,IAAI,CAAC/H,QAAQ,CAACvhB,YAAY,CAAC,CAAC2f,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtF;IACAi8C,6BAA6BA,CAAA,EAAG;MAC9B,OAAO,IAAI,CAACE,oBAAoB,CAAC,IAAI,CAACluD,KAAK,CAAC0b,IAAI,CAAC/H,QAAQ,CAAC9hB,MAAM,CAAC,IAAI,CAAC;IACxE;EACF;EACAo7D,kBAAkB,CAACt9D,EAAE,GAAG,UAAU;EAClCs9D,kBAAkB,CAAC32C,QAAQ,GAAG;IAC5B+uB,kBAAkB,EAAE,KAAK;IACzBuC,eAAe,EAAE,KAAK;IACtBp0B,SAAS,EAAE;MACT46C,aAAa,EAAE,IAAI;MACnBK,YAAY,EAAE;IAChB,CAAC;IACD7vB,UAAU,EAAE;MACVL,OAAO,EAAE;QACPvuC,IAAI,EAAE,QAAQ;QACd0uC,UAAU,EAAE,CAAC,eAAe,EAAE,UAAU,EAAE,aAAa,EAAE,aAAa,EAAE,YAAY,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,aAAa,EAAE,SAAS;MACpI;IACF,CAAC;IACD0tB,MAAM,EAAE,KAAK;IACb/uC,QAAQ,EAAE,CAAC;IACX8uC,aAAa,EAAE,GAAG;IAClB7uC,MAAM,EAAE,MAAM;IACdkwB,OAAO,EAAE,CAAC;IACV74B,SAAS,EAAE;EACb,CAAC;EACDs4C,kBAAkB,CAAC/5C,WAAW,GAAG;IAC/BqD,WAAW,EAAGV,IAAI,IAAKA,IAAI,KAAK,SAAS;IACzCY,UAAU,EAAGZ,IAAI,IAAKA,IAAI,KAAK;EACjC,CAAC;EACDo3C,kBAAkB,CAACh6C,SAAS,GAAG;IAC7BqH,WAAW,EAAE,CAAC;IACdlF,OAAO,EAAE;MACP25C,MAAM,EAAE;QACN3oB,MAAM,EAAE;UACN4oB,cAAcA,CAAChvD,KAAK,EAAE;YACpB,MAAM0b,IAAI,GAAG1b,KAAK,CAAC0b,IAAI;YACvB,IAAIA,IAAI,CAAC0qB,MAAM,CAACv0C,MAAM,IAAI6pB,IAAI,CAAC/H,QAAQ,CAAC9hB,MAAM,EAAE;cAC9C,MAAM;gBAACu0C,MAAM,EAAE;kBAAChpB;gBAAU;cAAC,CAAC,GAAGpd,KAAK,CAAC+uD,MAAM,CAAC97D,OAAO;cACnD,OAAOyoB,IAAI,CAAC0qB,MAAM,CAAC5zC,GAAG,CAAC,CAAC80C,KAAK,EAAE51C,CAAC,KAAK;gBACnC,MAAMsM,IAAI,GAAGgC,KAAK,CAAC+zB,cAAc,CAAC,CAAC,CAAC;gBACpC,MAAM3f,KAAK,GAAGpW,IAAI,CAACwzB,UAAU,CAACha,QAAQ,CAAC9lB,CAAC,CAAC;gBACzC,OAAO;kBACL6tB,IAAI,EAAE+nB,KAAK;kBACXlnB,SAAS,EAAEhM,KAAK,CAACX,eAAe;kBAChCqM,WAAW,EAAE1L,KAAK,CAACV,WAAW;kBAC9BqM,SAAS,EAAE3L,KAAK,CAACgK,WAAW;kBAC5BhB,UAAU,EAAEA,UAAU;kBACtB0lB,MAAM,EAAE,CAAC9iC,KAAK,CAAC0lD,iBAAiB,CAACh0D,CAAC,CAAC;kBACnCW,KAAK,EAAEX;gBACT,CAAC;cACH,CAAC,CAAC;YACJ;YACA,OAAO,EAAE;UACX;QACF,CAAC;QACDwjB,OAAOA,CAACrf,CAAC,EAAEo5D,UAAU,EAAEF,MAAM,EAAE;UAC7BA,MAAM,CAAC/uD,KAAK,CAACylD,oBAAoB,CAACwJ,UAAU,CAAC58D,KAAK,CAAC;UACnD08D,MAAM,CAAC/uD,KAAK,CAACs3B,MAAM,CAAC,CAAC;QACvB;MACF,CAAC;MACD20B,OAAO,EAAE;QACP9rD,SAAS,EAAE;UACT2rC,KAAKA,CAAA,EAAG;YACN,OAAO,EAAE;UACX,CAAC;UACDxE,KAAKA,CAAC4nB,WAAW,EAAE;YACjB,IAAIC,SAAS,GAAGD,WAAW,CAAC5nB,KAAK;YACjC,MAAMz3C,KAAK,GAAG,IAAI,GAAGq/D,WAAW,CAACE,cAAc;YAC/C,IAAIt/D,OAAO,CAACq/D,SAAS,CAAC,EAAE;cACtBA,SAAS,GAAGA,SAAS,CAAC9+D,KAAK,CAAC,CAAC;cAC7B8+D,SAAS,CAAC,CAAC,CAAC,IAAIt/D,KAAK;YACvB,CAAC,MAAM;cACLs/D,SAAS,IAAIt/D,KAAK;YACpB;YACA,OAAOs/D,SAAS;UAClB;QACF;MACF;IACF;EACF,CAAC;EAED,MAAME,cAAc,SAASrsB,iBAAiB,CAAC;IAC7Ca,UAAUA,CAAA,EAAG;MACX,IAAI,CAACJ,mBAAmB,GAAG,IAAI;MAC/B,IAAI,CAACC,kBAAkB,GAAG,IAAI;MAC9B,KAAK,CAACG,UAAU,CAAC,CAAC;IACpB;IACAvM,MAAMA,CAACziB,IAAI,EAAE;MACX,MAAM7W,IAAI,GAAG,IAAI,CAACyzB,WAAW;MAC7B,MAAM;QAACqC,OAAO,EAAElU,IAAI;QAAElE,IAAI,EAAEzd,MAAM,GAAG,EAAE;QAAEslD;MAAQ,CAAC,GAAGvlD,IAAI;MACzD,MAAME,kBAAkB,GAAG,IAAI,CAAC8B,KAAK,CAACuoC,mBAAmB;MACzD,IAAI;QAAC7uC,KAAK;QAAE0E;MAAK,CAAC,GAAGL,gCAAgC,CAACC,IAAI,EAAEC,MAAM,EAAEC,kBAAkB,CAAC;MACvF,IAAI,CAACqlC,UAAU,GAAG7pC,KAAK;MACvB,IAAI,CAAC8pC,UAAU,GAAGplC,KAAK;MACvB,IAAIS,mBAAmB,CAACb,IAAI,CAAC,EAAE;QAC7BtE,KAAK,GAAG,CAAC;QACT0E,KAAK,GAAGH,MAAM,CAACpM,MAAM;MACvB;MACA+tB,IAAI,CAACsQ,MAAM,GAAG,IAAI,CAAClwB,KAAK;MACxB4f,IAAI,CAACyQ,aAAa,GAAG,IAAI,CAACh+B,KAAK;MAC/ButB,IAAI,CAAC0vC,UAAU,GAAG,CAAC,CAAC/L,QAAQ,CAAC+L,UAAU;MACvC1vC,IAAI,CAAC3hB,MAAM,GAAGA,MAAM;MACpB,MAAMhL,OAAO,GAAG,IAAI,CAACw0C,4BAA4B,CAAC5yB,IAAI,CAAC;MACvD,IAAI,CAAC,IAAI,CAAC5hB,OAAO,CAACuiB,QAAQ,EAAE;QAC1BviB,OAAO,CAACmrB,WAAW,GAAG,CAAC;MACzB;MACAnrB,OAAO,CAACw7B,OAAO,GAAG,IAAI,CAACx7B,OAAO,CAACw7B,OAAO;MACtC,IAAI,CAACma,aAAa,CAAChpB,IAAI,EAAE9rB,SAAS,EAAE;QAClCy7D,QAAQ,EAAE,CAACrxD,kBAAkB;QAC7BjL;MACF,CAAC,EAAE4hB,IAAI,CAAC;MACR,IAAI,CAAC40B,cAAc,CAACxrC,MAAM,EAAEvE,KAAK,EAAE0E,KAAK,EAAEyW,IAAI,CAAC;IACjD;IACA40B,cAAcA,CAACxrC,MAAM,EAAEvE,KAAK,EAAE0E,KAAK,EAAEyW,IAAI,EAAE;MACzC,MAAMowB,KAAK,GAAGpwB,IAAI,KAAK,OAAO;MAC9B,MAAM;QAACvW,MAAM;QAAEijC,MAAM;QAAEwB,QAAQ;QAAEwgB;MAAQ,CAAC,GAAG,IAAI,CAAC9xB,WAAW;MAC7D,MAAM;QAAC6W,aAAa;QAAED;MAAc,CAAC,GAAG,IAAI,CAACG,iBAAiB,CAAC9uC,KAAK,EAAEmb,IAAI,CAAC;MAC3E,MAAM+sB,KAAK,GAAGtjC,MAAM,CAACE,IAAI;MACzB,MAAMqjC,KAAK,GAAGN,MAAM,CAAC/iC,IAAI;MACzB,MAAM;QAAC2pB,QAAQ;QAAEsG;MAAO,CAAC,GAAG,IAAI,CAACx7B,OAAO;MACxC,MAAMu8D,YAAY,GAAG/3D,QAAQ,CAAC0wB,QAAQ,CAAC,GAAGA,QAAQ,GAAG33B,MAAM,CAAC2F,iBAAiB;MAC7E,MAAMs5D,YAAY,GAAG,IAAI,CAACzvD,KAAK,CAACuoC,mBAAmB,IAAItD,KAAK,IAAIpwB,IAAI,KAAK,MAAM;MAC/E,IAAI66C,UAAU,GAAGh2D,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC+sC,SAAS,CAAC/sC,KAAK,GAAG,CAAC,CAAC;MACvD,KAAK,IAAIhI,CAAC,GAAGgI,KAAK,EAAEhI,CAAC,GAAGgI,KAAK,GAAG0E,KAAK,EAAE,EAAE1M,CAAC,EAAE;QAC1C,MAAM6sB,KAAK,GAAGtgB,MAAM,CAACvM,CAAC,CAAC;QACvB,MAAM6zB,MAAM,GAAG,IAAI,CAACkhB,SAAS,CAAC/0C,CAAC,CAAC;QAChC,MAAMgtC,UAAU,GAAG+wB,YAAY,GAAGlxC,KAAK,GAAG,CAAC,CAAC;QAC5C,MAAMoxC,QAAQ,GAAG//D,aAAa,CAAC21B,MAAM,CAACsc,KAAK,CAAC,CAAC;QAC7C,MAAMva,MAAM,GAAGoX,UAAU,CAACkD,KAAK,CAAC,GAAGtjC,MAAM,CAACM,gBAAgB,CAAC2mB,MAAM,CAACqc,KAAK,CAAC,EAAElwC,CAAC,CAAC;QAC5E,MAAM61B,MAAM,GAAGmX,UAAU,CAACmD,KAAK,CAAC,GAAGoD,KAAK,IAAI0qB,QAAQ,GAAGpuB,MAAM,CAACwU,YAAY,CAAC,CAAC,GAAGxU,MAAM,CAAC3iC,gBAAgB,CAACmkC,QAAQ,GAAG,IAAI,CAACzC,UAAU,CAACiB,MAAM,EAAEhc,MAAM,EAAEwd,QAAQ,CAAC,GAAGxd,MAAM,CAACsc,KAAK,CAAC,EAAEnwC,CAAC,CAAC;QAC/KgtC,UAAU,CAAC/Y,IAAI,GAAGhuB,KAAK,CAAC2vB,MAAM,CAAC,IAAI3vB,KAAK,CAAC4vB,MAAM,CAAC,IAAIooC,QAAQ;QAC5DjxB,UAAU,CAAC58B,IAAI,GAAGpQ,CAAC,GAAG,CAAC,IAAKqE,IAAI,CAAC8B,GAAG,CAAC0tB,MAAM,CAACqc,KAAK,CAAC,GAAG8tB,UAAU,CAAC9tB,KAAK,CAAC,CAAC,GAAI4tB,YAAY;QACvF,IAAI/gC,OAAO,EAAE;UACXiQ,UAAU,CAACnZ,MAAM,GAAGA,MAAM;UAC1BmZ,UAAU,CAAC4D,GAAG,GAAGihB,QAAQ,CAAC7nC,IAAI,CAAChqB,CAAC,CAAC;QACnC;QACA,IAAI22C,cAAc,EAAE;UAClB3J,UAAU,CAACzrC,OAAO,GAAGq1C,aAAa,IAAI,IAAI,CAACZ,yBAAyB,CAACh2C,CAAC,EAAE6sB,KAAK,CAACwf,MAAM,GAAG,QAAQ,GAAGlpB,IAAI,CAAC;QACzG;QACA,IAAI,CAAC46C,YAAY,EAAE;UACjB,IAAI,CAAC7mB,aAAa,CAACrqB,KAAK,EAAE7sB,CAAC,EAAEgtC,UAAU,EAAE7pB,IAAI,CAAC;QAChD;QACA66C,UAAU,GAAGnqC,MAAM;MACrB;IACF;IACA6hB,cAAcA,CAAA,EAAG;MACf,MAAMppC,IAAI,GAAG,IAAI,CAACyzB,WAAW;MAC7B,MAAMqC,OAAO,GAAG91B,IAAI,CAAC81B,OAAO;MAC5B,MAAM87B,MAAM,GAAG97B,OAAO,CAAC7gC,OAAO,IAAI6gC,OAAO,CAAC7gC,OAAO,CAACmrB,WAAW,IAAI,CAAC;MAClE,MAAM1C,IAAI,GAAG1d,IAAI,CAAC0d,IAAI,IAAI,EAAE;MAC5B,IAAI,CAACA,IAAI,CAAC7pB,MAAM,EAAE;QAChB,OAAO+9D,MAAM;MACf;MACA,MAAM9pC,UAAU,GAAGpK,IAAI,CAAC,CAAC,CAAC,CAACjmB,IAAI,CAAC,IAAI,CAACiyC,yBAAyB,CAAC,CAAC,CAAC,CAAC;MAClE,MAAMmoB,SAAS,GAAGn0C,IAAI,CAACA,IAAI,CAAC7pB,MAAM,GAAG,CAAC,CAAC,CAAC4D,IAAI,CAAC,IAAI,CAACiyC,yBAAyB,CAAChsB,IAAI,CAAC7pB,MAAM,GAAG,CAAC,CAAC,CAAC;MAC7F,OAAOkE,IAAI,CAACqC,GAAG,CAACw3D,MAAM,EAAE9pC,UAAU,EAAE+pC,SAAS,CAAC,GAAG,CAAC;IACpD;IACA/uD,IAAIA,CAAA,EAAG;MACL,MAAM9C,IAAI,GAAG,IAAI,CAACyzB,WAAW;MAC7BzzB,IAAI,CAAC81B,OAAO,CAACg8B,mBAAmB,CAAC,IAAI,CAAC9vD,KAAK,CAAC4yB,SAAS,EAAE50B,IAAI,CAACM,MAAM,CAACE,IAAI,CAAC;MACxE,KAAK,CAACsC,IAAI,CAAC,CAAC;IACd;EACF;EACAuuD,cAAc,CAAC1/D,EAAE,GAAG,MAAM;EAC1B0/D,cAAc,CAAC/4C,QAAQ,GAAG;IACxB+uB,kBAAkB,EAAE,MAAM;IAC1BuC,eAAe,EAAE,OAAO;IACxBpyB,QAAQ,EAAE,IAAI;IACd2S,QAAQ,EAAE;EACZ,CAAC;EACDknC,cAAc,CAACp8C,SAAS,GAAG;IACzBsC,MAAM,EAAE;MACNu2C,OAAO,EAAE;QACP97D,IAAI,EAAE;MACR,CAAC;MACD+7D,OAAO,EAAE;QACP/7D,IAAI,EAAE;MACR;IACF;EACF,CAAC;EAED,MAAM+/D,mBAAmB,SAAS/sB,iBAAiB,CAAC;IAClDvjC,WAAWA,CAACO,KAAK,EAAE5N,YAAY,EAAE;MAC/B,KAAK,CAAC4N,KAAK,EAAE5N,YAAY,CAAC;MAC1B,IAAI,CAAC86D,WAAW,GAAGp5D,SAAS;MAC5B,IAAI,CAACq5D,WAAW,GAAGr5D,SAAS;IAC9B;IACAuzC,gBAAgBA,CAACh1C,KAAK,EAAE;MACtB,MAAM2L,IAAI,GAAG,IAAI,CAACyzB,WAAW;MAC7B,MAAMzxB,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,MAAMomC,MAAM,GAAGpmC,KAAK,CAAC0b,IAAI,CAAC0qB,MAAM,IAAI,EAAE;MACtC,MAAMv2C,KAAK,GAAG27B,YAAY,CAACxtB,IAAI,CAACO,OAAO,CAAClM,KAAK,CAAC,CAACoR,CAAC,EAAEzD,KAAK,CAAC/M,OAAO,CAACg4B,MAAM,CAAC;MACvE,OAAO;QACLqc,KAAK,EAAElB,MAAM,CAAC/zC,KAAK,CAAC,IAAI,EAAE;QAC1BxC;MACF,CAAC;IACH;IACAo2C,eAAeA,CAACjoC,IAAI,EAAE0d,IAAI,EAAEhiB,KAAK,EAAE0E,KAAK,EAAE;MACxC,OAAOinB,2BAA2B,CAAC2qC,IAAI,CAAC,IAAI,CAAC,CAAChyD,IAAI,EAAE0d,IAAI,EAAEhiB,KAAK,EAAE0E,KAAK,CAAC;IACzE;IACAk5B,MAAMA,CAACziB,IAAI,EAAE;MACX,MAAM24C,IAAI,GAAG,IAAI,CAAC/7B,WAAW,CAAC/V,IAAI;MAClC,IAAI,CAACu0C,aAAa,CAAC,CAAC;MACpB,IAAI,CAACxmB,cAAc,CAAC+jB,IAAI,EAAE,CAAC,EAAEA,IAAI,CAAC37D,MAAM,EAAEgjB,IAAI,CAAC;IACjD;IACAiyB,SAASA,CAAA,EAAG;MACV,MAAM9oC,IAAI,GAAG,IAAI,CAACyzB,WAAW;MAC7B,MAAM96B,KAAK,GAAG;QAACwB,GAAG,EAAE3H,MAAM,CAAC2F,iBAAiB;QAAEiC,GAAG,EAAE5H,MAAM,CAACywC;MAAiB,CAAC;MAC5EjjC,IAAI,CAAC0d,IAAI,CAAClgB,OAAO,CAAC,CAAC+b,OAAO,EAAEllB,KAAK,KAAK;QACpC,MAAMkzB,MAAM,GAAG,IAAI,CAACkhB,SAAS,CAACp0C,KAAK,CAAC,CAACoR,CAAC;QACtC,IAAI,CAAC9L,KAAK,CAAC4tB,MAAM,CAAC,IAAI,IAAI,CAACvlB,KAAK,CAAC0lD,iBAAiB,CAACrzD,KAAK,CAAC,EAAE;UACzD,IAAIkzB,MAAM,GAAG5uB,KAAK,CAACwB,GAAG,EAAE;YACtBxB,KAAK,CAACwB,GAAG,GAAGotB,MAAM;UACpB;UACA,IAAIA,MAAM,GAAG5uB,KAAK,CAACyB,GAAG,EAAE;YACtBzB,KAAK,CAACyB,GAAG,GAAGmtB,MAAM;UACpB;QACF;MACF,CAAC,CAAC;MACF,OAAO5uB,KAAK;IACd;IACAs5D,aAAaA,CAAA,EAAG;MACd,MAAMjwD,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,MAAM4yB,SAAS,GAAG5yB,KAAK,CAAC4yB,SAAS;MACjC,MAAMpT,IAAI,GAAGxf,KAAK,CAAC/M,OAAO;MAC1B,MAAMihD,OAAO,GAAGn+C,IAAI,CAACoC,GAAG,CAACy6B,SAAS,CAACh1B,KAAK,GAAGg1B,SAAS,CAACj1B,IAAI,EAAEi1B,SAAS,CAACza,MAAM,GAAGya,SAAS,CAAC1a,GAAG,CAAC;MAC5F,MAAMi1C,WAAW,GAAGp3D,IAAI,CAACqC,GAAG,CAAC87C,OAAO,GAAG,CAAC,EAAE,CAAC,CAAC;MAC5C,MAAMgZ,WAAW,GAAGn3D,IAAI,CAACqC,GAAG,CAAConB,IAAI,CAAC0wC,gBAAgB,GAAI/C,WAAW,GAAG,GAAG,GAAK3tC,IAAI,CAAC0wC,gBAAiB,GAAG,CAAC,EAAE,CAAC,CAAC;MAC1G,MAAMnC,YAAY,GAAG,CAACZ,WAAW,GAAGD,WAAW,IAAIltD,KAAK,CAACulD,sBAAsB,CAAC,CAAC;MACjF,IAAI,CAAC4H,WAAW,GAAGA,WAAW,GAAIY,YAAY,GAAG,IAAI,CAAC17D,KAAM;MAC5D,IAAI,CAAC66D,WAAW,GAAG,IAAI,CAACC,WAAW,GAAGY,YAAY;IACpD;IACAtkB,cAAcA,CAAC+jB,IAAI,EAAE9zD,KAAK,EAAE0E,KAAK,EAAEyW,IAAI,EAAE;MACvC,MAAMowB,KAAK,GAAGpwB,IAAI,KAAK,OAAO;MAC9B,MAAM7U,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,MAAMwf,IAAI,GAAGxf,KAAK,CAAC/M,OAAO;MAC1B,MAAMq7D,aAAa,GAAG9uC,IAAI,CAAChM,SAAS;MACpC,MAAM8B,KAAK,GAAG,IAAI,CAACmc,WAAW,CAACqT,MAAM;MACrC,MAAMypB,OAAO,GAAGj5C,KAAK,CAAC66C,OAAO;MAC7B,MAAM3B,OAAO,GAAGl5C,KAAK,CAAC86C,OAAO;MAC7B,MAAMC,iBAAiB,GAAG/6C,KAAK,CAACg7C,aAAa,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGx6D,EAAE;MAC3D,IAAImD,KAAK,GAAGo3D,iBAAiB;MAC7B,IAAI3+D,CAAC;MACL,MAAM6+D,YAAY,GAAG,GAAG,GAAG,IAAI,CAACC,oBAAoB,CAAC,CAAC;MACtD,KAAK9+D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgI,KAAK,EAAE,EAAEhI,CAAC,EAAE;QAC1BuH,KAAK,IAAI,IAAI,CAACw3D,aAAa,CAAC/+D,CAAC,EAAEmjB,IAAI,EAAE07C,YAAY,CAAC;MACpD;MACA,KAAK7+D,CAAC,GAAGgI,KAAK,EAAEhI,CAAC,GAAGgI,KAAK,GAAG0E,KAAK,EAAE1M,CAAC,EAAE,EAAE;QACtC,MAAMksB,GAAG,GAAG4vC,IAAI,CAAC97D,CAAC,CAAC;QACnB,IAAIqhC,UAAU,GAAG95B,KAAK;QACtB,IAAI+5B,QAAQ,GAAG/5B,KAAK,GAAG,IAAI,CAACw3D,aAAa,CAAC/+D,CAAC,EAAEmjB,IAAI,EAAE07C,YAAY,CAAC;QAChE,IAAIpD,WAAW,GAAGntD,KAAK,CAAC0lD,iBAAiB,CAACh0D,CAAC,CAAC,GAAG4jB,KAAK,CAACo7C,6BAA6B,CAAC,IAAI,CAACjqB,SAAS,CAAC/0C,CAAC,CAAC,CAAC+R,CAAC,CAAC,GAAG,CAAC;QAC3GxK,KAAK,GAAG+5B,QAAQ;QAChB,IAAIiS,KAAK,EAAE;UACT,IAAIqpB,aAAa,CAACG,YAAY,EAAE;YAC9BtB,WAAW,GAAG,CAAC;UACjB;UACA,IAAImB,aAAa,CAACF,aAAa,EAAE;YAC/Br7B,UAAU,GAAGC,QAAQ,GAAGq9B,iBAAiB;UAC3C;QACF;QACA,MAAM3xB,UAAU,GAAG;UACjBvqC,CAAC,EAAEo6D,OAAO;UACVl6D,CAAC,EAAEm6D,OAAO;UACVtB,WAAW,EAAE,CAAC;UACdC,WAAW;UACXp6B,UAAU;UACVC,QAAQ;UACR//B,OAAO,EAAE,IAAI,CAACy0C,yBAAyB,CAACh2C,CAAC,EAAEksB,GAAG,CAACmgB,MAAM,GAAG,QAAQ,GAAGlpB,IAAI;QACzE,CAAC;QACD,IAAI,CAAC+zB,aAAa,CAAChrB,GAAG,EAAElsB,CAAC,EAAEgtC,UAAU,EAAE7pB,IAAI,CAAC;MAC9C;IACF;IACA27C,oBAAoBA,CAAA,EAAG;MACrB,MAAMxyD,IAAI,GAAG,IAAI,CAACyzB,WAAW;MAC7B,IAAIrzB,KAAK,GAAG,CAAC;MACbJ,IAAI,CAAC0d,IAAI,CAAClgB,OAAO,CAAC,CAAC+b,OAAO,EAAEllB,KAAK,KAAK;QACpC,IAAI,CAACsF,KAAK,CAAC,IAAI,CAAC8uC,SAAS,CAACp0C,KAAK,CAAC,CAACoR,CAAC,CAAC,IAAI,IAAI,CAACzD,KAAK,CAAC0lD,iBAAiB,CAACrzD,KAAK,CAAC,EAAE;UAC1E+L,KAAK,EAAE;QACT;MACF,CAAC,CAAC;MACF,OAAOA,KAAK;IACd;IACAqyD,aAAaA,CAACp+D,KAAK,EAAEwiB,IAAI,EAAE07C,YAAY,EAAE;MACvC,OAAO,IAAI,CAACvwD,KAAK,CAAC0lD,iBAAiB,CAACrzD,KAAK,CAAC,GACtCgG,SAAS,CAAC,IAAI,CAACqvC,yBAAyB,CAACr1C,KAAK,EAAEwiB,IAAI,CAAC,CAAC5b,KAAK,IAAIs3D,YAAY,CAAC,GAC5E,CAAC;IACP;EACF;EACAR,mBAAmB,CAACpgE,EAAE,GAAG,WAAW;EACpCogE,mBAAmB,CAACz5C,QAAQ,GAAG;IAC7BsxB,eAAe,EAAE,KAAK;IACtBp0B,SAAS,EAAE;MACT46C,aAAa,EAAE,IAAI;MACnBK,YAAY,EAAE;IAChB,CAAC;IACD7vB,UAAU,EAAE;MACVL,OAAO,EAAE;QACPvuC,IAAI,EAAE,QAAQ;QACd0uC,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,YAAY,EAAE,UAAU,EAAE,aAAa,EAAE,aAAa;MAC/E;IACF,CAAC;IACD/pB,SAAS,EAAE,GAAG;IACdoe,UAAU,EAAE;EACd,CAAC;EACDg9B,mBAAmB,CAAC98C,SAAS,GAAG;IAC9BqH,WAAW,EAAE,CAAC;IACdlF,OAAO,EAAE;MACP25C,MAAM,EAAE;QACN3oB,MAAM,EAAE;UACN4oB,cAAcA,CAAChvD,KAAK,EAAE;YACpB,MAAM0b,IAAI,GAAG1b,KAAK,CAAC0b,IAAI;YACvB,IAAIA,IAAI,CAAC0qB,MAAM,CAACv0C,MAAM,IAAI6pB,IAAI,CAAC/H,QAAQ,CAAC9hB,MAAM,EAAE;cAC9C,MAAM;gBAACu0C,MAAM,EAAE;kBAAChpB;gBAAU;cAAC,CAAC,GAAGpd,KAAK,CAAC+uD,MAAM,CAAC97D,OAAO;cACnD,OAAOyoB,IAAI,CAAC0qB,MAAM,CAAC5zC,GAAG,CAAC,CAAC80C,KAAK,EAAE51C,CAAC,KAAK;gBACnC,MAAMsM,IAAI,GAAGgC,KAAK,CAAC+zB,cAAc,CAAC,CAAC,CAAC;gBACpC,MAAM3f,KAAK,GAAGpW,IAAI,CAACwzB,UAAU,CAACha,QAAQ,CAAC9lB,CAAC,CAAC;gBACzC,OAAO;kBACL6tB,IAAI,EAAE+nB,KAAK;kBACXlnB,SAAS,EAAEhM,KAAK,CAACX,eAAe;kBAChCqM,WAAW,EAAE1L,KAAK,CAACV,WAAW;kBAC9BqM,SAAS,EAAE3L,KAAK,CAACgK,WAAW;kBAC5BhB,UAAU,EAAEA,UAAU;kBACtB0lB,MAAM,EAAE,CAAC9iC,KAAK,CAAC0lD,iBAAiB,CAACh0D,CAAC,CAAC;kBACnCW,KAAK,EAAEX;gBACT,CAAC;cACH,CAAC,CAAC;YACJ;YACA,OAAO,EAAE;UACX;QACF,CAAC;QACDwjB,OAAOA,CAACrf,CAAC,EAAEo5D,UAAU,EAAEF,MAAM,EAAE;UAC7BA,MAAM,CAAC/uD,KAAK,CAACylD,oBAAoB,CAACwJ,UAAU,CAAC58D,KAAK,CAAC;UACnD08D,MAAM,CAAC/uD,KAAK,CAACs3B,MAAM,CAAC,CAAC;QACvB;MACF,CAAC;MACD20B,OAAO,EAAE;QACP9rD,SAAS,EAAE;UACT2rC,KAAKA,CAAA,EAAG;YACN,OAAO,EAAE;UACX,CAAC;UACDxE,KAAKA,CAACzzB,OAAO,EAAE;YACb,OAAOA,OAAO,CAAC7T,KAAK,CAAC0b,IAAI,CAAC0qB,MAAM,CAACvyB,OAAO,CAACwuB,SAAS,CAAC,GAAG,IAAI,GAAGxuB,OAAO,CAACu7C,cAAc;UACrF;QACF;MACF;IACF,CAAC;IACD75C,MAAM,EAAE;MACN9R,CAAC,EAAE;QACDzT,IAAI,EAAE,cAAc;QACpB2gE,UAAU,EAAE;UACVn4B,OAAO,EAAE;QACX,CAAC;QACD1L,WAAW,EAAE,IAAI;QACjBye,IAAI,EAAE;UACJqlB,QAAQ,EAAE;QACZ,CAAC;QACDC,WAAW,EAAE;UACXr4B,OAAO,EAAE;QACX,CAAC;QACDzF,UAAU,EAAE;MACd;IACF;EACF,CAAC;EAED,MAAM+9B,aAAa,SAAS7D,kBAAkB,CAAC;EAE/C6D,aAAa,CAACnhE,EAAE,GAAG,KAAK;EACxBmhE,aAAa,CAACx6C,QAAQ,GAAG;IACvB81C,MAAM,EAAE,CAAC;IACT/uC,QAAQ,EAAE,CAAC;IACX8uC,aAAa,EAAE,GAAG;IAClB7uC,MAAM,EAAE;EACV,CAAC;EAED,MAAMyzC,eAAe,SAAS/tB,iBAAiB,CAAC;IAC9CqE,gBAAgBA,CAACh1C,KAAK,EAAE;MACtB,MAAMkvC,MAAM,GAAG,IAAI,CAAC9P,WAAW,CAAC8P,MAAM;MACtC,MAAMhc,MAAM,GAAG,IAAI,CAACkhB,SAAS,CAACp0C,KAAK,CAAC;MACpC,OAAO;QACLi1C,KAAK,EAAE/F,MAAM,CAAC8E,SAAS,CAAC,CAAC,CAACh0C,KAAK,CAAC;QAChCxC,KAAK,EAAE,EAAE,GAAG0xC,MAAM,CAACgG,gBAAgB,CAAChiB,MAAM,CAACgc,MAAM,CAAC/iC,IAAI,CAAC;MACzD,CAAC;IACH;IACAynC,eAAeA,CAACjoC,IAAI,EAAE0d,IAAI,EAAEhiB,KAAK,EAAE0E,KAAK,EAAE;MACxC,OAAOinB,2BAA2B,CAAC2qC,IAAI,CAAC,IAAI,CAAC,CAAChyD,IAAI,EAAE0d,IAAI,EAAEhiB,KAAK,EAAE0E,KAAK,CAAC;IACzE;IACAk5B,MAAMA,CAACziB,IAAI,EAAE;MACX,MAAM7W,IAAI,GAAG,IAAI,CAACyzB,WAAW;MAC7B,MAAM7R,IAAI,GAAG5hB,IAAI,CAAC81B,OAAO;MACzB,MAAM71B,MAAM,GAAGD,IAAI,CAAC0d,IAAI,IAAI,EAAE;MAC9B,MAAM0qB,MAAM,GAAGpoC,IAAI,CAACM,MAAM,CAAC+nC,SAAS,CAAC,CAAC;MACtCzmB,IAAI,CAAC3hB,MAAM,GAAGA,MAAM;MACpB,IAAI4W,IAAI,KAAK,QAAQ,EAAE;QACrB,MAAM5hB,OAAO,GAAG,IAAI,CAACw0C,4BAA4B,CAAC5yB,IAAI,CAAC;QACvD,IAAI,CAAC,IAAI,CAAC5hB,OAAO,CAACuiB,QAAQ,EAAE;UAC1BviB,OAAO,CAACmrB,WAAW,GAAG,CAAC;QACzB;QACA,MAAMsgB,UAAU,GAAG;UACjB9O,KAAK,EAAE,IAAI;UACXG,SAAS,EAAEqW,MAAM,CAACv0C,MAAM,KAAKoM,MAAM,CAACpM,MAAM;UAC1CoB;QACF,CAAC;QACD,IAAI,CAAC21C,aAAa,CAAChpB,IAAI,EAAE9rB,SAAS,EAAE4qC,UAAU,EAAE7pB,IAAI,CAAC;MACvD;MACA,IAAI,CAAC40B,cAAc,CAACxrC,MAAM,EAAE,CAAC,EAAEA,MAAM,CAACpM,MAAM,EAAEgjB,IAAI,CAAC;IACrD;IACA40B,cAAcA,CAACxrC,MAAM,EAAEvE,KAAK,EAAE0E,KAAK,EAAEyW,IAAI,EAAE;MACzC,MAAMS,KAAK,GAAG,IAAI,CAACmc,WAAW,CAACqT,MAAM;MACrC,MAAMG,KAAK,GAAGpwB,IAAI,KAAK,OAAO;MAC9B,KAAK,IAAInjB,CAAC,GAAGgI,KAAK,EAAEhI,CAAC,GAAGgI,KAAK,GAAG0E,KAAK,EAAE1M,CAAC,EAAE,EAAE;QAC1C,MAAM6sB,KAAK,GAAGtgB,MAAM,CAACvM,CAAC,CAAC;QACvB,MAAMuB,OAAO,GAAG,IAAI,CAACy0C,yBAAyB,CAACh2C,CAAC,EAAE6sB,KAAK,CAACwf,MAAM,GAAG,QAAQ,GAAGlpB,IAAI,CAAC;QACjF,MAAMm8C,aAAa,GAAG17C,KAAK,CAAC27C,wBAAwB,CAACv/D,CAAC,EAAE,IAAI,CAAC+0C,SAAS,CAAC/0C,CAAC,CAAC,CAAC+R,CAAC,CAAC;QAC5E,MAAMtP,CAAC,GAAG8wC,KAAK,GAAG3vB,KAAK,CAAC66C,OAAO,GAAGa,aAAa,CAAC78D,CAAC;QACjD,MAAME,CAAC,GAAG4wC,KAAK,GAAG3vB,KAAK,CAAC86C,OAAO,GAAGY,aAAa,CAAC38D,CAAC;QACjD,MAAMqqC,UAAU,GAAG;UACjBvqC,CAAC;UACDE,CAAC;UACD4E,KAAK,EAAE+3D,aAAa,CAAC/3D,KAAK;UAC1B0sB,IAAI,EAAEhuB,KAAK,CAACxD,CAAC,CAAC,IAAIwD,KAAK,CAACtD,CAAC,CAAC;UAC1BpB;QACF,CAAC;QACD,IAAI,CAAC21C,aAAa,CAACrqB,KAAK,EAAE7sB,CAAC,EAAEgtC,UAAU,EAAE7pB,IAAI,CAAC;MAChD;IACF;EACF;EACAk8C,eAAe,CAACphE,EAAE,GAAG,OAAO;EAC5BohE,eAAe,CAACz6C,QAAQ,GAAG;IACzB+uB,kBAAkB,EAAE,MAAM;IAC1BuC,eAAe,EAAE,OAAO;IACxBjzB,SAAS,EAAE,GAAG;IACda,QAAQ,EAAE,IAAI;IACdxB,QAAQ,EAAE;MACR4L,IAAI,EAAE;QACJzB,IAAI,EAAE;MACR;IACF;EACF,CAAC;EACD4yC,eAAe,CAAC99C,SAAS,GAAG;IAC1BqH,WAAW,EAAE,CAAC;IACd/E,MAAM,EAAE;MACN9R,CAAC,EAAE;QACDzT,IAAI,EAAE;MACR;IACF;EACF,CAAC;EAED,MAAMkhE,iBAAiB,SAASluB,iBAAiB,CAAC;IAChD1L,MAAMA,CAACziB,IAAI,EAAE;MACX,MAAM7W,IAAI,GAAG,IAAI,CAACyzB,WAAW;MAC7B,MAAM;QAAC/V,IAAI,EAAEzd,MAAM,GAAG;MAAE,CAAC,GAAGD,IAAI;MAChC,MAAME,kBAAkB,GAAG,IAAI,CAAC8B,KAAK,CAACuoC,mBAAmB;MACzD,IAAI;QAAC7uC,KAAK;QAAE0E;MAAK,CAAC,GAAGL,gCAAgC,CAACC,IAAI,EAAEC,MAAM,EAAEC,kBAAkB,CAAC;MACvF,IAAI,CAACqlC,UAAU,GAAG7pC,KAAK;MACvB,IAAI,CAAC8pC,UAAU,GAAGplC,KAAK;MACvB,IAAIS,mBAAmB,CAACb,IAAI,CAAC,EAAE;QAC7BtE,KAAK,GAAG,CAAC;QACT0E,KAAK,GAAGH,MAAM,CAACpM,MAAM;MACvB;MACA,IAAI,IAAI,CAACoB,OAAO,CAACuiB,QAAQ,EAAE;QACzB,MAAM;UAACse,OAAO,EAAElU,IAAI;UAAE2jC;QAAQ,CAAC,GAAGvlD,IAAI;QACtC4hB,IAAI,CAACsQ,MAAM,GAAG,IAAI,CAAClwB,KAAK;QACxB4f,IAAI,CAACyQ,aAAa,GAAG,IAAI,CAACh+B,KAAK;QAC/ButB,IAAI,CAAC0vC,UAAU,GAAG,CAAC,CAAC/L,QAAQ,CAAC+L,UAAU;QACvC1vC,IAAI,CAAC3hB,MAAM,GAAGA,MAAM;QACpB,MAAMhL,OAAO,GAAG,IAAI,CAACw0C,4BAA4B,CAAC5yB,IAAI,CAAC;QACvD5hB,OAAO,CAACw7B,OAAO,GAAG,IAAI,CAACx7B,OAAO,CAACw7B,OAAO;QACtC,IAAI,CAACma,aAAa,CAAChpB,IAAI,EAAE9rB,SAAS,EAAE;UAClCy7D,QAAQ,EAAE,CAACrxD,kBAAkB;UAC7BjL;QACF,CAAC,EAAE4hB,IAAI,CAAC;MACV;MACA,IAAI,CAAC40B,cAAc,CAACxrC,MAAM,EAAEvE,KAAK,EAAE0E,KAAK,EAAEyW,IAAI,CAAC;IACjD;IACAkvB,WAAWA,CAAA,EAAG;MACZ,MAAM;QAACvuB;MAAQ,CAAC,GAAG,IAAI,CAACviB,OAAO;MAC/B,IAAI,CAAC,IAAI,CAACoyC,kBAAkB,IAAI7vB,QAAQ,EAAE;QACxC,IAAI,CAAC6vB,kBAAkB,GAAGqW,QAAQ,CAACb,UAAU,CAAC,MAAM,CAAC;MACvD;MACA,KAAK,CAAC9W,WAAW,CAAC,CAAC;IACrB;IACA0F,cAAcA,CAACxrC,MAAM,EAAEvE,KAAK,EAAE0E,KAAK,EAAEyW,IAAI,EAAE;MACzC,MAAMowB,KAAK,GAAGpwB,IAAI,KAAK,OAAO;MAC9B,MAAM;QAACvW,MAAM;QAAEijC,MAAM;QAAEwB,QAAQ;QAAEwgB;MAAQ,CAAC,GAAG,IAAI,CAAC9xB,WAAW;MAC7D,MAAMgX,SAAS,GAAG,IAAI,CAACf,yBAAyB,CAAChuC,KAAK,EAAEmb,IAAI,CAAC;MAC7D,MAAMyzB,aAAa,GAAG,IAAI,CAACF,gBAAgB,CAACK,SAAS,CAAC;MACtD,MAAMJ,cAAc,GAAG,IAAI,CAACA,cAAc,CAACxzB,IAAI,EAAEyzB,aAAa,CAAC;MAC/D,MAAM1G,KAAK,GAAGtjC,MAAM,CAACE,IAAI;MACzB,MAAMqjC,KAAK,GAAGN,MAAM,CAAC/iC,IAAI;MACzB,MAAM;QAAC2pB,QAAQ;QAAEsG;MAAO,CAAC,GAAG,IAAI,CAACx7B,OAAO;MACxC,MAAMu8D,YAAY,GAAG/3D,QAAQ,CAAC0wB,QAAQ,CAAC,GAAGA,QAAQ,GAAG33B,MAAM,CAAC2F,iBAAiB;MAC7E,MAAMs5D,YAAY,GAAG,IAAI,CAACzvD,KAAK,CAACuoC,mBAAmB,IAAItD,KAAK,IAAIpwB,IAAI,KAAK,MAAM;MAC/E,IAAI66C,UAAU,GAAGh2D,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC+sC,SAAS,CAAC/sC,KAAK,GAAG,CAAC,CAAC;MACvD,KAAK,IAAIhI,CAAC,GAAGgI,KAAK,EAAEhI,CAAC,GAAGgI,KAAK,GAAG0E,KAAK,EAAE,EAAE1M,CAAC,EAAE;QAC1C,MAAM6sB,KAAK,GAAGtgB,MAAM,CAACvM,CAAC,CAAC;QACvB,MAAM6zB,MAAM,GAAG,IAAI,CAACkhB,SAAS,CAAC/0C,CAAC,CAAC;QAChC,MAAMgtC,UAAU,GAAG+wB,YAAY,GAAGlxC,KAAK,GAAG,CAAC,CAAC;QAC5C,MAAMoxC,QAAQ,GAAG//D,aAAa,CAAC21B,MAAM,CAACsc,KAAK,CAAC,CAAC;QAC7C,MAAMva,MAAM,GAAGoX,UAAU,CAACkD,KAAK,CAAC,GAAGtjC,MAAM,CAACM,gBAAgB,CAAC2mB,MAAM,CAACqc,KAAK,CAAC,EAAElwC,CAAC,CAAC;QAC5E,MAAM61B,MAAM,GAAGmX,UAAU,CAACmD,KAAK,CAAC,GAAGoD,KAAK,IAAI0qB,QAAQ,GAAGpuB,MAAM,CAACwU,YAAY,CAAC,CAAC,GAAGxU,MAAM,CAAC3iC,gBAAgB,CAACmkC,QAAQ,GAAG,IAAI,CAACzC,UAAU,CAACiB,MAAM,EAAEhc,MAAM,EAAEwd,QAAQ,CAAC,GAAGxd,MAAM,CAACsc,KAAK,CAAC,EAAEnwC,CAAC,CAAC;QAC/KgtC,UAAU,CAAC/Y,IAAI,GAAGhuB,KAAK,CAAC2vB,MAAM,CAAC,IAAI3vB,KAAK,CAAC4vB,MAAM,CAAC,IAAIooC,QAAQ;QAC5DjxB,UAAU,CAAC58B,IAAI,GAAGpQ,CAAC,GAAG,CAAC,IAAKqE,IAAI,CAAC8B,GAAG,CAAC0tB,MAAM,CAACqc,KAAK,CAAC,GAAG8tB,UAAU,CAAC9tB,KAAK,CAAC,CAAC,GAAI4tB,YAAY;QACvF,IAAI/gC,OAAO,EAAE;UACXiQ,UAAU,CAACnZ,MAAM,GAAGA,MAAM;UAC1BmZ,UAAU,CAAC4D,GAAG,GAAGihB,QAAQ,CAAC7nC,IAAI,CAAChqB,CAAC,CAAC;QACnC;QACA,IAAI22C,cAAc,EAAE;UAClB3J,UAAU,CAACzrC,OAAO,GAAGq1C,aAAa,IAAI,IAAI,CAACZ,yBAAyB,CAACh2C,CAAC,EAAE6sB,KAAK,CAACwf,MAAM,GAAG,QAAQ,GAAGlpB,IAAI,CAAC;QACzG;QACA,IAAI,CAAC46C,YAAY,EAAE;UACjB,IAAI,CAAC7mB,aAAa,CAACrqB,KAAK,EAAE7sB,CAAC,EAAEgtC,UAAU,EAAE7pB,IAAI,CAAC;QAChD;QACA66C,UAAU,GAAGnqC,MAAM;MACrB;MACA,IAAI,CAACojB,mBAAmB,CAACL,aAAa,EAAEzzB,IAAI,EAAE4zB,SAAS,CAAC;IAC1D;IACArB,cAAcA,CAAA,EAAG;MACf,MAAMppC,IAAI,GAAG,IAAI,CAACyzB,WAAW;MAC7B,MAAM/V,IAAI,GAAG1d,IAAI,CAAC0d,IAAI,IAAI,EAAE;MAC5B,IAAI,CAAC,IAAI,CAACzoB,OAAO,CAACuiB,QAAQ,EAAE;QAC1B,IAAIpd,GAAG,GAAG,CAAC;QACX,KAAK,IAAI1G,CAAC,GAAGgqB,IAAI,CAAC7pB,MAAM,GAAG,CAAC,EAAEH,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;UACzC0G,GAAG,GAAGrC,IAAI,CAACqC,GAAG,CAACA,GAAG,EAAEsjB,IAAI,CAAChqB,CAAC,CAAC,CAAC+D,IAAI,CAAC,IAAI,CAACiyC,yBAAyB,CAACh2C,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAC1E;QACA,OAAO0G,GAAG,GAAG,CAAC,IAAIA,GAAG;MACvB;MACA,MAAM07B,OAAO,GAAG91B,IAAI,CAAC81B,OAAO;MAC5B,MAAM87B,MAAM,GAAG97B,OAAO,CAAC7gC,OAAO,IAAI6gC,OAAO,CAAC7gC,OAAO,CAACmrB,WAAW,IAAI,CAAC;MAClE,IAAI,CAAC1C,IAAI,CAAC7pB,MAAM,EAAE;QAChB,OAAO+9D,MAAM;MACf;MACA,MAAM9pC,UAAU,GAAGpK,IAAI,CAAC,CAAC,CAAC,CAACjmB,IAAI,CAAC,IAAI,CAACiyC,yBAAyB,CAAC,CAAC,CAAC,CAAC;MAClE,MAAMmoB,SAAS,GAAGn0C,IAAI,CAACA,IAAI,CAAC7pB,MAAM,GAAG,CAAC,CAAC,CAAC4D,IAAI,CAAC,IAAI,CAACiyC,yBAAyB,CAAChsB,IAAI,CAAC7pB,MAAM,GAAG,CAAC,CAAC,CAAC;MAC7F,OAAOkE,IAAI,CAACqC,GAAG,CAACw3D,MAAM,EAAE9pC,UAAU,EAAE+pC,SAAS,CAAC,GAAG,CAAC;IACpD;EACF;EACAqB,iBAAiB,CAACvhE,EAAE,GAAG,SAAS;EAChCuhE,iBAAiB,CAAC56C,QAAQ,GAAG;IAC3B+uB,kBAAkB,EAAE,KAAK;IACzBuC,eAAe,EAAE,OAAO;IACxBpyB,QAAQ,EAAE,KAAK;IACf2I,IAAI,EAAE;EACR,CAAC;EACD+yC,iBAAiB,CAACj+C,SAAS,GAAG;IAC5B2B,WAAW,EAAE;MACXC,IAAI,EAAE;IACR,CAAC;IACDO,OAAO,EAAE;MACP62C,OAAO,EAAE;QACP9rD,SAAS,EAAE;UACT2rC,KAAKA,CAAA,EAAG;YACN,OAAO,EAAE;UACX,CAAC;UACDxE,KAAKA,CAAC5xC,IAAI,EAAE;YACV,OAAO,GAAG,GAAGA,IAAI,CAAC4xC,KAAK,GAAG,IAAI,GAAG5xC,IAAI,CAAC05D,cAAc,GAAG,GAAG;UAC5D;QACF;MACF;IACF,CAAC;IACD75C,MAAM,EAAE;MACNphB,CAAC,EAAE;QACDnE,IAAI,EAAE;MACR,CAAC;MACDqE,CAAC,EAAE;QACDrE,IAAI,EAAE;MACR;IACF;EACF,CAAC;EAED,IAAIqqD,WAAW,GAAG,aAAapqD,MAAM,CAACkhC,MAAM,CAAC;IAC7CC,SAAS,EAAE,IAAI;IACfm5B,aAAa,EAAEA,aAAa;IAC5ByB,gBAAgB,EAAEA,gBAAgB;IAClCiB,kBAAkB,EAAEA,kBAAkB;IACtCoC,cAAc,EAAEA,cAAc;IAC9BU,mBAAmB,EAAEA,mBAAmB;IACxCe,aAAa,EAAEA,aAAa;IAC5BC,eAAe,EAAEA,eAAe;IAChCG,iBAAiB,EAAEA;EACnB,CAAC,CAAC;EAEF,SAASC,OAAOA,CAAC38C,GAAG,EAAE+C,OAAO,EAAEyb,QAAQ,EAAE;IACvC,MAAM;MAACD,UAAU;MAAEq+B,WAAW;MAAEj9D,CAAC;MAAEE,CAAC;MAAE84D,WAAW;MAAED;IAAW,CAAC,GAAG31C,OAAO;IACzE,IAAI85C,WAAW,GAAGD,WAAW,GAAGjE,WAAW;IAC3C34C,GAAG,CAACkJ,SAAS,CAAC,CAAC;IACflJ,GAAG,CAACoJ,GAAG,CAACzpB,CAAC,EAAEE,CAAC,EAAE84D,WAAW,EAAEp6B,UAAU,GAAGs+B,WAAW,EAAEr+B,QAAQ,GAAGq+B,WAAW,CAAC;IAC5E,IAAInE,WAAW,GAAGkE,WAAW,EAAE;MAC7BC,WAAW,GAAGD,WAAW,GAAGlE,WAAW;MACvC14C,GAAG,CAACoJ,GAAG,CAACzpB,CAAC,EAAEE,CAAC,EAAE64D,WAAW,EAAEl6B,QAAQ,GAAGq+B,WAAW,EAAEt+B,UAAU,GAAGs+B,WAAW,EAAE,IAAI,CAAC;IACpF,CAAC,MAAM;MACL78C,GAAG,CAACoJ,GAAG,CAACzpB,CAAC,EAAEE,CAAC,EAAE+8D,WAAW,EAAEp+B,QAAQ,GAAG38B,OAAO,EAAE08B,UAAU,GAAG18B,OAAO,CAAC;IACtE;IACAme,GAAG,CAACqJ,SAAS,CAAC,CAAC;IACfrJ,GAAG,CAACmK,IAAI,CAAC,CAAC;EACZ;EACA,SAAS2yC,eAAeA,CAACzhE,KAAK,EAAE;IAC9B,OAAOm8B,iBAAiB,CAACn8B,KAAK,EAAE,CAAC,YAAY,EAAE,UAAU,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC;EACvF;EACA,SAAS0hE,mBAAmBA,CAAC3zC,GAAG,EAAEsvC,WAAW,EAAEC,WAAW,EAAEqE,UAAU,EAAE;IACtE,MAAMp9D,CAAC,GAAGk9D,eAAe,CAAC1zC,GAAG,CAAC3qB,OAAO,CAACw+D,YAAY,CAAC;IACnD,MAAMC,aAAa,GAAG,CAACvE,WAAW,GAAGD,WAAW,IAAI,CAAC;IACrD,MAAMyE,UAAU,GAAG57D,IAAI,CAACoC,GAAG,CAACu5D,aAAa,EAAEF,UAAU,GAAGtE,WAAW,GAAG,CAAC,CAAC;IACxE,MAAM0E,iBAAiB,GAAIr/C,GAAG,IAAK;MACjC,MAAMs/C,aAAa,GAAG,CAAC1E,WAAW,GAAGp3D,IAAI,CAACoC,GAAG,CAACu5D,aAAa,EAAEn/C,GAAG,CAAC,IAAIi/C,UAAU,GAAG,CAAC;MACnF,OAAOt3D,WAAW,CAACqY,GAAG,EAAE,CAAC,EAAExc,IAAI,CAACoC,GAAG,CAACu5D,aAAa,EAAEG,aAAa,CAAC,CAAC;IACpE,CAAC;IACD,OAAO;MACLC,UAAU,EAAEF,iBAAiB,CAACx9D,CAAC,CAAC09D,UAAU,CAAC;MAC3CC,QAAQ,EAAEH,iBAAiB,CAACx9D,CAAC,CAAC29D,QAAQ,CAAC;MACvCC,UAAU,EAAE93D,WAAW,CAAC9F,CAAC,CAAC49D,UAAU,EAAE,CAAC,EAAEL,UAAU,CAAC;MACpDM,QAAQ,EAAE/3D,WAAW,CAAC9F,CAAC,CAAC69D,QAAQ,EAAE,CAAC,EAAEN,UAAU;IACjD,CAAC;EACH;EACA,SAASO,UAAUA,CAACzuD,CAAC,EAAE0uD,KAAK,EAAEh+D,CAAC,EAAEE,CAAC,EAAE;IAClC,OAAO;MACLF,CAAC,EAAEA,CAAC,GAAGsP,CAAC,GAAG1N,IAAI,CAACioB,GAAG,CAACm0C,KAAK,CAAC;MAC1B99D,CAAC,EAAEA,CAAC,GAAGoP,CAAC,GAAG1N,IAAI,CAACgoB,GAAG,CAACo0C,KAAK;IAC3B,CAAC;EACH;EACA,SAASC,OAAOA,CAAC59C,GAAG,EAAE+C,OAAO,EAAE+zB,MAAM,EAAEkC,OAAO,EAAE7zC,GAAG,EAAEi3D,QAAQ,EAAE;IAC7D,MAAM;MAACz8D,CAAC;MAAEE,CAAC;MAAE0+B,UAAU,EAAEr5B,KAAK;MAAE03D,WAAW;MAAElE,WAAW,EAAEmF;IAAM,CAAC,GAAG96C,OAAO;IAC3E,MAAM41C,WAAW,GAAGp3D,IAAI,CAACqC,GAAG,CAACmf,OAAO,CAAC41C,WAAW,GAAG3f,OAAO,GAAGlC,MAAM,GAAG8lB,WAAW,EAAE,CAAC,CAAC;IACrF,MAAMlE,WAAW,GAAGmF,MAAM,GAAG,CAAC,GAAGA,MAAM,GAAG7kB,OAAO,GAAGlC,MAAM,GAAG8lB,WAAW,GAAG,CAAC;IAC5E,IAAIkB,aAAa,GAAG,CAAC;IACrB,MAAMzuD,KAAK,GAAGlK,GAAG,GAAGD,KAAK;IACzB,IAAI8zC,OAAO,EAAE;MACX,MAAM+kB,oBAAoB,GAAGF,MAAM,GAAG,CAAC,GAAGA,MAAM,GAAG7kB,OAAO,GAAG,CAAC;MAC9D,MAAMglB,oBAAoB,GAAGrF,WAAW,GAAG,CAAC,GAAGA,WAAW,GAAG3f,OAAO,GAAG,CAAC;MACxE,MAAMilB,kBAAkB,GAAG,CAACF,oBAAoB,GAAGC,oBAAoB,IAAI,CAAC;MAC5E,MAAME,aAAa,GAAGD,kBAAkB,KAAK,CAAC,GAAI5uD,KAAK,GAAG4uD,kBAAkB,IAAKA,kBAAkB,GAAGjlB,OAAO,CAAC,GAAG3pC,KAAK;MACtHyuD,aAAa,GAAG,CAACzuD,KAAK,GAAG6uD,aAAa,IAAI,CAAC;IAC7C;IACA,MAAMC,IAAI,GAAG58D,IAAI,CAACqC,GAAG,CAAC,KAAK,EAAEyL,KAAK,GAAGspD,WAAW,GAAG7hB,MAAM,GAAGx1C,EAAE,CAAC,GAAGq3D,WAAW;IAC7E,MAAMyF,WAAW,GAAG,CAAC/uD,KAAK,GAAG8uD,IAAI,IAAI,CAAC;IACtC,MAAM5/B,UAAU,GAAGr5B,KAAK,GAAGk5D,WAAW,GAAGN,aAAa;IACtD,MAAMt/B,QAAQ,GAAGr5B,GAAG,GAAGi5D,WAAW,GAAGN,aAAa;IAClD,MAAM;MAACR,UAAU;MAAEC,QAAQ;MAAEC,UAAU;MAAEC;IAAQ,CAAC,GAAGV,mBAAmB,CAACh6C,OAAO,EAAE21C,WAAW,EAAEC,WAAW,EAAEn6B,QAAQ,GAAGD,UAAU,CAAC;IAClI,MAAM8/B,wBAAwB,GAAG1F,WAAW,GAAG2E,UAAU;IACzD,MAAMgB,sBAAsB,GAAG3F,WAAW,GAAG4E,QAAQ;IACrD,MAAMgB,uBAAuB,GAAGhgC,UAAU,GAAG++B,UAAU,GAAGe,wBAAwB;IAClF,MAAMG,qBAAqB,GAAGhgC,QAAQ,GAAG++B,QAAQ,GAAGe,sBAAsB;IAC1E,MAAMG,wBAAwB,GAAG/F,WAAW,GAAG8E,UAAU;IACzD,MAAMkB,sBAAsB,GAAGhG,WAAW,GAAG+E,QAAQ;IACrD,MAAMkB,uBAAuB,GAAGpgC,UAAU,GAAGi/B,UAAU,GAAGiB,wBAAwB;IAClF,MAAMG,qBAAqB,GAAGpgC,QAAQ,GAAGi/B,QAAQ,GAAGiB,sBAAsB;IAC1E1+C,GAAG,CAACkJ,SAAS,CAAC,CAAC;IACf,IAAIkzC,QAAQ,EAAE;MACZp8C,GAAG,CAACoJ,GAAG,CAACzpB,CAAC,EAAEE,CAAC,EAAE84D,WAAW,EAAE4F,uBAAuB,EAAEC,qBAAqB,CAAC;MAC1E,IAAIjB,QAAQ,GAAG,CAAC,EAAE;QAChB,MAAMsB,OAAO,GAAGnB,UAAU,CAACY,sBAAsB,EAAEE,qBAAqB,EAAE7+D,CAAC,EAAEE,CAAC,CAAC;QAC/EmgB,GAAG,CAACoJ,GAAG,CAACy1C,OAAO,CAACl/D,CAAC,EAAEk/D,OAAO,CAACh/D,CAAC,EAAE09D,QAAQ,EAAEiB,qBAAqB,EAAEhgC,QAAQ,GAAG38B,OAAO,CAAC;MACpF;MACA,MAAMi9D,EAAE,GAAGpB,UAAU,CAACgB,sBAAsB,EAAElgC,QAAQ,EAAE7+B,CAAC,EAAEE,CAAC,CAAC;MAC7DmgB,GAAG,CAACyJ,MAAM,CAACq1C,EAAE,CAACn/D,CAAC,EAAEm/D,EAAE,CAACj/D,CAAC,CAAC;MACtB,IAAI49D,QAAQ,GAAG,CAAC,EAAE;QAChB,MAAMoB,OAAO,GAAGnB,UAAU,CAACgB,sBAAsB,EAAEE,qBAAqB,EAAEj/D,CAAC,EAAEE,CAAC,CAAC;QAC/EmgB,GAAG,CAACoJ,GAAG,CAACy1C,OAAO,CAACl/D,CAAC,EAAEk/D,OAAO,CAACh/D,CAAC,EAAE49D,QAAQ,EAAEj/B,QAAQ,GAAG38B,OAAO,EAAE+8D,qBAAqB,GAAGr9D,IAAI,CAACD,EAAE,CAAC;MAC9F;MACA0e,GAAG,CAACoJ,GAAG,CAACzpB,CAAC,EAAEE,CAAC,EAAE64D,WAAW,EAAEl6B,QAAQ,GAAIi/B,QAAQ,GAAG/E,WAAY,EAAEn6B,UAAU,GAAIi/B,UAAU,GAAG9E,WAAY,EAAE,IAAI,CAAC;MAC9G,IAAI8E,UAAU,GAAG,CAAC,EAAE;QAClB,MAAMqB,OAAO,GAAGnB,UAAU,CAACe,wBAAwB,EAAEE,uBAAuB,EAAEh/D,CAAC,EAAEE,CAAC,CAAC;QACnFmgB,GAAG,CAACoJ,GAAG,CAACy1C,OAAO,CAACl/D,CAAC,EAAEk/D,OAAO,CAACh/D,CAAC,EAAE29D,UAAU,EAAEmB,uBAAuB,GAAGp9D,IAAI,CAACD,EAAE,EAAEi9B,UAAU,GAAG18B,OAAO,CAAC;MACpG;MACA,MAAMk9D,EAAE,GAAGrB,UAAU,CAACW,wBAAwB,EAAE9/B,UAAU,EAAE5+B,CAAC,EAAEE,CAAC,CAAC;MACjEmgB,GAAG,CAACyJ,MAAM,CAACs1C,EAAE,CAACp/D,CAAC,EAAEo/D,EAAE,CAACl/D,CAAC,CAAC;MACtB,IAAIy9D,UAAU,GAAG,CAAC,EAAE;QAClB,MAAMuB,OAAO,GAAGnB,UAAU,CAACW,wBAAwB,EAAEE,uBAAuB,EAAE5+D,CAAC,EAAEE,CAAC,CAAC;QACnFmgB,GAAG,CAACoJ,GAAG,CAACy1C,OAAO,CAACl/D,CAAC,EAAEk/D,OAAO,CAACh/D,CAAC,EAAEy9D,UAAU,EAAE/+B,UAAU,GAAG18B,OAAO,EAAE08D,uBAAuB,CAAC;MAC1F;IACF,CAAC,MAAM;MACLv+C,GAAG,CAACsJ,MAAM,CAAC3pB,CAAC,EAAEE,CAAC,CAAC;MAChB,MAAMm/D,WAAW,GAAGz9D,IAAI,CAACioB,GAAG,CAAC+0C,uBAAuB,CAAC,GAAG5F,WAAW,GAAGh5D,CAAC;MACvE,MAAMs/D,WAAW,GAAG19D,IAAI,CAACgoB,GAAG,CAACg1C,uBAAuB,CAAC,GAAG5F,WAAW,GAAG94D,CAAC;MACvEmgB,GAAG,CAACyJ,MAAM,CAACu1C,WAAW,EAAEC,WAAW,CAAC;MACpC,MAAMC,SAAS,GAAG39D,IAAI,CAACioB,GAAG,CAACg1C,qBAAqB,CAAC,GAAG7F,WAAW,GAAGh5D,CAAC;MACnE,MAAMw/D,SAAS,GAAG59D,IAAI,CAACgoB,GAAG,CAACi1C,qBAAqB,CAAC,GAAG7F,WAAW,GAAG94D,CAAC;MACnEmgB,GAAG,CAACyJ,MAAM,CAACy1C,SAAS,EAAEC,SAAS,CAAC;IAClC;IACAn/C,GAAG,CAACqJ,SAAS,CAAC,CAAC;EACjB;EACA,SAAS+1C,OAAOA,CAACp/C,GAAG,EAAE+C,OAAO,EAAE+zB,MAAM,EAAEkC,OAAO,EAAEojB,QAAQ,EAAE;IACxD,MAAM;MAACiD,WAAW;MAAE9gC,UAAU;MAAEo5B;IAAa,CAAC,GAAG50C,OAAO;IACxD,IAAIyb,QAAQ,GAAGzb,OAAO,CAACyb,QAAQ;IAC/B,IAAI6gC,WAAW,EAAE;MACfzB,OAAO,CAAC59C,GAAG,EAAE+C,OAAO,EAAE+zB,MAAM,EAAEkC,OAAO,EAAEza,UAAU,GAAG/8B,GAAG,EAAE46D,QAAQ,CAAC;MAClE,KAAK,IAAIl/D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmiE,WAAW,EAAE,EAAEniE,CAAC,EAAE;QACpC8iB,GAAG,CAAC2J,IAAI,CAAC,CAAC;MACZ;MACA,IAAI,CAACxmB,KAAK,CAACw0D,aAAa,CAAC,EAAE;QACzBn5B,QAAQ,GAAGD,UAAU,GAAGo5B,aAAa,GAAGn2D,GAAG;QAC3C,IAAIm2D,aAAa,GAAGn2D,GAAG,KAAK,CAAC,EAAE;UAC7Bg9B,QAAQ,IAAIh9B,GAAG;QACjB;MACF;IACF;IACAo8D,OAAO,CAAC59C,GAAG,EAAE+C,OAAO,EAAE+zB,MAAM,EAAEkC,OAAO,EAAExa,QAAQ,EAAE49B,QAAQ,CAAC;IAC1Dp8C,GAAG,CAAC2J,IAAI,CAAC,CAAC;IACV,OAAO6U,QAAQ;EACjB;EACA,SAAS8gC,qBAAqBA,CAACt/C,GAAG,EAAE+C,OAAO,EAAEw8C,KAAK,EAAE;IAClD,MAAM;MAAC5/D,CAAC;MAAEE,CAAC;MAAE0+B,UAAU;MAAEq+B,WAAW;MAAEyC;IAAW,CAAC,GAAGt8C,OAAO;IAC5D,MAAM41C,WAAW,GAAGp3D,IAAI,CAACqC,GAAG,CAACmf,OAAO,CAAC41C,WAAW,GAAGiE,WAAW,EAAE,CAAC,CAAC;IAClE,MAAMlE,WAAW,GAAG31C,OAAO,CAAC21C,WAAW,GAAGkE,WAAW;IACrD,IAAI1/D,CAAC;IACL,IAAIqiE,KAAK,EAAE;MACT5C,OAAO,CAAC38C,GAAG,EAAE+C,OAAO,EAAEwb,UAAU,GAAG/8B,GAAG,CAAC;IACzC;IACAwe,GAAG,CAACkJ,SAAS,CAAC,CAAC;IACflJ,GAAG,CAACoJ,GAAG,CAACzpB,CAAC,EAAEE,CAAC,EAAE64D,WAAW,EAAEn6B,UAAU,GAAG/8B,GAAG,EAAE+8B,UAAU,EAAE,IAAI,CAAC;IAC9D,KAAKrhC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmiE,WAAW,EAAE,EAAEniE,CAAC,EAAE;MAChC8iB,GAAG,CAAC6J,MAAM,CAAC,CAAC;IACd;IACA7J,GAAG,CAACkJ,SAAS,CAAC,CAAC;IACflJ,GAAG,CAACoJ,GAAG,CAACzpB,CAAC,EAAEE,CAAC,EAAE84D,WAAW,EAAEp6B,UAAU,EAAEA,UAAU,GAAG/8B,GAAG,CAAC;IACxD,KAAKtE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmiE,WAAW,EAAE,EAAEniE,CAAC,EAAE;MAChC8iB,GAAG,CAAC6J,MAAM,CAAC,CAAC;IACd;EACF;EACA,SAASmtB,UAAUA,CAACh3B,GAAG,EAAE+C,OAAO,EAAE+zB,MAAM,EAAEkC,OAAO,EAAExa,QAAQ,EAAE49B,QAAQ,EAAE;IACrE,MAAM;MAAC39D;IAAO,CAAC,GAAGskB,OAAO;IACzB,MAAM;MAAC6G,WAAW;MAAE6S;IAAe,CAAC,GAAGh+B,OAAO;IAC9C,MAAM8gE,KAAK,GAAG9gE,OAAO,CAAC07D,WAAW,KAAK,OAAO;IAC7C,IAAI,CAACvwC,WAAW,EAAE;MAChB;IACF;IACA,IAAI21C,KAAK,EAAE;MACTv/C,GAAG,CAACuL,SAAS,GAAG3B,WAAW,GAAG,CAAC;MAC/B5J,GAAG,CAACw/C,QAAQ,GAAG/iC,eAAe,IAAI,OAAO;IAC3C,CAAC,MAAM;MACLzc,GAAG,CAACuL,SAAS,GAAG3B,WAAW;MAC3B5J,GAAG,CAACw/C,QAAQ,GAAG/iC,eAAe,IAAI,OAAO;IAC3C;IACA,IAAI1Z,OAAO,CAACs8C,WAAW,EAAE;MACvBC,qBAAqB,CAACt/C,GAAG,EAAE+C,OAAO,EAAEw8C,KAAK,CAAC;IAC5C;IACA,IAAIA,KAAK,EAAE;MACT5C,OAAO,CAAC38C,GAAG,EAAE+C,OAAO,EAAEyb,QAAQ,CAAC;IACjC;IACAo/B,OAAO,CAAC59C,GAAG,EAAE+C,OAAO,EAAE+zB,MAAM,EAAEkC,OAAO,EAAExa,QAAQ,EAAE49B,QAAQ,CAAC;IAC1Dp8C,GAAG,CAAC6J,MAAM,CAAC,CAAC;EACd;EACA,MAAM41C,UAAU,SAAS7pB,OAAO,CAAC;IAC/B3qC,WAAWA,CAAC29B,GAAG,EAAE;MACf,KAAK,CAAC,CAAC;MACP,IAAI,CAACnqC,OAAO,GAAGa,SAAS;MACxB,IAAI,CAACq4D,aAAa,GAAGr4D,SAAS;MAC9B,IAAI,CAACi/B,UAAU,GAAGj/B,SAAS;MAC3B,IAAI,CAACk/B,QAAQ,GAAGl/B,SAAS;MACzB,IAAI,CAACo5D,WAAW,GAAGp5D,SAAS;MAC5B,IAAI,CAACq5D,WAAW,GAAGr5D,SAAS;MAC5B,IAAI,CAACs9D,WAAW,GAAG,CAAC;MACpB,IAAI,CAACyC,WAAW,GAAG,CAAC;MACpB,IAAIz2B,GAAG,EAAE;QACPntC,MAAM,CAACsP,MAAM,CAAC,IAAI,EAAE69B,GAAG,CAAC;MAC1B;IACF;IACAvK,OAAOA,CAACqhC,MAAM,EAAEC,MAAM,EAAE1hC,gBAAgB,EAAE;MACxC,MAAMlU,KAAK,GAAG,IAAI,CAAC0U,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAER,gBAAgB,CAAC;MACzD,MAAM;QAACx5B,KAAK;QAAEE;MAAQ,CAAC,GAAGR,iBAAiB,CAAC4lB,KAAK,EAAE;QAACpqB,CAAC,EAAE+/D,MAAM;QAAE7/D,CAAC,EAAE8/D;MAAM,CAAC,CAAC;MAC1E,MAAM;QAACphC,UAAU;QAAEC,QAAQ;QAAEk6B,WAAW;QAAEC,WAAW;QAAEhB;MAAa,CAAC,GAAG,IAAI,CAACl5B,QAAQ,CAAC,CACpF,YAAY,EACZ,UAAU,EACV,aAAa,EACb,aAAa,EACb,eAAe,CAChB,EAAER,gBAAgB,CAAC;MACpB,MAAM2hC,OAAO,GAAG,IAAI,CAACnhE,OAAO,CAACu6C,OAAO,GAAG,CAAC;MACxC,MAAM2gB,cAAc,GAAGv9D,cAAc,CAACu7D,aAAa,EAAEn5B,QAAQ,GAAGD,UAAU,CAAC;MAC3E,MAAMshC,aAAa,GAAGlG,cAAc,IAAIn4D,GAAG,IAAIyD,aAAa,CAACR,KAAK,EAAE85B,UAAU,EAAEC,QAAQ,CAAC;MACzF,MAAMshC,YAAY,GAAGl6D,UAAU,CAACjB,QAAQ,EAAE+zD,WAAW,GAAGkH,OAAO,EAAEjH,WAAW,GAAGiH,OAAO,CAAC;MACvF,OAAQC,aAAa,IAAIC,YAAY;IACvC;IACAhhC,cAAcA,CAACb,gBAAgB,EAAE;MAC/B,MAAM;QAACt+B,CAAC;QAAEE,CAAC;QAAE0+B,UAAU;QAAEC,QAAQ;QAAEk6B,WAAW;QAAEC;MAAW,CAAC,GAAG,IAAI,CAACl6B,QAAQ,CAAC,CAC3E,GAAG,EACH,GAAG,EACH,YAAY,EACZ,UAAU,EACV,aAAa,EACb,aAAa,EACb,eAAe,CAChB,EAAER,gBAAgB,CAAC;MACpB,MAAM;QAAC6Y,MAAM;QAAEkC;MAAO,CAAC,GAAG,IAAI,CAACv6C,OAAO;MACtC,MAAMshE,SAAS,GAAG,CAACxhC,UAAU,GAAGC,QAAQ,IAAI,CAAC;MAC7C,MAAMwhC,UAAU,GAAG,CAACtH,WAAW,GAAGC,WAAW,GAAG3f,OAAO,GAAGlC,MAAM,IAAI,CAAC;MACrE,OAAO;QACLn3C,CAAC,EAAEA,CAAC,GAAG4B,IAAI,CAACioB,GAAG,CAACu2C,SAAS,CAAC,GAAGC,UAAU;QACvCngE,CAAC,EAAEA,CAAC,GAAG0B,IAAI,CAACgoB,GAAG,CAACw2C,SAAS,CAAC,GAAGC;MAC/B,CAAC;IACH;IACAnqB,eAAeA,CAAC5X,gBAAgB,EAAE;MAChC,OAAO,IAAI,CAACa,cAAc,CAACb,gBAAgB,CAAC;IAC9C;IACA3xB,IAAIA,CAAC0T,GAAG,EAAE;MACR,MAAM;QAACvhB,OAAO;QAAEk5D;MAAa,CAAC,GAAG,IAAI;MACrC,MAAM7gB,MAAM,GAAG,CAACr4C,OAAO,CAACq4C,MAAM,IAAI,CAAC,IAAI,CAAC;MACxC,MAAMkC,OAAO,GAAG,CAACv6C,OAAO,CAACu6C,OAAO,IAAI,CAAC,IAAI,CAAC;MAC1C,MAAMojB,QAAQ,GAAG39D,OAAO,CAAC29D,QAAQ;MACjC,IAAI,CAACQ,WAAW,GAAIn+D,OAAO,CAAC07D,WAAW,KAAK,OAAO,GAAI,IAAI,GAAG,CAAC;MAC/D,IAAI,CAACkF,WAAW,GAAG1H,aAAa,GAAGn2D,GAAG,GAAGD,IAAI,CAACkB,KAAK,CAACk1D,aAAa,GAAGn2D,GAAG,CAAC,GAAG,CAAC;MAC5E,IAAIm2D,aAAa,KAAK,CAAC,IAAI,IAAI,CAACe,WAAW,GAAG,CAAC,IAAI,IAAI,CAACC,WAAW,GAAG,CAAC,EAAE;QACvE;MACF;MACA34C,GAAG,CAAC4H,IAAI,CAAC,CAAC;MACV,IAAIq4C,YAAY,GAAG,CAAC;MACpB,IAAInpB,MAAM,EAAE;QACVmpB,YAAY,GAAGnpB,MAAM,GAAG,CAAC;QACzB,MAAMipB,SAAS,GAAG,CAAC,IAAI,CAACxhC,UAAU,GAAG,IAAI,CAACC,QAAQ,IAAI,CAAC;QACvDxe,GAAG,CAACgJ,SAAS,CAACznB,IAAI,CAACioB,GAAG,CAACu2C,SAAS,CAAC,GAAGE,YAAY,EAAE1+D,IAAI,CAACgoB,GAAG,CAACw2C,SAAS,CAAC,GAAGE,YAAY,CAAC;QACrF,IAAI,IAAI,CAACtI,aAAa,IAAIr2D,EAAE,EAAE;UAC5B2+D,YAAY,GAAGnpB,MAAM;QACvB;MACF;MACA92B,GAAG,CAAC4L,SAAS,GAAGntB,OAAO,CAACwgB,eAAe;MACvCe,GAAG,CAACsL,WAAW,GAAG7sB,OAAO,CAACygB,WAAW;MACrC,MAAMsf,QAAQ,GAAG4gC,OAAO,CAACp/C,GAAG,EAAE,IAAI,EAAEigD,YAAY,EAAEjnB,OAAO,EAAEojB,QAAQ,CAAC;MACpEplB,UAAU,CAACh3B,GAAG,EAAE,IAAI,EAAEigD,YAAY,EAAEjnB,OAAO,EAAExa,QAAQ,EAAE49B,QAAQ,CAAC;MAChEp8C,GAAG,CAACgI,OAAO,CAAC,CAAC;IACf;EACF;EACAy3C,UAAU,CAACtkE,EAAE,GAAG,KAAK;EACrBskE,UAAU,CAAC39C,QAAQ,GAAG;IACpBq4C,WAAW,EAAE,QAAQ;IACrBj7C,WAAW,EAAE,MAAM;IACnBud,eAAe,EAAEn9B,SAAS;IAC1B29D,YAAY,EAAE,CAAC;IACfrzC,WAAW,EAAE,CAAC;IACdktB,MAAM,EAAE,CAAC;IACTkC,OAAO,EAAE,CAAC;IACVv0C,KAAK,EAAEnF,SAAS;IAChB88D,QAAQ,EAAE;EACZ,CAAC;EACDqD,UAAU,CAACzpB,aAAa,GAAG;IACzB/2B,eAAe,EAAE;EACnB,CAAC;EAED,SAASihD,QAAQA,CAAClgD,GAAG,EAAEvhB,OAAO,EAAEmhB,KAAK,GAAGnhB,OAAO,EAAE;IAC/CuhB,GAAG,CAACmgD,OAAO,GAAG/jE,cAAc,CAACwjB,KAAK,CAAC0c,cAAc,EAAE79B,OAAO,CAAC69B,cAAc,CAAC;IAC1Etc,GAAG,CAACokC,WAAW,CAAChoD,cAAc,CAACwjB,KAAK,CAAC2c,UAAU,EAAE99B,OAAO,CAAC89B,UAAU,CAAC,CAAC;IACrEvc,GAAG,CAACqkC,cAAc,GAAGjoD,cAAc,CAACwjB,KAAK,CAAC4c,gBAAgB,EAAE/9B,OAAO,CAAC+9B,gBAAgB,CAAC;IACrFxc,GAAG,CAACw/C,QAAQ,GAAGpjE,cAAc,CAACwjB,KAAK,CAAC6c,eAAe,EAAEh+B,OAAO,CAACg+B,eAAe,CAAC;IAC7Ezc,GAAG,CAACuL,SAAS,GAAGnvB,cAAc,CAACwjB,KAAK,CAACgK,WAAW,EAAEnrB,OAAO,CAACmrB,WAAW,CAAC;IACtE5J,GAAG,CAACsL,WAAW,GAAGlvB,cAAc,CAACwjB,KAAK,CAACV,WAAW,EAAEzgB,OAAO,CAACygB,WAAW,CAAC;EAC1E;EACA,SAASuK,MAAMA,CAACzJ,GAAG,EAAE5gB,QAAQ,EAAEnB,MAAM,EAAE;IACrC+hB,GAAG,CAACyJ,MAAM,CAACxrB,MAAM,CAAC0B,CAAC,EAAE1B,MAAM,CAAC4B,CAAC,CAAC;EAChC;EACA,SAASugE,aAAaA,CAAC3hE,OAAO,EAAE;IAC9B,IAAIA,OAAO,CAAC4hE,OAAO,EAAE;MACnB,OAAOh2C,cAAc;IACvB;IACA,IAAI5rB,OAAO,CAACq1B,OAAO,IAAIr1B,OAAO,CAACm1B,sBAAsB,KAAK,UAAU,EAAE;MACpE,OAAOpJ,cAAc;IACvB;IACA,OAAOf,MAAM;EACf;EACA,SAAS62C,QAAQA,CAAC72D,MAAM,EAAEwwB,OAAO,EAAEyG,MAAM,GAAG,CAAC,CAAC,EAAE;IAC9C,MAAM92B,KAAK,GAAGH,MAAM,CAACpM,MAAM;IAC3B,MAAM;MAAC6H,KAAK,EAAEq7D,WAAW,GAAG,CAAC;MAAEp7D,GAAG,EAAEq7D,SAAS,GAAG52D,KAAK,GAAG;IAAC,CAAC,GAAG82B,MAAM;IACnE,MAAM;MAACx7B,KAAK,EAAEu7D,YAAY;MAAEt7D,GAAG,EAAEu7D;IAAU,CAAC,GAAGzmC,OAAO;IACtD,MAAM/0B,KAAK,GAAG3D,IAAI,CAACqC,GAAG,CAAC28D,WAAW,EAAEE,YAAY,CAAC;IACjD,MAAMt7D,GAAG,GAAG5D,IAAI,CAACoC,GAAG,CAAC68D,SAAS,EAAEE,UAAU,CAAC;IAC3C,MAAMC,OAAO,GAAGJ,WAAW,GAAGE,YAAY,IAAID,SAAS,GAAGC,YAAY,IAAIF,WAAW,GAAGG,UAAU,IAAIF,SAAS,GAAGE,UAAU;IAC5H,OAAO;MACL92D,KAAK;MACL1E,KAAK;MACLuuB,IAAI,EAAEwG,OAAO,CAACxG,IAAI;MAClBh2B,IAAI,EAAE0H,GAAG,GAAGD,KAAK,IAAI,CAACy7D,OAAO,GAAG/2D,KAAK,GAAGzE,GAAG,GAAGD,KAAK,GAAGC,GAAG,GAAGD;IAC9D,CAAC;EACH;EACA,SAAS07D,WAAWA,CAAC5gD,GAAG,EAAEoL,IAAI,EAAE6O,OAAO,EAAEyG,MAAM,EAAE;IAC/C,MAAM;MAACj3B,MAAM;MAAEhL;IAAO,CAAC,GAAG2sB,IAAI;IAC9B,MAAM;MAACxhB,KAAK;MAAE1E,KAAK;MAAEuuB,IAAI;MAAEh2B;IAAI,CAAC,GAAG6iE,QAAQ,CAAC72D,MAAM,EAAEwwB,OAAO,EAAEyG,MAAM,CAAC;IACpE,MAAMmgC,UAAU,GAAGT,aAAa,CAAC3hE,OAAO,CAAC;IACzC,IAAI;MAACu2C,IAAI,GAAG,IAAI;MAAE/3C;IAAO,CAAC,GAAGyjC,MAAM,IAAI,CAAC,CAAC;IACzC,IAAIxjC,CAAC,EAAE6sB,KAAK,EAAE8J,IAAI;IAClB,KAAK32B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIO,IAAI,EAAE,EAAEP,CAAC,EAAE;MAC1B6sB,KAAK,GAAGtgB,MAAM,CAAC,CAACvE,KAAK,IAAIjI,OAAO,GAAGQ,IAAI,GAAGP,CAAC,GAAGA,CAAC,CAAC,IAAI0M,KAAK,CAAC;MAC1D,IAAImgB,KAAK,CAACoH,IAAI,EAAE;QACd;MACF,CAAC,MAAM,IAAI6jB,IAAI,EAAE;QACfh1B,GAAG,CAACsJ,MAAM,CAACS,KAAK,CAACpqB,CAAC,EAAEoqB,KAAK,CAAClqB,CAAC,CAAC;QAC5Bm1C,IAAI,GAAG,KAAK;MACd,CAAC,MAAM;QACL6rB,UAAU,CAAC7gD,GAAG,EAAE6T,IAAI,EAAE9J,KAAK,EAAE9sB,OAAO,EAAEwB,OAAO,CAAC4hE,OAAO,CAAC;MACxD;MACAxsC,IAAI,GAAG9J,KAAK;IACd;IACA,IAAI0J,IAAI,EAAE;MACR1J,KAAK,GAAGtgB,MAAM,CAAC,CAACvE,KAAK,IAAIjI,OAAO,GAAGQ,IAAI,GAAG,CAAC,CAAC,IAAImM,KAAK,CAAC;MACtDi3D,UAAU,CAAC7gD,GAAG,EAAE6T,IAAI,EAAE9J,KAAK,EAAE9sB,OAAO,EAAEwB,OAAO,CAAC4hE,OAAO,CAAC;IACxD;IACA,OAAO,CAAC,CAAC5sC,IAAI;EACf;EACA,SAASqtC,eAAeA,CAAC9gD,GAAG,EAAEoL,IAAI,EAAE6O,OAAO,EAAEyG,MAAM,EAAE;IACnD,MAAMj3B,MAAM,GAAG2hB,IAAI,CAAC3hB,MAAM;IAC1B,MAAM;MAACG,KAAK;MAAE1E,KAAK;MAAEzH;IAAI,CAAC,GAAG6iE,QAAQ,CAAC72D,MAAM,EAAEwwB,OAAO,EAAEyG,MAAM,CAAC;IAC9D,MAAM;MAACsU,IAAI,GAAG,IAAI;MAAE/3C;IAAO,CAAC,GAAGyjC,MAAM,IAAI,CAAC,CAAC;IAC3C,IAAIqgC,IAAI,GAAG,CAAC;IACZ,IAAIC,MAAM,GAAG,CAAC;IACd,IAAI9jE,CAAC,EAAE6sB,KAAK,EAAEk3C,KAAK,EAAEzI,IAAI,EAAEF,IAAI,EAAE4I,KAAK;IACtC,MAAMC,UAAU,GAAItjE,KAAK,IAAK,CAACqH,KAAK,IAAIjI,OAAO,GAAGQ,IAAI,GAAGI,KAAK,GAAGA,KAAK,CAAC,IAAI+L,KAAK;IAChF,MAAMw3D,KAAK,GAAGA,CAAA,KAAM;MAClB,IAAI5I,IAAI,KAAKF,IAAI,EAAE;QACjBt4C,GAAG,CAACyJ,MAAM,CAACs3C,IAAI,EAAEzI,IAAI,CAAC;QACtBt4C,GAAG,CAACyJ,MAAM,CAACs3C,IAAI,EAAEvI,IAAI,CAAC;QACtBx4C,GAAG,CAACyJ,MAAM,CAACs3C,IAAI,EAAEG,KAAK,CAAC;MACzB;IACF,CAAC;IACD,IAAIlsB,IAAI,EAAE;MACRjrB,KAAK,GAAGtgB,MAAM,CAAC03D,UAAU,CAAC,CAAC,CAAC,CAAC;MAC7BnhD,GAAG,CAACsJ,MAAM,CAACS,KAAK,CAACpqB,CAAC,EAAEoqB,KAAK,CAAClqB,CAAC,CAAC;IAC9B;IACA,KAAK3C,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIO,IAAI,EAAE,EAAEP,CAAC,EAAE;MAC1B6sB,KAAK,GAAGtgB,MAAM,CAAC03D,UAAU,CAACjkE,CAAC,CAAC,CAAC;MAC7B,IAAI6sB,KAAK,CAACoH,IAAI,EAAE;QACd;MACF;MACA,MAAMxxB,CAAC,GAAGoqB,KAAK,CAACpqB,CAAC;MACjB,MAAME,CAAC,GAAGkqB,KAAK,CAAClqB,CAAC;MACjB,MAAMwhE,MAAM,GAAG1hE,CAAC,GAAG,CAAC;MACpB,IAAI0hE,MAAM,KAAKJ,KAAK,EAAE;QACpB,IAAIphE,CAAC,GAAG24D,IAAI,EAAE;UACZA,IAAI,GAAG34D,CAAC;QACV,CAAC,MAAM,IAAIA,CAAC,GAAGy4D,IAAI,EAAE;UACnBA,IAAI,GAAGz4D,CAAC;QACV;QACAkhE,IAAI,GAAG,CAACC,MAAM,GAAGD,IAAI,GAAGphE,CAAC,IAAI,EAAEqhE,MAAM;MACvC,CAAC,MAAM;QACLI,KAAK,CAAC,CAAC;QACPphD,GAAG,CAACyJ,MAAM,CAAC9pB,CAAC,EAAEE,CAAC,CAAC;QAChBohE,KAAK,GAAGI,MAAM;QACdL,MAAM,GAAG,CAAC;QACVxI,IAAI,GAAGF,IAAI,GAAGz4D,CAAC;MACjB;MACAqhE,KAAK,GAAGrhE,CAAC;IACX;IACAuhE,KAAK,CAAC,CAAC;EACT;EACA,SAASE,iBAAiBA,CAACl2C,IAAI,EAAE;IAC/B,MAAMJ,IAAI,GAAGI,IAAI,CAAC3sB,OAAO;IACzB,MAAM89B,UAAU,GAAGvR,IAAI,CAACuR,UAAU,IAAIvR,IAAI,CAACuR,UAAU,CAACl/B,MAAM;IAC5D,MAAMkkE,WAAW,GAAG,CAACn2C,IAAI,CAAC0vC,UAAU,IAAI,CAAC1vC,IAAI,CAACgQ,KAAK,IAAI,CAACpQ,IAAI,CAAC8I,OAAO,IAAI9I,IAAI,CAAC4I,sBAAsB,KAAK,UAAU,IAAI,CAAC5I,IAAI,CAACq1C,OAAO,IAAI,CAAC9jC,UAAU;IAClJ,OAAOglC,WAAW,GAAGT,eAAe,GAAGF,WAAW;EACpD;EACA,SAASY,uBAAuBA,CAAC/iE,OAAO,EAAE;IACxC,IAAIA,OAAO,CAAC4hE,OAAO,EAAE;MACnB,OAAOlqC,qBAAqB;IAC9B;IACA,IAAI13B,OAAO,CAACq1B,OAAO,IAAIr1B,OAAO,CAACm1B,sBAAsB,KAAK,UAAU,EAAE;MACpE,OAAOwC,oBAAoB;IAC7B;IACA,OAAOF,YAAY;EACrB;EACA,SAASurC,mBAAmBA,CAACzhD,GAAG,EAAEoL,IAAI,EAAElmB,KAAK,EAAE0E,KAAK,EAAE;IACpD,IAAI83D,IAAI,GAAGt2C,IAAI,CAACu2C,KAAK;IACrB,IAAI,CAACD,IAAI,EAAE;MACTA,IAAI,GAAGt2C,IAAI,CAACu2C,KAAK,GAAG,IAAIC,MAAM,CAAC,CAAC;MAChC,IAAIx2C,IAAI,CAACs2C,IAAI,CAACA,IAAI,EAAEx8D,KAAK,EAAE0E,KAAK,CAAC,EAAE;QACjC83D,IAAI,CAACr4C,SAAS,CAAC,CAAC;MAClB;IACF;IACA62C,QAAQ,CAAClgD,GAAG,EAAEoL,IAAI,CAAC3sB,OAAO,CAAC;IAC3BuhB,GAAG,CAAC6J,MAAM,CAAC63C,IAAI,CAAC;EAClB;EACA,SAASG,gBAAgBA,CAAC7hD,GAAG,EAAEoL,IAAI,EAAElmB,KAAK,EAAE0E,KAAK,EAAE;IACjD,MAAM;MAACkxB,QAAQ;MAAEr8B;IAAO,CAAC,GAAG2sB,IAAI;IAChC,MAAM02C,aAAa,GAAGR,iBAAiB,CAACl2C,IAAI,CAAC;IAC7C,KAAK,MAAM6O,OAAO,IAAIa,QAAQ,EAAE;MAC9BolC,QAAQ,CAAClgD,GAAG,EAAEvhB,OAAO,EAAEw7B,OAAO,CAACra,KAAK,CAAC;MACrCI,GAAG,CAACkJ,SAAS,CAAC,CAAC;MACf,IAAI44C,aAAa,CAAC9hD,GAAG,EAAEoL,IAAI,EAAE6O,OAAO,EAAE;QAAC/0B,KAAK;QAAEC,GAAG,EAAED,KAAK,GAAG0E,KAAK,GAAG;MAAC,CAAC,CAAC,EAAE;QACtEoW,GAAG,CAACqJ,SAAS,CAAC,CAAC;MACjB;MACArJ,GAAG,CAAC6J,MAAM,CAAC,CAAC;IACd;EACF;EACA,MAAMk4C,SAAS,GAAG,OAAOH,MAAM,KAAK,UAAU;EAC9C,SAASt1D,IAAIA,CAAC0T,GAAG,EAAEoL,IAAI,EAAElmB,KAAK,EAAE0E,KAAK,EAAE;IACrC,IAAIm4D,SAAS,IAAI,CAAC32C,IAAI,CAAC3sB,OAAO,CAACw7B,OAAO,EAAE;MACtCwnC,mBAAmB,CAACzhD,GAAG,EAAEoL,IAAI,EAAElmB,KAAK,EAAE0E,KAAK,CAAC;IAC9C,CAAC,MAAM;MACLi4D,gBAAgB,CAAC7hD,GAAG,EAAEoL,IAAI,EAAElmB,KAAK,EAAE0E,KAAK,CAAC;IAC3C;EACF;EACA,MAAMo4D,WAAW,SAASpsB,OAAO,CAAC;IAChC3qC,WAAWA,CAAC29B,GAAG,EAAE;MACf,KAAK,CAAC,CAAC;MACP,IAAI,CAACmyB,QAAQ,GAAG,IAAI;MACpB,IAAI,CAACt8D,OAAO,GAAGa,SAAS;MACxB,IAAI,CAACo8B,MAAM,GAAGp8B,SAAS;MACvB,IAAI,CAAC87B,KAAK,GAAG97B,SAAS;MACtB,IAAI,CAACi8B,SAAS,GAAGj8B,SAAS;MAC1B,IAAI,CAACqiE,KAAK,GAAGriE,SAAS;MACtB,IAAI,CAAC2iE,OAAO,GAAG3iE,SAAS;MACxB,IAAI,CAAC4iE,SAAS,GAAG5iE,SAAS;MAC1B,IAAI,CAACw7D,UAAU,GAAG,KAAK;MACvB,IAAI,CAACqH,cAAc,GAAG,KAAK;MAC3B,IAAI,CAACtmC,aAAa,GAAGv8B,SAAS;MAC9B,IAAIspC,GAAG,EAAE;QACPntC,MAAM,CAACsP,MAAM,CAAC,IAAI,EAAE69B,GAAG,CAAC;MAC1B;IACF;IACA0yB,mBAAmBA,CAACl9B,SAAS,EAAEje,SAAS,EAAE;MACxC,MAAM1hB,OAAO,GAAG,IAAI,CAACA,OAAO;MAC5B,IAAI,CAACA,OAAO,CAACq1B,OAAO,IAAIr1B,OAAO,CAACm1B,sBAAsB,KAAK,UAAU,KAAK,CAACn1B,OAAO,CAAC4hE,OAAO,IAAI,CAAC,IAAI,CAAC8B,cAAc,EAAE;QAClH,MAAM1uC,IAAI,GAAGh1B,OAAO,CAACk1B,QAAQ,GAAG,IAAI,CAACyH,KAAK,GAAG,IAAI,CAACG,SAAS;QAC3D/H,0BAA0B,CAAC,IAAI,CAACyuC,OAAO,EAAExjE,OAAO,EAAE2/B,SAAS,EAAE3K,IAAI,EAAEtT,SAAS,CAAC;QAC7E,IAAI,CAACgiD,cAAc,GAAG,IAAI;MAC5B;IACF;IACA,IAAI14D,MAAMA,CAACA,MAAM,EAAE;MACjB,IAAI,CAACw4D,OAAO,GAAGx4D,MAAM;MACrB,OAAO,IAAI,CAACy4D,SAAS;MACrB,OAAO,IAAI,CAACP,KAAK;MACjB,IAAI,CAACQ,cAAc,GAAG,KAAK;IAC7B;IACA,IAAI14D,MAAMA,CAAA,EAAG;MACX,OAAO,IAAI,CAACw4D,OAAO;IACrB;IACA,IAAInnC,QAAQA,CAAA,EAAG;MACb,OAAO,IAAI,CAAConC,SAAS,KAAK,IAAI,CAACA,SAAS,GAAGhnC,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAACz8B,OAAO,CAACw7B,OAAO,CAAC,CAAC;IAC1F;IACA4e,KAAKA,CAAA,EAAG;MACN,MAAM/d,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,MAAMrxB,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,OAAOqxB,QAAQ,CAACz9B,MAAM,IAAIoM,MAAM,CAACqxB,QAAQ,CAAC,CAAC,CAAC,CAAC51B,KAAK,CAAC;IACrD;IACAkB,IAAIA,CAAA,EAAG;MACL,MAAM00B,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,MAAMrxB,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,MAAMG,KAAK,GAAGkxB,QAAQ,CAACz9B,MAAM;MAC7B,OAAOuM,KAAK,IAAIH,MAAM,CAACqxB,QAAQ,CAAClxB,KAAK,GAAG,CAAC,CAAC,CAACzE,GAAG,CAAC;IACjD;IACAyY,WAAWA,CAACmM,KAAK,EAAErmB,QAAQ,EAAE;MAC3B,MAAMjF,OAAO,GAAG,IAAI,CAACA,OAAO;MAC5B,MAAMpD,KAAK,GAAG0uB,KAAK,CAACrmB,QAAQ,CAAC;MAC7B,MAAM+F,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,MAAMqxB,QAAQ,GAAGD,cAAc,CAAC,IAAI,EAAE;QAACn3B,QAAQ;QAAEwB,KAAK,EAAE7J,KAAK;QAAE8J,GAAG,EAAE9J;MAAK,CAAC,CAAC;MAC3E,IAAI,CAACy/B,QAAQ,CAACz9B,MAAM,EAAE;QACpB;MACF;MACA,MAAMwF,MAAM,GAAG,EAAE;MACjB,MAAMu/D,YAAY,GAAGZ,uBAAuB,CAAC/iE,OAAO,CAAC;MACrD,IAAIvB,CAAC,EAAEO,IAAI;MACX,KAAKP,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAGq9B,QAAQ,CAACz9B,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;QACjD,MAAM;UAACgI,KAAK;UAAEC;QAAG,CAAC,GAAG21B,QAAQ,CAAC59B,CAAC,CAAC;QAChC,MAAMqT,EAAE,GAAG9G,MAAM,CAACvE,KAAK,CAAC;QACxB,MAAMsL,EAAE,GAAG/G,MAAM,CAACtE,GAAG,CAAC;QACtB,IAAIoL,EAAE,KAAKC,EAAE,EAAE;UACb3N,MAAM,CAACtC,IAAI,CAACgQ,EAAE,CAAC;UACf;QACF;QACA,MAAMkM,CAAC,GAAGlb,IAAI,CAAC8B,GAAG,CAAC,CAAChI,KAAK,GAAGkV,EAAE,CAAC7M,QAAQ,CAAC,KAAK8M,EAAE,CAAC9M,QAAQ,CAAC,GAAG6M,EAAE,CAAC7M,QAAQ,CAAC,CAAC,CAAC;QAC1E,MAAM2+D,YAAY,GAAGD,YAAY,CAAC7xD,EAAE,EAAEC,EAAE,EAAEiM,CAAC,EAAEhe,OAAO,CAAC4hE,OAAO,CAAC;QAC7DgC,YAAY,CAAC3+D,QAAQ,CAAC,GAAGqmB,KAAK,CAACrmB,QAAQ,CAAC;QACxCb,MAAM,CAACtC,IAAI,CAAC8hE,YAAY,CAAC;MAC3B;MACA,OAAOx/D,MAAM,CAACxF,MAAM,KAAK,CAAC,GAAGwF,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM;IACjD;IACA+9D,WAAWA,CAAC5gD,GAAG,EAAEia,OAAO,EAAEyG,MAAM,EAAE;MAChC,MAAMohC,aAAa,GAAGR,iBAAiB,CAAC,IAAI,CAAC;MAC7C,OAAOQ,aAAa,CAAC9hD,GAAG,EAAE,IAAI,EAAEia,OAAO,EAAEyG,MAAM,CAAC;IAClD;IACAghC,IAAIA,CAAC1hD,GAAG,EAAE9a,KAAK,EAAE0E,KAAK,EAAE;MACtB,MAAMkxB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,MAAMgnC,aAAa,GAAGR,iBAAiB,CAAC,IAAI,CAAC;MAC7C,IAAI7tC,IAAI,GAAG,IAAI,CAAC2H,KAAK;MACrBl2B,KAAK,GAAGA,KAAK,IAAI,CAAC;MAClB0E,KAAK,GAAGA,KAAK,IAAK,IAAI,CAACH,MAAM,CAACpM,MAAM,GAAG6H,KAAM;MAC7C,KAAK,MAAM+0B,OAAO,IAAIa,QAAQ,EAAE;QAC9BrH,IAAI,IAAIquC,aAAa,CAAC9hD,GAAG,EAAE,IAAI,EAAEia,OAAO,EAAE;UAAC/0B,KAAK;UAAEC,GAAG,EAAED,KAAK,GAAG0E,KAAK,GAAG;QAAC,CAAC,CAAC;MAC5E;MACA,OAAO,CAAC,CAAC6pB,IAAI;IACf;IACAnnB,IAAIA,CAAC0T,GAAG,EAAEoe,SAAS,EAAEl5B,KAAK,EAAE0E,KAAK,EAAE;MACjC,MAAMnL,OAAO,GAAG,IAAI,CAACA,OAAO,IAAI,CAAC,CAAC;MAClC,MAAMgL,MAAM,GAAG,IAAI,CAACA,MAAM,IAAI,EAAE;MAChC,IAAIA,MAAM,CAACpM,MAAM,IAAIoB,OAAO,CAACmrB,WAAW,EAAE;QACxC5J,GAAG,CAAC4H,IAAI,CAAC,CAAC;QACVtb,IAAI,CAAC0T,GAAG,EAAE,IAAI,EAAE9a,KAAK,EAAE0E,KAAK,CAAC;QAC7BoW,GAAG,CAACgI,OAAO,CAAC,CAAC;MACf;MACA,IAAI,IAAI,CAAC+yC,QAAQ,EAAE;QACjB,IAAI,CAACoH,cAAc,GAAG,KAAK;QAC3B,IAAI,CAACR,KAAK,GAAGriE,SAAS;MACxB;IACF;EACF;EACA0iE,WAAW,CAAC7mE,EAAE,GAAG,MAAM;EACvB6mE,WAAW,CAAClgD,QAAQ,GAAG;IACrBwa,cAAc,EAAE,MAAM;IACtBC,UAAU,EAAE,EAAE;IACdC,gBAAgB,EAAE,CAAC;IACnBC,eAAe,EAAE,OAAO;IACxB7S,WAAW,EAAE,CAAC;IACdwJ,eAAe,EAAE,IAAI;IACrBQ,sBAAsB,EAAE,SAAS;IACjCjK,IAAI,EAAE,KAAK;IACXgK,QAAQ,EAAE,KAAK;IACf0sC,OAAO,EAAE,KAAK;IACdvsC,OAAO,EAAE;EACX,CAAC;EACDkuC,WAAW,CAAChsB,aAAa,GAAG;IAC1B/2B,eAAe,EAAE,iBAAiB;IAClCC,WAAW,EAAE;EACf,CAAC;EACD8iD,WAAW,CAACtjD,WAAW,GAAG;IACxBqD,WAAW,EAAE,IAAI;IACjBE,UAAU,EAAGZ,IAAI,IAAKA,IAAI,KAAK,YAAY,IAAIA,IAAI,KAAK;EAC1D,CAAC;EAED,SAASihD,SAASA,CAACr/C,EAAE,EAAEM,GAAG,EAAEvZ,IAAI,EAAEi0B,gBAAgB,EAAE;IAClD,MAAMx/B,OAAO,GAAGwkB,EAAE,CAACxkB,OAAO;IAC1B,MAAM;MAAC,CAACuL,IAAI,GAAG3O;IAAK,CAAC,GAAG4nB,EAAE,CAACwb,QAAQ,CAAC,CAACz0B,IAAI,CAAC,EAAEi0B,gBAAgB,CAAC;IAC7D,OAAQ18B,IAAI,CAAC8B,GAAG,CAACkgB,GAAG,GAAGloB,KAAK,CAAC,GAAGoD,OAAO,CAACqqB,MAAM,GAAGrqB,OAAO,CAAC8jE,SAAS;EACpE;EACA,MAAMC,YAAY,SAAS5sB,OAAO,CAAC;IACjC3qC,WAAWA,CAAC29B,GAAG,EAAE;MACf,KAAK,CAAC,CAAC;MACP,IAAI,CAACnqC,OAAO,GAAGa,SAAS;MACxB,IAAI,CAACyxB,MAAM,GAAGzxB,SAAS;MACvB,IAAI,CAAC6xB,IAAI,GAAG7xB,SAAS;MACrB,IAAI,CAACgO,IAAI,GAAGhO,SAAS;MACrB,IAAIspC,GAAG,EAAE;QACPntC,MAAM,CAACsP,MAAM,CAAC,IAAI,EAAE69B,GAAG,CAAC;MAC1B;IACF;IACAvK,OAAOA,CAACokC,MAAM,EAAEC,MAAM,EAAEzkC,gBAAgB,EAAE;MACxC,MAAMx/B,OAAO,GAAG,IAAI,CAACA,OAAO;MAC5B,MAAM;QAACkB,CAAC;QAAEE;MAAC,CAAC,GAAG,IAAI,CAAC4+B,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAER,gBAAgB,CAAC;MAC1D,OAAS18B,IAAI,CAACiB,GAAG,CAACigE,MAAM,GAAG9iE,CAAC,EAAE,CAAC,CAAC,GAAG4B,IAAI,CAACiB,GAAG,CAACkgE,MAAM,GAAG7iE,CAAC,EAAE,CAAC,CAAC,GAAI0B,IAAI,CAACiB,GAAG,CAAC/D,OAAO,CAAC8jE,SAAS,GAAG9jE,OAAO,CAACqqB,MAAM,EAAE,CAAC,CAAC;IAC/G;IACA65C,QAAQA,CAACF,MAAM,EAAExkC,gBAAgB,EAAE;MACjC,OAAOqkC,SAAS,CAAC,IAAI,EAAEG,MAAM,EAAE,GAAG,EAAExkC,gBAAgB,CAAC;IACvD;IACA2kC,QAAQA,CAACF,MAAM,EAAEzkC,gBAAgB,EAAE;MACjC,OAAOqkC,SAAS,CAAC,IAAI,EAAEI,MAAM,EAAE,GAAG,EAAEzkC,gBAAgB,CAAC;IACvD;IACAa,cAAcA,CAACb,gBAAgB,EAAE;MAC/B,MAAM;QAACt+B,CAAC;QAAEE;MAAC,CAAC,GAAG,IAAI,CAAC4+B,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAER,gBAAgB,CAAC;MAC1D,OAAO;QAACt+B,CAAC;QAAEE;MAAC,CAAC;IACf;IACAoB,IAAIA,CAACxC,OAAO,EAAE;MACZA,OAAO,GAAGA,OAAO,IAAI,IAAI,CAACA,OAAO,IAAI,CAAC,CAAC;MACvC,IAAIqqB,MAAM,GAAGrqB,OAAO,CAACqqB,MAAM,IAAI,CAAC;MAChCA,MAAM,GAAGvnB,IAAI,CAACqC,GAAG,CAACklB,MAAM,EAAEA,MAAM,IAAIrqB,OAAO,CAACokE,WAAW,IAAI,CAAC,CAAC;MAC7D,MAAMj5C,WAAW,GAAGd,MAAM,IAAIrqB,OAAO,CAACmrB,WAAW,IAAI,CAAC;MACtD,OAAO,CAACd,MAAM,GAAGc,WAAW,IAAI,CAAC;IACnC;IACAtd,IAAIA,CAAC0T,GAAG,EAAEgK,IAAI,EAAE;MACd,MAAMvrB,OAAO,GAAG,IAAI,CAACA,OAAO;MAC5B,IAAI,IAAI,CAAC0yB,IAAI,IAAI1yB,OAAO,CAACqqB,MAAM,GAAG,GAAG,IAAI,CAACgB,cAAc,CAAC,IAAI,EAAEE,IAAI,EAAE,IAAI,CAAC/oB,IAAI,CAACxC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE;QAC5F;MACF;MACAuhB,GAAG,CAACsL,WAAW,GAAG7sB,OAAO,CAACygB,WAAW;MACrCc,GAAG,CAACuL,SAAS,GAAG9sB,OAAO,CAACmrB,WAAW;MACnC5J,GAAG,CAAC4L,SAAS,GAAGntB,OAAO,CAACwgB,eAAe;MACvCwJ,SAAS,CAACzI,GAAG,EAAEvhB,OAAO,EAAE,IAAI,CAACkB,CAAC,EAAE,IAAI,CAACE,CAAC,CAAC;IACzC;IACAw9B,QAAQA,CAAA,EAAG;MACT,MAAM5+B,OAAO,GAAG,IAAI,CAACA,OAAO,IAAI,CAAC,CAAC;MAClC,OAAOA,OAAO,CAACqqB,MAAM,GAAGrqB,OAAO,CAAC8jE,SAAS;IAC3C;EACF;EACAC,YAAY,CAACrnE,EAAE,GAAG,OAAO;EACzBqnE,YAAY,CAAC1gD,QAAQ,GAAG;IACtB8H,WAAW,EAAE,CAAC;IACd24C,SAAS,EAAE,CAAC;IACZnI,gBAAgB,EAAE,CAAC;IACnByI,WAAW,EAAE,CAAC;IACdj6C,UAAU,EAAE,QAAQ;IACpBE,MAAM,EAAE,CAAC;IACTD,QAAQ,EAAE;EACZ,CAAC;EACD25C,YAAY,CAACxsB,aAAa,GAAG;IAC3B/2B,eAAe,EAAE,iBAAiB;IAClCC,WAAW,EAAE;EACf,CAAC;EAED,SAAS4jD,YAAYA,CAACC,GAAG,EAAE9kC,gBAAgB,EAAE;IAC3C,MAAM;MAACt+B,CAAC;MAAEE,CAAC;MAAEqH,IAAI;MAAEsc,KAAK;MAAEC;IAAM,CAAC,GAAGs/C,GAAG,CAACtkC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC,EAAER,gBAAgB,CAAC;IACzG,IAAI90B,IAAI,EAAEC,KAAK,EAAEsa,GAAG,EAAEC,MAAM,EAAEq/C,IAAI;IAClC,IAAID,GAAG,CAAC7iC,UAAU,EAAE;MAClB8iC,IAAI,GAAGv/C,MAAM,GAAG,CAAC;MACjBta,IAAI,GAAG5H,IAAI,CAACoC,GAAG,CAAChE,CAAC,EAAEuH,IAAI,CAAC;MACxBkC,KAAK,GAAG7H,IAAI,CAACqC,GAAG,CAACjE,CAAC,EAAEuH,IAAI,CAAC;MACzBwc,GAAG,GAAG7jB,CAAC,GAAGmjE,IAAI;MACdr/C,MAAM,GAAG9jB,CAAC,GAAGmjE,IAAI;IACnB,CAAC,MAAM;MACLA,IAAI,GAAGx/C,KAAK,GAAG,CAAC;MAChBra,IAAI,GAAGxJ,CAAC,GAAGqjE,IAAI;MACf55D,KAAK,GAAGzJ,CAAC,GAAGqjE,IAAI;MAChBt/C,GAAG,GAAGniB,IAAI,CAACoC,GAAG,CAAC9D,CAAC,EAAEqH,IAAI,CAAC;MACvByc,MAAM,GAAGpiB,IAAI,CAACqC,GAAG,CAAC/D,CAAC,EAAEqH,IAAI,CAAC;IAC5B;IACA,OAAO;MAACiC,IAAI;MAAEua,GAAG;MAAEta,KAAK;MAAEua;IAAM,CAAC;EACnC;EACA,SAASs/C,WAAWA,CAAC9xC,IAAI,EAAE91B,KAAK,EAAEsI,GAAG,EAAEC,GAAG,EAAE;IAC1C,OAAOutB,IAAI,GAAG,CAAC,GAAGzrB,WAAW,CAACrK,KAAK,EAAEsI,GAAG,EAAEC,GAAG,CAAC;EAChD;EACA,SAASs/D,gBAAgBA,CAACH,GAAG,EAAEI,IAAI,EAAEC,IAAI,EAAE;IACzC,MAAM/nE,KAAK,GAAG0nE,GAAG,CAACtkE,OAAO,CAACmrB,WAAW;IACrC,MAAMuH,IAAI,GAAG4xC,GAAG,CAACzN,aAAa;IAC9B,MAAM11D,CAAC,GAAGg4B,MAAM,CAACv8B,KAAK,CAAC;IACvB,OAAO;MACLohB,CAAC,EAAEwmD,WAAW,CAAC9xC,IAAI,CAACzN,GAAG,EAAE9jB,CAAC,CAAC8jB,GAAG,EAAE,CAAC,EAAE0/C,IAAI,CAAC;MACxCn0D,CAAC,EAAEg0D,WAAW,CAAC9xC,IAAI,CAAC/nB,KAAK,EAAExJ,CAAC,CAACwJ,KAAK,EAAE,CAAC,EAAE+5D,IAAI,CAAC;MAC5CniE,CAAC,EAAEiiE,WAAW,CAAC9xC,IAAI,CAACxN,MAAM,EAAE/jB,CAAC,CAAC+jB,MAAM,EAAE,CAAC,EAAEy/C,IAAI,CAAC;MAC9Cx1D,CAAC,EAAEq1D,WAAW,CAAC9xC,IAAI,CAAChoB,IAAI,EAAEvJ,CAAC,CAACuJ,IAAI,EAAE,CAAC,EAAEg6D,IAAI;IAC3C,CAAC;EACH;EACA,SAASE,iBAAiBA,CAACN,GAAG,EAAEI,IAAI,EAAEC,IAAI,EAAE;IAC1C,MAAM;MAAC7N;IAAkB,CAAC,GAAGwN,GAAG,CAACtkC,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC;IACjE,MAAMpjC,KAAK,GAAG0nE,GAAG,CAACtkE,OAAO,CAACw+D,YAAY;IACtC,MAAMr9D,CAAC,GAAGi4B,aAAa,CAACx8B,KAAK,CAAC;IAC9B,MAAMioE,IAAI,GAAG/hE,IAAI,CAACoC,GAAG,CAACw/D,IAAI,EAAEC,IAAI,CAAC;IACjC,MAAMjyC,IAAI,GAAG4xC,GAAG,CAACzN,aAAa;IAC9B,MAAMiO,YAAY,GAAGhO,kBAAkB,IAAIz5D,QAAQ,CAACT,KAAK,CAAC;IAC1D,OAAO;MACLoxB,OAAO,EAAEw2C,WAAW,CAAC,CAACM,YAAY,IAAIpyC,IAAI,CAACzN,GAAG,IAAIyN,IAAI,CAAChoB,IAAI,EAAEvJ,CAAC,CAAC6sB,OAAO,EAAE,CAAC,EAAE62C,IAAI,CAAC;MAChF12C,QAAQ,EAAEq2C,WAAW,CAAC,CAACM,YAAY,IAAIpyC,IAAI,CAACzN,GAAG,IAAIyN,IAAI,CAAC/nB,KAAK,EAAExJ,CAAC,CAACgtB,QAAQ,EAAE,CAAC,EAAE02C,IAAI,CAAC;MACnF52C,UAAU,EAAEu2C,WAAW,CAAC,CAACM,YAAY,IAAIpyC,IAAI,CAACxN,MAAM,IAAIwN,IAAI,CAAChoB,IAAI,EAAEvJ,CAAC,CAAC8sB,UAAU,EAAE,CAAC,EAAE42C,IAAI,CAAC;MACzF32C,WAAW,EAAEs2C,WAAW,CAAC,CAACM,YAAY,IAAIpyC,IAAI,CAACxN,MAAM,IAAIwN,IAAI,CAAC/nB,KAAK,EAAExJ,CAAC,CAAC+sB,WAAW,EAAE,CAAC,EAAE22C,IAAI;IAC7F,CAAC;EACH;EACA,SAASE,aAAaA,CAACT,GAAG,EAAE;IAC1B,MAAM7oC,MAAM,GAAG4oC,YAAY,CAACC,GAAG,CAAC;IAChC,MAAMv/C,KAAK,GAAG0W,MAAM,CAAC9wB,KAAK,GAAG8wB,MAAM,CAAC/wB,IAAI;IACxC,MAAMsa,MAAM,GAAGyW,MAAM,CAACvW,MAAM,GAAGuW,MAAM,CAACxW,GAAG;IACzC,MAAM03C,MAAM,GAAG8H,gBAAgB,CAACH,GAAG,EAAEv/C,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,CAAC;IAC3D,MAAMqF,MAAM,GAAGu6C,iBAAiB,CAACN,GAAG,EAAEv/C,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,CAAC;IAC5D,OAAO;MACLggD,KAAK,EAAE;QACL9jE,CAAC,EAAEu6B,MAAM,CAAC/wB,IAAI;QACdtJ,CAAC,EAAEq6B,MAAM,CAACxW,GAAG;QACb/T,CAAC,EAAE6T,KAAK;QACR3V,CAAC,EAAE4V,MAAM;QACTqF;MACF,CAAC;MACDy2C,KAAK,EAAE;QACL5/D,CAAC,EAAEu6B,MAAM,CAAC/wB,IAAI,GAAGiyD,MAAM,CAACxtD,CAAC;QACzB/N,CAAC,EAAEq6B,MAAM,CAACxW,GAAG,GAAG03C,MAAM,CAAC3+C,CAAC;QACxB9M,CAAC,EAAE6T,KAAK,GAAG43C,MAAM,CAACxtD,CAAC,GAAGwtD,MAAM,CAACnsD,CAAC;QAC9BpB,CAAC,EAAE4V,MAAM,GAAG23C,MAAM,CAAC3+C,CAAC,GAAG2+C,MAAM,CAACp6D,CAAC;QAC/B8nB,MAAM,EAAE;UACN2D,OAAO,EAAElrB,IAAI,CAACqC,GAAG,CAAC,CAAC,EAAEklB,MAAM,CAAC2D,OAAO,GAAGlrB,IAAI,CAACqC,GAAG,CAACw3D,MAAM,CAAC3+C,CAAC,EAAE2+C,MAAM,CAACxtD,CAAC,CAAC,CAAC;UACnEgf,QAAQ,EAAErrB,IAAI,CAACqC,GAAG,CAAC,CAAC,EAAEklB,MAAM,CAAC8D,QAAQ,GAAGrrB,IAAI,CAACqC,GAAG,CAACw3D,MAAM,CAAC3+C,CAAC,EAAE2+C,MAAM,CAACnsD,CAAC,CAAC,CAAC;UACrEyd,UAAU,EAAEnrB,IAAI,CAACqC,GAAG,CAAC,CAAC,EAAEklB,MAAM,CAAC4D,UAAU,GAAGnrB,IAAI,CAACqC,GAAG,CAACw3D,MAAM,CAACp6D,CAAC,EAAEo6D,MAAM,CAACxtD,CAAC,CAAC,CAAC;UACzE+e,WAAW,EAAEprB,IAAI,CAACqC,GAAG,CAAC,CAAC,EAAEklB,MAAM,CAAC6D,WAAW,GAAGprB,IAAI,CAACqC,GAAG,CAACw3D,MAAM,CAACp6D,CAAC,EAAEo6D,MAAM,CAACnsD,CAAC,CAAC;QAC5E;MACF;IACF,CAAC;EACH;EACA,SAASovB,OAAOA,CAAC0kC,GAAG,EAAEpjE,CAAC,EAAEE,CAAC,EAAEo+B,gBAAgB,EAAE;IAC5C,MAAMylC,KAAK,GAAG/jE,CAAC,KAAK,IAAI;IACxB,MAAMgkE,KAAK,GAAG9jE,CAAC,KAAK,IAAI;IACxB,MAAM+jE,QAAQ,GAAGF,KAAK,IAAIC,KAAK;IAC/B,MAAMzpC,MAAM,GAAG6oC,GAAG,IAAI,CAACa,QAAQ,IAAId,YAAY,CAACC,GAAG,EAAE9kC,gBAAgB,CAAC;IACtE,OAAO/D,MAAM,KACTwpC,KAAK,IAAI99D,UAAU,CAACjG,CAAC,EAAEu6B,MAAM,CAAC/wB,IAAI,EAAE+wB,MAAM,CAAC9wB,KAAK,CAAC,CAAC,KAClDu6D,KAAK,IAAI/9D,UAAU,CAAC/F,CAAC,EAAEq6B,MAAM,CAACxW,GAAG,EAAEwW,MAAM,CAACvW,MAAM,CAAC,CAAC;EACxD;EACA,SAASkgD,SAASA,CAAC/6C,MAAM,EAAE;IACzB,OAAOA,MAAM,CAAC2D,OAAO,IAAI3D,MAAM,CAAC8D,QAAQ,IAAI9D,MAAM,CAAC4D,UAAU,IAAI5D,MAAM,CAAC6D,WAAW;EACrF;EACA,SAASm3C,iBAAiBA,CAAC9jD,GAAG,EAAEoE,IAAI,EAAE;IACpCpE,GAAG,CAACoE,IAAI,CAACA,IAAI,CAACzkB,CAAC,EAAEykB,IAAI,CAACvkB,CAAC,EAAEukB,IAAI,CAACzU,CAAC,EAAEyU,IAAI,CAACvW,CAAC,CAAC;EAC1C;EACA,SAASk2D,WAAWA,CAAC3/C,IAAI,EAAE2uC,MAAM,EAAEiR,OAAO,GAAG,CAAC,CAAC,EAAE;IAC/C,MAAMrkE,CAAC,GAAGykB,IAAI,CAACzkB,CAAC,KAAKqkE,OAAO,CAACrkE,CAAC,GAAG,CAACozD,MAAM,GAAG,CAAC;IAC5C,MAAMlzD,CAAC,GAAGukB,IAAI,CAACvkB,CAAC,KAAKmkE,OAAO,CAACnkE,CAAC,GAAG,CAACkzD,MAAM,GAAG,CAAC;IAC5C,MAAMpjD,CAAC,GAAG,CAACyU,IAAI,CAACzkB,CAAC,GAAGykB,IAAI,CAACzU,CAAC,KAAKq0D,OAAO,CAACrkE,CAAC,GAAGqkE,OAAO,CAACr0D,CAAC,GAAGojD,MAAM,GAAG,CAAC,IAAIpzD,CAAC;IACtE,MAAMkO,CAAC,GAAG,CAACuW,IAAI,CAACvkB,CAAC,GAAGukB,IAAI,CAACvW,CAAC,KAAKm2D,OAAO,CAACnkE,CAAC,GAAGmkE,OAAO,CAACn2D,CAAC,GAAGklD,MAAM,GAAG,CAAC,IAAIlzD,CAAC;IACtE,OAAO;MACLF,CAAC,EAAEykB,IAAI,CAACzkB,CAAC,GAAGA,CAAC;MACbE,CAAC,EAAEukB,IAAI,CAACvkB,CAAC,GAAGA,CAAC;MACb8P,CAAC,EAAEyU,IAAI,CAACzU,CAAC,GAAGA,CAAC;MACb9B,CAAC,EAAEuW,IAAI,CAACvW,CAAC,GAAGA,CAAC;MACbib,MAAM,EAAE1E,IAAI,CAAC0E;IACf,CAAC;EACH;EACA,MAAMm7C,UAAU,SAASruB,OAAO,CAAC;IAC/B3qC,WAAWA,CAAC29B,GAAG,EAAE;MACf,KAAK,CAAC,CAAC;MACP,IAAI,CAACnqC,OAAO,GAAGa,SAAS;MACxB,IAAI,CAAC4gC,UAAU,GAAG5gC,SAAS;MAC3B,IAAI,CAAC4H,IAAI,GAAG5H,SAAS;MACrB,IAAI,CAACkkB,KAAK,GAAGlkB,SAAS;MACtB,IAAI,CAACmkB,MAAM,GAAGnkB,SAAS;MACvB,IAAI,CAACw2D,aAAa,GAAGx2D,SAAS;MAC9B,IAAIspC,GAAG,EAAE;QACPntC,MAAM,CAACsP,MAAM,CAAC,IAAI,EAAE69B,GAAG,CAAC;MAC1B;IACF;IACAt8B,IAAIA,CAAC0T,GAAG,EAAE;MACR,MAAM;QAAC81C,aAAa;QAAEr3D,OAAO,EAAE;UAACygB,WAAW;UAAED;QAAe;MAAC,CAAC,GAAG,IAAI;MACrE,MAAM;QAACsgD,KAAK;QAAEkE;MAAK,CAAC,GAAGD,aAAa,CAAC,IAAI,CAAC;MAC1C,MAAMU,WAAW,GAAGL,SAAS,CAACJ,KAAK,CAAC36C,MAAM,CAAC,GAAG0D,kBAAkB,GAAGs3C,iBAAiB;MACpF9jD,GAAG,CAAC4H,IAAI,CAAC,CAAC;MACV,IAAI67C,KAAK,CAAC9zD,CAAC,KAAK4vD,KAAK,CAAC5vD,CAAC,IAAI8zD,KAAK,CAAC51D,CAAC,KAAK0xD,KAAK,CAAC1xD,CAAC,EAAE;QAC9CmS,GAAG,CAACkJ,SAAS,CAAC,CAAC;QACfg7C,WAAW,CAAClkD,GAAG,EAAE+jD,WAAW,CAACN,KAAK,EAAE3N,aAAa,EAAEyJ,KAAK,CAAC,CAAC;QAC1Dv/C,GAAG,CAACmK,IAAI,CAAC,CAAC;QACV+5C,WAAW,CAAClkD,GAAG,EAAE+jD,WAAW,CAACxE,KAAK,EAAE,CAACzJ,aAAa,EAAE2N,KAAK,CAAC,CAAC;QAC3DzjD,GAAG,CAAC4L,SAAS,GAAG1M,WAAW;QAC3Bc,GAAG,CAAC2J,IAAI,CAAC,SAAS,CAAC;MACrB;MACA3J,GAAG,CAACkJ,SAAS,CAAC,CAAC;MACfg7C,WAAW,CAAClkD,GAAG,EAAE+jD,WAAW,CAACxE,KAAK,EAAEzJ,aAAa,CAAC,CAAC;MACnD91C,GAAG,CAAC4L,SAAS,GAAG3M,eAAe;MAC/Be,GAAG,CAAC2J,IAAI,CAAC,CAAC;MACV3J,GAAG,CAACgI,OAAO,CAAC,CAAC;IACf;IACAqW,OAAOA,CAACokC,MAAM,EAAEC,MAAM,EAAEzkC,gBAAgB,EAAE;MACxC,OAAOI,OAAO,CAAC,IAAI,EAAEokC,MAAM,EAAEC,MAAM,EAAEzkC,gBAAgB,CAAC;IACxD;IACA0kC,QAAQA,CAACF,MAAM,EAAExkC,gBAAgB,EAAE;MACjC,OAAOI,OAAO,CAAC,IAAI,EAAEokC,MAAM,EAAE,IAAI,EAAExkC,gBAAgB,CAAC;IACtD;IACA2kC,QAAQA,CAACF,MAAM,EAAEzkC,gBAAgB,EAAE;MACjC,OAAOI,OAAO,CAAC,IAAI,EAAE,IAAI,EAAEqkC,MAAM,EAAEzkC,gBAAgB,CAAC;IACtD;IACAa,cAAcA,CAACb,gBAAgB,EAAE;MAC/B,MAAM;QAACt+B,CAAC;QAAEE,CAAC;QAAEqH,IAAI;QAAEg5B;MAAU,CAAC,GAAG,IAAI,CAACzB,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,YAAY,CAAC,EAAER,gBAAgB,CAAC;MAClG,OAAO;QACLt+B,CAAC,EAAEugC,UAAU,GAAG,CAACvgC,CAAC,GAAGuH,IAAI,IAAI,CAAC,GAAGvH,CAAC;QAClCE,CAAC,EAAEqgC,UAAU,GAAGrgC,CAAC,GAAG,CAACA,CAAC,GAAGqH,IAAI,IAAI;MACnC,CAAC;IACH;IACAm2B,QAAQA,CAACrzB,IAAI,EAAE;MACb,OAAOA,IAAI,KAAK,GAAG,GAAG,IAAI,CAACwZ,KAAK,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,GAAG,CAAC;IACxD;EACF;EACAwgD,UAAU,CAAC9oE,EAAE,GAAG,KAAK;EACrB8oE,UAAU,CAACniD,QAAQ,GAAG;IACpBwzC,aAAa,EAAE,OAAO;IACtB1rC,WAAW,EAAE,CAAC;IACdqzC,YAAY,EAAE,CAAC;IACfnH,aAAa,EAAE,MAAM;IACrBltC,UAAU,EAAEtpB;EACd,CAAC;EACD2kE,UAAU,CAACjuB,aAAa,GAAG;IACzB/2B,eAAe,EAAE,iBAAiB;IAClCC,WAAW,EAAE;EACf,CAAC;EAED,IAAIM,QAAQ,GAAG,aAAa/jB,MAAM,CAACkhC,MAAM,CAAC;IAC1CC,SAAS,EAAE,IAAI;IACf6iC,UAAU,EAAEA,UAAU;IACtBuC,WAAW,EAAEA,WAAW;IACxBQ,YAAY,EAAEA,YAAY;IAC1ByB,UAAU,EAAEA;EACZ,CAAC,CAAC;EAEF,SAASE,cAAcA,CAACj9C,IAAI,EAAEhiB,KAAK,EAAE0E,KAAK,EAAEo3B,cAAc,EAAEviC,OAAO,EAAE;IACnE,MAAM2lE,OAAO,GAAG3lE,OAAO,CAAC2lE,OAAO,IAAIpjC,cAAc;IACjD,IAAIojC,OAAO,IAAIx6D,KAAK,EAAE;MACpB,OAAOsd,IAAI,CAACrrB,KAAK,CAACqJ,KAAK,EAAEA,KAAK,GAAG0E,KAAK,CAAC;IACzC;IACA,MAAMy6D,SAAS,GAAG,EAAE;IACpB,MAAMC,WAAW,GAAG,CAAC16D,KAAK,GAAG,CAAC,KAAKw6D,OAAO,GAAG,CAAC,CAAC;IAC/C,IAAIG,YAAY,GAAG,CAAC;IACpB,MAAMC,QAAQ,GAAGt/D,KAAK,GAAG0E,KAAK,GAAG,CAAC;IAClC,IAAI7I,CAAC,GAAGmE,KAAK;IACb,IAAIhI,CAAC,EAAEunE,YAAY,EAAEC,OAAO,EAAE16C,IAAI,EAAE26C,KAAK;IACzCN,SAAS,CAACE,YAAY,EAAE,CAAC,GAAGr9C,IAAI,CAACnmB,CAAC,CAAC;IACnC,KAAK7D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGknE,OAAO,GAAG,CAAC,EAAElnE,CAAC,EAAE,EAAE;MAChC,IAAI6jE,IAAI,GAAG,CAAC;MACZ,IAAI6D,IAAI,GAAG,CAAC;MACZ,IAAInpD,CAAC;MACL,MAAMopD,aAAa,GAAGtjE,IAAI,CAACkB,KAAK,CAAC,CAACvF,CAAC,GAAG,CAAC,IAAIonE,WAAW,CAAC,GAAG,CAAC,GAAGp/D,KAAK;MACnE,MAAM4/D,WAAW,GAAGvjE,IAAI,CAACoC,GAAG,CAACpC,IAAI,CAACkB,KAAK,CAAC,CAACvF,CAAC,GAAG,CAAC,IAAIonE,WAAW,CAAC,GAAG,CAAC,EAAE16D,KAAK,CAAC,GAAG1E,KAAK;MAClF,MAAM6/D,cAAc,GAAGD,WAAW,GAAGD,aAAa;MAClD,KAAKppD,CAAC,GAAGopD,aAAa,EAAEppD,CAAC,GAAGqpD,WAAW,EAAErpD,CAAC,EAAE,EAAE;QAC5CslD,IAAI,IAAI75C,IAAI,CAACzL,CAAC,CAAC,CAAC9b,CAAC;QACjBilE,IAAI,IAAI19C,IAAI,CAACzL,CAAC,CAAC,CAAC5b,CAAC;MACnB;MACAkhE,IAAI,IAAIgE,cAAc;MACtBH,IAAI,IAAIG,cAAc;MACtB,MAAMC,SAAS,GAAGzjE,IAAI,CAACkB,KAAK,CAACvF,CAAC,GAAGonE,WAAW,CAAC,GAAG,CAAC,GAAGp/D,KAAK;MACzD,MAAM+/D,OAAO,GAAG1jE,IAAI,CAACoC,GAAG,CAACpC,IAAI,CAACkB,KAAK,CAAC,CAACvF,CAAC,GAAG,CAAC,IAAIonE,WAAW,CAAC,GAAG,CAAC,EAAE16D,KAAK,CAAC,GAAG1E,KAAK;MAC9E,MAAM;QAACvF,CAAC,EAAEulE,OAAO;QAAErlE,CAAC,EAAEslE;MAAO,CAAC,GAAGj+C,IAAI,CAACnmB,CAAC,CAAC;MACxC2jE,OAAO,GAAG16C,IAAI,GAAG,CAAC,CAAC;MACnB,KAAKvO,CAAC,GAAGupD,SAAS,EAAEvpD,CAAC,GAAGwpD,OAAO,EAAExpD,CAAC,EAAE,EAAE;QACpCuO,IAAI,GAAG,GAAG,GAAGzoB,IAAI,CAAC8B,GAAG,CACnB,CAAC6hE,OAAO,GAAGnE,IAAI,KAAK75C,IAAI,CAACzL,CAAC,CAAC,CAAC5b,CAAC,GAAGslE,OAAO,CAAC,GACxC,CAACD,OAAO,GAAGh+C,IAAI,CAACzL,CAAC,CAAC,CAAC9b,CAAC,KAAKilE,IAAI,GAAGO,OAAO,CACzC,CAAC;QACD,IAAIn7C,IAAI,GAAG06C,OAAO,EAAE;UAClBA,OAAO,GAAG16C,IAAI;UACdy6C,YAAY,GAAGv9C,IAAI,CAACzL,CAAC,CAAC;UACtBkpD,KAAK,GAAGlpD,CAAC;QACX;MACF;MACA4oD,SAAS,CAACE,YAAY,EAAE,CAAC,GAAGE,YAAY;MACxC1jE,CAAC,GAAG4jE,KAAK;IACX;IACAN,SAAS,CAACE,YAAY,EAAE,CAAC,GAAGr9C,IAAI,CAACs9C,QAAQ,CAAC;IAC1C,OAAOH,SAAS;EAClB;EACA,SAASe,gBAAgBA,CAACl+C,IAAI,EAAEhiB,KAAK,EAAE0E,KAAK,EAAEo3B,cAAc,EAAE;IAC5D,IAAI+/B,IAAI,GAAG,CAAC;IACZ,IAAIC,MAAM,GAAG,CAAC;IACd,IAAI9jE,CAAC,EAAE6sB,KAAK,EAAEpqB,CAAC,EAAEE,CAAC,EAAEohE,KAAK,EAAEoE,QAAQ,EAAEC,QAAQ,EAAEC,UAAU,EAAE/M,IAAI,EAAEF,IAAI;IACrE,MAAM+L,SAAS,GAAG,EAAE;IACpB,MAAMG,QAAQ,GAAGt/D,KAAK,GAAG0E,KAAK,GAAG,CAAC;IAClC,MAAM47D,IAAI,GAAGt+C,IAAI,CAAChiB,KAAK,CAAC,CAACvF,CAAC;IAC1B,MAAM8lE,IAAI,GAAGv+C,IAAI,CAACs9C,QAAQ,CAAC,CAAC7kE,CAAC;IAC7B,MAAM+lE,EAAE,GAAGD,IAAI,GAAGD,IAAI;IACtB,KAAKtoE,CAAC,GAAGgI,KAAK,EAAEhI,CAAC,GAAGgI,KAAK,GAAG0E,KAAK,EAAE,EAAE1M,CAAC,EAAE;MACtC6sB,KAAK,GAAG7C,IAAI,CAAChqB,CAAC,CAAC;MACfyC,CAAC,GAAG,CAACoqB,KAAK,CAACpqB,CAAC,GAAG6lE,IAAI,IAAIE,EAAE,GAAG1kC,cAAc;MAC1CnhC,CAAC,GAAGkqB,KAAK,CAAClqB,CAAC;MACX,MAAMwhE,MAAM,GAAG1hE,CAAC,GAAG,CAAC;MACpB,IAAI0hE,MAAM,KAAKJ,KAAK,EAAE;QACpB,IAAIphE,CAAC,GAAG24D,IAAI,EAAE;UACZA,IAAI,GAAG34D,CAAC;UACRwlE,QAAQ,GAAGnoE,CAAC;QACd,CAAC,MAAM,IAAI2C,CAAC,GAAGy4D,IAAI,EAAE;UACnBA,IAAI,GAAGz4D,CAAC;UACRylE,QAAQ,GAAGpoE,CAAC;QACd;QACA6jE,IAAI,GAAG,CAACC,MAAM,GAAGD,IAAI,GAAGh3C,KAAK,CAACpqB,CAAC,IAAI,EAAEqhE,MAAM;MAC7C,CAAC,MAAM;QACL,MAAM2E,SAAS,GAAGzoE,CAAC,GAAG,CAAC;QACvB,IAAI,CAAC9B,aAAa,CAACiqE,QAAQ,CAAC,IAAI,CAACjqE,aAAa,CAACkqE,QAAQ,CAAC,EAAE;UACxD,MAAMM,kBAAkB,GAAGrkE,IAAI,CAACoC,GAAG,CAAC0hE,QAAQ,EAAEC,QAAQ,CAAC;UACvD,MAAMO,kBAAkB,GAAGtkE,IAAI,CAACqC,GAAG,CAACyhE,QAAQ,EAAEC,QAAQ,CAAC;UACvD,IAAIM,kBAAkB,KAAKL,UAAU,IAAIK,kBAAkB,KAAKD,SAAS,EAAE;YACzEtB,SAAS,CAAC9jE,IAAI,CAAC;cACb,GAAG2mB,IAAI,CAAC0+C,kBAAkB,CAAC;cAC3BjmE,CAAC,EAAEohE;YACL,CAAC,CAAC;UACJ;UACA,IAAI8E,kBAAkB,KAAKN,UAAU,IAAIM,kBAAkB,KAAKF,SAAS,EAAE;YACzEtB,SAAS,CAAC9jE,IAAI,CAAC;cACb,GAAG2mB,IAAI,CAAC2+C,kBAAkB,CAAC;cAC3BlmE,CAAC,EAAEohE;YACL,CAAC,CAAC;UACJ;QACF;QACA,IAAI7jE,CAAC,GAAG,CAAC,IAAIyoE,SAAS,KAAKJ,UAAU,EAAE;UACrClB,SAAS,CAAC9jE,IAAI,CAAC2mB,IAAI,CAACy+C,SAAS,CAAC,CAAC;QACjC;QACAtB,SAAS,CAAC9jE,IAAI,CAACwpB,KAAK,CAAC;QACrBk3C,KAAK,GAAGI,MAAM;QACdL,MAAM,GAAG,CAAC;QACVxI,IAAI,GAAGF,IAAI,GAAGz4D,CAAC;QACfwlE,QAAQ,GAAGC,QAAQ,GAAGC,UAAU,GAAGroE,CAAC;MACtC;IACF;IACA,OAAOmnE,SAAS;EAClB;EACA,SAASyB,qBAAqBA,CAACxmC,OAAO,EAAE;IACtC,IAAIA,OAAO,CAACw7B,UAAU,EAAE;MACtB,MAAM5zC,IAAI,GAAGoY,OAAO,CAACuP,KAAK;MAC1B,OAAOvP,OAAO,CAACw7B,UAAU;MACzB,OAAOx7B,OAAO,CAACuP,KAAK;MACpBpzC,MAAM,CAACoL,cAAc,CAACy4B,OAAO,EAAE,MAAM,EAAE;QAACjkC,KAAK,EAAE6rB;MAAI,CAAC,CAAC;IACvD;EACF;EACA,SAAS6+C,kBAAkBA,CAACv6D,KAAK,EAAE;IACjCA,KAAK,CAAC0b,IAAI,CAAC/H,QAAQ,CAACnY,OAAO,CAAEs4B,OAAO,IAAK;MACvCwmC,qBAAqB,CAACxmC,OAAO,CAAC;IAChC,CAAC,CAAC;EACJ;EACA,SAAS0mC,yCAAyCA,CAACx8D,IAAI,EAAEC,MAAM,EAAE;IAC/D,MAAME,UAAU,GAAGF,MAAM,CAACpM,MAAM;IAChC,IAAI6H,KAAK,GAAG,CAAC;IACb,IAAI0E,KAAK;IACT,MAAM;MAACE;IAAM,CAAC,GAAGN,IAAI;IACrB,MAAM;MAAC7F,GAAG;MAAEC,GAAG;MAAEqG,UAAU;MAAEC;IAAU,CAAC,GAAGJ,MAAM,CAACK,aAAa,CAAC,CAAC;IACjE,IAAIF,UAAU,EAAE;MACd/E,KAAK,GAAGQ,WAAW,CAACS,YAAY,CAACsD,MAAM,EAAEK,MAAM,CAACE,IAAI,EAAErG,GAAG,CAAC,CAACsC,EAAE,EAAE,CAAC,EAAE0D,UAAU,GAAG,CAAC,CAAC;IACnF;IACA,IAAIO,UAAU,EAAE;MACdN,KAAK,GAAGlE,WAAW,CAACS,YAAY,CAACsD,MAAM,EAAEK,MAAM,CAACE,IAAI,EAAEpG,GAAG,CAAC,CAACoC,EAAE,GAAG,CAAC,EAAEd,KAAK,EAAEyE,UAAU,CAAC,GAAGzE,KAAK;IAC/F,CAAC,MAAM;MACL0E,KAAK,GAAGD,UAAU,GAAGzE,KAAK;IAC5B;IACA,OAAO;MAACA,KAAK;MAAE0E;IAAK,CAAC;EACvB;EACA,IAAIq8D,iBAAiB,GAAG;IACtB9qE,EAAE,EAAE,YAAY;IAChB2mB,QAAQ,EAAE;MACRokD,SAAS,EAAE,SAAS;MACpBxtB,OAAO,EAAE;IACX,CAAC;IACDytB,oBAAoB,EAAEA,CAAC36D,KAAK,EAAE5O,IAAI,EAAE6B,OAAO,KAAK;MAC9C,IAAI,CAACA,OAAO,CAACi6C,OAAO,EAAE;QACpBqtB,kBAAkB,CAACv6D,KAAK,CAAC;QACzB;MACF;MACA,MAAMw1B,cAAc,GAAGx1B,KAAK,CAACgY,KAAK;MAClChY,KAAK,CAAC0b,IAAI,CAAC/H,QAAQ,CAACnY,OAAO,CAAC,CAACs4B,OAAO,EAAE1hC,YAAY,KAAK;QACrD,MAAM;UAACixC,KAAK;UAAE1uB;QAAS,CAAC,GAAGmf,OAAO;QAClC,MAAM91B,IAAI,GAAGgC,KAAK,CAAC+zB,cAAc,CAAC3hC,YAAY,CAAC;QAC/C,MAAMspB,IAAI,GAAG2nB,KAAK,IAAIvP,OAAO,CAACpY,IAAI;QAClC,IAAI0I,OAAO,CAAC,CAACzP,SAAS,EAAE3U,KAAK,CAAC/M,OAAO,CAAC0hB,SAAS,CAAC,CAAC,KAAK,GAAG,EAAE;UACzD;QACF;QACA,IAAI,CAAC3W,IAAI,CAACwzB,UAAU,CAACkS,kBAAkB,EAAE;UACvC;QACF;QACA,MAAMk3B,KAAK,GAAG56D,KAAK,CAACuV,MAAM,CAACvX,IAAI,CAAComC,OAAO,CAAC;QACxC,IAAIw2B,KAAK,CAAC5qE,IAAI,KAAK,QAAQ,IAAI4qE,KAAK,CAAC5qE,IAAI,KAAK,MAAM,EAAE;UACpD;QACF;QACA,IAAIgQ,KAAK,CAAC/M,OAAO,CAACkiB,OAAO,EAAE;UACzB;QACF;QACA,IAAI;UAACzb,KAAK;UAAE0E;QAAK,CAAC,GAAGo8D,yCAAyC,CAACx8D,IAAI,EAAE0d,IAAI,CAAC;QAC1E,MAAMm/C,SAAS,GAAG5nE,OAAO,CAAC4nE,SAAS,IAAI,CAAC,GAAGrlC,cAAc;QACzD,IAAIp3B,KAAK,IAAIy8D,SAAS,EAAE;UACtBP,qBAAqB,CAACxmC,OAAO,CAAC;UAC9B;QACF;QACA,IAAIlkC,aAAa,CAACyzC,KAAK,CAAC,EAAE;UACxBvP,OAAO,CAACuP,KAAK,GAAG3nB,IAAI;UACpB,OAAOoY,OAAO,CAACpY,IAAI;UACnBzrB,MAAM,CAACoL,cAAc,CAACy4B,OAAO,EAAE,MAAM,EAAE;YACrCx4B,YAAY,EAAE,IAAI;YAClBC,UAAU,EAAE,IAAI;YAChB6F,GAAG,EAAE,SAAAA,CAAA,EAAW;cACd,OAAO,IAAI,CAACkuD,UAAU;YACxB,CAAC;YACDpzD,GAAG,EAAE,SAAAA,CAASgH,CAAC,EAAE;cACf,IAAI,CAACmgC,KAAK,GAAGngC,CAAC;YAChB;UACF,CAAC,CAAC;QACJ;QACA,IAAI21D,SAAS;QACb,QAAQ5lE,OAAO,CAACynE,SAAS;UACzB,KAAK,MAAM;YACT7B,SAAS,GAAGF,cAAc,CAACj9C,IAAI,EAAEhiB,KAAK,EAAE0E,KAAK,EAAEo3B,cAAc,EAAEviC,OAAO,CAAC;YACvE;UACF,KAAK,SAAS;YACZ4lE,SAAS,GAAGe,gBAAgB,CAACl+C,IAAI,EAAEhiB,KAAK,EAAE0E,KAAK,EAAEo3B,cAAc,CAAC;YAChE;UACF;YACE,MAAM,IAAIjR,KAAK,CAAE,qCAAoCtxB,OAAO,CAACynE,SAAU,GAAE,CAAC;QAC5E;QACA5mC,OAAO,CAACw7B,UAAU,GAAGuJ,SAAS;MAChC,CAAC,CAAC;IACJ,CAAC;IACDhT,OAAOA,CAAC7lD,KAAK,EAAE;MACbu6D,kBAAkB,CAACv6D,KAAK,CAAC;IAC3B;EACF,CAAC;EAED,SAAS02D,SAASA,CAAC92C,IAAI,EAAEntB,MAAM,EAAEyF,QAAQ,EAAE;IACzC,MAAMo3B,QAAQ,GAAG1P,IAAI,CAAC0P,QAAQ;IAC9B,MAAMrxB,MAAM,GAAG2hB,IAAI,CAAC3hB,MAAM;IAC1B,MAAM68D,OAAO,GAAGroE,MAAM,CAACwL,MAAM;IAC7B,MAAMtJ,KAAK,GAAG,EAAE;IAChB,KAAK,MAAM85B,OAAO,IAAIa,QAAQ,EAAE;MAC9B,IAAI;QAAC51B,KAAK;QAAEC;MAAG,CAAC,GAAG80B,OAAO;MAC1B90B,GAAG,GAAGohE,eAAe,CAACrhE,KAAK,EAAEC,GAAG,EAAEsE,MAAM,CAAC;MACzC,MAAMywB,MAAM,GAAGssC,UAAU,CAAC9iE,QAAQ,EAAE+F,MAAM,CAACvE,KAAK,CAAC,EAAEuE,MAAM,CAACtE,GAAG,CAAC,EAAE80B,OAAO,CAACxG,IAAI,CAAC;MAC7E,IAAI,CAACx1B,MAAM,CAAC68B,QAAQ,EAAE;QACpB36B,KAAK,CAACI,IAAI,CAAC;UACTxC,MAAM,EAAEk8B,OAAO;UACfh8B,MAAM,EAAEi8B,MAAM;UACdh1B,KAAK,EAAEuE,MAAM,CAACvE,KAAK,CAAC;UACpBC,GAAG,EAAEsE,MAAM,CAACtE,GAAG;QACjB,CAAC,CAAC;QACF;MACF;MACA,MAAMshE,cAAc,GAAG5rC,cAAc,CAAC58B,MAAM,EAAEi8B,MAAM,CAAC;MACrD,KAAK,MAAMwsC,GAAG,IAAID,cAAc,EAAE;QAChC,MAAME,SAAS,GAAGH,UAAU,CAAC9iE,QAAQ,EAAE4iE,OAAO,CAACI,GAAG,CAACxhE,KAAK,CAAC,EAAEohE,OAAO,CAACI,GAAG,CAACvhE,GAAG,CAAC,EAAEuhE,GAAG,CAACjzC,IAAI,CAAC;QACtF,MAAMmzC,WAAW,GAAGvsC,aAAa,CAACJ,OAAO,EAAExwB,MAAM,EAAEk9D,SAAS,CAAC;QAC7D,KAAK,MAAME,UAAU,IAAID,WAAW,EAAE;UACpCzmE,KAAK,CAACI,IAAI,CAAC;YACTxC,MAAM,EAAE8oE,UAAU;YAClB5oE,MAAM,EAAEyoE,GAAG;YACXxhE,KAAK,EAAE;cACL,CAACxB,QAAQ,GAAGojE,QAAQ,CAAC5sC,MAAM,EAAEysC,SAAS,EAAE,OAAO,EAAEplE,IAAI,CAACqC,GAAG;YAC3D,CAAC;YACDuB,GAAG,EAAE;cACH,CAACzB,QAAQ,GAAGojE,QAAQ,CAAC5sC,MAAM,EAAEysC,SAAS,EAAE,KAAK,EAAEplE,IAAI,CAACoC,GAAG;YACzD;UACF,CAAC,CAAC;QACJ;MACF;IACF;IACA,OAAOxD,KAAK;EACd;EACA,SAASqmE,UAAUA,CAAC9iE,QAAQ,EAAEm1C,KAAK,EAAEzyC,IAAI,EAAEqtB,IAAI,EAAE;IAC/C,IAAIA,IAAI,EAAE;MACR;IACF;IACA,IAAIvuB,KAAK,GAAG2zC,KAAK,CAACn1C,QAAQ,CAAC;IAC3B,IAAIyB,GAAG,GAAGiB,IAAI,CAAC1C,QAAQ,CAAC;IACxB,IAAIA,QAAQ,KAAK,OAAO,EAAE;MACxBwB,KAAK,GAAGF,eAAe,CAACE,KAAK,CAAC;MAC9BC,GAAG,GAAGH,eAAe,CAACG,GAAG,CAAC;IAC5B;IACA,OAAO;MAACzB,QAAQ;MAAEwB,KAAK;MAAEC;IAAG,CAAC;EAC/B;EACA,SAAS4hE,mBAAmBA,CAACC,QAAQ,EAAE57C,IAAI,EAAE;IAC3C,MAAM;MAACzrB,CAAC,GAAG,IAAI;MAAEE,CAAC,GAAG;IAAI,CAAC,GAAGmnE,QAAQ,IAAI,CAAC,CAAC;IAC3C,MAAMC,UAAU,GAAG77C,IAAI,CAAC3hB,MAAM;IAC9B,MAAMA,MAAM,GAAG,EAAE;IACjB2hB,IAAI,CAAC0P,QAAQ,CAAC9zB,OAAO,CAAC,CAAC;MAAC9B,KAAK;MAAEC;IAAG,CAAC,KAAK;MACtCA,GAAG,GAAGohE,eAAe,CAACrhE,KAAK,EAAEC,GAAG,EAAE8hE,UAAU,CAAC;MAC7C,MAAMpuB,KAAK,GAAGouB,UAAU,CAAC/hE,KAAK,CAAC;MAC/B,MAAMkB,IAAI,GAAG6gE,UAAU,CAAC9hE,GAAG,CAAC;MAC5B,IAAItF,CAAC,KAAK,IAAI,EAAE;QACd4J,MAAM,CAAClJ,IAAI,CAAC;UAACZ,CAAC,EAAEk5C,KAAK,CAACl5C,CAAC;UAAEE;QAAC,CAAC,CAAC;QAC5B4J,MAAM,CAAClJ,IAAI,CAAC;UAACZ,CAAC,EAAEyG,IAAI,CAACzG,CAAC;UAAEE;QAAC,CAAC,CAAC;MAC7B,CAAC,MAAM,IAAIF,CAAC,KAAK,IAAI,EAAE;QACrB8J,MAAM,CAAClJ,IAAI,CAAC;UAACZ,CAAC;UAAEE,CAAC,EAAEg5C,KAAK,CAACh5C;QAAC,CAAC,CAAC;QAC5B4J,MAAM,CAAClJ,IAAI,CAAC;UAACZ,CAAC;UAAEE,CAAC,EAAEuG,IAAI,CAACvG;QAAC,CAAC,CAAC;MAC7B;IACF,CAAC,CAAC;IACF,OAAO4J,MAAM;EACf;EACA,SAAS88D,eAAeA,CAACrhE,KAAK,EAAEC,GAAG,EAAEsE,MAAM,EAAE;IAC3C,OAAMtE,GAAG,GAAGD,KAAK,EAAEC,GAAG,EAAE,EAAE;MACxB,MAAM4kB,KAAK,GAAGtgB,MAAM,CAACtE,GAAG,CAAC;MACzB,IAAI,CAAChC,KAAK,CAAC4mB,KAAK,CAACpqB,CAAC,CAAC,IAAI,CAACwD,KAAK,CAAC4mB,KAAK,CAAClqB,CAAC,CAAC,EAAE;QACtC;MACF;IACF;IACA,OAAOsF,GAAG;EACZ;EACA,SAAS2hE,QAAQA,CAAC/lE,CAAC,EAAEC,CAAC,EAAE4sB,IAAI,EAAEjxB,EAAE,EAAE;IAChC,IAAIoE,CAAC,IAAIC,CAAC,EAAE;MACV,OAAOrE,EAAE,CAACoE,CAAC,CAAC6sB,IAAI,CAAC,EAAE5sB,CAAC,CAAC4sB,IAAI,CAAC,CAAC;IAC7B;IACA,OAAO7sB,CAAC,GAAGA,CAAC,CAAC6sB,IAAI,CAAC,GAAG5sB,CAAC,GAAGA,CAAC,CAAC4sB,IAAI,CAAC,GAAG,CAAC;EACtC;EAEA,SAASs5C,mBAAmBA,CAACF,QAAQ,EAAE57C,IAAI,EAAE;IAC3C,IAAI3hB,MAAM,GAAG,EAAE;IACf,IAAI2xB,KAAK,GAAG,KAAK;IACjB,IAAI9/B,OAAO,CAAC0rE,QAAQ,CAAC,EAAE;MACrB5rC,KAAK,GAAG,IAAI;MACZ3xB,MAAM,GAAGu9D,QAAQ;IACnB,CAAC,MAAM;MACLv9D,MAAM,GAAGs9D,mBAAmB,CAACC,QAAQ,EAAE57C,IAAI,CAAC;IAC9C;IACA,OAAO3hB,MAAM,CAACpM,MAAM,GAAG,IAAI2kE,WAAW,CAAC;MACrCv4D,MAAM;MACNhL,OAAO,EAAE;QAACq1B,OAAO,EAAE;MAAC,CAAC;MACrBsH,KAAK;MACLG,SAAS,EAAEH;IACb,CAAC,CAAC,GAAG,IAAI;EACX;EACA,SAAS+rC,gBAAgBA,CAACppE,MAAM,EAAE;IAChC,OAAOA,MAAM,IAAIA,MAAM,CAAC4rB,IAAI,KAAK,KAAK;EACxC;EAEA,SAASy9C,cAAcA,CAACvoE,OAAO,EAAEhB,KAAK,EAAEwpE,SAAS,EAAE;IACjD,MAAMtpE,MAAM,GAAGc,OAAO,CAAChB,KAAK,CAAC;IAC7B,IAAI8rB,IAAI,GAAG5rB,MAAM,CAAC4rB,IAAI;IACtB,MAAM29C,OAAO,GAAG,CAACzpE,KAAK,CAAC;IACvB,IAAII,MAAM;IACV,IAAI,CAACopE,SAAS,EAAE;MACd,OAAO19C,IAAI;IACb;IACA,OAAOA,IAAI,KAAK,KAAK,IAAI29C,OAAO,CAAC/oE,OAAO,CAACorB,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;MACrD,IAAI,CAAC5tB,cAAc,CAAC4tB,IAAI,CAAC,EAAE;QACzB,OAAOA,IAAI;MACb;MACA1rB,MAAM,GAAGY,OAAO,CAAC8qB,IAAI,CAAC;MACtB,IAAI,CAAC1rB,MAAM,EAAE;QACX,OAAO,KAAK;MACd;MACA,IAAIA,MAAM,CAACosC,OAAO,EAAE;QAClB,OAAO1gB,IAAI;MACb;MACA29C,OAAO,CAAC/mE,IAAI,CAACopB,IAAI,CAAC;MAClBA,IAAI,GAAG1rB,MAAM,CAAC0rB,IAAI;IACpB;IACA,OAAO,KAAK;EACd;EACA,SAAS49C,WAAWA,CAACn8C,IAAI,EAAEvtB,KAAK,EAAE+L,KAAK,EAAE;IACvC,MAAM+f,IAAI,GAAG69C,eAAe,CAACp8C,IAAI,CAAC;IAClC,IAAItvB,QAAQ,CAAC6tB,IAAI,CAAC,EAAE;MAClB,OAAOxmB,KAAK,CAACwmB,IAAI,CAACtuB,KAAK,CAAC,GAAG,KAAK,GAAGsuB,IAAI;IACzC;IACA,IAAI1rB,MAAM,GAAGzB,UAAU,CAACmtB,IAAI,CAAC;IAC7B,IAAI5tB,cAAc,CAACkC,MAAM,CAAC,IAAIsD,IAAI,CAACkB,KAAK,CAACxE,MAAM,CAAC,KAAKA,MAAM,EAAE;MAC3D,OAAOwpE,iBAAiB,CAAC99C,IAAI,CAAC,CAAC,CAAC,EAAE9rB,KAAK,EAAEI,MAAM,EAAE2L,KAAK,CAAC;IACzD;IACA,OAAO,CAAC,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAACrL,OAAO,CAACorB,IAAI,CAAC,IAAI,CAAC,IAAIA,IAAI;EAChF;EACA,SAAS89C,iBAAiBA,CAACC,OAAO,EAAE7pE,KAAK,EAAEI,MAAM,EAAE2L,KAAK,EAAE;IACxD,IAAI89D,OAAO,KAAK,GAAG,IAAIA,OAAO,KAAK,GAAG,EAAE;MACtCzpE,MAAM,GAAGJ,KAAK,GAAGI,MAAM;IACzB;IACA,IAAIA,MAAM,KAAKJ,KAAK,IAAII,MAAM,GAAG,CAAC,IAAIA,MAAM,IAAI2L,KAAK,EAAE;MACrD,OAAO,KAAK;IACd;IACA,OAAO3L,MAAM;EACf;EACA,SAAS0pE,eAAeA,CAACh+C,IAAI,EAAE7I,KAAK,EAAE;IACpC,IAAIqH,KAAK,GAAG,IAAI;IAChB,IAAIwB,IAAI,KAAK,OAAO,EAAE;MACpBxB,KAAK,GAAGrH,KAAK,CAAC6C,MAAM;IACtB,CAAC,MAAM,IAAIgG,IAAI,KAAK,KAAK,EAAE;MACzBxB,KAAK,GAAGrH,KAAK,CAAC4C,GAAG;IACnB,CAAC,MAAM,IAAI5nB,QAAQ,CAAC6tB,IAAI,CAAC,EAAE;MACzBxB,KAAK,GAAGrH,KAAK,CAAC1W,gBAAgB,CAACuf,IAAI,CAACtuB,KAAK,CAAC;IAC5C,CAAC,MAAM,IAAIylB,KAAK,CAACygC,YAAY,EAAE;MAC7Bp5B,KAAK,GAAGrH,KAAK,CAACygC,YAAY,CAAC,CAAC;IAC9B;IACA,OAAOp5B,KAAK;EACd;EACA,SAASy/C,eAAeA,CAACj+C,IAAI,EAAE7I,KAAK,EAAE2zC,UAAU,EAAE;IAChD,IAAIp5D,KAAK;IACT,IAAIsuB,IAAI,KAAK,OAAO,EAAE;MACpBtuB,KAAK,GAAGo5D,UAAU;IACpB,CAAC,MAAM,IAAI9qC,IAAI,KAAK,KAAK,EAAE;MACzBtuB,KAAK,GAAGylB,KAAK,CAACriB,OAAO,CAACxB,OAAO,GAAG6jB,KAAK,CAACnd,GAAG,GAAGmd,KAAK,CAACld,GAAG;IACvD,CAAC,MAAM,IAAI9H,QAAQ,CAAC6tB,IAAI,CAAC,EAAE;MACzBtuB,KAAK,GAAGsuB,IAAI,CAACtuB,KAAK;IACpB,CAAC,MAAM;MACLA,KAAK,GAAGylB,KAAK,CAAC0gC,YAAY,CAAC,CAAC;IAC9B;IACA,OAAOnmD,KAAK;EACd;EACA,SAASmsE,eAAeA,CAACp8C,IAAI,EAAE;IAC7B,MAAM3sB,OAAO,GAAG2sB,IAAI,CAAC3sB,OAAO;IAC5B,MAAMopE,UAAU,GAAGppE,OAAO,CAACkrB,IAAI;IAC/B,IAAIA,IAAI,GAAGvtB,cAAc,CAACyrE,UAAU,IAAIA,UAAU,CAAC5pE,MAAM,EAAE4pE,UAAU,CAAC;IACtE,IAAIl+C,IAAI,KAAKrqB,SAAS,EAAE;MACtBqqB,IAAI,GAAG,CAAC,CAAClrB,OAAO,CAACwgB,eAAe;IAClC;IACA,IAAI0K,IAAI,KAAK,KAAK,IAAIA,IAAI,KAAK,IAAI,EAAE;MACnC,OAAO,KAAK;IACd;IACA,IAAIA,IAAI,KAAK,IAAI,EAAE;MACjB,OAAO,QAAQ;IACjB;IACA,OAAOA,IAAI;EACb;EAEA,SAASm+C,eAAeA,CAAC/pE,MAAM,EAAE;IAC/B,MAAM;MAAC+iB,KAAK;MAAEjjB,KAAK;MAAEutB;IAAI,CAAC,GAAGrtB,MAAM;IACnC,MAAM0L,MAAM,GAAG,EAAE;IACjB,MAAMqxB,QAAQ,GAAG1P,IAAI,CAAC0P,QAAQ;IAC9B,MAAMitC,YAAY,GAAG38C,IAAI,CAAC3hB,MAAM;IAChC,MAAMu+D,UAAU,GAAGC,aAAa,CAACnnD,KAAK,EAAEjjB,KAAK,CAAC;IAC9CmqE,UAAU,CAACznE,IAAI,CAAC2mE,mBAAmB,CAAC;MAACvnE,CAAC,EAAE,IAAI;MAAEE,CAAC,EAAEihB,KAAK,CAAC6C;IAAM,CAAC,EAAEyH,IAAI,CAAC,CAAC;IACtE,KAAK,IAAIluB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG49B,QAAQ,CAACz9B,MAAM,EAAEH,CAAC,EAAE,EAAE;MACxC,MAAM+8B,OAAO,GAAGa,QAAQ,CAAC59B,CAAC,CAAC;MAC3B,KAAK,IAAIue,CAAC,GAAGwe,OAAO,CAAC/0B,KAAK,EAAEuW,CAAC,IAAIwe,OAAO,CAAC90B,GAAG,EAAEsW,CAAC,EAAE,EAAE;QACjDysD,cAAc,CAACz+D,MAAM,EAAEs+D,YAAY,CAACtsD,CAAC,CAAC,EAAEusD,UAAU,CAAC;MACrD;IACF;IACA,OAAO,IAAIhG,WAAW,CAAC;MAACv4D,MAAM;MAAEhL,OAAO,EAAE,CAAC;IAAC,CAAC,CAAC;EAC/C;EACA,SAASwpE,aAAaA,CAACnnD,KAAK,EAAEjjB,KAAK,EAAE;IACnC,MAAMsqE,KAAK,GAAG,EAAE;IAChB,MAAMtrB,KAAK,GAAG/7B,KAAK,CAACmsB,uBAAuB,CAAC,MAAM,CAAC;IACnD,KAAK,IAAI/vC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2/C,KAAK,CAACx/C,MAAM,EAAEH,CAAC,EAAE,EAAE;MACrC,MAAMsM,IAAI,GAAGqzC,KAAK,CAAC3/C,CAAC,CAAC;MACrB,IAAIsM,IAAI,CAAC3L,KAAK,KAAKA,KAAK,EAAE;QACxB;MACF;MACA,IAAI,CAAC2L,IAAI,CAAC8kC,MAAM,EAAE;QAChB65B,KAAK,CAACC,OAAO,CAAC5+D,IAAI,CAAC81B,OAAO,CAAC;MAC7B;IACF;IACA,OAAO6oC,KAAK;EACd;EACA,SAASD,cAAcA,CAACz+D,MAAM,EAAE4+D,WAAW,EAAEL,UAAU,EAAE;IACvD,MAAMM,SAAS,GAAG,EAAE;IACpB,KAAK,IAAI7sD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGusD,UAAU,CAAC3qE,MAAM,EAAEoe,CAAC,EAAE,EAAE;MAC1C,MAAM2P,IAAI,GAAG48C,UAAU,CAACvsD,CAAC,CAAC;MAC1B,MAAM;QAACo9B,KAAK;QAAEzyC,IAAI;QAAE2jB;MAAK,CAAC,GAAGw+C,SAAS,CAACn9C,IAAI,EAAEi9C,WAAW,EAAE,GAAG,CAAC;MAC9D,IAAI,CAACt+C,KAAK,IAAK8uB,KAAK,IAAIzyC,IAAK,EAAE;QAC7B;MACF;MACA,IAAIyyC,KAAK,EAAE;QACTyvB,SAAS,CAACF,OAAO,CAACr+C,KAAK,CAAC;MAC1B,CAAC,MAAM;QACLtgB,MAAM,CAAClJ,IAAI,CAACwpB,KAAK,CAAC;QAClB,IAAI,CAAC3jB,IAAI,EAAE;UACT;QACF;MACF;IACF;IACAqD,MAAM,CAAClJ,IAAI,CAAC,GAAG+nE,SAAS,CAAC;EAC3B;EACA,SAASC,SAASA,CAACn9C,IAAI,EAAEi9C,WAAW,EAAE3kE,QAAQ,EAAE;IAC9C,MAAMqmB,KAAK,GAAGqB,IAAI,CAACxN,WAAW,CAACyqD,WAAW,EAAE3kE,QAAQ,CAAC;IACrD,IAAI,CAACqmB,KAAK,EAAE;MACV,OAAO,CAAC,CAAC;IACX;IACA,MAAMy+C,UAAU,GAAGz+C,KAAK,CAACrmB,QAAQ,CAAC;IAClC,MAAMo3B,QAAQ,GAAG1P,IAAI,CAAC0P,QAAQ;IAC9B,MAAMmsC,UAAU,GAAG77C,IAAI,CAAC3hB,MAAM;IAC9B,IAAIovC,KAAK,GAAG,KAAK;IACjB,IAAIzyC,IAAI,GAAG,KAAK;IAChB,KAAK,IAAIlJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG49B,QAAQ,CAACz9B,MAAM,EAAEH,CAAC,EAAE,EAAE;MACxC,MAAM+8B,OAAO,GAAGa,QAAQ,CAAC59B,CAAC,CAAC;MAC3B,MAAMurE,UAAU,GAAGxB,UAAU,CAAChtC,OAAO,CAAC/0B,KAAK,CAAC,CAACxB,QAAQ,CAAC;MACtD,MAAMglE,SAAS,GAAGzB,UAAU,CAAChtC,OAAO,CAAC90B,GAAG,CAAC,CAACzB,QAAQ,CAAC;MACnD,IAAIkC,UAAU,CAAC4iE,UAAU,EAAEC,UAAU,EAAEC,SAAS,CAAC,EAAE;QACjD7vB,KAAK,GAAG2vB,UAAU,KAAKC,UAAU;QACjCriE,IAAI,GAAGoiE,UAAU,KAAKE,SAAS;QAC/B;MACF;IACF;IACA,OAAO;MAAC7vB,KAAK;MAAEzyC,IAAI;MAAE2jB;IAAK,CAAC;EAC7B;EAEA,MAAM4+C,SAAS,CAAC;IACd19D,WAAWA,CAAC+f,IAAI,EAAE;MAChB,IAAI,CAACrrB,CAAC,GAAGqrB,IAAI,CAACrrB,CAAC;MACf,IAAI,CAACE,CAAC,GAAGmrB,IAAI,CAACnrB,CAAC;MACf,IAAI,CAACipB,MAAM,GAAGkC,IAAI,CAAClC,MAAM;IAC3B;IACA83C,WAAWA,CAAC5gD,GAAG,EAAEka,MAAM,EAAElP,IAAI,EAAE;MAC7B,MAAM;QAACrrB,CAAC;QAAEE,CAAC;QAAEipB;MAAM,CAAC,GAAG,IAAI;MAC3BoR,MAAM,GAAGA,MAAM,IAAI;QAACh1B,KAAK,EAAE,CAAC;QAAEC,GAAG,EAAE3D;MAAG,CAAC;MACvCwe,GAAG,CAACoJ,GAAG,CAACzpB,CAAC,EAAEE,CAAC,EAAEipB,MAAM,EAAEoR,MAAM,CAAC/0B,GAAG,EAAE+0B,MAAM,CAACh1B,KAAK,EAAE,IAAI,CAAC;MACrD,OAAO,CAAC8lB,IAAI,CAACkP,MAAM;IACrB;IACAtc,WAAWA,CAACmM,KAAK,EAAE;MACjB,MAAM;QAACpqB,CAAC;QAAEE,CAAC;QAAEipB;MAAM,CAAC,GAAG,IAAI;MAC3B,MAAMrkB,KAAK,GAAGslB,KAAK,CAACtlB,KAAK;MACzB,OAAO;QACL9E,CAAC,EAAEA,CAAC,GAAG4B,IAAI,CAACioB,GAAG,CAAC/kB,KAAK,CAAC,GAAGqkB,MAAM;QAC/BjpB,CAAC,EAAEA,CAAC,GAAG0B,IAAI,CAACgoB,GAAG,CAAC9kB,KAAK,CAAC,GAAGqkB,MAAM;QAC/BrkB;MACF,CAAC;IACH;EACF;EAEA,SAASgpB,UAAUA,CAAC1vB,MAAM,EAAE;IAC1B,MAAM;MAACyN,KAAK;MAAEme,IAAI;MAAEyB;IAAI,CAAC,GAAGrtB,MAAM;IAClC,IAAIhC,cAAc,CAAC4tB,IAAI,CAAC,EAAE;MACxB,OAAOi/C,cAAc,CAACp9D,KAAK,EAAEme,IAAI,CAAC;IACpC;IACA,IAAIA,IAAI,KAAK,OAAO,EAAE;MACpB,OAAOm+C,eAAe,CAAC/pE,MAAM,CAAC;IAChC;IACA,IAAI4rB,IAAI,KAAK,OAAO,EAAE;MACpB,OAAO,IAAI;IACb;IACA,MAAMq9C,QAAQ,GAAG6B,eAAe,CAAC9qE,MAAM,CAAC;IACxC,IAAIipE,QAAQ,YAAY2B,SAAS,EAAE;MACjC,OAAO3B,QAAQ;IACjB;IACA,OAAOE,mBAAmB,CAACF,QAAQ,EAAE57C,IAAI,CAAC;EAC5C;EACA,SAASw9C,cAAcA,CAACp9D,KAAK,EAAE3N,KAAK,EAAE;IACpC,MAAM2L,IAAI,GAAGgC,KAAK,CAAC+zB,cAAc,CAAC1hC,KAAK,CAAC;IACxC,MAAMwsC,OAAO,GAAG7gC,IAAI,IAAIgC,KAAK,CAAC2jD,gBAAgB,CAACtxD,KAAK,CAAC;IACrD,OAAOwsC,OAAO,GAAG7gC,IAAI,CAAC81B,OAAO,GAAG,IAAI;EACtC;EACA,SAASupC,eAAeA,CAAC9qE,MAAM,EAAE;IAC/B,MAAM+iB,KAAK,GAAG/iB,MAAM,CAAC+iB,KAAK,IAAI,CAAC,CAAC;IAChC,IAAIA,KAAK,CAAC27C,wBAAwB,EAAE;MAClC,OAAOqM,uBAAuB,CAAC/qE,MAAM,CAAC;IACxC;IACA,OAAOgrE,qBAAqB,CAAChrE,MAAM,CAAC;EACtC;EACA,SAASgrE,qBAAqBA,CAAChrE,MAAM,EAAE;IACrC,MAAM;MAAC+iB,KAAK,GAAG,CAAC,CAAC;MAAE6I;IAAI,CAAC,GAAG5rB,MAAM;IACjC,MAAMoqB,KAAK,GAAGw/C,eAAe,CAACh+C,IAAI,EAAE7I,KAAK,CAAC;IAC1C,IAAI/kB,cAAc,CAACosB,KAAK,CAAC,EAAE;MACzB,MAAM+X,UAAU,GAAGpf,KAAK,CAACqf,YAAY,CAAC,CAAC;MACvC,OAAO;QACLxgC,CAAC,EAAEugC,UAAU,GAAG/X,KAAK,GAAG,IAAI;QAC5BtoB,CAAC,EAAEqgC,UAAU,GAAG,IAAI,GAAG/X;MACzB,CAAC;IACH;IACA,OAAO,IAAI;EACb;EACA,SAAS2gD,uBAAuBA,CAAC/qE,MAAM,EAAE;IACvC,MAAM;MAAC+iB,KAAK;MAAE6I;IAAI,CAAC,GAAG5rB,MAAM;IAC5B,MAAMU,OAAO,GAAGqiB,KAAK,CAACriB,OAAO;IAC7B,MAAMpB,MAAM,GAAGyjB,KAAK,CAAC+wB,SAAS,CAAC,CAAC,CAACx0C,MAAM;IACvC,MAAM6H,KAAK,GAAGzG,OAAO,CAACxB,OAAO,GAAG6jB,KAAK,CAACld,GAAG,GAAGkd,KAAK,CAACnd,GAAG;IACrD,MAAMtI,KAAK,GAAGusE,eAAe,CAACj+C,IAAI,EAAE7I,KAAK,EAAE5b,KAAK,CAAC;IACjD,MAAMjH,MAAM,GAAG,EAAE;IACjB,IAAIQ,OAAO,CAACs4C,IAAI,CAACqlB,QAAQ,EAAE;MACzB,MAAMv9B,MAAM,GAAG/d,KAAK,CAAC27C,wBAAwB,CAAC,CAAC,EAAEv3D,KAAK,CAAC;MACvD,OAAO,IAAIyjE,SAAS,CAAC;QACnBhpE,CAAC,EAAEk/B,MAAM,CAACl/B,CAAC;QACXE,CAAC,EAAEg/B,MAAM,CAACh/B,CAAC;QACXipB,MAAM,EAAEhI,KAAK,CAACo7C,6BAA6B,CAAC7gE,KAAK;MACnD,CAAC,CAAC;IACJ;IACA,KAAK,IAAI6B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGG,MAAM,EAAE,EAAEH,CAAC,EAAE;MAC/Be,MAAM,CAACsC,IAAI,CAACugB,KAAK,CAAC27C,wBAAwB,CAACv/D,CAAC,EAAE7B,KAAK,CAAC,CAAC;IACvD;IACA,OAAO4C,MAAM;EACf;EAEA,SAAS+qE,SAASA,CAAChpD,GAAG,EAAEjiB,MAAM,EAAEisB,IAAI,EAAE;IACpC,MAAM/rB,MAAM,GAAGwvB,UAAU,CAAC1vB,MAAM,CAAC;IACjC,MAAM;MAACqtB,IAAI;MAAEtK,KAAK;MAAE9W;IAAI,CAAC,GAAGjM,MAAM;IAClC,MAAMkrE,QAAQ,GAAG79C,IAAI,CAAC3sB,OAAO;IAC7B,MAAMopE,UAAU,GAAGoB,QAAQ,CAACt/C,IAAI;IAChC,MAAMrM,KAAK,GAAG2rD,QAAQ,CAAChqD,eAAe;IACtC,MAAM;MAACiqD,KAAK,GAAG5rD,KAAK;MAAE6qD,KAAK,GAAG7qD;IAAK,CAAC,GAAGuqD,UAAU,IAAI,CAAC,CAAC;IACvD,IAAI5pE,MAAM,IAAImtB,IAAI,CAAC3hB,MAAM,CAACpM,MAAM,EAAE;MAChC6sB,QAAQ,CAAClK,GAAG,EAAEgK,IAAI,CAAC;MACnBm/C,MAAM,CAACnpD,GAAG,EAAE;QAACoL,IAAI;QAAEntB,MAAM;QAAEirE,KAAK;QAAEf,KAAK;QAAEn+C,IAAI;QAAElJ,KAAK;QAAE9W;MAAI,CAAC,CAAC;MAC5DogB,UAAU,CAACpK,GAAG,CAAC;IACjB;EACF;EACA,SAASmpD,MAAMA,CAACnpD,GAAG,EAAE4oB,GAAG,EAAE;IACxB,MAAM;MAACxd,IAAI;MAAEntB,MAAM;MAAEirE,KAAK;MAAEf,KAAK;MAAEn+C,IAAI;MAAElJ;IAAK,CAAC,GAAG8nB,GAAG;IACrD,MAAMllC,QAAQ,GAAG0nB,IAAI,CAACgQ,KAAK,GAAG,OAAO,GAAGwN,GAAG,CAAC5+B,IAAI;IAChDgW,GAAG,CAAC4H,IAAI,CAAC,CAAC;IACV,IAAIlkB,QAAQ,KAAK,GAAG,IAAIykE,KAAK,KAAKe,KAAK,EAAE;MACvCE,YAAY,CAACppD,GAAG,EAAE/hB,MAAM,EAAE+rB,IAAI,CAACtG,GAAG,CAAC;MACnCiG,IAAI,CAAC3J,GAAG,EAAE;QAACoL,IAAI;QAAEntB,MAAM;QAAEqf,KAAK,EAAE4rD,KAAK;QAAEpoD,KAAK;QAAEpd;MAAQ,CAAC,CAAC;MACxDsc,GAAG,CAACgI,OAAO,CAAC,CAAC;MACbhI,GAAG,CAAC4H,IAAI,CAAC,CAAC;MACVwhD,YAAY,CAACppD,GAAG,EAAE/hB,MAAM,EAAE+rB,IAAI,CAACrG,MAAM,CAAC;IACxC;IACAgG,IAAI,CAAC3J,GAAG,EAAE;MAACoL,IAAI;MAAEntB,MAAM;MAAEqf,KAAK,EAAE6qD,KAAK;MAAErnD,KAAK;MAAEpd;IAAQ,CAAC,CAAC;IACxDsc,GAAG,CAACgI,OAAO,CAAC,CAAC;EACf;EACA,SAASohD,YAAYA,CAACppD,GAAG,EAAE/hB,MAAM,EAAEorE,KAAK,EAAE;IACxC,MAAM;MAACvuC,QAAQ;MAAErxB;IAAM,CAAC,GAAGxL,MAAM;IACjC,IAAI46C,KAAK,GAAG,IAAI;IAChB,IAAIywB,QAAQ,GAAG,KAAK;IACpBtpD,GAAG,CAACkJ,SAAS,CAAC,CAAC;IACf,KAAK,MAAM+Q,OAAO,IAAIa,QAAQ,EAAE;MAC9B,MAAM;QAAC51B,KAAK;QAAEC;MAAG,CAAC,GAAG80B,OAAO;MAC5B,MAAM3I,UAAU,GAAG7nB,MAAM,CAACvE,KAAK,CAAC;MAChC,MAAMm2D,SAAS,GAAG5xD,MAAM,CAAC88D,eAAe,CAACrhE,KAAK,EAAEC,GAAG,EAAEsE,MAAM,CAAC,CAAC;MAC7D,IAAIovC,KAAK,EAAE;QACT74B,GAAG,CAACsJ,MAAM,CAACgI,UAAU,CAAC3xB,CAAC,EAAE2xB,UAAU,CAACzxB,CAAC,CAAC;QACtCg5C,KAAK,GAAG,KAAK;MACf,CAAC,MAAM;QACL74B,GAAG,CAACyJ,MAAM,CAAC6H,UAAU,CAAC3xB,CAAC,EAAE0pE,KAAK,CAAC;QAC/BrpD,GAAG,CAACyJ,MAAM,CAAC6H,UAAU,CAAC3xB,CAAC,EAAE2xB,UAAU,CAACzxB,CAAC,CAAC;MACxC;MACAypE,QAAQ,GAAG,CAAC,CAACrrE,MAAM,CAAC2iE,WAAW,CAAC5gD,GAAG,EAAEia,OAAO,EAAE;QAAC+a,IAAI,EAAEs0B;MAAQ,CAAC,CAAC;MAC/D,IAAIA,QAAQ,EAAE;QACZtpD,GAAG,CAACqJ,SAAS,CAAC,CAAC;MACjB,CAAC,MAAM;QACLrJ,GAAG,CAACyJ,MAAM,CAAC4xC,SAAS,CAAC17D,CAAC,EAAE0pE,KAAK,CAAC;MAChC;IACF;IACArpD,GAAG,CAACyJ,MAAM,CAACxrB,MAAM,CAAC46C,KAAK,CAAC,CAAC,CAACl5C,CAAC,EAAE0pE,KAAK,CAAC;IACnCrpD,GAAG,CAACqJ,SAAS,CAAC,CAAC;IACfrJ,GAAG,CAACmK,IAAI,CAAC,CAAC;EACZ;EACA,SAASR,IAAIA,CAAC3J,GAAG,EAAE4oB,GAAG,EAAE;IACtB,MAAM;MAACxd,IAAI;MAAEntB,MAAM;MAAEyF,QAAQ;MAAE4Z,KAAK;MAAEwD;IAAK,CAAC,GAAG8nB,GAAG;IAClD,MAAM9N,QAAQ,GAAGonC,SAAS,CAAC92C,IAAI,EAAEntB,MAAM,EAAEyF,QAAQ,CAAC;IAClD,KAAK,MAAM;MAAC3F,MAAM,EAAEwrE,GAAG;MAAEtrE,MAAM,EAAEyoE,GAAG;MAAExhE,KAAK;MAAEC;IAAG,CAAC,IAAI21B,QAAQ,EAAE;MAC7D,MAAM;QAAClb,KAAK,EAAE;UAACX,eAAe,GAAG3B;QAAK,CAAC,GAAG,CAAC;MAAC,CAAC,GAAGisD,GAAG;MACnD,MAAMC,QAAQ,GAAGvrE,MAAM,KAAK,IAAI;MAChC+hB,GAAG,CAAC4H,IAAI,CAAC,CAAC;MACV5H,GAAG,CAAC4L,SAAS,GAAG3M,eAAe;MAC/BwqD,UAAU,CAACzpD,GAAG,EAAEc,KAAK,EAAE0oD,QAAQ,IAAIhD,UAAU,CAAC9iE,QAAQ,EAAEwB,KAAK,EAAEC,GAAG,CAAC,CAAC;MACpE6a,GAAG,CAACkJ,SAAS,CAAC,CAAC;MACf,MAAMogD,QAAQ,GAAG,CAAC,CAACl+C,IAAI,CAACw1C,WAAW,CAAC5gD,GAAG,EAAEupD,GAAG,CAAC;MAC7C,IAAI91C,IAAI;MACR,IAAI+1C,QAAQ,EAAE;QACZ,IAAIF,QAAQ,EAAE;UACZtpD,GAAG,CAACqJ,SAAS,CAAC,CAAC;QACjB,CAAC,MAAM;UACLqgD,kBAAkB,CAAC1pD,GAAG,EAAE/hB,MAAM,EAAEkH,GAAG,EAAEzB,QAAQ,CAAC;QAChD;QACA,MAAMimE,UAAU,GAAG,CAAC,CAAC1rE,MAAM,CAAC2iE,WAAW,CAAC5gD,GAAG,EAAE0mD,GAAG,EAAE;UAAC1xB,IAAI,EAAEs0B,QAAQ;UAAErsE,OAAO,EAAE;QAAI,CAAC,CAAC;QAClFw2B,IAAI,GAAG61C,QAAQ,IAAIK,UAAU;QAC7B,IAAI,CAACl2C,IAAI,EAAE;UACTi2C,kBAAkB,CAAC1pD,GAAG,EAAE/hB,MAAM,EAAEiH,KAAK,EAAExB,QAAQ,CAAC;QAClD;MACF;MACAsc,GAAG,CAACqJ,SAAS,CAAC,CAAC;MACfrJ,GAAG,CAAC2J,IAAI,CAAC8J,IAAI,GAAG,SAAS,GAAG,SAAS,CAAC;MACtCzT,GAAG,CAACgI,OAAO,CAAC,CAAC;IACf;EACF;EACA,SAASyhD,UAAUA,CAACzpD,GAAG,EAAEc,KAAK,EAAEoZ,MAAM,EAAE;IACtC,MAAM;MAACxW,GAAG;MAAEC;IAAM,CAAC,GAAG7C,KAAK,CAACtV,KAAK,CAAC4yB,SAAS;IAC3C,MAAM;MAAC16B,QAAQ;MAAEwB,KAAK;MAAEC;IAAG,CAAC,GAAG+0B,MAAM,IAAI,CAAC,CAAC;IAC3C,IAAIx2B,QAAQ,KAAK,GAAG,EAAE;MACpBsc,GAAG,CAACkJ,SAAS,CAAC,CAAC;MACflJ,GAAG,CAACoE,IAAI,CAAClf,KAAK,EAAEwe,GAAG,EAAEve,GAAG,GAAGD,KAAK,EAAEye,MAAM,GAAGD,GAAG,CAAC;MAC/C1D,GAAG,CAACmK,IAAI,CAAC,CAAC;IACZ;EACF;EACA,SAASu/C,kBAAkBA,CAAC1pD,GAAG,EAAE/hB,MAAM,EAAE8rB,KAAK,EAAErmB,QAAQ,EAAE;IACxD,MAAMkmE,iBAAiB,GAAG3rE,MAAM,CAAC2f,WAAW,CAACmM,KAAK,EAAErmB,QAAQ,CAAC;IAC7D,IAAIkmE,iBAAiB,EAAE;MACrB5pD,GAAG,CAACyJ,MAAM,CAACmgD,iBAAiB,CAACjqE,CAAC,EAAEiqE,iBAAiB,CAAC/pE,CAAC,CAAC;IACtD;EACF;EAEA,IAAIhC,KAAK,GAAG;IACV1C,EAAE,EAAE,QAAQ;IACZ0uE,mBAAmBA,CAACr+D,KAAK,EAAEs+D,KAAK,EAAErrE,OAAO,EAAE;MACzC,MAAMmL,KAAK,GAAG,CAAC4B,KAAK,CAAC0b,IAAI,CAAC/H,QAAQ,IAAI,EAAE,EAAE9hB,MAAM;MAChD,MAAMwB,OAAO,GAAG,EAAE;MAClB,IAAI2K,IAAI,EAAEtM,CAAC,EAAEkuB,IAAI,EAAErtB,MAAM;MACzB,KAAKb,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0M,KAAK,EAAE,EAAE1M,CAAC,EAAE;QAC1BsM,IAAI,GAAGgC,KAAK,CAAC+zB,cAAc,CAACriC,CAAC,CAAC;QAC9BkuB,IAAI,GAAG5hB,IAAI,CAAC81B,OAAO;QACnBvhC,MAAM,GAAG,IAAI;QACb,IAAIqtB,IAAI,IAAIA,IAAI,CAAC3sB,OAAO,IAAI2sB,IAAI,YAAY42C,WAAW,EAAE;UACvDjkE,MAAM,GAAG;YACPssC,OAAO,EAAE7+B,KAAK,CAAC2jD,gBAAgB,CAACjyD,CAAC,CAAC;YAClCW,KAAK,EAAEX,CAAC;YACRysB,IAAI,EAAE49C,WAAW,CAACn8C,IAAI,EAAEluB,CAAC,EAAE0M,KAAK,CAAC;YACjC4B,KAAK;YACLxB,IAAI,EAAER,IAAI,CAACwzB,UAAU,CAACv+B,OAAO,CAAC0hB,SAAS;YACvCW,KAAK,EAAEtX,IAAI,CAACujC,MAAM;YAClB3hB;UACF,CAAC;QACH;QACA5hB,IAAI,CAACugE,OAAO,GAAGhsE,MAAM;QACrBc,OAAO,CAAC0B,IAAI,CAACxC,MAAM,CAAC;MACtB;MACA,KAAKb,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0M,KAAK,EAAE,EAAE1M,CAAC,EAAE;QAC1Ba,MAAM,GAAGc,OAAO,CAAC3B,CAAC,CAAC;QACnB,IAAI,CAACa,MAAM,IAAIA,MAAM,CAAC4rB,IAAI,KAAK,KAAK,EAAE;UACpC;QACF;QACA5rB,MAAM,CAAC4rB,IAAI,GAAGy9C,cAAc,CAACvoE,OAAO,EAAE3B,CAAC,EAAEuB,OAAO,CAAC4oE,SAAS,CAAC;MAC7D;IACF,CAAC;IACD2C,UAAUA,CAACx+D,KAAK,EAAEs+D,KAAK,EAAErrE,OAAO,EAAE;MAChC,MAAM6N,IAAI,GAAG7N,OAAO,CAACwrE,QAAQ,KAAK,YAAY;MAC9C,MAAMxsC,QAAQ,GAAGjyB,KAAK,CAACkyB,4BAA4B,CAAC,CAAC;MACrD,MAAM1T,IAAI,GAAGxe,KAAK,CAAC4yB,SAAS;MAC5B,KAAK,IAAIlhC,CAAC,GAAGugC,QAAQ,CAACpgC,MAAM,GAAG,CAAC,EAAEH,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;QAC7C,MAAMa,MAAM,GAAG0/B,QAAQ,CAACvgC,CAAC,CAAC,CAAC6sE,OAAO;QAClC,IAAI,CAAChsE,MAAM,EAAE;UACX;QACF;QACAA,MAAM,CAACqtB,IAAI,CAACkwC,mBAAmB,CAACtxC,IAAI,EAAEjsB,MAAM,CAACiM,IAAI,CAAC;QAClD,IAAIsC,IAAI,IAAIvO,MAAM,CAAC4rB,IAAI,EAAE;UACvBq/C,SAAS,CAACx9D,KAAK,CAACwU,GAAG,EAAEjiB,MAAM,EAAEisB,IAAI,CAAC;QACpC;MACF;IACF,CAAC;IACDkgD,kBAAkBA,CAAC1+D,KAAK,EAAEs+D,KAAK,EAAErrE,OAAO,EAAE;MACxC,IAAIA,OAAO,CAACwrE,QAAQ,KAAK,oBAAoB,EAAE;QAC7C;MACF;MACA,MAAMxsC,QAAQ,GAAGjyB,KAAK,CAACkyB,4BAA4B,CAAC,CAAC;MACrD,KAAK,IAAIxgC,CAAC,GAAGugC,QAAQ,CAACpgC,MAAM,GAAG,CAAC,EAAEH,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;QAC7C,MAAMa,MAAM,GAAG0/B,QAAQ,CAACvgC,CAAC,CAAC,CAAC6sE,OAAO;QAClC,IAAI5C,gBAAgB,CAACppE,MAAM,CAAC,EAAE;UAC5BirE,SAAS,CAACx9D,KAAK,CAACwU,GAAG,EAAEjiB,MAAM,EAAEyN,KAAK,CAAC4yB,SAAS,CAAC;QAC/C;MACF;IACF,CAAC;IACD+rC,iBAAiBA,CAAC3+D,KAAK,EAAE5O,IAAI,EAAE6B,OAAO,EAAE;MACtC,MAAMV,MAAM,GAAGnB,IAAI,CAAC4M,IAAI,CAACugE,OAAO;MAChC,IAAI,CAAC5C,gBAAgB,CAACppE,MAAM,CAAC,IAAIU,OAAO,CAACwrE,QAAQ,KAAK,mBAAmB,EAAE;QACzE;MACF;MACAjB,SAAS,CAACx9D,KAAK,CAACwU,GAAG,EAAEjiB,MAAM,EAAEyN,KAAK,CAAC4yB,SAAS,CAAC;IAC/C,CAAC;IACDtc,QAAQ,EAAE;MACRulD,SAAS,EAAE,IAAI;MACf4C,QAAQ,EAAE;IACZ;EACF,CAAC;EAED,MAAMG,UAAU,GAAGA,CAACC,SAAS,EAAExlB,QAAQ,KAAK;IAC1C,IAAI;MAACylB,SAAS,GAAGzlB,QAAQ;MAAE0lB,QAAQ,GAAG1lB;IAAQ,CAAC,GAAGwlB,SAAS;IAC3D,IAAIA,SAAS,CAACG,aAAa,EAAE;MAC3BF,SAAS,GAAG/oE,IAAI,CAACoC,GAAG,CAAC2mE,SAAS,EAAEzlB,QAAQ,CAAC;MACzC0lB,QAAQ,GAAGF,SAAS,CAACI,eAAe,IAAIlpE,IAAI,CAACoC,GAAG,CAAC4mE,QAAQ,EAAE1lB,QAAQ,CAAC;IACtE;IACA,OAAO;MACL0lB,QAAQ;MACRD,SAAS;MACTI,UAAU,EAAEnpE,IAAI,CAACqC,GAAG,CAACihD,QAAQ,EAAEylB,SAAS;IAC1C,CAAC;EACH,CAAC;EACD,MAAMK,UAAU,GAAGA,CAAC5pE,CAAC,EAAEC,CAAC,KAAKD,CAAC,KAAK,IAAI,IAAIC,CAAC,KAAK,IAAI,IAAID,CAAC,CAACnD,YAAY,KAAKoD,CAAC,CAACpD,YAAY,IAAImD,CAAC,CAAClD,KAAK,KAAKmD,CAAC,CAACnD,KAAK;EACjH,MAAM+sE,MAAM,SAASh1B,OAAO,CAAC;IAC3B3qC,WAAWA,CAACq5B,MAAM,EAAE;MAClB,KAAK,CAAC,CAAC;MACP,IAAI,CAACumC,MAAM,GAAG,KAAK;MACnB,IAAI,CAACC,cAAc,GAAG,EAAE;MACxB,IAAI,CAACC,YAAY,GAAG,IAAI;MACxB,IAAI,CAACC,YAAY,GAAG,KAAK;MACzB,IAAI,CAACx/D,KAAK,GAAG84B,MAAM,CAAC94B,KAAK;MACzB,IAAI,CAAC/M,OAAO,GAAG6lC,MAAM,CAAC7lC,OAAO;MAC7B,IAAI,CAACuhB,GAAG,GAAGskB,MAAM,CAACtkB,GAAG;MACrB,IAAI,CAACirD,WAAW,GAAG3rE,SAAS;MAC5B,IAAI,CAAC4rE,WAAW,GAAG5rE,SAAS;MAC5B,IAAI,CAAC6rE,UAAU,GAAG7rE,SAAS;MAC3B,IAAI,CAAC6lB,SAAS,GAAG7lB,SAAS;MAC1B,IAAI,CAAC4lB,QAAQ,GAAG5lB,SAAS;MACzB,IAAI,CAACokB,GAAG,GAAGpkB,SAAS;MACpB,IAAI,CAACqkB,MAAM,GAAGrkB,SAAS;MACvB,IAAI,CAAC6J,IAAI,GAAG7J,SAAS;MACrB,IAAI,CAAC8J,KAAK,GAAG9J,SAAS;MACtB,IAAI,CAACmkB,MAAM,GAAGnkB,SAAS;MACvB,IAAI,CAACkkB,KAAK,GAAGlkB,SAAS;MACtB,IAAI,CAACi8C,QAAQ,GAAGj8C,SAAS;MACzB,IAAI,CAACi+B,QAAQ,GAAGj+B,SAAS;MACzB,IAAI,CAACie,MAAM,GAAGje,SAAS;MACvB,IAAI,CAACwhC,QAAQ,GAAGxhC,SAAS;IAC3B;IACAwjC,MAAMA,CAAC5d,QAAQ,EAAEC,SAAS,EAAEY,OAAO,EAAE;MACnC,IAAI,CAACb,QAAQ,GAAGA,QAAQ;MACxB,IAAI,CAACC,SAAS,GAAGA,SAAS;MAC1B,IAAI,CAACo2B,QAAQ,GAAGx1B,OAAO;MACvB,IAAI,CAACq3B,aAAa,CAAC,CAAC;MACpB,IAAI,CAACguB,WAAW,CAAC,CAAC;MAClB,IAAI,CAACjtB,GAAG,CAAC,CAAC;IACZ;IACAf,aAAaA,CAAA,EAAG;MACd,IAAI,IAAI,CAACjd,YAAY,CAAC,CAAC,EAAE;QACvB,IAAI,CAAC3c,KAAK,GAAG,IAAI,CAAC0B,QAAQ;QAC1B,IAAI,CAAC/b,IAAI,GAAG,IAAI,CAACoyC,QAAQ,CAACpyC,IAAI;QAC9B,IAAI,CAACC,KAAK,GAAG,IAAI,CAACoa,KAAK;MACzB,CAAC,MAAM;QACL,IAAI,CAACC,MAAM,GAAG,IAAI,CAAC0B,SAAS;QAC5B,IAAI,CAACzB,GAAG,GAAG,IAAI,CAAC63B,QAAQ,CAAC73B,GAAG;QAC5B,IAAI,CAACC,MAAM,GAAG,IAAI,CAACF,MAAM;MAC3B;IACF;IACA2nD,WAAWA,CAAA,EAAG;MACZ,MAAMf,SAAS,GAAG,IAAI,CAAC5rE,OAAO,CAACmzC,MAAM,IAAI,CAAC,CAAC;MAC3C,IAAIq5B,WAAW,GAAGvuE,QAAQ,CAAC2tE,SAAS,CAAC7P,cAAc,EAAE,CAAC,IAAI,CAAChvD,KAAK,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE;MAC9E,IAAI6+D,SAAS,CAACl6C,MAAM,EAAE;QACpB86C,WAAW,GAAGA,WAAW,CAAC96C,MAAM,CAAEjvB,IAAI,IAAKmpE,SAAS,CAACl6C,MAAM,CAACjvB,IAAI,EAAE,IAAI,CAACsK,KAAK,CAAC0b,IAAI,CAAC,CAAC;MACrF;MACA,IAAImjD,SAAS,CAACtnE,IAAI,EAAE;QAClBkoE,WAAW,GAAGA,WAAW,CAACloE,IAAI,CAAC,CAAChC,CAAC,EAAEC,CAAC,KAAKqpE,SAAS,CAACtnE,IAAI,CAAChC,CAAC,EAAEC,CAAC,EAAE,IAAI,CAACwK,KAAK,CAAC0b,IAAI,CAAC,CAAC;MACjF;MACA,IAAI,IAAI,CAACzoB,OAAO,CAACxB,OAAO,EAAE;QACxBguE,WAAW,CAAChuE,OAAO,CAAC,CAAC;MACvB;MACA,IAAI,CAACguE,WAAW,GAAGA,WAAW;IAChC;IACA9sB,GAAGA,CAAA,EAAG;MACJ,MAAM;QAAC1/C,OAAO;QAAEuhB;MAAG,CAAC,GAAG,IAAI;MAC3B,IAAI,CAACvhB,OAAO,CAACulC,OAAO,EAAE;QACpB,IAAI,CAACxgB,KAAK,GAAG,IAAI,CAACC,MAAM,GAAG,CAAC;QAC5B;MACF;MACA,MAAM4mD,SAAS,GAAG5rE,OAAO,CAACmzC,MAAM;MAChC,MAAMy5B,SAAS,GAAGtzC,MAAM,CAACsyC,SAAS,CAAC3qD,IAAI,CAAC;MACxC,MAAMmlC,QAAQ,GAAGwmB,SAAS,CAACpqE,IAAI;MAC/B,MAAM4+C,WAAW,GAAG,IAAI,CAACyrB,mBAAmB,CAAC,CAAC;MAC9C,MAAM;QAACf,QAAQ;QAAEG;MAAU,CAAC,GAAGN,UAAU,CAACC,SAAS,EAAExlB,QAAQ,CAAC;MAC9D,IAAIrhC,KAAK,EAAEC,MAAM;MACjBzD,GAAG,CAACN,IAAI,GAAG2rD,SAAS,CAAChkD,MAAM;MAC3B,IAAI,IAAI,CAAC8Y,YAAY,CAAC,CAAC,EAAE;QACvB3c,KAAK,GAAG,IAAI,CAAC0B,QAAQ;QACrBzB,MAAM,GAAG,IAAI,CAAC8nD,QAAQ,CAAC1rB,WAAW,EAAEgF,QAAQ,EAAE0lB,QAAQ,EAAEG,UAAU,CAAC,GAAG,EAAE;MAC1E,CAAC,MAAM;QACLjnD,MAAM,GAAG,IAAI,CAAC0B,SAAS;QACvB3B,KAAK,GAAG,IAAI,CAACgoD,QAAQ,CAAC3rB,WAAW,EAAEgF,QAAQ,EAAE0lB,QAAQ,EAAEG,UAAU,CAAC,GAAG,EAAE;MACzE;MACA,IAAI,CAAClnD,KAAK,GAAGjiB,IAAI,CAACoC,GAAG,CAAC6f,KAAK,EAAE/kB,OAAO,CAACymB,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAAC;MAC/D,IAAI,CAACzB,MAAM,GAAGliB,IAAI,CAACoC,GAAG,CAAC8f,MAAM,EAAEhlB,OAAO,CAAC0mB,SAAS,IAAI,IAAI,CAACA,SAAS,CAAC;IACrE;IACAomD,QAAQA,CAAC1rB,WAAW,EAAEgF,QAAQ,EAAE0lB,QAAQ,EAAEG,UAAU,EAAE;MACpD,MAAM;QAAC1qD,GAAG;QAAEkF,QAAQ;QAAEzmB,OAAO,EAAE;UAACmzC,MAAM,EAAE;YAAC1O;UAAO;QAAC;MAAC,CAAC,GAAG,IAAI;MAC1D,MAAMuoC,QAAQ,GAAG,IAAI,CAACX,cAAc,GAAG,EAAE;MACzC,MAAMK,UAAU,GAAG,IAAI,CAACA,UAAU,GAAG,CAAC,CAAC,CAAC;MACxC,MAAMtrD,UAAU,GAAG6qD,UAAU,GAAGxnC,OAAO;MACvC,IAAIwoC,WAAW,GAAG7rB,WAAW;MAC7B7/B,GAAG,CAAC6L,SAAS,GAAG,MAAM;MACtB7L,GAAG,CAAC8L,YAAY,GAAG,QAAQ;MAC3B,IAAI6/C,GAAG,GAAG,CAAC,CAAC;MACZ,IAAIjoD,GAAG,GAAG,CAAC7D,UAAU;MACrB,IAAI,CAACorD,WAAW,CAACjkE,OAAO,CAAC,CAACyzD,UAAU,EAAEv9D,CAAC,KAAK;QAC1C,MAAM87B,SAAS,GAAGuxC,QAAQ,GAAI1lB,QAAQ,GAAG,CAAE,GAAG7kC,GAAG,CAACuH,WAAW,CAACkzC,UAAU,CAAC1vC,IAAI,CAAC,CAACvH,KAAK;QACpF,IAAItmB,CAAC,KAAK,CAAC,IAAIiuE,UAAU,CAACA,UAAU,CAAC9tE,MAAM,GAAG,CAAC,CAAC,GAAG27B,SAAS,GAAG,CAAC,GAAGkK,OAAO,GAAGhe,QAAQ,EAAE;UACrFwmD,WAAW,IAAI7rD,UAAU;UACzBsrD,UAAU,CAACA,UAAU,CAAC9tE,MAAM,IAAIH,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;UACnDwmB,GAAG,IAAI7D,UAAU;UACjB8rD,GAAG,EAAE;QACP;QACAF,QAAQ,CAACvuE,CAAC,CAAC,GAAG;UAACiM,IAAI,EAAE,CAAC;UAAEua,GAAG;UAAEioD,GAAG;UAAEnoD,KAAK,EAAEwV,SAAS;UAAEvV,MAAM,EAAEinD;QAAU,CAAC;QACvES,UAAU,CAACA,UAAU,CAAC9tE,MAAM,GAAG,CAAC,CAAC,IAAI27B,SAAS,GAAGkK,OAAO;MAC1D,CAAC,CAAC;MACF,OAAOwoC,WAAW;IACpB;IACAF,QAAQA,CAAC3rB,WAAW,EAAEgF,QAAQ,EAAE0lB,QAAQ,EAAEG,UAAU,EAAE;MACpD,MAAM;QAAC1qD,GAAG;QAAEmF,SAAS;QAAE1mB,OAAO,EAAE;UAACmzC,MAAM,EAAE;YAAC1O;UAAO;QAAC;MAAC,CAAC,GAAG,IAAI;MAC3D,MAAMuoC,QAAQ,GAAG,IAAI,CAACX,cAAc,GAAG,EAAE;MACzC,MAAMI,WAAW,GAAG,IAAI,CAACA,WAAW,GAAG,EAAE;MACzC,MAAMU,WAAW,GAAGzmD,SAAS,GAAG06B,WAAW;MAC3C,IAAIgsB,UAAU,GAAG3oC,OAAO;MACxB,IAAI4oC,eAAe,GAAG,CAAC;MACvB,IAAIC,gBAAgB,GAAG,CAAC;MACxB,IAAI5iE,IAAI,GAAG,CAAC;MACZ,IAAI6iE,GAAG,GAAG,CAAC;MACX,IAAI,CAACf,WAAW,CAACjkE,OAAO,CAAC,CAACyzD,UAAU,EAAEv9D,CAAC,KAAK;QAC1C,MAAM87B,SAAS,GAAGuxC,QAAQ,GAAI1lB,QAAQ,GAAG,CAAE,GAAG7kC,GAAG,CAACuH,WAAW,CAACkzC,UAAU,CAAC1vC,IAAI,CAAC,CAACvH,KAAK;QACpF,IAAItmB,CAAC,GAAG,CAAC,IAAI6uE,gBAAgB,GAAGrB,UAAU,GAAG,CAAC,GAAGxnC,OAAO,GAAG0oC,WAAW,EAAE;UACtEC,UAAU,IAAIC,eAAe,GAAG5oC,OAAO;UACvCgoC,WAAW,CAAC3qE,IAAI,CAAC;YAACijB,KAAK,EAAEsoD,eAAe;YAAEroD,MAAM,EAAEsoD;UAAgB,CAAC,CAAC;UACpE5iE,IAAI,IAAI2iE,eAAe,GAAG5oC,OAAO;UACjC8oC,GAAG,EAAE;UACLF,eAAe,GAAGC,gBAAgB,GAAG,CAAC;QACxC;QACAN,QAAQ,CAACvuE,CAAC,CAAC,GAAG;UAACiM,IAAI;UAAEua,GAAG,EAAEqoD,gBAAgB;UAAEC,GAAG;UAAExoD,KAAK,EAAEwV,SAAS;UAAEvV,MAAM,EAAEinD;QAAU,CAAC;QACtFoB,eAAe,GAAGvqE,IAAI,CAACqC,GAAG,CAACkoE,eAAe,EAAE9yC,SAAS,CAAC;QACtD+yC,gBAAgB,IAAIrB,UAAU,GAAGxnC,OAAO;MAC1C,CAAC,CAAC;MACF2oC,UAAU,IAAIC,eAAe;MAC7BZ,WAAW,CAAC3qE,IAAI,CAAC;QAACijB,KAAK,EAAEsoD,eAAe;QAAEroD,MAAM,EAAEsoD;MAAgB,CAAC,CAAC;MACpE,OAAOF,UAAU;IACnB;IACAI,cAAcA,CAAA,EAAG;MACf,IAAI,CAAC,IAAI,CAACxtE,OAAO,CAACulC,OAAO,EAAE;QACzB;MACF;MACA,MAAM6b,WAAW,GAAG,IAAI,CAACyrB,mBAAmB,CAAC,CAAC;MAC9C,MAAM;QAACR,cAAc,EAAEW,QAAQ;QAAEhtE,OAAO,EAAE;UAACuK,KAAK;UAAE4oC,MAAM,EAAE;YAAC1O;UAAO,CAAC;UAAE75B;QAAG;MAAC,CAAC,GAAG,IAAI;MACjF,MAAM6iE,SAAS,GAAG/yC,aAAa,CAAC9vB,GAAG,EAAE,IAAI,CAACF,IAAI,EAAE,IAAI,CAACqa,KAAK,CAAC;MAC3D,IAAI,IAAI,CAAC2c,YAAY,CAAC,CAAC,EAAE;QACvB,IAAIwrC,GAAG,GAAG,CAAC;QACX,IAAIxiE,IAAI,GAAGF,cAAc,CAACD,KAAK,EAAE,IAAI,CAACG,IAAI,GAAG+5B,OAAO,EAAE,IAAI,CAAC95B,KAAK,GAAG,IAAI,CAAC+hE,UAAU,CAACQ,GAAG,CAAC,CAAC;QACxF,KAAK,MAAMQ,MAAM,IAAIV,QAAQ,EAAE;UAC7B,IAAIE,GAAG,KAAKQ,MAAM,CAACR,GAAG,EAAE;YACtBA,GAAG,GAAGQ,MAAM,CAACR,GAAG;YAChBxiE,IAAI,GAAGF,cAAc,CAACD,KAAK,EAAE,IAAI,CAACG,IAAI,GAAG+5B,OAAO,EAAE,IAAI,CAAC95B,KAAK,GAAG,IAAI,CAAC+hE,UAAU,CAACQ,GAAG,CAAC,CAAC;UACtF;UACAQ,MAAM,CAACzoD,GAAG,IAAI,IAAI,CAACA,GAAG,GAAGm8B,WAAW,GAAG3c,OAAO;UAC9CipC,MAAM,CAAChjE,IAAI,GAAG+iE,SAAS,CAACnzC,UAAU,CAACmzC,SAAS,CAACvsE,CAAC,CAACwJ,IAAI,CAAC,EAAEgjE,MAAM,CAAC3oD,KAAK,CAAC;UACnEra,IAAI,IAAIgjE,MAAM,CAAC3oD,KAAK,GAAG0f,OAAO;QAChC;MACF,CAAC,MAAM;QACL,IAAI8oC,GAAG,GAAG,CAAC;QACX,IAAItoD,GAAG,GAAGza,cAAc,CAACD,KAAK,EAAE,IAAI,CAAC0a,GAAG,GAAGm8B,WAAW,GAAG3c,OAAO,EAAE,IAAI,CAACvf,MAAM,GAAG,IAAI,CAACunD,WAAW,CAACc,GAAG,CAAC,CAACvoD,MAAM,CAAC;QAC7G,KAAK,MAAM0oD,MAAM,IAAIV,QAAQ,EAAE;UAC7B,IAAIU,MAAM,CAACH,GAAG,KAAKA,GAAG,EAAE;YACtBA,GAAG,GAAGG,MAAM,CAACH,GAAG;YAChBtoD,GAAG,GAAGza,cAAc,CAACD,KAAK,EAAE,IAAI,CAAC0a,GAAG,GAAGm8B,WAAW,GAAG3c,OAAO,EAAE,IAAI,CAACvf,MAAM,GAAG,IAAI,CAACunD,WAAW,CAACc,GAAG,CAAC,CAACvoD,MAAM,CAAC;UAC3G;UACA0oD,MAAM,CAACzoD,GAAG,GAAGA,GAAG;UAChByoD,MAAM,CAAChjE,IAAI,IAAI,IAAI,CAACA,IAAI,GAAG+5B,OAAO;UAClCipC,MAAM,CAAChjE,IAAI,GAAG+iE,SAAS,CAACnzC,UAAU,CAACmzC,SAAS,CAACvsE,CAAC,CAACwsE,MAAM,CAAChjE,IAAI,CAAC,EAAEgjE,MAAM,CAAC3oD,KAAK,CAAC;UAC1EE,GAAG,IAAIyoD,MAAM,CAAC1oD,MAAM,GAAGyf,OAAO;QAChC;MACF;IACF;IACA/C,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAAC1hC,OAAO,CAAC8+B,QAAQ,KAAK,KAAK,IAAI,IAAI,CAAC9+B,OAAO,CAAC8+B,QAAQ,KAAK,QAAQ;IAC9E;IACAjxB,IAAIA,CAAA,EAAG;MACL,IAAI,IAAI,CAAC7N,OAAO,CAACulC,OAAO,EAAE;QACxB,MAAMhkB,GAAG,GAAG,IAAI,CAACA,GAAG;QACpBkK,QAAQ,CAAClK,GAAG,EAAE,IAAI,CAAC;QACnB,IAAI,CAACosD,KAAK,CAAC,CAAC;QACZhiD,UAAU,CAACpK,GAAG,CAAC;MACjB;IACF;IACAosD,KAAKA,CAAA,EAAG;MACN,MAAM;QAAC3tE,OAAO,EAAEusB,IAAI;QAAEkgD,WAAW;QAAEC,UAAU;QAAEnrD;MAAG,CAAC,GAAG,IAAI;MAC1D,MAAM;QAAChX,KAAK;QAAE4oC,MAAM,EAAEy4B;MAAS,CAAC,GAAGr/C,IAAI;MACvC,MAAMqhD,YAAY,GAAGvqD,QAAQ,CAACxE,KAAK;MACnC,MAAM4uD,SAAS,GAAG/yC,aAAa,CAACnO,IAAI,CAAC3hB,GAAG,EAAE,IAAI,CAACF,IAAI,EAAE,IAAI,CAACqa,KAAK,CAAC;MAChE,MAAM6nD,SAAS,GAAGtzC,MAAM,CAACsyC,SAAS,CAAC3qD,IAAI,CAAC;MACxC,MAAM;QAACpC,KAAK,EAAEgvD,SAAS;QAAEppC;MAAO,CAAC,GAAGmnC,SAAS;MAC7C,MAAMxlB,QAAQ,GAAGwmB,SAAS,CAACpqE,IAAI;MAC/B,MAAMsrE,YAAY,GAAG1nB,QAAQ,GAAG,CAAC;MACjC,IAAI2nB,MAAM;MACV,IAAI,CAAChoB,SAAS,CAAC,CAAC;MAChBxkC,GAAG,CAAC6L,SAAS,GAAGqgD,SAAS,CAACrgD,SAAS,CAAC,MAAM,CAAC;MAC3C7L,GAAG,CAAC8L,YAAY,GAAG,QAAQ;MAC3B9L,GAAG,CAACuL,SAAS,GAAG,GAAG;MACnBvL,GAAG,CAACN,IAAI,GAAG2rD,SAAS,CAAChkD,MAAM;MAC3B,MAAM;QAACkjD,QAAQ;QAAED,SAAS;QAAEI;MAAU,CAAC,GAAGN,UAAU,CAACC,SAAS,EAAExlB,QAAQ,CAAC;MACzE,MAAM4nB,aAAa,GAAG,SAAAA,CAAS9sE,CAAC,EAAEE,CAAC,EAAE46D,UAAU,EAAE;QAC/C,IAAIt3D,KAAK,CAAConE,QAAQ,CAAC,IAAIA,QAAQ,IAAI,CAAC,IAAIpnE,KAAK,CAACmnE,SAAS,CAAC,IAAIA,SAAS,GAAG,CAAC,EAAE;UACzE;QACF;QACAtqD,GAAG,CAAC4H,IAAI,CAAC,CAAC;QACV,MAAM2D,SAAS,GAAGnvB,cAAc,CAACq+D,UAAU,CAAClvC,SAAS,EAAE,CAAC,CAAC;QACzDvL,GAAG,CAAC4L,SAAS,GAAGxvB,cAAc,CAACq+D,UAAU,CAAC7uC,SAAS,EAAEygD,YAAY,CAAC;QAClErsD,GAAG,CAACmgD,OAAO,GAAG/jE,cAAc,CAACq+D,UAAU,CAAC0F,OAAO,EAAE,MAAM,CAAC;QACxDngD,GAAG,CAACqkC,cAAc,GAAGjoD,cAAc,CAACq+D,UAAU,CAACpW,cAAc,EAAE,CAAC,CAAC;QACjErkC,GAAG,CAACw/C,QAAQ,GAAGpjE,cAAc,CAACq+D,UAAU,CAAC+E,QAAQ,EAAE,OAAO,CAAC;QAC3Dx/C,GAAG,CAACuL,SAAS,GAAGA,SAAS;QACzBvL,GAAG,CAACsL,WAAW,GAAGlvB,cAAc,CAACq+D,UAAU,CAACnvC,WAAW,EAAE+gD,YAAY,CAAC;QACtErsD,GAAG,CAACokC,WAAW,CAAChoD,cAAc,CAACq+D,UAAU,CAACiS,QAAQ,EAAE,EAAE,CAAC,CAAC;QACxD,IAAIrC,SAAS,CAACG,aAAa,EAAE;UAC3B,MAAMmC,WAAW,GAAG;YAClB7jD,MAAM,EAAEwhD,SAAS,GAAG/oE,IAAI,CAACqrE,KAAK,GAAG,CAAC;YAClChkD,UAAU,EAAE6xC,UAAU,CAAC7xC,UAAU;YACjCC,QAAQ,EAAE4xC,UAAU,CAAC5xC,QAAQ;YAC7Be,WAAW,EAAE2B;UACf,CAAC;UACD,MAAMwuC,OAAO,GAAGmS,SAAS,CAACpzC,KAAK,CAACn5B,CAAC,EAAE4qE,QAAQ,GAAG,CAAC,CAAC;UAChD,MAAMvQ,OAAO,GAAGn6D,CAAC,GAAG0sE,YAAY;UAChC7jD,eAAe,CAAC1I,GAAG,EAAE2sD,WAAW,EAAE5S,OAAO,EAAEC,OAAO,EAAEqQ,SAAS,CAACI,eAAe,IAAIF,QAAQ,CAAC;QAC5F,CAAC,MAAM;UACL,MAAMsC,OAAO,GAAGhtE,CAAC,GAAG0B,IAAI,CAACqC,GAAG,CAAC,CAACihD,QAAQ,GAAGylB,SAAS,IAAI,CAAC,EAAE,CAAC,CAAC;UAC3D,MAAMwC,QAAQ,GAAGZ,SAAS,CAACnzC,UAAU,CAACp5B,CAAC,EAAE4qE,QAAQ,CAAC;UAClD,MAAMtN,YAAY,GAAGplC,aAAa,CAAC4iC,UAAU,CAACwC,YAAY,CAAC;UAC3Dj9C,GAAG,CAACkJ,SAAS,CAAC,CAAC;UACf,IAAIztB,MAAM,CAAC8K,MAAM,CAAC02D,YAAY,CAAC,CAAC9U,IAAI,CAACzoD,CAAC,IAAIA,CAAC,KAAK,CAAC,CAAC,EAAE;YAClD8sB,kBAAkB,CAACxM,GAAG,EAAE;cACtBrgB,CAAC,EAAEmtE,QAAQ;cACXjtE,CAAC,EAAEgtE,OAAO;cACVl9D,CAAC,EAAE46D,QAAQ;cACX18D,CAAC,EAAEy8D,SAAS;cACZxhD,MAAM,EAAEm0C;YACV,CAAC,CAAC;UACJ,CAAC,MAAM;YACLj9C,GAAG,CAACoE,IAAI,CAAC0oD,QAAQ,EAAED,OAAO,EAAEtC,QAAQ,EAAED,SAAS,CAAC;UAClD;UACAtqD,GAAG,CAAC2J,IAAI,CAAC,CAAC;UACV,IAAI4B,SAAS,KAAK,CAAC,EAAE;YACnBvL,GAAG,CAAC6J,MAAM,CAAC,CAAC;UACd;QACF;QACA7J,GAAG,CAACgI,OAAO,CAAC,CAAC;MACf,CAAC;MACD,MAAMyD,QAAQ,GAAG,SAAAA,CAAS9rB,CAAC,EAAEE,CAAC,EAAE46D,UAAU,EAAE;QAC1C3vC,UAAU,CAAC9K,GAAG,EAAEy6C,UAAU,CAAC1vC,IAAI,EAAEprB,CAAC,EAAEE,CAAC,GAAI6qE,UAAU,GAAG,CAAE,EAAEW,SAAS,EAAE;UACnEt/C,aAAa,EAAE0uC,UAAU,CAACnsB,MAAM;UAChCziB,SAAS,EAAEqgD,SAAS,CAACrgD,SAAS,CAAC4uC,UAAU,CAAC5uC,SAAS;QACrD,CAAC,CAAC;MACJ,CAAC;MACD,MAAMsU,YAAY,GAAG,IAAI,CAACA,YAAY,CAAC,CAAC;MACxC,MAAM0f,WAAW,GAAG,IAAI,CAACyrB,mBAAmB,CAAC,CAAC;MAC9C,IAAInrC,YAAY,EAAE;QAChBqsC,MAAM,GAAG;UACP7sE,CAAC,EAAEsJ,cAAc,CAACD,KAAK,EAAE,IAAI,CAACG,IAAI,GAAG+5B,OAAO,EAAE,IAAI,CAAC95B,KAAK,GAAG+hE,UAAU,CAAC,CAAC,CAAC,CAAC;UACzEtrE,CAAC,EAAE,IAAI,CAAC6jB,GAAG,GAAGwf,OAAO,GAAG2c,WAAW;UACnCz0B,IAAI,EAAE;QACR,CAAC;MACH,CAAC,MAAM;QACLohD,MAAM,GAAG;UACP7sE,CAAC,EAAE,IAAI,CAACwJ,IAAI,GAAG+5B,OAAO;UACtBrjC,CAAC,EAAEoJ,cAAc,CAACD,KAAK,EAAE,IAAI,CAAC0a,GAAG,GAAGm8B,WAAW,GAAG3c,OAAO,EAAE,IAAI,CAACvf,MAAM,GAAGunD,WAAW,CAAC,CAAC,CAAC,CAACznD,MAAM,CAAC;UAC/F2H,IAAI,EAAE;QACR,CAAC;MACH;MACAgO,qBAAqB,CAAC,IAAI,CAACpZ,GAAG,EAAEgL,IAAI,CAAC+hD,aAAa,CAAC;MACnD,MAAMltD,UAAU,GAAG6qD,UAAU,GAAGxnC,OAAO;MACvC,IAAI,CAAC+nC,WAAW,CAACjkE,OAAO,CAAC,CAACyzD,UAAU,EAAEv9D,CAAC,KAAK;QAC1C8iB,GAAG,CAACsL,WAAW,GAAGmvC,UAAU,CAAC6R,SAAS,IAAIA,SAAS;QACnDtsD,GAAG,CAAC4L,SAAS,GAAG6uC,UAAU,CAAC6R,SAAS,IAAIA,SAAS;QACjD,MAAMhlD,SAAS,GAAGtH,GAAG,CAACuH,WAAW,CAACkzC,UAAU,CAAC1vC,IAAI,CAAC,CAACvH,KAAK;QACxD,MAAMqI,SAAS,GAAGqgD,SAAS,CAACrgD,SAAS,CAAC4uC,UAAU,CAAC5uC,SAAS,KAAK4uC,UAAU,CAAC5uC,SAAS,GAAGw+C,SAAS,CAACx+C,SAAS,CAAC,CAAC;QAC3G,MAAMrI,KAAK,GAAG+mD,QAAQ,GAAGgC,YAAY,GAAGjlD,SAAS;QACjD,IAAI3nB,CAAC,GAAG6sE,MAAM,CAAC7sE,CAAC;QAChB,IAAIE,CAAC,GAAG2sE,MAAM,CAAC3sE,CAAC;QAChBqsE,SAAS,CAACrzC,QAAQ,CAAC,IAAI,CAACrV,KAAK,CAAC;QAC9B,IAAI2c,YAAY,EAAE;UAChB,IAAIjjC,CAAC,GAAG,CAAC,IAAIyC,CAAC,GAAG6jB,KAAK,GAAG0f,OAAO,GAAG,IAAI,CAAC95B,KAAK,EAAE;YAC7CvJ,CAAC,GAAG2sE,MAAM,CAAC3sE,CAAC,IAAIggB,UAAU;YAC1B2sD,MAAM,CAACphD,IAAI,EAAE;YACbzrB,CAAC,GAAG6sE,MAAM,CAAC7sE,CAAC,GAAGsJ,cAAc,CAACD,KAAK,EAAE,IAAI,CAACG,IAAI,GAAG+5B,OAAO,EAAE,IAAI,CAAC95B,KAAK,GAAG+hE,UAAU,CAACqB,MAAM,CAACphD,IAAI,CAAC,CAAC;UACjG;QACF,CAAC,MAAM,IAAIluB,CAAC,GAAG,CAAC,IAAI2C,CAAC,GAAGggB,UAAU,GAAG,IAAI,CAAC8D,MAAM,EAAE;UAChDhkB,CAAC,GAAG6sE,MAAM,CAAC7sE,CAAC,GAAGA,CAAC,GAAGurE,WAAW,CAACsB,MAAM,CAACphD,IAAI,CAAC,CAAC5H,KAAK,GAAG0f,OAAO;UAC3DspC,MAAM,CAACphD,IAAI,EAAE;UACbvrB,CAAC,GAAG2sE,MAAM,CAAC3sE,CAAC,GAAGoJ,cAAc,CAACD,KAAK,EAAE,IAAI,CAAC0a,GAAG,GAAGm8B,WAAW,GAAG3c,OAAO,EAAE,IAAI,CAACvf,MAAM,GAAGunD,WAAW,CAACsB,MAAM,CAACphD,IAAI,CAAC,CAAC3H,MAAM,CAAC;QACvH;QACA,MAAMupD,KAAK,GAAGd,SAAS,CAACvsE,CAAC,CAACA,CAAC,CAAC;QAC5B8sE,aAAa,CAACO,KAAK,EAAEntE,CAAC,EAAE46D,UAAU,CAAC;QACnC96D,CAAC,GAAGuJ,MAAM,CAAC2iB,SAAS,EAAElsB,CAAC,GAAG4qE,QAAQ,GAAGgC,YAAY,EAAEpsC,YAAY,GAAGxgC,CAAC,GAAG6jB,KAAK,GAAG,IAAI,CAACpa,KAAK,EAAE4hB,IAAI,CAAC3hB,GAAG,CAAC;QACnGoiB,QAAQ,CAACygD,SAAS,CAACvsE,CAAC,CAACA,CAAC,CAAC,EAAEE,CAAC,EAAE46D,UAAU,CAAC;QACvC,IAAIt6B,YAAY,EAAE;UAChBqsC,MAAM,CAAC7sE,CAAC,IAAI6jB,KAAK,GAAG0f,OAAO;QAC7B,CAAC,MAAM;UACLspC,MAAM,CAAC3sE,CAAC,IAAIggB,UAAU;QACxB;MACF,CAAC,CAAC;MACF6Z,oBAAoB,CAAC,IAAI,CAAC1Z,GAAG,EAAEgL,IAAI,CAAC+hD,aAAa,CAAC;IACpD;IACAvoB,SAASA,CAAA,EAAG;MACV,MAAMx5B,IAAI,GAAG,IAAI,CAACvsB,OAAO;MACzB,MAAMkhD,SAAS,GAAG30B,IAAI,CAACssB,KAAK;MAC5B,MAAM21B,SAAS,GAAGl1C,MAAM,CAAC4nB,SAAS,CAACjgC,IAAI,CAAC;MACxC,MAAMwtD,YAAY,GAAGp1C,SAAS,CAAC6nB,SAAS,CAACzc,OAAO,CAAC;MACjD,IAAI,CAACyc,SAAS,CAAC3b,OAAO,EAAE;QACtB;MACF;MACA,MAAMkoC,SAAS,GAAG/yC,aAAa,CAACnO,IAAI,CAAC3hB,GAAG,EAAE,IAAI,CAACF,IAAI,EAAE,IAAI,CAACqa,KAAK,CAAC;MAChE,MAAMxD,GAAG,GAAG,IAAI,CAACA,GAAG;MACpB,MAAMud,QAAQ,GAAGoiB,SAAS,CAACpiB,QAAQ;MACnC,MAAMgvC,YAAY,GAAGU,SAAS,CAAChsE,IAAI,GAAG,CAAC;MACvC,MAAMksE,0BAA0B,GAAGD,YAAY,CAACxpD,GAAG,GAAG6oD,YAAY;MAClE,IAAI1sE,CAAC;MACL,IAAIsJ,IAAI,GAAG,IAAI,CAACA,IAAI;MACpB,IAAI+b,QAAQ,GAAG,IAAI,CAAC1B,KAAK;MACzB,IAAI,IAAI,CAAC2c,YAAY,CAAC,CAAC,EAAE;QACvBjb,QAAQ,GAAG3jB,IAAI,CAACqC,GAAG,CAAC,GAAG,IAAI,CAACunE,UAAU,CAAC;QACvCtrE,CAAC,GAAG,IAAI,CAAC6jB,GAAG,GAAGypD,0BAA0B;QACzChkE,IAAI,GAAGF,cAAc,CAAC+hB,IAAI,CAAChiB,KAAK,EAAEG,IAAI,EAAE,IAAI,CAACC,KAAK,GAAG8b,QAAQ,CAAC;MAChE,CAAC,MAAM;QACL,MAAMC,SAAS,GAAG,IAAI,CAAC+lD,WAAW,CAACh+D,MAAM,CAAC,CAACC,GAAG,EAAElM,IAAI,KAAKM,IAAI,CAACqC,GAAG,CAACuJ,GAAG,EAAElM,IAAI,CAACwiB,MAAM,CAAC,EAAE,CAAC,CAAC;QACvF5jB,CAAC,GAAGstE,0BAA0B,GAAGlkE,cAAc,CAAC+hB,IAAI,CAAChiB,KAAK,EAAE,IAAI,CAAC0a,GAAG,EAAE,IAAI,CAACC,MAAM,GAAGwB,SAAS,GAAG6F,IAAI,CAAC4mB,MAAM,CAAC1O,OAAO,GAAG,IAAI,CAACooC,mBAAmB,CAAC,CAAC,CAAC;MACnJ;MACA,MAAM3rE,CAAC,GAAGsJ,cAAc,CAACs0B,QAAQ,EAAEp0B,IAAI,EAAEA,IAAI,GAAG+b,QAAQ,CAAC;MACzDlF,GAAG,CAAC6L,SAAS,GAAGqgD,SAAS,CAACrgD,SAAS,CAAC9iB,kBAAkB,CAACw0B,QAAQ,CAAC,CAAC;MACjEvd,GAAG,CAAC8L,YAAY,GAAG,QAAQ;MAC3B9L,GAAG,CAACsL,WAAW,GAAGq0B,SAAS,CAACriC,KAAK;MACjC0C,GAAG,CAAC4L,SAAS,GAAG+zB,SAAS,CAACriC,KAAK;MAC/B0C,GAAG,CAACN,IAAI,GAAGutD,SAAS,CAAC5lD,MAAM;MAC3ByD,UAAU,CAAC9K,GAAG,EAAE2/B,SAAS,CAAC50B,IAAI,EAAEprB,CAAC,EAAEE,CAAC,EAAEotE,SAAS,CAAC;IAClD;IACA3B,mBAAmBA,CAAA,EAAG;MACpB,MAAM3rB,SAAS,GAAG,IAAI,CAAClhD,OAAO,CAAC64C,KAAK;MACpC,MAAM21B,SAAS,GAAGl1C,MAAM,CAAC4nB,SAAS,CAACjgC,IAAI,CAAC;MACxC,MAAMwtD,YAAY,GAAGp1C,SAAS,CAAC6nB,SAAS,CAACzc,OAAO,CAAC;MACjD,OAAOyc,SAAS,CAAC3b,OAAO,GAAGipC,SAAS,CAACptD,UAAU,GAAGqtD,YAAY,CAACzpD,MAAM,GAAG,CAAC;IAC3E;IACA2pD,gBAAgBA,CAACztE,CAAC,EAAEE,CAAC,EAAE;MACrB,IAAI3C,CAAC,EAAEmwE,MAAM,EAAEC,EAAE;MACjB,IAAI1nE,UAAU,CAACjG,CAAC,EAAE,IAAI,CAACwJ,IAAI,EAAE,IAAI,CAACC,KAAK,CAAC,IACnCxD,UAAU,CAAC/F,CAAC,EAAE,IAAI,CAAC6jB,GAAG,EAAE,IAAI,CAACC,MAAM,CAAC,EAAE;QACzC2pD,EAAE,GAAG,IAAI,CAACxC,cAAc;QACxB,KAAK5tE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGowE,EAAE,CAACjwE,MAAM,EAAE,EAAEH,CAAC,EAAE;UAC9BmwE,MAAM,GAAGC,EAAE,CAACpwE,CAAC,CAAC;UACd,IAAI0I,UAAU,CAACjG,CAAC,EAAE0tE,MAAM,CAAClkE,IAAI,EAAEkkE,MAAM,CAAClkE,IAAI,GAAGkkE,MAAM,CAAC7pD,KAAK,CAAC,IACrD5d,UAAU,CAAC/F,CAAC,EAAEwtE,MAAM,CAAC3pD,GAAG,EAAE2pD,MAAM,CAAC3pD,GAAG,GAAG2pD,MAAM,CAAC5pD,MAAM,CAAC,EAAE;YAC1D,OAAO,IAAI,CAACwnD,WAAW,CAAC/tE,CAAC,CAAC;UAC5B;QACF;MACF;MACA,OAAO,IAAI;IACb;IACAqwE,WAAWA,CAAClsE,CAAC,EAAE;MACb,MAAM2pB,IAAI,GAAG,IAAI,CAACvsB,OAAO;MACzB,IAAI,CAAC+uE,UAAU,CAACnsE,CAAC,CAAC7F,IAAI,EAAEwvB,IAAI,CAAC,EAAE;QAC7B;MACF;MACA,MAAMyiD,WAAW,GAAG,IAAI,CAACL,gBAAgB,CAAC/rE,CAAC,CAAC1B,CAAC,EAAE0B,CAAC,CAACxB,CAAC,CAAC;MACnD,IAAIwB,CAAC,CAAC7F,IAAI,KAAK,WAAW,IAAI6F,CAAC,CAAC7F,IAAI,KAAK,UAAU,EAAE;QACnD,MAAM4D,QAAQ,GAAG,IAAI,CAAC2rE,YAAY;QAClC,MAAM2C,QAAQ,GAAG/C,UAAU,CAACvrE,QAAQ,EAAEquE,WAAW,CAAC;QAClD,IAAIruE,QAAQ,IAAI,CAACsuE,QAAQ,EAAE;UACzBhxE,QAAQ,CAACsuB,IAAI,CAAC2iD,OAAO,EAAE,CAACtsE,CAAC,EAAEjC,QAAQ,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC;QACnD;QACA,IAAI,CAAC2rE,YAAY,GAAG0C,WAAW;QAC/B,IAAIA,WAAW,IAAI,CAACC,QAAQ,EAAE;UAC5BhxE,QAAQ,CAACsuB,IAAI,CAACvK,OAAO,EAAE,CAACpf,CAAC,EAAEosE,WAAW,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC;QACtD;MACF,CAAC,MAAM,IAAIA,WAAW,EAAE;QACtB/wE,QAAQ,CAACsuB,IAAI,CAACtK,OAAO,EAAE,CAACrf,CAAC,EAAEosE,WAAW,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC;MACtD;IACF;EACF;EACA,SAASD,UAAUA,CAAChyE,IAAI,EAAEwvB,IAAI,EAAE;IAC9B,IAAI,CAACxvB,IAAI,KAAK,WAAW,IAAIA,IAAI,KAAK,UAAU,MAAMwvB,IAAI,CAACvK,OAAO,IAAIuK,IAAI,CAAC2iD,OAAO,CAAC,EAAE;MACnF,OAAO,IAAI;IACb;IACA,IAAI3iD,IAAI,CAACtK,OAAO,KAAKllB,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,SAAS,CAAC,EAAE;MAC5D,OAAO,IAAI;IACb;IACA,OAAO,KAAK;EACd;EACA,IAAIoyE,aAAa,GAAG;IAClBzyE,EAAE,EAAE,QAAQ;IACZ0yE,QAAQ,EAAEjD,MAAM;IAChB1lE,KAAKA,CAACsG,KAAK,EAAEs+D,KAAK,EAAErrE,OAAO,EAAE;MAC3B,MAAM87D,MAAM,GAAG/uD,KAAK,CAAC+uD,MAAM,GAAG,IAAIqQ,MAAM,CAAC;QAAC5qD,GAAG,EAAExU,KAAK,CAACwU,GAAG;QAAEvhB,OAAO;QAAE+M;MAAK,CAAC,CAAC;MAC1E60B,OAAO,CAACoD,SAAS,CAACj4B,KAAK,EAAE+uD,MAAM,EAAE97D,OAAO,CAAC;MACzC4hC,OAAO,CAAC+C,MAAM,CAAC53B,KAAK,EAAE+uD,MAAM,CAAC;IAC/B,CAAC;IACDjtD,IAAIA,CAAC9B,KAAK,EAAE;MACV60B,OAAO,CAACkD,SAAS,CAAC/3B,KAAK,EAAEA,KAAK,CAAC+uD,MAAM,CAAC;MACtC,OAAO/uD,KAAK,CAAC+uD,MAAM;IACrB,CAAC;IACDtd,YAAYA,CAACzxC,KAAK,EAAEs+D,KAAK,EAAErrE,OAAO,EAAE;MAClC,MAAM87D,MAAM,GAAG/uD,KAAK,CAAC+uD,MAAM;MAC3Bl6B,OAAO,CAACoD,SAAS,CAACj4B,KAAK,EAAE+uD,MAAM,EAAE97D,OAAO,CAAC;MACzC87D,MAAM,CAAC97D,OAAO,GAAGA,OAAO;IAC1B,CAAC;IACD4/C,WAAWA,CAAC7yC,KAAK,EAAE;MACjB,MAAM+uD,MAAM,GAAG/uD,KAAK,CAAC+uD,MAAM;MAC3BA,MAAM,CAAC6Q,WAAW,CAAC,CAAC;MACpB7Q,MAAM,CAAC0R,cAAc,CAAC,CAAC;IACzB,CAAC;IACD6B,UAAUA,CAACtiE,KAAK,EAAE5O,IAAI,EAAE;MACtB,IAAI,CAACA,IAAI,CAACs1D,MAAM,EAAE;QAChB1mD,KAAK,CAAC+uD,MAAM,CAACgT,WAAW,CAAC3wE,IAAI,CAACoQ,KAAK,CAAC;MACtC;IACF,CAAC;IACD8U,QAAQ,EAAE;MACRkiB,OAAO,EAAE,IAAI;MACbzG,QAAQ,EAAE,KAAK;MACfv0B,KAAK,EAAE,QAAQ;MACf83B,QAAQ,EAAE,IAAI;MACd7jC,OAAO,EAAE,KAAK;MACdsgB,MAAM,EAAE,IAAI;MACZmD,OAAOA,CAACrf,CAAC,EAAEo5D,UAAU,EAAEF,MAAM,EAAE;QAC7B,MAAM18D,KAAK,GAAG48D,UAAU,CAAC78D,YAAY;QACrC,MAAMmwE,EAAE,GAAGxT,MAAM,CAAC/uD,KAAK;QACvB,IAAIuiE,EAAE,CAAC5e,gBAAgB,CAACtxD,KAAK,CAAC,EAAE;UAC9BkwE,EAAE,CAACzjC,IAAI,CAACzsC,KAAK,CAAC;UACd48D,UAAU,CAACnsB,MAAM,GAAG,IAAI;QAC1B,CAAC,MAAM;UACLy/B,EAAE,CAAC5jC,IAAI,CAACtsC,KAAK,CAAC;UACd48D,UAAU,CAACnsB,MAAM,GAAG,KAAK;QAC3B;MACF,CAAC;MACD7tB,OAAO,EAAE,IAAI;MACbktD,OAAO,EAAE,IAAI;MACb/7B,MAAM,EAAE;QACNt0B,KAAK,EAAG0C,GAAG,IAAKA,GAAG,CAACxU,KAAK,CAAC/M,OAAO,CAAC6e,KAAK;QACvCitD,QAAQ,EAAE,EAAE;QACZrnC,OAAO,EAAE,EAAE;QACXs3B,cAAcA,CAAChvD,KAAK,EAAE;UACpB,MAAM2T,QAAQ,GAAG3T,KAAK,CAAC0b,IAAI,CAAC/H,QAAQ;UACpC,MAAM;YAACyyB,MAAM,EAAE;cAAC44B,aAAa;cAAE5hD,UAAU;cAAEiD,SAAS;cAAEvO;YAAK;UAAC,CAAC,GAAG9R,KAAK,CAAC+uD,MAAM,CAAC97D,OAAO;UACpF,OAAO+M,KAAK,CAACqgC,sBAAsB,CAAC,CAAC,CAAC7tC,GAAG,CAAEwL,IAAI,IAAK;YAClD,MAAMoW,KAAK,GAAGpW,IAAI,CAACwzB,UAAU,CAACha,QAAQ,CAACwnD,aAAa,GAAG,CAAC,GAAGlrE,SAAS,CAAC;YACrE,MAAMsqB,WAAW,GAAGkO,SAAS,CAAClY,KAAK,CAACgK,WAAW,CAAC;YAChD,OAAO;cACLmB,IAAI,EAAE5L,QAAQ,CAAC3V,IAAI,CAAC3L,KAAK,CAAC,CAACi1C,KAAK;cAChClnB,SAAS,EAAEhM,KAAK,CAACX,eAAe;cAChCqtD,SAAS,EAAEhvD,KAAK;cAChBgxB,MAAM,EAAE,CAAC9kC,IAAI,CAAC6gC,OAAO;cACrB81B,OAAO,EAAEvgD,KAAK,CAAC0c,cAAc;cAC7BowC,QAAQ,EAAE9sD,KAAK,CAAC2c,UAAU;cAC1B8nB,cAAc,EAAEzkC,KAAK,CAAC4c,gBAAgB;cACtCgjC,QAAQ,EAAE5/C,KAAK,CAAC6c,eAAe;cAC/BlR,SAAS,EAAE,CAAC3B,WAAW,CAACpG,KAAK,GAAGoG,WAAW,CAACnG,MAAM,IAAI,CAAC;cACvD6H,WAAW,EAAE1L,KAAK,CAACV,WAAW;cAC9B0J,UAAU,EAAEA,UAAU,IAAIhJ,KAAK,CAACgJ,UAAU;cAC1CC,QAAQ,EAAEjJ,KAAK,CAACiJ,QAAQ;cACxBgD,SAAS,EAAEA,SAAS,IAAIjM,KAAK,CAACiM,SAAS;cACvCoxC,YAAY,EAAE,CAAC;cACfr/D,YAAY,EAAE4L,IAAI,CAAC3L;YACrB,CAAC;UACH,CAAC,EAAE,IAAI,CAAC;QACV;MACF,CAAC;MACDy5C,KAAK,EAAE;QACLh6B,KAAK,EAAG0C,GAAG,IAAKA,GAAG,CAACxU,KAAK,CAAC/M,OAAO,CAAC6e,KAAK;QACvC0mB,OAAO,EAAE,KAAK;QACdzG,QAAQ,EAAE,QAAQ;QAClBxS,IAAI,EAAE;MACR;IACF,CAAC;IACDrM,WAAW,EAAE;MACXqD,WAAW,EAAGV,IAAI,IAAK,CAACA,IAAI,CAACW,UAAU,CAAC,IAAI,CAAC;MAC7C4vB,MAAM,EAAE;QACN7vB,WAAW,EAAGV,IAAI,IAAK,CAAC,CAAC,gBAAgB,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC+M,QAAQ,CAAC/M,IAAI;MAC5E;IACF;EACF,CAAC;EAED,MAAM2sD,KAAK,SAASp4B,OAAO,CAAC;IAC1B3qC,WAAWA,CAACq5B,MAAM,EAAE;MAClB,KAAK,CAAC,CAAC;MACP,IAAI,CAAC94B,KAAK,GAAG84B,MAAM,CAAC94B,KAAK;MACzB,IAAI,CAAC/M,OAAO,GAAG6lC,MAAM,CAAC7lC,OAAO;MAC7B,IAAI,CAACuhB,GAAG,GAAGskB,MAAM,CAACtkB,GAAG;MACrB,IAAI,CAACiuD,QAAQ,GAAG3uE,SAAS;MACzB,IAAI,CAACokB,GAAG,GAAGpkB,SAAS;MACpB,IAAI,CAACqkB,MAAM,GAAGrkB,SAAS;MACvB,IAAI,CAAC6J,IAAI,GAAG7J,SAAS;MACrB,IAAI,CAAC8J,KAAK,GAAG9J,SAAS;MACtB,IAAI,CAACkkB,KAAK,GAAGlkB,SAAS;MACtB,IAAI,CAACmkB,MAAM,GAAGnkB,SAAS;MACvB,IAAI,CAACi+B,QAAQ,GAAGj+B,SAAS;MACzB,IAAI,CAACie,MAAM,GAAGje,SAAS;MACvB,IAAI,CAACwhC,QAAQ,GAAGxhC,SAAS;IAC3B;IACAwjC,MAAMA,CAAC5d,QAAQ,EAAEC,SAAS,EAAE;MAC1B,MAAM6F,IAAI,GAAG,IAAI,CAACvsB,OAAO;MACzB,IAAI,CAAC0K,IAAI,GAAG,CAAC;MACb,IAAI,CAACua,GAAG,GAAG,CAAC;MACZ,IAAI,CAACsH,IAAI,CAACgZ,OAAO,EAAE;QACjB,IAAI,CAACxgB,KAAK,GAAG,IAAI,CAACC,MAAM,GAAG,IAAI,CAACra,KAAK,GAAG,IAAI,CAACua,MAAM,GAAG,CAAC;QACvD;MACF;MACA,IAAI,CAACH,KAAK,GAAG,IAAI,CAACpa,KAAK,GAAG8b,QAAQ;MAClC,IAAI,CAACzB,MAAM,GAAG,IAAI,CAACE,MAAM,GAAGwB,SAAS;MACrC,MAAMk+B,SAAS,GAAG/nD,OAAO,CAAC0vB,IAAI,CAACD,IAAI,CAAC,GAAGC,IAAI,CAACD,IAAI,CAAC1tB,MAAM,GAAG,CAAC;MAC3D,IAAI,CAAC4wE,QAAQ,GAAGn2C,SAAS,CAAC9M,IAAI,CAACkY,OAAO,CAAC;MACvC,MAAMgrC,QAAQ,GAAG7qB,SAAS,GAAGtrB,MAAM,CAAC/M,IAAI,CAACtL,IAAI,CAAC,CAACG,UAAU,GAAG,IAAI,CAACouD,QAAQ,CAACxqD,MAAM;MAChF,IAAI,IAAI,CAAC0c,YAAY,CAAC,CAAC,EAAE;QACvB,IAAI,CAAC1c,MAAM,GAAGyqD,QAAQ;MACxB,CAAC,MAAM;QACL,IAAI,CAAC1qD,KAAK,GAAG0qD,QAAQ;MACvB;IACF;IACA/tC,YAAYA,CAAA,EAAG;MACb,MAAM5c,GAAG,GAAG,IAAI,CAAC9kB,OAAO,CAAC8+B,QAAQ;MACjC,OAAOha,GAAG,KAAK,KAAK,IAAIA,GAAG,KAAK,QAAQ;IAC1C;IACA4qD,SAASA,CAACr3B,MAAM,EAAE;MAChB,MAAM;QAACpzB,GAAG;QAAEva,IAAI;QAAEwa,MAAM;QAAEva,KAAK;QAAE3K;MAAO,CAAC,GAAG,IAAI;MAChD,MAAMuK,KAAK,GAAGvK,OAAO,CAACuK,KAAK;MAC3B,IAAI6f,QAAQ,GAAG,CAAC;MAChB,IAAI3D,QAAQ,EAAEi2B,MAAM,EAAEC,MAAM;MAC5B,IAAI,IAAI,CAACjb,YAAY,CAAC,CAAC,EAAE;QACvBgb,MAAM,GAAGlyC,cAAc,CAACD,KAAK,EAAEG,IAAI,EAAEC,KAAK,CAAC;QAC3CgyC,MAAM,GAAG13B,GAAG,GAAGozB,MAAM;QACrB5xB,QAAQ,GAAG9b,KAAK,GAAGD,IAAI;MACzB,CAAC,MAAM;QACL,IAAI1K,OAAO,CAAC8+B,QAAQ,KAAK,MAAM,EAAE;UAC/B4d,MAAM,GAAGhyC,IAAI,GAAG2tC,MAAM;UACtBsE,MAAM,GAAGnyC,cAAc,CAACD,KAAK,EAAE2a,MAAM,EAAED,GAAG,CAAC;UAC3CmF,QAAQ,GAAGvnB,EAAE,GAAG,CAAC,GAAG;QACtB,CAAC,MAAM;UACL65C,MAAM,GAAG/xC,KAAK,GAAG0tC,MAAM;UACvBsE,MAAM,GAAGnyC,cAAc,CAACD,KAAK,EAAE0a,GAAG,EAAEC,MAAM,CAAC;UAC3CkF,QAAQ,GAAGvnB,EAAE,GAAG,GAAG;QACrB;QACA4jB,QAAQ,GAAGvB,MAAM,GAAGD,GAAG;MACzB;MACA,OAAO;QAACy3B,MAAM;QAAEC,MAAM;QAAEl2B,QAAQ;QAAE2D;MAAQ,CAAC;IAC7C;IACAvc,IAAIA,CAAA,EAAG;MACL,MAAM0T,GAAG,GAAG,IAAI,CAACA,GAAG;MACpB,MAAMgL,IAAI,GAAG,IAAI,CAACvsB,OAAO;MACzB,IAAI,CAACusB,IAAI,CAACgZ,OAAO,EAAE;QACjB;MACF;MACA,MAAMoqC,QAAQ,GAAGr2C,MAAM,CAAC/M,IAAI,CAACtL,IAAI,CAAC;MAClC,MAAMG,UAAU,GAAGuuD,QAAQ,CAACvuD,UAAU;MACtC,MAAMi3B,MAAM,GAAGj3B,UAAU,GAAG,CAAC,GAAG,IAAI,CAACouD,QAAQ,CAACvqD,GAAG;MACjD,MAAM;QAACy3B,MAAM;QAAEC,MAAM;QAAEl2B,QAAQ;QAAE2D;MAAQ,CAAC,GAAG,IAAI,CAACslD,SAAS,CAACr3B,MAAM,CAAC;MACnEhsB,UAAU,CAAC9K,GAAG,EAAEgL,IAAI,CAACD,IAAI,EAAE,CAAC,EAAE,CAAC,EAAEqjD,QAAQ,EAAE;QACzC9wD,KAAK,EAAE0N,IAAI,CAAC1N,KAAK;QACjB4H,QAAQ;QACR2D,QAAQ;QACRgD,SAAS,EAAE9iB,kBAAkB,CAACiiB,IAAI,CAAChiB,KAAK,CAAC;QACzC8iB,YAAY,EAAE,QAAQ;QACtBH,WAAW,EAAE,CAACwvB,MAAM,EAAEC,MAAM;MAC9B,CAAC,CAAC;IACJ;EACF;EACA,SAASizB,WAAWA,CAAC7iE,KAAK,EAAEm0C,SAAS,EAAE;IACrC,MAAMrI,KAAK,GAAG,IAAI02B,KAAK,CAAC;MACtBhuD,GAAG,EAAExU,KAAK,CAACwU,GAAG;MACdvhB,OAAO,EAAEkhD,SAAS;MAClBn0C;IACF,CAAC,CAAC;IACF60B,OAAO,CAACoD,SAAS,CAACj4B,KAAK,EAAE8rC,KAAK,EAAEqI,SAAS,CAAC;IAC1Ctf,OAAO,CAAC+C,MAAM,CAAC53B,KAAK,EAAE8rC,KAAK,CAAC;IAC5B9rC,KAAK,CAAC8iE,UAAU,GAAGh3B,KAAK;EAC1B;EACA,IAAIi3B,YAAY,GAAG;IACjBpzE,EAAE,EAAE,OAAO;IACX0yE,QAAQ,EAAEG,KAAK;IACf9oE,KAAKA,CAACsG,KAAK,EAAEs+D,KAAK,EAAErrE,OAAO,EAAE;MAC3B4vE,WAAW,CAAC7iE,KAAK,EAAE/M,OAAO,CAAC;IAC7B,CAAC;IACD6O,IAAIA,CAAC9B,KAAK,EAAE;MACV,MAAM8iE,UAAU,GAAG9iE,KAAK,CAAC8iE,UAAU;MACnCjuC,OAAO,CAACkD,SAAS,CAAC/3B,KAAK,EAAE8iE,UAAU,CAAC;MACpC,OAAO9iE,KAAK,CAAC8iE,UAAU;IACzB,CAAC;IACDrxB,YAAYA,CAACzxC,KAAK,EAAEs+D,KAAK,EAAErrE,OAAO,EAAE;MAClC,MAAM64C,KAAK,GAAG9rC,KAAK,CAAC8iE,UAAU;MAC9BjuC,OAAO,CAACoD,SAAS,CAACj4B,KAAK,EAAE8rC,KAAK,EAAE74C,OAAO,CAAC;MACxC64C,KAAK,CAAC74C,OAAO,GAAGA,OAAO;IACzB,CAAC;IACDqjB,QAAQ,EAAE;MACR9Y,KAAK,EAAE,QAAQ;MACfg7B,OAAO,EAAE,KAAK;MACdtkB,IAAI,EAAE;QACJnC,MAAM,EAAE;MACV,CAAC;MACDujB,QAAQ,EAAE,IAAI;MACdoC,OAAO,EAAE,EAAE;MACX3F,QAAQ,EAAE,KAAK;MACfxS,IAAI,EAAE,EAAE;MACRxN,MAAM,EAAE;IACV,CAAC;IACDy4B,aAAa,EAAE;MACb14B,KAAK,EAAE;IACT,CAAC;IACDoB,WAAW,EAAE;MACXqD,WAAW,EAAE,IAAI;MACjBE,UAAU,EAAE;IACd;EACF,CAAC;EAED,MAAMjkB,GAAG,GAAG,IAAIwwE,OAAO,CAAC,CAAC;EACzB,IAAIC,eAAe,GAAG;IACpBtzE,EAAE,EAAE,UAAU;IACd+J,KAAKA,CAACsG,KAAK,EAAEs+D,KAAK,EAAErrE,OAAO,EAAE;MAC3B,MAAM64C,KAAK,GAAG,IAAI02B,KAAK,CAAC;QACtBhuD,GAAG,EAAExU,KAAK,CAACwU,GAAG;QACdvhB,OAAO;QACP+M;MACF,CAAC,CAAC;MACF60B,OAAO,CAACoD,SAAS,CAACj4B,KAAK,EAAE8rC,KAAK,EAAE74C,OAAO,CAAC;MACxC4hC,OAAO,CAAC+C,MAAM,CAAC53B,KAAK,EAAE8rC,KAAK,CAAC;MAC5Bt5C,GAAG,CAAC0J,GAAG,CAAC8D,KAAK,EAAE8rC,KAAK,CAAC;IACvB,CAAC;IACDhqC,IAAIA,CAAC9B,KAAK,EAAE;MACV60B,OAAO,CAACkD,SAAS,CAAC/3B,KAAK,EAAExN,GAAG,CAAC4O,GAAG,CAACpB,KAAK,CAAC,CAAC;MACxCxN,GAAG,CAACyP,MAAM,CAACjC,KAAK,CAAC;IACnB,CAAC;IACDyxC,YAAYA,CAACzxC,KAAK,EAAEs+D,KAAK,EAAErrE,OAAO,EAAE;MAClC,MAAM64C,KAAK,GAAGt5C,GAAG,CAAC4O,GAAG,CAACpB,KAAK,CAAC;MAC5B60B,OAAO,CAACoD,SAAS,CAACj4B,KAAK,EAAE8rC,KAAK,EAAE74C,OAAO,CAAC;MACxC64C,KAAK,CAAC74C,OAAO,GAAGA,OAAO;IACzB,CAAC;IACDqjB,QAAQ,EAAE;MACR9Y,KAAK,EAAE,QAAQ;MACfg7B,OAAO,EAAE,KAAK;MACdtkB,IAAI,EAAE;QACJnC,MAAM,EAAE;MACV,CAAC;MACDujB,QAAQ,EAAE,IAAI;MACdoC,OAAO,EAAE,CAAC;MACV3F,QAAQ,EAAE,KAAK;MACfxS,IAAI,EAAE,EAAE;MACRxN,MAAM,EAAE;IACV,CAAC;IACDy4B,aAAa,EAAE;MACb14B,KAAK,EAAE;IACT,CAAC;IACDoB,WAAW,EAAE;MACXqD,WAAW,EAAE,IAAI;MACjBE,UAAU,EAAE;IACd;EACF,CAAC;EAED,MAAMysD,WAAW,GAAG;IAClBC,OAAOA,CAAClnE,KAAK,EAAE;MACb,IAAI,CAACA,KAAK,CAACpK,MAAM,EAAE;QACjB,OAAO,KAAK;MACd;MACA,IAAIH,CAAC,EAAEC,GAAG;MACV,IAAIwC,CAAC,GAAG,CAAC;MACT,IAAIE,CAAC,GAAG,CAAC;MACT,IAAI+J,KAAK,GAAG,CAAC;MACb,KAAK1M,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGsK,KAAK,CAACpK,MAAM,EAAEH,CAAC,GAAGC,GAAG,EAAE,EAAED,CAAC,EAAE;QAC5C,MAAM+lB,EAAE,GAAGxb,KAAK,CAACvK,CAAC,CAAC,CAAC6lB,OAAO;QAC3B,IAAIE,EAAE,IAAIA,EAAE,CAAC6yB,QAAQ,CAAC,CAAC,EAAE;UACvB,MAAMvyB,GAAG,GAAGN,EAAE,CAAC4yB,eAAe,CAAC,CAAC;UAChCl2C,CAAC,IAAI4jB,GAAG,CAAC5jB,CAAC;UACVE,CAAC,IAAI0jB,GAAG,CAAC1jB,CAAC;UACV,EAAE+J,KAAK;QACT;MACF;MACA,OAAO;QACLjK,CAAC,EAAEA,CAAC,GAAGiK,KAAK;QACZ/J,CAAC,EAAEA,CAAC,GAAG+J;MACT,CAAC;IACH,CAAC;IACD41B,OAAOA,CAAC/3B,KAAK,EAAEmnE,aAAa,EAAE;MAC5B,IAAI,CAACnnE,KAAK,CAACpK,MAAM,EAAE;QACjB,OAAO,KAAK;MACd;MACA,IAAIsC,CAAC,GAAGivE,aAAa,CAACjvE,CAAC;MACvB,IAAIE,CAAC,GAAG+uE,aAAa,CAAC/uE,CAAC;MACvB,IAAI++B,WAAW,GAAG5iC,MAAM,CAAC2F,iBAAiB;MAC1C,IAAIzE,CAAC,EAAEC,GAAG,EAAE0xE,cAAc;MAC1B,KAAK3xE,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGsK,KAAK,CAACpK,MAAM,EAAEH,CAAC,GAAGC,GAAG,EAAE,EAAED,CAAC,EAAE;QAC5C,MAAM+lB,EAAE,GAAGxb,KAAK,CAACvK,CAAC,CAAC,CAAC6lB,OAAO;QAC3B,IAAIE,EAAE,IAAIA,EAAE,CAAC6yB,QAAQ,CAAC,CAAC,EAAE;UACvB,MAAMjX,MAAM,GAAG5b,EAAE,CAAC6b,cAAc,CAAC,CAAC;UAClC,MAAMpwB,CAAC,GAAG9J,qBAAqB,CAACgqE,aAAa,EAAE/vC,MAAM,CAAC;UACtD,IAAInwB,CAAC,GAAGkwB,WAAW,EAAE;YACnBA,WAAW,GAAGlwB,CAAC;YACfmgE,cAAc,GAAG5rD,EAAE;UACrB;QACF;MACF;MACA,IAAI4rD,cAAc,EAAE;QAClB,MAAMC,EAAE,GAAGD,cAAc,CAACh5B,eAAe,CAAC,CAAC;QAC3Cl2C,CAAC,GAAGmvE,EAAE,CAACnvE,CAAC;QACRE,CAAC,GAAGivE,EAAE,CAACjvE,CAAC;MACV;MACA,OAAO;QACLF,CAAC;QACDE;MACF,CAAC;IACH;EACF,CAAC;EACD,SAASkvE,YAAYA,CAAC7nE,IAAI,EAAE8nE,MAAM,EAAE;IAClC,IAAIA,MAAM,EAAE;MACV,IAAI1zE,OAAO,CAAC0zE,MAAM,CAAC,EAAE;QACnBzzE,KAAK,CAACG,SAAS,CAAC6E,IAAI,CAACzD,KAAK,CAACoK,IAAI,EAAE8nE,MAAM,CAAC;MAC1C,CAAC,MAAM;QACL9nE,IAAI,CAAC3G,IAAI,CAACyuE,MAAM,CAAC;MACnB;IACF;IACA,OAAO9nE,IAAI;EACb;EACA,SAAS+nE,aAAaA,CAACxuE,GAAG,EAAE;IAC1B,IAAI,CAAC,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,YAAYyuE,MAAM,KAAKzuE,GAAG,CAAClC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;MAChF,OAAOkC,GAAG,CAACL,KAAK,CAAC,IAAI,CAAC;IACxB;IACA,OAAOK,GAAG;EACZ;EACA,SAAS0uE,iBAAiBA,CAAC3jE,KAAK,EAAEtK,IAAI,EAAE;IACtC,MAAM;MAAC6hB,OAAO;MAAEnlB,YAAY;MAAEC;IAAK,CAAC,GAAGqD,IAAI;IAC3C,MAAM87B,UAAU,GAAGxxB,KAAK,CAAC+zB,cAAc,CAAC3hC,YAAY,CAAC,CAACo/B,UAAU;IAChE,MAAM;MAAC8V,KAAK;MAAEz3C;IAAK,CAAC,GAAG2hC,UAAU,CAAC6V,gBAAgB,CAACh1C,KAAK,CAAC;IACzD,OAAO;MACL2N,KAAK;MACLsnC,KAAK;MACL/hB,MAAM,EAAEiM,UAAU,CAACiV,SAAS,CAACp0C,KAAK,CAAC;MACnCiwC,GAAG,EAAEtiC,KAAK,CAAC0b,IAAI,CAAC/H,QAAQ,CAACvhB,YAAY,CAAC,CAACspB,IAAI,CAACrpB,KAAK,CAAC;MAClD+8D,cAAc,EAAEv/D,KAAK;MACrBikC,OAAO,EAAEtC,UAAU,CAACyS,UAAU,CAAC,CAAC;MAChC5B,SAAS,EAAEhwC,KAAK;MAChBD,YAAY;MACZmlB;IACF,CAAC;EACH;EACA,SAASqsD,cAAcA,CAAC3X,OAAO,EAAEh5D,OAAO,EAAE;IACxC,MAAMuhB,GAAG,GAAGy3C,OAAO,CAACjsD,KAAK,CAACwU,GAAG;IAC7B,MAAM;MAACqvD,IAAI;MAAEC,MAAM;MAAEh4B;IAAK,CAAC,GAAGmgB,OAAO;IACrC,MAAM;MAAC8S,QAAQ;MAAED;IAAS,CAAC,GAAG7rE,OAAO;IACrC,MAAM8wE,QAAQ,GAAGx3C,MAAM,CAACt5B,OAAO,CAAC8wE,QAAQ,CAAC;IACzC,MAAMtC,SAAS,GAAGl1C,MAAM,CAACt5B,OAAO,CAACwuE,SAAS,CAAC;IAC3C,MAAMuC,UAAU,GAAGz3C,MAAM,CAACt5B,OAAO,CAAC+wE,UAAU,CAAC;IAC7C,MAAMC,cAAc,GAAGn4B,KAAK,CAACj6C,MAAM;IACnC,MAAMqyE,eAAe,GAAGJ,MAAM,CAACjyE,MAAM;IACrC,MAAMsyE,iBAAiB,GAAGN,IAAI,CAAChyE,MAAM;IACrC,MAAM6lC,OAAO,GAAGpL,SAAS,CAACr5B,OAAO,CAACykC,OAAO,CAAC;IAC1C,IAAIzf,MAAM,GAAGyf,OAAO,CAACzf,MAAM;IAC3B,IAAID,KAAK,GAAG,CAAC;IACb,IAAIosD,kBAAkB,GAAGP,IAAI,CAACniE,MAAM,CAAC,CAACtD,KAAK,EAAEimE,QAAQ,KAAKjmE,KAAK,GAAGimE,QAAQ,CAACC,MAAM,CAACzyE,MAAM,GAAGwyE,QAAQ,CAAC5kD,KAAK,CAAC5tB,MAAM,GAAGwyE,QAAQ,CAACE,KAAK,CAAC1yE,MAAM,EAAE,CAAC,CAAC;IAC5IuyE,kBAAkB,IAAInY,OAAO,CAACuY,UAAU,CAAC3yE,MAAM,GAAGo6D,OAAO,CAACwY,SAAS,CAAC5yE,MAAM;IAC1E,IAAIoyE,cAAc,EAAE;MAClBhsD,MAAM,IAAIgsD,cAAc,GAAGxC,SAAS,CAACptD,UAAU,GAC9C,CAAC4vD,cAAc,GAAG,CAAC,IAAIhxE,OAAO,CAACyxE,YAAY,GAC3CzxE,OAAO,CAAC0xE,iBAAiB;IAC5B;IACA,IAAIP,kBAAkB,EAAE;MACtB,MAAMQ,cAAc,GAAG3xE,OAAO,CAAC4xE,aAAa,GAAG9uE,IAAI,CAACqC,GAAG,CAAC0mE,SAAS,EAAEiF,QAAQ,CAAC1vD,UAAU,CAAC,GAAG0vD,QAAQ,CAAC1vD,UAAU;MAC7G4D,MAAM,IAAIksD,iBAAiB,GAAGS,cAAc,GAC3C,CAACR,kBAAkB,GAAGD,iBAAiB,IAAIJ,QAAQ,CAAC1vD,UAAU,GAC9D,CAAC+vD,kBAAkB,GAAG,CAAC,IAAInxE,OAAO,CAAC6xE,WAAW;IACjD;IACA,IAAIZ,eAAe,EAAE;MACnBjsD,MAAM,IAAIhlB,OAAO,CAAC8xE,eAAe,GAChCb,eAAe,GAAGF,UAAU,CAAC3vD,UAAU,GACvC,CAAC6vD,eAAe,GAAG,CAAC,IAAIjxE,OAAO,CAAC+xE,aAAa;IAChD;IACA,IAAIC,YAAY,GAAG,CAAC;IACpB,MAAMC,YAAY,GAAG,SAAAA,CAAStlD,IAAI,EAAE;MAClC5H,KAAK,GAAGjiB,IAAI,CAACqC,GAAG,CAAC4f,KAAK,EAAExD,GAAG,CAACuH,WAAW,CAAC6D,IAAI,CAAC,CAAC5H,KAAK,GAAGitD,YAAY,CAAC;IACrE,CAAC;IACDzwD,GAAG,CAAC4H,IAAI,CAAC,CAAC;IACV5H,GAAG,CAACN,IAAI,GAAGutD,SAAS,CAAC5lD,MAAM;IAC3BtqB,IAAI,CAAC06D,OAAO,CAACngB,KAAK,EAAEo5B,YAAY,CAAC;IACjC1wD,GAAG,CAACN,IAAI,GAAG6vD,QAAQ,CAACloD,MAAM;IAC1BtqB,IAAI,CAAC06D,OAAO,CAACuY,UAAU,CAAC1uC,MAAM,CAACm2B,OAAO,CAACwY,SAAS,CAAC,EAAES,YAAY,CAAC;IAChED,YAAY,GAAGhyE,OAAO,CAAC4xE,aAAa,GAAI9F,QAAQ,GAAG,CAAC,GAAG9rE,OAAO,CAACmjC,UAAU,GAAI,CAAC;IAC9E7kC,IAAI,CAACsyE,IAAI,EAAGQ,QAAQ,IAAK;MACvB9yE,IAAI,CAAC8yE,QAAQ,CAACC,MAAM,EAAEY,YAAY,CAAC;MACnC3zE,IAAI,CAAC8yE,QAAQ,CAAC5kD,KAAK,EAAEylD,YAAY,CAAC;MAClC3zE,IAAI,CAAC8yE,QAAQ,CAACE,KAAK,EAAEW,YAAY,CAAC;IACpC,CAAC,CAAC;IACFD,YAAY,GAAG,CAAC;IAChBzwD,GAAG,CAACN,IAAI,GAAG8vD,UAAU,CAACnoD,MAAM;IAC5BtqB,IAAI,CAAC06D,OAAO,CAAC6X,MAAM,EAAEoB,YAAY,CAAC;IAClC1wD,GAAG,CAACgI,OAAO,CAAC,CAAC;IACbxE,KAAK,IAAI0f,OAAO,CAAC1f,KAAK;IACtB,OAAO;MAACA,KAAK;MAAEC;IAAM,CAAC;EACxB;EACA,SAASktD,eAAeA,CAACnlE,KAAK,EAAEvK,IAAI,EAAE;IACpC,MAAM;MAACpB,CAAC;MAAE4jB;IAAM,CAAC,GAAGxiB,IAAI;IACxB,IAAIpB,CAAC,GAAG4jB,MAAM,GAAG,CAAC,EAAE;MAClB,OAAO,KAAK;IACd,CAAC,MAAM,IAAI5jB,CAAC,GAAI2L,KAAK,CAACiY,MAAM,GAAGA,MAAM,GAAG,CAAE,EAAE;MAC1C,OAAO,QAAQ;IACjB;IACA,OAAO,QAAQ;EACjB;EACA,SAASmtD,mBAAmBA,CAACC,MAAM,EAAErlE,KAAK,EAAE/M,OAAO,EAAEwC,IAAI,EAAE;IACzD,MAAM;MAACtB,CAAC;MAAE6jB;IAAK,CAAC,GAAGviB,IAAI;IACvB,MAAM6vE,KAAK,GAAGryE,OAAO,CAACsyE,SAAS,GAAGtyE,OAAO,CAACuyE,YAAY;IACtD,IAAIH,MAAM,KAAK,MAAM,IAAIlxE,CAAC,GAAG6jB,KAAK,GAAGstD,KAAK,GAAGtlE,KAAK,CAACgY,KAAK,EAAE;MACxD,OAAO,IAAI;IACb;IACA,IAAIqtD,MAAM,KAAK,OAAO,IAAIlxE,CAAC,GAAG6jB,KAAK,GAAGstD,KAAK,GAAG,CAAC,EAAE;MAC/C,OAAO,IAAI;IACb;EACF;EACA,SAASG,eAAeA,CAACzlE,KAAK,EAAE/M,OAAO,EAAEwC,IAAI,EAAEiwE,MAAM,EAAE;IACrD,MAAM;MAACvxE,CAAC;MAAE6jB;IAAK,CAAC,GAAGviB,IAAI;IACvB,MAAM;MAACuiB,KAAK,EAAE2tD,UAAU;MAAE/yC,SAAS,EAAE;QAACj1B,IAAI;QAAEC;MAAK;IAAC,CAAC,GAAGoC,KAAK;IAC3D,IAAIqlE,MAAM,GAAG,QAAQ;IACrB,IAAIK,MAAM,KAAK,QAAQ,EAAE;MACvBL,MAAM,GAAGlxE,CAAC,IAAI,CAACwJ,IAAI,GAAGC,KAAK,IAAI,CAAC,GAAG,MAAM,GAAG,OAAO;IACrD,CAAC,MAAM,IAAIzJ,CAAC,IAAI6jB,KAAK,GAAG,CAAC,EAAE;MACzBqtD,MAAM,GAAG,MAAM;IACjB,CAAC,MAAM,IAAIlxE,CAAC,IAAIwxE,UAAU,GAAG3tD,KAAK,GAAG,CAAC,EAAE;MACtCqtD,MAAM,GAAG,OAAO;IAClB;IACA,IAAID,mBAAmB,CAACC,MAAM,EAAErlE,KAAK,EAAE/M,OAAO,EAAEwC,IAAI,CAAC,EAAE;MACrD4vE,MAAM,GAAG,QAAQ;IACnB;IACA,OAAOA,MAAM;EACf;EACA,SAASO,kBAAkBA,CAAC5lE,KAAK,EAAE/M,OAAO,EAAEwC,IAAI,EAAE;IAChD,MAAMiwE,MAAM,GAAGjwE,IAAI,CAACiwE,MAAM,IAAIzyE,OAAO,CAACyyE,MAAM,IAAIP,eAAe,CAACnlE,KAAK,EAAEvK,IAAI,CAAC;IAC5E,OAAO;MACL4vE,MAAM,EAAE5vE,IAAI,CAAC4vE,MAAM,IAAIpyE,OAAO,CAACoyE,MAAM,IAAII,eAAe,CAACzlE,KAAK,EAAE/M,OAAO,EAAEwC,IAAI,EAAEiwE,MAAM,CAAC;MACtFA;IACF,CAAC;EACH;EACA,SAASG,MAAMA,CAACpwE,IAAI,EAAE4vE,MAAM,EAAE;IAC5B,IAAI;MAAClxE,CAAC;MAAE6jB;IAAK,CAAC,GAAGviB,IAAI;IACrB,IAAI4vE,MAAM,KAAK,OAAO,EAAE;MACtBlxE,CAAC,IAAI6jB,KAAK;IACZ,CAAC,MAAM,IAAIqtD,MAAM,KAAK,QAAQ,EAAE;MAC9BlxE,CAAC,IAAK6jB,KAAK,GAAG,CAAE;IAClB;IACA,OAAO7jB,CAAC;EACV;EACA,SAAS2xE,MAAMA,CAACrwE,IAAI,EAAEiwE,MAAM,EAAEK,cAAc,EAAE;IAC5C,IAAI;MAAC1xE,CAAC;MAAE4jB;IAAM,CAAC,GAAGxiB,IAAI;IACtB,IAAIiwE,MAAM,KAAK,KAAK,EAAE;MACpBrxE,CAAC,IAAI0xE,cAAc;IACrB,CAAC,MAAM,IAAIL,MAAM,KAAK,QAAQ,EAAE;MAC9BrxE,CAAC,IAAI4jB,MAAM,GAAG8tD,cAAc;IAC9B,CAAC,MAAM;MACL1xE,CAAC,IAAK4jB,MAAM,GAAG,CAAE;IACnB;IACA,OAAO5jB,CAAC;EACV;EACA,SAAS2xE,kBAAkBA,CAAC/yE,OAAO,EAAEwC,IAAI,EAAEwwE,SAAS,EAAEjmE,KAAK,EAAE;IAC3D,MAAM;MAACulE,SAAS;MAAEC,YAAY;MAAEroD;IAAY,CAAC,GAAGlqB,OAAO;IACvD,MAAM;MAACoyE,MAAM;MAAEK;IAAM,CAAC,GAAGO,SAAS;IAClC,MAAMF,cAAc,GAAGR,SAAS,GAAGC,YAAY;IAC/C,MAAM;MAACvkD,OAAO;MAAEG,QAAQ;MAAEF,UAAU;MAAEC;IAAW,CAAC,GAAGkL,aAAa,CAAClP,YAAY,CAAC;IAChF,IAAIhpB,CAAC,GAAG0xE,MAAM,CAACpwE,IAAI,EAAE4vE,MAAM,CAAC;IAC5B,MAAMhxE,CAAC,GAAGyxE,MAAM,CAACrwE,IAAI,EAAEiwE,MAAM,EAAEK,cAAc,CAAC;IAC9C,IAAIL,MAAM,KAAK,QAAQ,EAAE;MACvB,IAAIL,MAAM,KAAK,MAAM,EAAE;QACrBlxE,CAAC,IAAI4xE,cAAc;MACrB,CAAC,MAAM,IAAIV,MAAM,KAAK,OAAO,EAAE;QAC7BlxE,CAAC,IAAI4xE,cAAc;MACrB;IACF,CAAC,MAAM,IAAIV,MAAM,KAAK,MAAM,EAAE;MAC5BlxE,CAAC,IAAI4B,IAAI,CAACqC,GAAG,CAAC6oB,OAAO,EAAEC,UAAU,CAAC,GAAGqkD,SAAS;IAChD,CAAC,MAAM,IAAIF,MAAM,KAAK,OAAO,EAAE;MAC7BlxE,CAAC,IAAI4B,IAAI,CAACqC,GAAG,CAACgpB,QAAQ,EAAED,WAAW,CAAC,GAAGokD,SAAS;IAClD;IACA,OAAO;MACLpxE,CAAC,EAAE+F,WAAW,CAAC/F,CAAC,EAAE,CAAC,EAAE6L,KAAK,CAACgY,KAAK,GAAGviB,IAAI,CAACuiB,KAAK,CAAC;MAC9C3jB,CAAC,EAAE6F,WAAW,CAAC7F,CAAC,EAAE,CAAC,EAAE2L,KAAK,CAACiY,MAAM,GAAGxiB,IAAI,CAACwiB,MAAM;IACjD,CAAC;EACH;EACA,SAASiuD,WAAWA,CAACja,OAAO,EAAEzuD,KAAK,EAAEvK,OAAO,EAAE;IAC5C,MAAMykC,OAAO,GAAGpL,SAAS,CAACr5B,OAAO,CAACykC,OAAO,CAAC;IAC1C,OAAOl6B,KAAK,KAAK,QAAQ,GACrByuD,OAAO,CAAC93D,CAAC,GAAG83D,OAAO,CAACj0C,KAAK,GAAG,CAAC,GAC7Bxa,KAAK,KAAK,OAAO,GACfyuD,OAAO,CAAC93D,CAAC,GAAG83D,OAAO,CAACj0C,KAAK,GAAG0f,OAAO,CAAC95B,KAAK,GACzCquD,OAAO,CAAC93D,CAAC,GAAGujC,OAAO,CAAC/5B,IAAI;EAChC;EACA,SAASwoE,uBAAuBA,CAACj1E,QAAQ,EAAE;IACzC,OAAOqyE,YAAY,CAAC,EAAE,EAAEE,aAAa,CAACvyE,QAAQ,CAAC,CAAC;EAClD;EACA,SAASk1E,oBAAoBA,CAACrvD,MAAM,EAAEk1C,OAAO,EAAEoa,YAAY,EAAE;IAC3D,OAAOp5C,aAAa,CAAClW,MAAM,EAAE;MAC3Bk1C,OAAO;MACPoa,YAAY;MACZr2E,IAAI,EAAE;IACR,CAAC,CAAC;EACJ;EACA,SAASs2E,iBAAiBA,CAACnmE,SAAS,EAAE0T,OAAO,EAAE;IAC7C,MAAM8B,QAAQ,GAAG9B,OAAO,IAAIA,OAAO,CAACigB,OAAO,IAAIjgB,OAAO,CAACigB,OAAO,CAACm4B,OAAO,IAAIp4C,OAAO,CAACigB,OAAO,CAACm4B,OAAO,CAAC9rD,SAAS;IAC3G,OAAOwV,QAAQ,GAAGxV,SAAS,CAACwV,QAAQ,CAACA,QAAQ,CAAC,GAAGxV,SAAS;EAC5D;EACA,MAAMomE,OAAO,SAASn8B,OAAO,CAAC;IAC5B3qC,WAAWA,CAACq5B,MAAM,EAAE;MAClB,KAAK,CAAC,CAAC;MACP,IAAI,CAAC0tC,OAAO,GAAG,CAAC;MAChB,IAAI,CAACzlE,OAAO,GAAG,EAAE;MACjB,IAAI,CAAC0lE,cAAc,GAAG3yE,SAAS;MAC/B,IAAI,CAAC4yE,KAAK,GAAG5yE,SAAS;MACtB,IAAI,CAAC6yE,iBAAiB,GAAG7yE,SAAS;MAClC,IAAI,CAAC8yE,aAAa,GAAG,EAAE;MACvB,IAAI,CAAClnC,WAAW,GAAG5rC,SAAS;MAC5B,IAAI,CAAC6vC,QAAQ,GAAG7vC,SAAS;MACzB,IAAI,CAACkM,KAAK,GAAG84B,MAAM,CAAC94B,KAAK,IAAI84B,MAAM,CAAC5I,MAAM;MAC1C,IAAI,CAACA,MAAM,GAAG,IAAI,CAAClwB,KAAK;MACxB,IAAI,CAAC/M,OAAO,GAAG6lC,MAAM,CAAC7lC,OAAO;MAC7B,IAAI,CAAC4zE,UAAU,GAAG/yE,SAAS;MAC3B,IAAI,CAACg4C,KAAK,GAAGh4C,SAAS;MACtB,IAAI,CAAC0wE,UAAU,GAAG1wE,SAAS;MAC3B,IAAI,CAAC+vE,IAAI,GAAG/vE,SAAS;MACrB,IAAI,CAAC2wE,SAAS,GAAG3wE,SAAS;MAC1B,IAAI,CAACgwE,MAAM,GAAGhwE,SAAS;MACvB,IAAI,CAACuxE,MAAM,GAAGvxE,SAAS;MACvB,IAAI,CAAC4xE,MAAM,GAAG5xE,SAAS;MACvB,IAAI,CAACK,CAAC,GAAGL,SAAS;MAClB,IAAI,CAACO,CAAC,GAAGP,SAAS;MAClB,IAAI,CAACmkB,MAAM,GAAGnkB,SAAS;MACvB,IAAI,CAACkkB,KAAK,GAAGlkB,SAAS;MACtB,IAAI,CAACgzE,MAAM,GAAGhzE,SAAS;MACvB,IAAI,CAACizE,MAAM,GAAGjzE,SAAS;MACvB,IAAI,CAACkzE,WAAW,GAAGlzE,SAAS;MAC5B,IAAI,CAACmzE,gBAAgB,GAAGnzE,SAAS;MACjC,IAAI,CAACozE,eAAe,GAAGpzE,SAAS;IAClC;IACA+vC,UAAUA,CAAC5wC,OAAO,EAAE;MAClB,IAAI,CAACA,OAAO,GAAGA,OAAO;MACtB,IAAI,CAAC0zE,iBAAiB,GAAG7yE,SAAS;MAClC,IAAI,CAAC6vC,QAAQ,GAAG7vC,SAAS;IAC3B;IACAm0C,kBAAkBA,CAAA,EAAG;MACnB,MAAMvF,MAAM,GAAG,IAAI,CAACikC,iBAAiB;MACrC,IAAIjkC,MAAM,EAAE;QACV,OAAOA,MAAM;MACf;MACA,MAAM1iC,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,MAAM/M,OAAO,GAAG,IAAI,CAACA,OAAO,CAACuwB,UAAU,CAAC,IAAI,CAAC1G,UAAU,CAAC,CAAC,CAAC;MAC1D,MAAM0C,IAAI,GAAGvsB,OAAO,CAACi6C,OAAO,IAAIltC,KAAK,CAAC/M,OAAO,CAACugB,SAAS,IAAIvgB,OAAO,CAAC2rC,UAAU;MAC7E,MAAMA,UAAU,GAAG,IAAIG,UAAU,CAAC,IAAI,CAAC/+B,KAAK,EAAEwf,IAAI,CAAC;MACnD,IAAIA,IAAI,CAACsC,UAAU,EAAE;QACnB,IAAI,CAAC6kD,iBAAiB,GAAG12E,MAAM,CAACkhC,MAAM,CAACyN,UAAU,CAAC;MACpD;MACA,OAAOA,UAAU;IACnB;IACA9hB,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAAC6mB,QAAQ,KACpB,IAAI,CAACA,QAAQ,GAAGyiC,oBAAoB,CAAC,IAAI,CAACpmE,KAAK,CAAC8c,UAAU,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC8pD,aAAa,CAAC,CAAC;IAC1F;IACAO,QAAQA,CAACtzD,OAAO,EAAE5gB,OAAO,EAAE;MACzB,MAAM;QAACkN;MAAS,CAAC,GAAGlN,OAAO;MAC3B,MAAMm0E,WAAW,GAAGjnE,SAAS,CAACinE,WAAW,CAAC91E,KAAK,CAAC,IAAI,EAAE,CAACuiB,OAAO,CAAC,CAAC;MAChE,MAAMi4B,KAAK,GAAG3rC,SAAS,CAAC2rC,KAAK,CAACx6C,KAAK,CAAC,IAAI,EAAE,CAACuiB,OAAO,CAAC,CAAC;MACpD,MAAMwzD,UAAU,GAAGlnE,SAAS,CAACknE,UAAU,CAAC/1E,KAAK,CAAC,IAAI,EAAE,CAACuiB,OAAO,CAAC,CAAC;MAC9D,IAAI4L,KAAK,GAAG,EAAE;MACdA,KAAK,GAAG8jD,YAAY,CAAC9jD,KAAK,EAAEgkD,aAAa,CAAC2D,WAAW,CAAC,CAAC;MACvD3nD,KAAK,GAAG8jD,YAAY,CAAC9jD,KAAK,EAAEgkD,aAAa,CAAC33B,KAAK,CAAC,CAAC;MACjDrsB,KAAK,GAAG8jD,YAAY,CAAC9jD,KAAK,EAAEgkD,aAAa,CAAC4D,UAAU,CAAC,CAAC;MACtD,OAAO5nD,KAAK;IACd;IACA6nD,aAAaA,CAACjB,YAAY,EAAEpzE,OAAO,EAAE;MACnC,OAAOkzE,uBAAuB,CAAClzE,OAAO,CAACkN,SAAS,CAACqkE,UAAU,CAAClzE,KAAK,CAAC,IAAI,EAAE,CAAC+0E,YAAY,CAAC,CAAC,CAAC;IAC1F;IACAkB,OAAOA,CAAClB,YAAY,EAAEpzE,OAAO,EAAE;MAC7B,MAAM;QAACkN;MAAS,CAAC,GAAGlN,OAAO;MAC3B,MAAMu0E,SAAS,GAAG,EAAE;MACpBj2E,IAAI,CAAC80E,YAAY,EAAGxyD,OAAO,IAAK;QAC9B,MAAMwwD,QAAQ,GAAG;UACfC,MAAM,EAAE,EAAE;UACV7kD,KAAK,EAAE,EAAE;UACT8kD,KAAK,EAAE;QACT,CAAC;QACD,MAAMkD,MAAM,GAAGnB,iBAAiB,CAACnmE,SAAS,EAAE0T,OAAO,CAAC;QACpD0vD,YAAY,CAACc,QAAQ,CAACC,MAAM,EAAEb,aAAa,CAACgE,MAAM,CAACC,WAAW,CAACt3E,IAAI,CAAC,IAAI,EAAEyjB,OAAO,CAAC,CAAC,CAAC;QACpF0vD,YAAY,CAACc,QAAQ,CAAC5kD,KAAK,EAAEgoD,MAAM,CAACngC,KAAK,CAACl3C,IAAI,CAAC,IAAI,EAAEyjB,OAAO,CAAC,CAAC;QAC9D0vD,YAAY,CAACc,QAAQ,CAACE,KAAK,EAAEd,aAAa,CAACgE,MAAM,CAACE,UAAU,CAACv3E,IAAI,CAAC,IAAI,EAAEyjB,OAAO,CAAC,CAAC,CAAC;QAClF2zD,SAAS,CAACzyE,IAAI,CAACsvE,QAAQ,CAAC;MAC1B,CAAC,CAAC;MACF,OAAOmD,SAAS;IAClB;IACAI,YAAYA,CAACvB,YAAY,EAAEpzE,OAAO,EAAE;MAClC,OAAOkzE,uBAAuB,CAAClzE,OAAO,CAACkN,SAAS,CAACskE,SAAS,CAACnzE,KAAK,CAAC,IAAI,EAAE,CAAC+0E,YAAY,CAAC,CAAC,CAAC;IACzF;IACAwB,SAASA,CAACxB,YAAY,EAAEpzE,OAAO,EAAE;MAC/B,MAAM;QAACkN;MAAS,CAAC,GAAGlN,OAAO;MAC3B,MAAM60E,YAAY,GAAG3nE,SAAS,CAAC2nE,YAAY,CAACx2E,KAAK,CAAC,IAAI,EAAE,CAAC+0E,YAAY,CAAC,CAAC;MACvE,MAAMvC,MAAM,GAAG3jE,SAAS,CAAC2jE,MAAM,CAACxyE,KAAK,CAAC,IAAI,EAAE,CAAC+0E,YAAY,CAAC,CAAC;MAC3D,MAAM0B,WAAW,GAAG5nE,SAAS,CAAC4nE,WAAW,CAACz2E,KAAK,CAAC,IAAI,EAAE,CAAC+0E,YAAY,CAAC,CAAC;MACrE,IAAI5mD,KAAK,GAAG,EAAE;MACdA,KAAK,GAAG8jD,YAAY,CAAC9jD,KAAK,EAAEgkD,aAAa,CAACqE,YAAY,CAAC,CAAC;MACxDroD,KAAK,GAAG8jD,YAAY,CAAC9jD,KAAK,EAAEgkD,aAAa,CAACK,MAAM,CAAC,CAAC;MAClDrkD,KAAK,GAAG8jD,YAAY,CAAC9jD,KAAK,EAAEgkD,aAAa,CAACsE,WAAW,CAAC,CAAC;MACvD,OAAOtoD,KAAK;IACd;IACAuoD,YAAYA,CAAC/0E,OAAO,EAAE;MACpB,MAAM8qC,MAAM,GAAG,IAAI,CAACh9B,OAAO;MAC3B,MAAM2a,IAAI,GAAG,IAAI,CAAC1b,KAAK,CAAC0b,IAAI;MAC5B,MAAMsrD,WAAW,GAAG,EAAE;MACtB,MAAMC,gBAAgB,GAAG,EAAE;MAC3B,MAAMC,eAAe,GAAG,EAAE;MAC1B,IAAIb,YAAY,GAAG,EAAE;MACrB,IAAI30E,CAAC,EAAEC,GAAG;MACV,KAAKD,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGosC,MAAM,CAAClsC,MAAM,EAAEH,CAAC,GAAGC,GAAG,EAAE,EAAED,CAAC,EAAE;QAC7C20E,YAAY,CAACtxE,IAAI,CAAC4uE,iBAAiB,CAAC,IAAI,CAAC3jE,KAAK,EAAE+9B,MAAM,CAACrsC,CAAC,CAAC,CAAC,CAAC;MAC7D;MACA,IAAIuB,OAAO,CAAC0xB,MAAM,EAAE;QAClB0hD,YAAY,GAAGA,YAAY,CAAC1hD,MAAM,CAAC,CAACpN,OAAO,EAAEllB,KAAK,EAAE4F,KAAK,KAAKhF,OAAO,CAAC0xB,MAAM,CAACpN,OAAO,EAAEllB,KAAK,EAAE4F,KAAK,EAAEyjB,IAAI,CAAC,CAAC;MAC5G;MACA,IAAIzoB,OAAO,CAACg1E,QAAQ,EAAE;QACpB5B,YAAY,GAAGA,YAAY,CAAC9uE,IAAI,CAAC,CAAChC,CAAC,EAAEC,CAAC,KAAKvC,OAAO,CAACg1E,QAAQ,CAAC1yE,CAAC,EAAEC,CAAC,EAAEkmB,IAAI,CAAC,CAAC;MAC1E;MACAnqB,IAAI,CAAC80E,YAAY,EAAGxyD,OAAO,IAAK;QAC9B,MAAM4zD,MAAM,GAAGnB,iBAAiB,CAACrzE,OAAO,CAACkN,SAAS,EAAE0T,OAAO,CAAC;QAC5DmzD,WAAW,CAACjyE,IAAI,CAAC0yE,MAAM,CAACS,UAAU,CAAC93E,IAAI,CAAC,IAAI,EAAEyjB,OAAO,CAAC,CAAC;QACvDozD,gBAAgB,CAAClyE,IAAI,CAAC0yE,MAAM,CAACU,eAAe,CAAC/3E,IAAI,CAAC,IAAI,EAAEyjB,OAAO,CAAC,CAAC;QACjEqzD,eAAe,CAACnyE,IAAI,CAAC0yE,MAAM,CAACW,cAAc,CAACh4E,IAAI,CAAC,IAAI,EAAEyjB,OAAO,CAAC,CAAC;MACjE,CAAC,CAAC;MACF,IAAI,CAACmzD,WAAW,GAAGA,WAAW;MAC9B,IAAI,CAACC,gBAAgB,GAAGA,gBAAgB;MACxC,IAAI,CAACC,eAAe,GAAGA,eAAe;MACtC,IAAI,CAACL,UAAU,GAAGR,YAAY;MAC9B,OAAOA,YAAY;IACrB;IACA/uC,MAAMA,CAACh4B,OAAO,EAAEonD,MAAM,EAAE;MACtB,MAAMzzD,OAAO,GAAG,IAAI,CAACA,OAAO,CAACuwB,UAAU,CAAC,IAAI,CAAC1G,UAAU,CAAC,CAAC,CAAC;MAC1D,MAAMihB,MAAM,GAAG,IAAI,CAACh9B,OAAO;MAC3B,IAAI29B,UAAU;MACd,IAAI2nC,YAAY,GAAG,EAAE;MACrB,IAAI,CAACtoC,MAAM,CAAClsC,MAAM,EAAE;QAClB,IAAI,IAAI,CAAC20E,OAAO,KAAK,CAAC,EAAE;UACtB9nC,UAAU,GAAG;YACX8nC,OAAO,EAAE;UACX,CAAC;QACH;MACF,CAAC,MAAM;QACL,MAAMz0C,QAAQ,GAAGmxC,WAAW,CAACjwE,OAAO,CAAC8+B,QAAQ,CAAC,CAAC3hC,IAAI,CAAC,IAAI,EAAE2tC,MAAM,EAAE,IAAI,CAAC0oC,cAAc,CAAC;QACtFJ,YAAY,GAAG,IAAI,CAAC2B,YAAY,CAAC/0E,OAAO,CAAC;QACzC,IAAI,CAAC64C,KAAK,GAAG,IAAI,CAACq7B,QAAQ,CAACd,YAAY,EAAEpzE,OAAO,CAAC;QACjD,IAAI,CAACuxE,UAAU,GAAG,IAAI,CAAC8C,aAAa,CAACjB,YAAY,EAAEpzE,OAAO,CAAC;QAC3D,IAAI,CAAC4wE,IAAI,GAAG,IAAI,CAAC0D,OAAO,CAAClB,YAAY,EAAEpzE,OAAO,CAAC;QAC/C,IAAI,CAACwxE,SAAS,GAAG,IAAI,CAACmD,YAAY,CAACvB,YAAY,EAAEpzE,OAAO,CAAC;QACzD,IAAI,CAAC6wE,MAAM,GAAG,IAAI,CAAC+D,SAAS,CAACxB,YAAY,EAAEpzE,OAAO,CAAC;QACnD,MAAMwC,IAAI,GAAG,IAAI,CAACixE,KAAK,GAAG9C,cAAc,CAAC,IAAI,EAAE3wE,OAAO,CAAC;QACvD,MAAMo1E,eAAe,GAAGp4E,MAAM,CAACsP,MAAM,CAAC,CAAC,CAAC,EAAEwyB,QAAQ,EAAEt8B,IAAI,CAAC;QACzD,MAAMwwE,SAAS,GAAGL,kBAAkB,CAAC,IAAI,CAAC5lE,KAAK,EAAE/M,OAAO,EAAEo1E,eAAe,CAAC;QAC1E,MAAMC,eAAe,GAAGtC,kBAAkB,CAAC/yE,OAAO,EAAEo1E,eAAe,EAAEpC,SAAS,EAAE,IAAI,CAACjmE,KAAK,CAAC;QAC3F,IAAI,CAACqlE,MAAM,GAAGY,SAAS,CAACZ,MAAM;QAC9B,IAAI,CAACK,MAAM,GAAGO,SAAS,CAACP,MAAM;QAC9BhnC,UAAU,GAAG;UACX8nC,OAAO,EAAE,CAAC;UACVryE,CAAC,EAAEm0E,eAAe,CAACn0E,CAAC;UACpBE,CAAC,EAAEi0E,eAAe,CAACj0E,CAAC;UACpB2jB,KAAK,EAAEviB,IAAI,CAACuiB,KAAK;UACjBC,MAAM,EAAExiB,IAAI,CAACwiB,MAAM;UACnB6uD,MAAM,EAAE/0C,QAAQ,CAAC59B,CAAC;UAClB4yE,MAAM,EAAEh1C,QAAQ,CAAC19B;QACnB,CAAC;MACH;MACA,IAAI,CAACuyE,aAAa,GAAGP,YAAY;MACjC,IAAI,CAAC1iC,QAAQ,GAAG7vC,SAAS;MACzB,IAAI4qC,UAAU,EAAE;QACd,IAAI,CAACuJ,kBAAkB,CAAC,CAAC,CAAC3Q,MAAM,CAAC,IAAI,EAAEoH,UAAU,CAAC;MACpD;MACA,IAAIp/B,OAAO,IAAIrM,OAAO,CAACs1E,QAAQ,EAAE;QAC/Bt1E,OAAO,CAACs1E,QAAQ,CAACn4E,IAAI,CAAC,IAAI,EAAE;UAAC4P,KAAK,EAAE,IAAI,CAACA,KAAK;UAAEisD,OAAO,EAAE,IAAI;UAAEvF;QAAM,CAAC,CAAC;MACzE;IACF;IACA8hB,SAASA,CAACC,YAAY,EAAEj0D,GAAG,EAAE/e,IAAI,EAAExC,OAAO,EAAE;MAC1C,MAAMy1E,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAACF,YAAY,EAAEhzE,IAAI,EAAExC,OAAO,CAAC;MACxEuhB,GAAG,CAACyJ,MAAM,CAACyqD,aAAa,CAAC1xB,EAAE,EAAE0xB,aAAa,CAACzxB,EAAE,CAAC;MAC9CziC,GAAG,CAACyJ,MAAM,CAACyqD,aAAa,CAACxxB,EAAE,EAAEwxB,aAAa,CAACvxB,EAAE,CAAC;MAC9C3iC,GAAG,CAACyJ,MAAM,CAACyqD,aAAa,CAACE,EAAE,EAAEF,aAAa,CAACG,EAAE,CAAC;IAChD;IACAF,gBAAgBA,CAACF,YAAY,EAAEhzE,IAAI,EAAExC,OAAO,EAAE;MAC5C,MAAM;QAACoyE,MAAM;QAAEK;MAAM,CAAC,GAAG,IAAI;MAC7B,MAAM;QAACH,SAAS;QAAEpoD;MAAY,CAAC,GAAGlqB,OAAO;MACzC,MAAM;QAACguB,OAAO;QAAEG,QAAQ;QAAEF,UAAU;QAAEC;MAAW,CAAC,GAAGkL,aAAa,CAAClP,YAAY,CAAC;MAChF,MAAM;QAAChpB,CAAC,EAAE20E,GAAG;QAAEz0E,CAAC,EAAE00E;MAAG,CAAC,GAAGN,YAAY;MACrC,MAAM;QAACzwD,KAAK;QAAEC;MAAM,CAAC,GAAGxiB,IAAI;MAC5B,IAAIuhD,EAAE,EAAEE,EAAE,EAAE0xB,EAAE,EAAE3xB,EAAE,EAAEE,EAAE,EAAE0xB,EAAE;MAC1B,IAAInD,MAAM,KAAK,QAAQ,EAAE;QACvBvuB,EAAE,GAAG4xB,GAAG,GAAI9wD,MAAM,GAAG,CAAE;QACvB,IAAIotD,MAAM,KAAK,MAAM,EAAE;UACrBruB,EAAE,GAAG8xB,GAAG;UACR5xB,EAAE,GAAGF,EAAE,GAAGuuB,SAAS;UACnBtuB,EAAE,GAAGE,EAAE,GAAGouB,SAAS;UACnBsD,EAAE,GAAG1xB,EAAE,GAAGouB,SAAS;QACrB,CAAC,MAAM;UACLvuB,EAAE,GAAG8xB,GAAG,GAAG9wD,KAAK;UAChBk/B,EAAE,GAAGF,EAAE,GAAGuuB,SAAS;UACnBtuB,EAAE,GAAGE,EAAE,GAAGouB,SAAS;UACnBsD,EAAE,GAAG1xB,EAAE,GAAGouB,SAAS;QACrB;QACAqD,EAAE,GAAG5xB,EAAE;MACT,CAAC,MAAM;QACL,IAAIquB,MAAM,KAAK,MAAM,EAAE;UACrBnuB,EAAE,GAAG4xB,GAAG,GAAG/yE,IAAI,CAACqC,GAAG,CAAC6oB,OAAO,EAAEC,UAAU,CAAC,GAAIqkD,SAAU;QACxD,CAAC,MAAM,IAAIF,MAAM,KAAK,OAAO,EAAE;UAC7BnuB,EAAE,GAAG4xB,GAAG,GAAG9wD,KAAK,GAAGjiB,IAAI,CAACqC,GAAG,CAACgpB,QAAQ,EAAED,WAAW,CAAC,GAAGokD,SAAS;QAChE,CAAC,MAAM;UACLruB,EAAE,GAAG,IAAI,CAAC4vB,MAAM;QAClB;QACA,IAAIpB,MAAM,KAAK,KAAK,EAAE;UACpBzuB,EAAE,GAAG8xB,GAAG;UACR5xB,EAAE,GAAGF,EAAE,GAAGsuB,SAAS;UACnBvuB,EAAE,GAAGE,EAAE,GAAGquB,SAAS;UACnBqD,EAAE,GAAG1xB,EAAE,GAAGquB,SAAS;QACrB,CAAC,MAAM;UACLtuB,EAAE,GAAG8xB,GAAG,GAAG9wD,MAAM;UACjBk/B,EAAE,GAAGF,EAAE,GAAGsuB,SAAS;UACnBvuB,EAAE,GAAGE,EAAE,GAAGquB,SAAS;UACnBqD,EAAE,GAAG1xB,EAAE,GAAGquB,SAAS;QACrB;QACAsD,EAAE,GAAG5xB,EAAE;MACT;MACA,OAAO;QAACD,EAAE;QAAEE,EAAE;QAAE0xB,EAAE;QAAE3xB,EAAE;QAAEE,EAAE;QAAE0xB;MAAE,CAAC;IACjC;IACA7vB,SAASA,CAACrxB,EAAE,EAAEnT,GAAG,EAAEvhB,OAAO,EAAE;MAC1B,MAAM64C,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,MAAMj6C,MAAM,GAAGi6C,KAAK,CAACj6C,MAAM;MAC3B,IAAI4vE,SAAS,EAAEiD,YAAY,EAAEhzE,CAAC;MAC9B,IAAIG,MAAM,EAAE;QACV,MAAM6uE,SAAS,GAAG/yC,aAAa,CAAC16B,OAAO,CAAC4K,GAAG,EAAE,IAAI,CAAC1J,CAAC,EAAE,IAAI,CAAC6jB,KAAK,CAAC;QAChE2P,EAAE,CAACxzB,CAAC,GAAG+xE,WAAW,CAAC,IAAI,EAAEjzE,OAAO,CAACw8C,UAAU,EAAEx8C,OAAO,CAAC;QACrDuhB,GAAG,CAAC6L,SAAS,GAAGqgD,SAAS,CAACrgD,SAAS,CAACptB,OAAO,CAACw8C,UAAU,CAAC;QACvDj7B,GAAG,CAAC8L,YAAY,GAAG,QAAQ;QAC3BmhD,SAAS,GAAGl1C,MAAM,CAACt5B,OAAO,CAACwuE,SAAS,CAAC;QACrCiD,YAAY,GAAGzxE,OAAO,CAACyxE,YAAY;QACnClwD,GAAG,CAAC4L,SAAS,GAAGntB,OAAO,CAAC+1E,UAAU;QAClCx0D,GAAG,CAACN,IAAI,GAAGutD,SAAS,CAAC5lD,MAAM;QAC3B,KAAKnqB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGG,MAAM,EAAE,EAAEH,CAAC,EAAE;UAC3B8iB,GAAG,CAACyL,QAAQ,CAAC6rB,KAAK,CAACp6C,CAAC,CAAC,EAAEgvE,SAAS,CAACvsE,CAAC,CAACwzB,EAAE,CAACxzB,CAAC,CAAC,EAAEwzB,EAAE,CAACtzB,CAAC,GAAGotE,SAAS,CAACptD,UAAU,GAAG,CAAC,CAAC;UAC1EsT,EAAE,CAACtzB,CAAC,IAAIotE,SAAS,CAACptD,UAAU,GAAGqwD,YAAY;UAC3C,IAAIhzE,CAAC,GAAG,CAAC,KAAKG,MAAM,EAAE;YACpB81B,EAAE,CAACtzB,CAAC,IAAIpB,OAAO,CAAC0xE,iBAAiB,GAAGD,YAAY;UAClD;QACF;MACF;IACF;IACAuE,aAAaA,CAACz0D,GAAG,EAAEmT,EAAE,EAAEj2B,CAAC,EAAEgvE,SAAS,EAAEztE,OAAO,EAAE;MAC5C,MAAM+zE,WAAW,GAAG,IAAI,CAACA,WAAW,CAACt1E,CAAC,CAAC;MACvC,MAAMy2E,eAAe,GAAG,IAAI,CAAClB,gBAAgB,CAACv1E,CAAC,CAAC;MAChD,MAAM;QAACotE,SAAS;QAAEC,QAAQ;QAAE3oC;MAAU,CAAC,GAAGnjC,OAAO;MACjD,MAAM8wE,QAAQ,GAAGx3C,MAAM,CAACt5B,OAAO,CAAC8wE,QAAQ,CAAC;MACzC,MAAMmF,MAAM,GAAGhD,WAAW,CAAC,IAAI,EAAE,MAAM,EAAEjzE,OAAO,CAAC;MACjD,MAAMk2E,SAAS,GAAGzI,SAAS,CAACvsE,CAAC,CAAC+0E,MAAM,CAAC;MACrC,MAAME,OAAO,GAAGtK,SAAS,GAAGiF,QAAQ,CAAC1vD,UAAU,GAAG,CAAC0vD,QAAQ,CAAC1vD,UAAU,GAAGyqD,SAAS,IAAI,CAAC,GAAG,CAAC;MAC3F,MAAMuK,MAAM,GAAG1hD,EAAE,CAACtzB,CAAC,GAAG+0E,OAAO;MAC7B,IAAIn2E,OAAO,CAAC+rE,aAAa,EAAE;QACzB,MAAMmC,WAAW,GAAG;UAClB7jD,MAAM,EAAEvnB,IAAI,CAACoC,GAAG,CAAC4mE,QAAQ,EAAED,SAAS,CAAC,GAAG,CAAC;UACzC1hD,UAAU,EAAE+qD,eAAe,CAAC/qD,UAAU;UACtCC,QAAQ,EAAE8qD,eAAe,CAAC9qD,QAAQ;UAClCe,WAAW,EAAE;QACf,CAAC;QACD,MAAMmwC,OAAO,GAAGmS,SAAS,CAACnzC,UAAU,CAAC47C,SAAS,EAAEpK,QAAQ,CAAC,GAAGA,QAAQ,GAAG,CAAC;QACxE,MAAMvQ,OAAO,GAAG6a,MAAM,GAAGvK,SAAS,GAAG,CAAC;QACtCtqD,GAAG,CAACsL,WAAW,GAAG7sB,OAAO,CAACq2E,kBAAkB;QAC5C90D,GAAG,CAAC4L,SAAS,GAAGntB,OAAO,CAACq2E,kBAAkB;QAC1CrsD,SAAS,CAACzI,GAAG,EAAE2sD,WAAW,EAAE5S,OAAO,EAAEC,OAAO,CAAC;QAC7Ch6C,GAAG,CAACsL,WAAW,GAAGknD,WAAW,CAACtzD,WAAW;QACzCc,GAAG,CAAC4L,SAAS,GAAG4mD,WAAW,CAACvzD,eAAe;QAC3CwJ,SAAS,CAACzI,GAAG,EAAE2sD,WAAW,EAAE5S,OAAO,EAAEC,OAAO,CAAC;MAC/C,CAAC,MAAM;QACLh6C,GAAG,CAACuL,SAAS,GAAGzvB,QAAQ,CAAC02E,WAAW,CAAC5oD,WAAW,CAAC,GAAGroB,IAAI,CAACqC,GAAG,CAAC,GAAGnI,MAAM,CAAC8K,MAAM,CAACisE,WAAW,CAAC5oD,WAAW,CAAC,CAAC,GAAI4oD,WAAW,CAAC5oD,WAAW,IAAI,CAAE;QACxI5J,GAAG,CAACsL,WAAW,GAAGknD,WAAW,CAACtzD,WAAW;QACzCc,GAAG,CAACokC,WAAW,CAACouB,WAAW,CAACj2C,UAAU,IAAI,EAAE,CAAC;QAC7Cvc,GAAG,CAACqkC,cAAc,GAAGmuB,WAAW,CAACh2C,gBAAgB,IAAI,CAAC;QACtD,MAAMu4C,MAAM,GAAG7I,SAAS,CAACnzC,UAAU,CAAC47C,SAAS,EAAEpK,QAAQ,GAAG3oC,UAAU,CAAC;QACrE,MAAMozC,MAAM,GAAG9I,SAAS,CAACnzC,UAAU,CAACmzC,SAAS,CAACpzC,KAAK,CAAC67C,SAAS,EAAE,CAAC,CAAC,EAAEpK,QAAQ,GAAG3oC,UAAU,GAAG,CAAC,CAAC;QAC7F,MAAMq7B,YAAY,GAAGplC,aAAa,CAAC26C,WAAW,CAACvV,YAAY,CAAC;QAC5D,IAAIxhE,MAAM,CAAC8K,MAAM,CAAC02D,YAAY,CAAC,CAAC9U,IAAI,CAACzoD,CAAC,IAAIA,CAAC,KAAK,CAAC,CAAC,EAAE;UAClDsgB,GAAG,CAACkJ,SAAS,CAAC,CAAC;UACflJ,GAAG,CAAC4L,SAAS,GAAGntB,OAAO,CAACq2E,kBAAkB;UAC1CtoD,kBAAkB,CAACxM,GAAG,EAAE;YACtBrgB,CAAC,EAAEo1E,MAAM;YACTl1E,CAAC,EAAEg1E,MAAM;YACTllE,CAAC,EAAE46D,QAAQ;YACX18D,CAAC,EAAEy8D,SAAS;YACZxhD,MAAM,EAAEm0C;UACV,CAAC,CAAC;UACFj9C,GAAG,CAAC2J,IAAI,CAAC,CAAC;UACV3J,GAAG,CAAC6J,MAAM,CAAC,CAAC;UACZ7J,GAAG,CAAC4L,SAAS,GAAG4mD,WAAW,CAACvzD,eAAe;UAC3Ce,GAAG,CAACkJ,SAAS,CAAC,CAAC;UACfsD,kBAAkB,CAACxM,GAAG,EAAE;YACtBrgB,CAAC,EAAEq1E,MAAM;YACTn1E,CAAC,EAAEg1E,MAAM,GAAG,CAAC;YACbllE,CAAC,EAAE46D,QAAQ,GAAG,CAAC;YACf18D,CAAC,EAAEy8D,SAAS,GAAG,CAAC;YAChBxhD,MAAM,EAAEm0C;UACV,CAAC,CAAC;UACFj9C,GAAG,CAAC2J,IAAI,CAAC,CAAC;QACZ,CAAC,MAAM;UACL3J,GAAG,CAAC4L,SAAS,GAAGntB,OAAO,CAACq2E,kBAAkB;UAC1C90D,GAAG,CAAC+jC,QAAQ,CAACgxB,MAAM,EAAEF,MAAM,EAAEtK,QAAQ,EAAED,SAAS,CAAC;UACjDtqD,GAAG,CAACi1D,UAAU,CAACF,MAAM,EAAEF,MAAM,EAAEtK,QAAQ,EAAED,SAAS,CAAC;UACnDtqD,GAAG,CAAC4L,SAAS,GAAG4mD,WAAW,CAACvzD,eAAe;UAC3Ce,GAAG,CAAC+jC,QAAQ,CAACixB,MAAM,EAAEH,MAAM,GAAG,CAAC,EAAEtK,QAAQ,GAAG,CAAC,EAAED,SAAS,GAAG,CAAC,CAAC;QAC/D;MACF;MACAtqD,GAAG,CAAC4L,SAAS,GAAG,IAAI,CAAC8mD,eAAe,CAACx1E,CAAC,CAAC;IACzC;IACAg4E,QAAQA,CAAC/hD,EAAE,EAAEnT,GAAG,EAAEvhB,OAAO,EAAE;MACzB,MAAM;QAAC4wE;MAAI,CAAC,GAAG,IAAI;MACnB,MAAM;QAACiB,WAAW;QAAE6E,SAAS;QAAE9E,aAAa;QAAE/F,SAAS;QAAEC,QAAQ;QAAE3oC;MAAU,CAAC,GAAGnjC,OAAO;MACxF,MAAM8wE,QAAQ,GAAGx3C,MAAM,CAACt5B,OAAO,CAAC8wE,QAAQ,CAAC;MACzC,IAAIa,cAAc,GAAGb,QAAQ,CAAC1vD,UAAU;MACxC,IAAIu1D,YAAY,GAAG,CAAC;MACpB,MAAMlJ,SAAS,GAAG/yC,aAAa,CAAC16B,OAAO,CAAC4K,GAAG,EAAE,IAAI,CAAC1J,CAAC,EAAE,IAAI,CAAC6jB,KAAK,CAAC;MAChE,MAAM6xD,cAAc,GAAG,SAAAA,CAASjqD,IAAI,EAAE;QACpCpL,GAAG,CAACyL,QAAQ,CAACL,IAAI,EAAE8gD,SAAS,CAACvsE,CAAC,CAACwzB,EAAE,CAACxzB,CAAC,GAAGy1E,YAAY,CAAC,EAAEjiD,EAAE,CAACtzB,CAAC,GAAGuwE,cAAc,GAAG,CAAC,CAAC;QAC/Ej9C,EAAE,CAACtzB,CAAC,IAAIuwE,cAAc,GAAGE,WAAW;MACtC,CAAC;MACD,MAAMgF,uBAAuB,GAAGpJ,SAAS,CAACrgD,SAAS,CAACspD,SAAS,CAAC;MAC9D,IAAItF,QAAQ,EAAE0F,SAAS,EAAEtqD,KAAK,EAAE/tB,CAAC,EAAEue,CAAC,EAAEhe,IAAI,EAAEoqB,IAAI;MAChD7H,GAAG,CAAC6L,SAAS,GAAGspD,SAAS;MACzBn1D,GAAG,CAAC8L,YAAY,GAAG,QAAQ;MAC3B9L,GAAG,CAACN,IAAI,GAAG6vD,QAAQ,CAACloD,MAAM;MAC1B8L,EAAE,CAACxzB,CAAC,GAAG+xE,WAAW,CAAC,IAAI,EAAE4D,uBAAuB,EAAE72E,OAAO,CAAC;MAC1DuhB,GAAG,CAAC4L,SAAS,GAAGntB,OAAO,CAAC+2E,SAAS;MACjCz4E,IAAI,CAAC,IAAI,CAACizE,UAAU,EAAEqF,cAAc,CAAC;MACrCD,YAAY,GAAG/E,aAAa,IAAIiF,uBAAuB,KAAK,OAAO,GAC/DH,SAAS,KAAK,QAAQ,GAAI5K,QAAQ,GAAG,CAAC,GAAG3oC,UAAU,GAAK2oC,QAAQ,GAAG,CAAC,GAAG3oC,UAAW,GAClF,CAAC;MACL,KAAK1kC,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAG4xE,IAAI,CAAChyE,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;QAC7C2yE,QAAQ,GAAGR,IAAI,CAACnyE,CAAC,CAAC;QAClBq4E,SAAS,GAAG,IAAI,CAAC7C,eAAe,CAACx1E,CAAC,CAAC;QACnC8iB,GAAG,CAAC4L,SAAS,GAAG2pD,SAAS;QACzBx4E,IAAI,CAAC8yE,QAAQ,CAACC,MAAM,EAAEuF,cAAc,CAAC;QACrCpqD,KAAK,GAAG4kD,QAAQ,CAAC5kD,KAAK;QACtB,IAAIolD,aAAa,IAAIplD,KAAK,CAAC5tB,MAAM,EAAE;UACjC,IAAI,CAACo3E,aAAa,CAACz0D,GAAG,EAAEmT,EAAE,EAAEj2B,CAAC,EAAEgvE,SAAS,EAAEztE,OAAO,CAAC;UAClD2xE,cAAc,GAAG7uE,IAAI,CAACqC,GAAG,CAAC2rE,QAAQ,CAAC1vD,UAAU,EAAEyqD,SAAS,CAAC;QAC3D;QACA,KAAK7uD,CAAC,GAAG,CAAC,EAAEoM,IAAI,GAAGoD,KAAK,CAAC5tB,MAAM,EAAEoe,CAAC,GAAGoM,IAAI,EAAE,EAAEpM,CAAC,EAAE;UAC9C45D,cAAc,CAACpqD,KAAK,CAACxP,CAAC,CAAC,CAAC;UACxB20D,cAAc,GAAGb,QAAQ,CAAC1vD,UAAU;QACtC;QACA9iB,IAAI,CAAC8yE,QAAQ,CAACE,KAAK,EAAEsF,cAAc,CAAC;MACtC;MACAD,YAAY,GAAG,CAAC;MAChBhF,cAAc,GAAGb,QAAQ,CAAC1vD,UAAU;MACpC9iB,IAAI,CAAC,IAAI,CAACkzE,SAAS,EAAEoF,cAAc,CAAC;MACpCliD,EAAE,CAACtzB,CAAC,IAAIywE,WAAW;IACrB;IACAmF,UAAUA,CAACtiD,EAAE,EAAEnT,GAAG,EAAEvhB,OAAO,EAAE;MAC3B,MAAM6wE,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,MAAMjyE,MAAM,GAAGiyE,MAAM,CAACjyE,MAAM;MAC5B,IAAImyE,UAAU,EAAEtyE,CAAC;MACjB,IAAIG,MAAM,EAAE;QACV,MAAM6uE,SAAS,GAAG/yC,aAAa,CAAC16B,OAAO,CAAC4K,GAAG,EAAE,IAAI,CAAC1J,CAAC,EAAE,IAAI,CAAC6jB,KAAK,CAAC;QAChE2P,EAAE,CAACxzB,CAAC,GAAG+xE,WAAW,CAAC,IAAI,EAAEjzE,OAAO,CAACi3E,WAAW,EAAEj3E,OAAO,CAAC;QACtD00B,EAAE,CAACtzB,CAAC,IAAIpB,OAAO,CAAC8xE,eAAe;QAC/BvwD,GAAG,CAAC6L,SAAS,GAAGqgD,SAAS,CAACrgD,SAAS,CAACptB,OAAO,CAACi3E,WAAW,CAAC;QACxD11D,GAAG,CAAC8L,YAAY,GAAG,QAAQ;QAC3B0jD,UAAU,GAAGz3C,MAAM,CAACt5B,OAAO,CAAC+wE,UAAU,CAAC;QACvCxvD,GAAG,CAAC4L,SAAS,GAAGntB,OAAO,CAACk3E,WAAW;QACnC31D,GAAG,CAACN,IAAI,GAAG8vD,UAAU,CAACnoD,MAAM;QAC5B,KAAKnqB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGG,MAAM,EAAE,EAAEH,CAAC,EAAE;UAC3B8iB,GAAG,CAACyL,QAAQ,CAAC6jD,MAAM,CAACpyE,CAAC,CAAC,EAAEgvE,SAAS,CAACvsE,CAAC,CAACwzB,EAAE,CAACxzB,CAAC,CAAC,EAAEwzB,EAAE,CAACtzB,CAAC,GAAG2vE,UAAU,CAAC3vD,UAAU,GAAG,CAAC,CAAC;UAC5EsT,EAAE,CAACtzB,CAAC,IAAI2vE,UAAU,CAAC3vD,UAAU,GAAGphB,OAAO,CAAC+xE,aAAa;QACvD;MACF;IACF;IACA1sB,cAAcA,CAAC3wB,EAAE,EAAEnT,GAAG,EAAE41D,WAAW,EAAEn3E,OAAO,EAAE;MAC5C,MAAM;QAACoyE,MAAM;QAAEK;MAAM,CAAC,GAAG,IAAI;MAC7B,MAAM;QAACvxE,CAAC;QAAEE;MAAC,CAAC,GAAGszB,EAAE;MACjB,MAAM;QAAC3P,KAAK;QAAEC;MAAM,CAAC,GAAGmyD,WAAW;MACnC,MAAM;QAACnpD,OAAO;QAAEG,QAAQ;QAAEF,UAAU;QAAEC;MAAW,CAAC,GAAGkL,aAAa,CAACp5B,OAAO,CAACkqB,YAAY,CAAC;MACxF3I,GAAG,CAAC4L,SAAS,GAAGntB,OAAO,CAACwgB,eAAe;MACvCe,GAAG,CAACsL,WAAW,GAAG7sB,OAAO,CAACygB,WAAW;MACrCc,GAAG,CAACuL,SAAS,GAAG9sB,OAAO,CAACmrB,WAAW;MACnC5J,GAAG,CAACkJ,SAAS,CAAC,CAAC;MACflJ,GAAG,CAACsJ,MAAM,CAAC3pB,CAAC,GAAG8sB,OAAO,EAAE5sB,CAAC,CAAC;MAC1B,IAAIqxE,MAAM,KAAK,KAAK,EAAE;QACpB,IAAI,CAAC8C,SAAS,CAAC7gD,EAAE,EAAEnT,GAAG,EAAE41D,WAAW,EAAEn3E,OAAO,CAAC;MAC/C;MACAuhB,GAAG,CAACyJ,MAAM,CAAC9pB,CAAC,GAAG6jB,KAAK,GAAGoJ,QAAQ,EAAE/sB,CAAC,CAAC;MACnCmgB,GAAG,CAAC61D,gBAAgB,CAACl2E,CAAC,GAAG6jB,KAAK,EAAE3jB,CAAC,EAAEF,CAAC,GAAG6jB,KAAK,EAAE3jB,CAAC,GAAG+sB,QAAQ,CAAC;MAC3D,IAAIskD,MAAM,KAAK,QAAQ,IAAIL,MAAM,KAAK,OAAO,EAAE;QAC7C,IAAI,CAACmD,SAAS,CAAC7gD,EAAE,EAAEnT,GAAG,EAAE41D,WAAW,EAAEn3E,OAAO,CAAC;MAC/C;MACAuhB,GAAG,CAACyJ,MAAM,CAAC9pB,CAAC,GAAG6jB,KAAK,EAAE3jB,CAAC,GAAG4jB,MAAM,GAAGkJ,WAAW,CAAC;MAC/C3M,GAAG,CAAC61D,gBAAgB,CAACl2E,CAAC,GAAG6jB,KAAK,EAAE3jB,CAAC,GAAG4jB,MAAM,EAAE9jB,CAAC,GAAG6jB,KAAK,GAAGmJ,WAAW,EAAE9sB,CAAC,GAAG4jB,MAAM,CAAC;MAChF,IAAIytD,MAAM,KAAK,QAAQ,EAAE;QACvB,IAAI,CAAC8C,SAAS,CAAC7gD,EAAE,EAAEnT,GAAG,EAAE41D,WAAW,EAAEn3E,OAAO,CAAC;MAC/C;MACAuhB,GAAG,CAACyJ,MAAM,CAAC9pB,CAAC,GAAG+sB,UAAU,EAAE7sB,CAAC,GAAG4jB,MAAM,CAAC;MACtCzD,GAAG,CAAC61D,gBAAgB,CAACl2E,CAAC,EAAEE,CAAC,GAAG4jB,MAAM,EAAE9jB,CAAC,EAAEE,CAAC,GAAG4jB,MAAM,GAAGiJ,UAAU,CAAC;MAC/D,IAAIwkD,MAAM,KAAK,QAAQ,IAAIL,MAAM,KAAK,MAAM,EAAE;QAC5C,IAAI,CAACmD,SAAS,CAAC7gD,EAAE,EAAEnT,GAAG,EAAE41D,WAAW,EAAEn3E,OAAO,CAAC;MAC/C;MACAuhB,GAAG,CAACyJ,MAAM,CAAC9pB,CAAC,EAAEE,CAAC,GAAG4sB,OAAO,CAAC;MAC1BzM,GAAG,CAAC61D,gBAAgB,CAACl2E,CAAC,EAAEE,CAAC,EAAEF,CAAC,GAAG8sB,OAAO,EAAE5sB,CAAC,CAAC;MAC1CmgB,GAAG,CAACqJ,SAAS,CAAC,CAAC;MACfrJ,GAAG,CAAC2J,IAAI,CAAC,CAAC;MACV,IAAIlrB,OAAO,CAACmrB,WAAW,GAAG,CAAC,EAAE;QAC3B5J,GAAG,CAAC6J,MAAM,CAAC,CAAC;MACd;IACF;IACAisD,sBAAsBA,CAACr3E,OAAO,EAAE;MAC9B,MAAM+M,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,MAAMC,KAAK,GAAG,IAAI,CAACy/B,WAAW;MAC9B,MAAM6qC,KAAK,GAAGtqE,KAAK,IAAIA,KAAK,CAAC9L,CAAC;MAC9B,MAAMq2E,KAAK,GAAGvqE,KAAK,IAAIA,KAAK,CAAC5L,CAAC;MAC9B,IAAIk2E,KAAK,IAAIC,KAAK,EAAE;QAClB,MAAMz4C,QAAQ,GAAGmxC,WAAW,CAACjwE,OAAO,CAAC8+B,QAAQ,CAAC,CAAC3hC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC2Q,OAAO,EAAE,IAAI,CAAC0lE,cAAc,CAAC;QAC5F,IAAI,CAAC10C,QAAQ,EAAE;UACb;QACF;QACA,MAAMt8B,IAAI,GAAG,IAAI,CAACixE,KAAK,GAAG9C,cAAc,CAAC,IAAI,EAAE3wE,OAAO,CAAC;QACvD,MAAMo1E,eAAe,GAAGp4E,MAAM,CAACsP,MAAM,CAAC,CAAC,CAAC,EAAEwyB,QAAQ,EAAE,IAAI,CAAC20C,KAAK,CAAC;QAC/D,MAAMT,SAAS,GAAGL,kBAAkB,CAAC5lE,KAAK,EAAE/M,OAAO,EAAEo1E,eAAe,CAAC;QACrE,MAAM9pD,KAAK,GAAGynD,kBAAkB,CAAC/yE,OAAO,EAAEo1E,eAAe,EAAEpC,SAAS,EAAEjmE,KAAK,CAAC;QAC5E,IAAIuqE,KAAK,CAAC1sC,GAAG,KAAKtf,KAAK,CAACpqB,CAAC,IAAIq2E,KAAK,CAAC3sC,GAAG,KAAKtf,KAAK,CAAClqB,CAAC,EAAE;UAClD,IAAI,CAACgxE,MAAM,GAAGY,SAAS,CAACZ,MAAM;UAC9B,IAAI,CAACK,MAAM,GAAGO,SAAS,CAACP,MAAM;UAC9B,IAAI,CAAC1tD,KAAK,GAAGviB,IAAI,CAACuiB,KAAK;UACvB,IAAI,CAACC,MAAM,GAAGxiB,IAAI,CAACwiB,MAAM;UACzB,IAAI,CAAC6uD,MAAM,GAAG/0C,QAAQ,CAAC59B,CAAC;UACxB,IAAI,CAAC4yE,MAAM,GAAGh1C,QAAQ,CAAC19B,CAAC;UACxB,IAAI,CAAC4zC,kBAAkB,CAAC,CAAC,CAAC3Q,MAAM,CAAC,IAAI,EAAE/Y,KAAK,CAAC;QAC/C;MACF;IACF;IACAksD,WAAWA,CAAA,EAAG;MACZ,OAAO,CAAC,CAAC,IAAI,CAACjE,OAAO;IACvB;IACA1lE,IAAIA,CAAC0T,GAAG,EAAE;MACR,MAAMvhB,OAAO,GAAG,IAAI,CAACA,OAAO,CAACuwB,UAAU,CAAC,IAAI,CAAC1G,UAAU,CAAC,CAAC,CAAC;MAC1D,IAAI0pD,OAAO,GAAG,IAAI,CAACA,OAAO;MAC1B,IAAI,CAACA,OAAO,EAAE;QACZ;MACF;MACA,IAAI,CAAC8D,sBAAsB,CAACr3E,OAAO,CAAC;MACpC,MAAMm3E,WAAW,GAAG;QAClBpyD,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,MAAM,EAAE,IAAI,CAACA;MACf,CAAC;MACD,MAAM0P,EAAE,GAAG;QACTxzB,CAAC,EAAE,IAAI,CAACA,CAAC;QACTE,CAAC,EAAE,IAAI,CAACA;MACV,CAAC;MACDmyE,OAAO,GAAGzwE,IAAI,CAAC8B,GAAG,CAAC2uE,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,GAAGA,OAAO;MAChD,MAAM9uC,OAAO,GAAGpL,SAAS,CAACr5B,OAAO,CAACykC,OAAO,CAAC;MAC1C,MAAMgzC,iBAAiB,GAAG,IAAI,CAAC5+B,KAAK,CAACj6C,MAAM,IAAI,IAAI,CAAC2yE,UAAU,CAAC3yE,MAAM,IAAI,IAAI,CAACgyE,IAAI,CAAChyE,MAAM,IAAI,IAAI,CAAC4yE,SAAS,CAAC5yE,MAAM,IAAI,IAAI,CAACiyE,MAAM,CAACjyE,MAAM;MACxI,IAAIoB,OAAO,CAACi6C,OAAO,IAAIw9B,iBAAiB,EAAE;QACxCl2D,GAAG,CAAC4H,IAAI,CAAC,CAAC;QACV5H,GAAG,CAACm2D,WAAW,GAAGnE,OAAO;QACzB,IAAI,CAACluB,cAAc,CAAC3wB,EAAE,EAAEnT,GAAG,EAAE41D,WAAW,EAAEn3E,OAAO,CAAC;QAClD26B,qBAAqB,CAACpZ,GAAG,EAAEvhB,OAAO,CAACsuE,aAAa,CAAC;QACjD55C,EAAE,CAACtzB,CAAC,IAAIqjC,OAAO,CAACxf,GAAG;QACnB,IAAI,CAAC8gC,SAAS,CAACrxB,EAAE,EAAEnT,GAAG,EAAEvhB,OAAO,CAAC;QAChC,IAAI,CAACy2E,QAAQ,CAAC/hD,EAAE,EAAEnT,GAAG,EAAEvhB,OAAO,CAAC;QAC/B,IAAI,CAACg3E,UAAU,CAACtiD,EAAE,EAAEnT,GAAG,EAAEvhB,OAAO,CAAC;QACjCi7B,oBAAoB,CAAC1Z,GAAG,EAAEvhB,OAAO,CAACsuE,aAAa,CAAC;QAChD/sD,GAAG,CAACgI,OAAO,CAAC,CAAC;MACf;IACF;IACA8pC,iBAAiBA,CAAA,EAAG;MAClB,OAAO,IAAI,CAACvlD,OAAO,IAAI,EAAE;IAC3B;IACAwlD,iBAAiBA,CAACC,cAAc,EAAE4c,aAAa,EAAE;MAC/C,MAAM3c,UAAU,GAAG,IAAI,CAAC1lD,OAAO;MAC/B,MAAMg9B,MAAM,GAAGyoB,cAAc,CAACh0D,GAAG,CAAC,CAAC;QAACJ,YAAY;QAAEC;MAAK,CAAC,KAAK;QAC3D,MAAM2L,IAAI,GAAG,IAAI,CAACgC,KAAK,CAAC+zB,cAAc,CAAC3hC,YAAY,CAAC;QACpD,IAAI,CAAC4L,IAAI,EAAE;UACT,MAAM,IAAIumB,KAAK,CAAC,iCAAiC,GAAGnyB,YAAY,CAAC;QACnE;QACA,OAAO;UACLA,YAAY;UACZmlB,OAAO,EAAEvZ,IAAI,CAAC0d,IAAI,CAACrpB,KAAK,CAAC;UACzBA;QACF,CAAC;MACH,CAAC,CAAC;MACF,MAAMiN,OAAO,GAAG,CAACxN,cAAc,CAAC20D,UAAU,EAAE1oB,MAAM,CAAC;MACnD,MAAM6sC,eAAe,GAAG,IAAI,CAACC,gBAAgB,CAAC9sC,MAAM,EAAEqlC,aAAa,CAAC;MACpE,IAAI9jE,OAAO,IAAIsrE,eAAe,EAAE;QAC9B,IAAI,CAAC7pE,OAAO,GAAGg9B,MAAM;QACrB,IAAI,CAAC0oC,cAAc,GAAGrD,aAAa;QACnC,IAAI,CAAC0H,mBAAmB,GAAG,IAAI;QAC/B,IAAI,CAACxzC,MAAM,CAAC,IAAI,CAAC;MACnB;IACF;IACAyqC,WAAWA,CAAClsE,CAAC,EAAE6wD,MAAM,EAAE3F,WAAW,GAAG,IAAI,EAAE;MACzC,IAAI2F,MAAM,IAAI,IAAI,CAACokB,mBAAmB,EAAE;QACtC,OAAO,KAAK;MACd;MACA,IAAI,CAACA,mBAAmB,GAAG,KAAK;MAChC,MAAM73E,OAAO,GAAG,IAAI,CAACA,OAAO;MAC5B,MAAMwzD,UAAU,GAAG,IAAI,CAAC1lD,OAAO,IAAI,EAAE;MACrC,MAAMg9B,MAAM,GAAG,IAAI,CAACipB,kBAAkB,CAACnxD,CAAC,EAAE4wD,UAAU,EAAEC,MAAM,EAAE3F,WAAW,CAAC;MAC1E,MAAM6pB,eAAe,GAAG,IAAI,CAACC,gBAAgB,CAAC9sC,MAAM,EAAEloC,CAAC,CAAC;MACxD,MAAMyJ,OAAO,GAAGonD,MAAM,IAAI,CAAC50D,cAAc,CAACisC,MAAM,EAAE0oB,UAAU,CAAC,IAAImkB,eAAe;MAChF,IAAItrE,OAAO,EAAE;QACX,IAAI,CAACyB,OAAO,GAAGg9B,MAAM;QACrB,IAAI9qC,OAAO,CAACi6C,OAAO,IAAIj6C,OAAO,CAACs1E,QAAQ,EAAE;UACvC,IAAI,CAAC9B,cAAc,GAAG;YACpBtyE,CAAC,EAAE0B,CAAC,CAAC1B,CAAC;YACNE,CAAC,EAAEwB,CAAC,CAACxB;UACP,CAAC;UACD,IAAI,CAACijC,MAAM,CAAC,IAAI,EAAEovB,MAAM,CAAC;QAC3B;MACF;MACA,OAAOpnD,OAAO;IAChB;IACA0nD,kBAAkBA,CAACnxD,CAAC,EAAE4wD,UAAU,EAAEC,MAAM,EAAE3F,WAAW,EAAE;MACrD,MAAM9tD,OAAO,GAAG,IAAI,CAACA,OAAO;MAC5B,IAAI4C,CAAC,CAAC7F,IAAI,KAAK,UAAU,EAAE;QACzB,OAAO,EAAE;MACX;MACA,IAAI,CAAC+wD,WAAW,EAAE;QAChB,OAAO0F,UAAU;MACnB;MACA,MAAM1oB,MAAM,GAAG,IAAI,CAAC/9B,KAAK,CAACslD,yBAAyB,CAACzvD,CAAC,EAAE5C,OAAO,CAAC4hB,IAAI,EAAE5hB,OAAO,EAAEyzD,MAAM,CAAC;MACrF,IAAIzzD,OAAO,CAACxB,OAAO,EAAE;QACnBssC,MAAM,CAACtsC,OAAO,CAAC,CAAC;MAClB;MACA,OAAOssC,MAAM;IACf;IACA8sC,gBAAgBA,CAAC9sC,MAAM,EAAEloC,CAAC,EAAE;MAC1B,MAAM;QAACixE,MAAM;QAAEC,MAAM;QAAE9zE;MAAO,CAAC,GAAG,IAAI;MACtC,MAAM8+B,QAAQ,GAAGmxC,WAAW,CAACjwE,OAAO,CAAC8+B,QAAQ,CAAC,CAAC3hC,IAAI,CAAC,IAAI,EAAE2tC,MAAM,EAAEloC,CAAC,CAAC;MACpE,OAAOk8B,QAAQ,KAAK,KAAK,KAAK+0C,MAAM,KAAK/0C,QAAQ,CAAC59B,CAAC,IAAI4yE,MAAM,KAAKh1C,QAAQ,CAAC19B,CAAC,CAAC;IAC/E;EACF;EACAkyE,OAAO,CAACrD,WAAW,GAAGA,WAAW;EACjC,IAAI6H,cAAc,GAAG;IACnBp7E,EAAE,EAAE,SAAS;IACb0yE,QAAQ,EAAEkE,OAAO;IACjBrD,WAAW;IACX8H,SAASA,CAAChrE,KAAK,EAAEs+D,KAAK,EAAErrE,OAAO,EAAE;MAC/B,IAAIA,OAAO,EAAE;QACX+M,KAAK,CAACisD,OAAO,GAAG,IAAIsa,OAAO,CAAC;UAACvmE,KAAK;UAAE/M;QAAO,CAAC,CAAC;MAC/C;IACF,CAAC;IACDw+C,YAAYA,CAACzxC,KAAK,EAAEs+D,KAAK,EAAErrE,OAAO,EAAE;MAClC,IAAI+M,KAAK,CAACisD,OAAO,EAAE;QACjBjsD,KAAK,CAACisD,OAAO,CAACpoB,UAAU,CAAC5wC,OAAO,CAAC;MACnC;IACF,CAAC;IACDgyC,KAAKA,CAACjlC,KAAK,EAAEs+D,KAAK,EAAErrE,OAAO,EAAE;MAC3B,IAAI+M,KAAK,CAACisD,OAAO,EAAE;QACjBjsD,KAAK,CAACisD,OAAO,CAACpoB,UAAU,CAAC5wC,OAAO,CAAC;MACnC;IACF,CAAC;IACDg4E,SAASA,CAACjrE,KAAK,EAAE;MACf,MAAMisD,OAAO,GAAGjsD,KAAK,CAACisD,OAAO;MAC7B,IAAIA,OAAO,IAAIA,OAAO,CAACwe,WAAW,CAAC,CAAC,EAAE;QACpC,MAAMr5E,IAAI,GAAG;UACX66D;QACF,CAAC;QACD,IAAIjsD,KAAK,CAACozC,aAAa,CAAC,mBAAmB,EAAEhiD,IAAI,CAAC,KAAK,KAAK,EAAE;UAC5D;QACF;QACA66D,OAAO,CAACnrD,IAAI,CAACd,KAAK,CAACwU,GAAG,CAAC;QACvBxU,KAAK,CAACozC,aAAa,CAAC,kBAAkB,EAAEhiD,IAAI,CAAC;MAC/C;IACF,CAAC;IACDkxE,UAAUA,CAACtiE,KAAK,EAAE5O,IAAI,EAAE;MACtB,IAAI4O,KAAK,CAACisD,OAAO,EAAE;QACjB,MAAMx5B,gBAAgB,GAAGrhC,IAAI,CAACs1D,MAAM;QACpC,IAAI1mD,KAAK,CAACisD,OAAO,CAAC8V,WAAW,CAAC3wE,IAAI,CAACoQ,KAAK,EAAEixB,gBAAgB,EAAErhC,IAAI,CAAC2vD,WAAW,CAAC,EAAE;UAC7E3vD,IAAI,CAACkO,OAAO,GAAG,IAAI;QACrB;MACF;IACF,CAAC;IACDgX,QAAQ,EAAE;MACR42B,OAAO,EAAE,IAAI;MACbq7B,QAAQ,EAAE,IAAI;MACdx2C,QAAQ,EAAE,SAAS;MACnBte,eAAe,EAAE,iBAAiB;MAClCu1D,UAAU,EAAE,MAAM;MAClBvH,SAAS,EAAE;QACT1vD,MAAM,EAAE;MACV,CAAC;MACD2yD,YAAY,EAAE,CAAC;MACfC,iBAAiB,EAAE,CAAC;MACpBl1B,UAAU,EAAE,MAAM;MAClBu6B,SAAS,EAAE,MAAM;MACjBlF,WAAW,EAAE,CAAC;MACdf,QAAQ,EAAE,CACV,CAAC;MACD4F,SAAS,EAAE,MAAM;MACjBQ,WAAW,EAAE,MAAM;MACnBnF,aAAa,EAAE,CAAC;MAChBD,eAAe,EAAE,CAAC;MAClBf,UAAU,EAAE;QACVjyD,MAAM,EAAE;MACV,CAAC;MACDm4D,WAAW,EAAE,MAAM;MACnBxyC,OAAO,EAAE,CAAC;MACV8tC,YAAY,EAAE,CAAC;MACfD,SAAS,EAAE,CAAC;MACZpoD,YAAY,EAAE,CAAC;MACf2hD,SAAS,EAAEA,CAACtqD,GAAG,EAAEgL,IAAI,KAAKA,IAAI,CAACukD,QAAQ,CAACtuE,IAAI;MAC5CspE,QAAQ,EAAEA,CAACvqD,GAAG,EAAEgL,IAAI,KAAKA,IAAI,CAACukD,QAAQ,CAACtuE,IAAI;MAC3C6zE,kBAAkB,EAAE,MAAM;MAC1BzE,aAAa,EAAE,IAAI;MACnBzuC,UAAU,EAAE,CAAC;MACb1iB,WAAW,EAAE,eAAe;MAC5B0K,WAAW,EAAE,CAAC;MACd5K,SAAS,EAAE;QACTnT,QAAQ,EAAE,GAAG;QACbm9B,MAAM,EAAE;MACV,CAAC;MACDoB,UAAU,EAAE;QACVL,OAAO,EAAE;UACPvuC,IAAI,EAAE,QAAQ;UACd0uC,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;QAC9D,CAAC;QACD8nC,OAAO,EAAE;UACPhpC,MAAM,EAAE,QAAQ;UAChBn9B,QAAQ,EAAE;QACZ;MACF,CAAC;MACDF,SAAS,EAAE;QACTinE,WAAW,EAAE33E,IAAI;QACjBq8C,KAAKA,CAACu6B,YAAY,EAAE;UAClB,IAAIA,YAAY,CAACx0E,MAAM,GAAG,CAAC,EAAE;YAC3B,MAAM6D,IAAI,GAAG2wE,YAAY,CAAC,CAAC,CAAC;YAC5B,MAAMjgC,MAAM,GAAG1wC,IAAI,CAACsK,KAAK,CAAC0b,IAAI,CAAC0qB,MAAM;YACrC,MAAM8kC,UAAU,GAAG9kC,MAAM,GAAGA,MAAM,CAACv0C,MAAM,GAAG,CAAC;YAC7C,IAAI,IAAI,IAAI,IAAI,CAACoB,OAAO,IAAI,IAAI,CAACA,OAAO,CAAC4hB,IAAI,KAAK,SAAS,EAAE;cAC3D,OAAOnf,IAAI,CAACo+B,OAAO,CAACwT,KAAK,IAAI,EAAE;YACjC,CAAC,MAAM,IAAI5xC,IAAI,CAAC4xC,KAAK,EAAE;cACrB,OAAO5xC,IAAI,CAAC4xC,KAAK;YACnB,CAAC,MAAM,IAAI4jC,UAAU,GAAG,CAAC,IAAIx1E,IAAI,CAAC2sC,SAAS,GAAG6oC,UAAU,EAAE;cACxD,OAAO9kC,MAAM,CAAC1wC,IAAI,CAAC2sC,SAAS,CAAC;YAC/B;UACF;UACA,OAAO,EAAE;QACX,CAAC;QACDglC,UAAU,EAAE53E,IAAI;QAChB+0E,UAAU,EAAE/0E,IAAI;QAChBi4E,WAAW,EAAEj4E,IAAI;QACjB63C,KAAKA,CAAC4nB,WAAW,EAAE;UACjB,IAAI,IAAI,IAAI,IAAI,CAACj8D,OAAO,IAAI,IAAI,CAACA,OAAO,CAAC4hB,IAAI,KAAK,SAAS,EAAE;YAC3D,OAAOq6C,WAAW,CAAC5nB,KAAK,GAAG,IAAI,GAAG4nB,WAAW,CAACE,cAAc,IAAIF,WAAW,CAACE,cAAc;UAC5F;UACA,IAAI9nB,KAAK,GAAG4nB,WAAW,CAACp7B,OAAO,CAACwT,KAAK,IAAI,EAAE;UAC3C,IAAIA,KAAK,EAAE;YACTA,KAAK,IAAI,IAAI;UACf;UACA,MAAMz3C,KAAK,GAAGq/D,WAAW,CAACE,cAAc;UACxC,IAAI,CAACx/D,aAAa,CAACC,KAAK,CAAC,EAAE;YACzBy3C,KAAK,IAAIz3C,KAAK;UAChB;UACA,OAAOy3C,KAAK;QACd,CAAC;QACD4gC,UAAUA,CAAChZ,WAAW,EAAE;UACtB,MAAMlxD,IAAI,GAAGkxD,WAAW,CAAClvD,KAAK,CAAC+zB,cAAc,CAACm7B,WAAW,CAAC98D,YAAY,CAAC;UACvE,MAAMa,OAAO,GAAG+K,IAAI,CAACwzB,UAAU,CAACha,QAAQ,CAAC03C,WAAW,CAAC7sB,SAAS,CAAC;UAC/D,OAAO;YACL3uB,WAAW,EAAEzgB,OAAO,CAACygB,WAAW;YAChCD,eAAe,EAAExgB,OAAO,CAACwgB,eAAe;YACxC2K,WAAW,EAAEnrB,OAAO,CAACmrB,WAAW;YAChC2S,UAAU,EAAE99B,OAAO,CAAC89B,UAAU;YAC9BC,gBAAgB,EAAE/9B,OAAO,CAAC+9B,gBAAgB;YAC1CygC,YAAY,EAAE;UAChB,CAAC;QACH,CAAC;QACD2W,cAAcA,CAAA,EAAG;UACf,OAAO,IAAI,CAACn1E,OAAO,CAAC+2E,SAAS;QAC/B,CAAC;QACD7B,eAAeA,CAACjZ,WAAW,EAAE;UAC3B,MAAMlxD,IAAI,GAAGkxD,WAAW,CAAClvD,KAAK,CAAC+zB,cAAc,CAACm7B,WAAW,CAAC98D,YAAY,CAAC;UACvE,MAAMa,OAAO,GAAG+K,IAAI,CAACwzB,UAAU,CAACha,QAAQ,CAAC03C,WAAW,CAAC7sB,SAAS,CAAC;UAC/D,OAAO;YACLjlB,UAAU,EAAEnqB,OAAO,CAACmqB,UAAU;YAC9BC,QAAQ,EAAEpqB,OAAO,CAACoqB;UACpB,CAAC;QACH,CAAC;QACDsqD,UAAU,EAAEl4E,IAAI;QAChBg1E,SAAS,EAAEh1E,IAAI;QACfq4E,YAAY,EAAEr4E,IAAI;QAClBq0E,MAAM,EAAEr0E,IAAI;QACZs4E,WAAW,EAAEt4E;MACf;IACF,CAAC;IACD+6C,aAAa,EAAE;MACbu5B,QAAQ,EAAE,MAAM;MAChBC,UAAU,EAAE,MAAM;MAClBvC,SAAS,EAAE;IACb,CAAC;IACDvuD,WAAW,EAAE;MACXqD,WAAW,EAAGV,IAAI,IAAKA,IAAI,KAAK,QAAQ,IAAIA,IAAI,KAAK,UAAU,IAAIA,IAAI,KAAK,UAAU;MACtFY,UAAU,EAAE,KAAK;MACjBtW,SAAS,EAAE;QACToW,WAAW,EAAE,KAAK;QAClBE,UAAU,EAAE;MACd,CAAC;MACDjD,SAAS,EAAE;QACTkD,SAAS,EAAE;MACb,CAAC;MACDkoB,UAAU,EAAE;QACVloB,SAAS,EAAE;MACb;IACF,CAAC;IACDuoC,sBAAsB,EAAE,CAAC,aAAa;EACxC,CAAC;EAED,IAAI7pC,OAAO,GAAG,aAAanlB,MAAM,CAACkhC,MAAM,CAAC;IACzCC,SAAS,EAAE,IAAI;IACf+5C,UAAU,EAAE1Q,iBAAiB;IAC7B2Q,MAAM,EAAE/4E,KAAK;IACb+sE,MAAM,EAAEgD,aAAa;IACrBiJ,QAAQ,EAAEpI,eAAe;IACzBT,KAAK,EAAEO,YAAY;IACnBwD,OAAO,EAAEwE;EACT,CAAC,CAAC;EAEF,MAAMO,WAAW,GAAGA,CAACllC,MAAM,EAAE9D,GAAG,EAAEjwC,KAAK,EAAEk5E,WAAW,KAAK;IACvD,IAAI,OAAOjpC,GAAG,KAAK,QAAQ,EAAE;MAC3BjwC,KAAK,GAAG+zC,MAAM,CAACrxC,IAAI,CAACutC,GAAG,CAAC,GAAG,CAAC;MAC5BipC,WAAW,CAAC3O,OAAO,CAAC;QAACvqE,KAAK;QAAEi1C,KAAK,EAAEhF;MAAG,CAAC,CAAC;IAC1C,CAAC,MAAM,IAAI3qC,KAAK,CAAC2qC,GAAG,CAAC,EAAE;MACrBjwC,KAAK,GAAG,IAAI;IACd;IACA,OAAOA,KAAK;EACd,CAAC;EACD,SAASm5E,cAAcA,CAACplC,MAAM,EAAE9D,GAAG,EAAEjwC,KAAK,EAAEk5E,WAAW,EAAE;IACvD,MAAMl+B,KAAK,GAAGjH,MAAM,CAACrzC,OAAO,CAACuvC,GAAG,CAAC;IACjC,IAAI+K,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,OAAOi+B,WAAW,CAACllC,MAAM,EAAE9D,GAAG,EAAEjwC,KAAK,EAAEk5E,WAAW,CAAC;IACrD;IACA,MAAM3wE,IAAI,GAAGwrC,MAAM,CAACqlC,WAAW,CAACnpC,GAAG,CAAC;IACpC,OAAO+K,KAAK,KAAKzyC,IAAI,GAAGvI,KAAK,GAAGg7C,KAAK;EACvC;EACA,MAAM0B,UAAU,GAAGA,CAAC18C,KAAK,EAAE+F,GAAG,KAAK/F,KAAK,KAAK,IAAI,GAAG,IAAI,GAAG6H,WAAW,CAACnE,IAAI,CAACc,KAAK,CAACxE,KAAK,CAAC,EAAE,CAAC,EAAE+F,GAAG,CAAC;EACjG,MAAMszE,aAAa,SAAS57B,KAAK,CAAC;IAChCrwC,WAAWA,CAAC29B,GAAG,EAAE;MACf,KAAK,CAACA,GAAG,CAAC;MACV,IAAI,CAACuuC,WAAW,GAAG73E,SAAS;MAC5B,IAAI,CAAC83E,WAAW,GAAG,CAAC;MACpB,IAAI,CAACC,YAAY,GAAG,EAAE;IACxB;IACA36B,IAAIA,CAACqM,YAAY,EAAE;MACjB,MAAMuuB,KAAK,GAAG,IAAI,CAACD,YAAY;MAC/B,IAAIC,KAAK,CAACj6E,MAAM,EAAE;QAChB,MAAMu0C,MAAM,GAAG,IAAI,CAACC,SAAS,CAAC,CAAC;QAC/B,KAAK,MAAM;UAACh0C,KAAK;UAAEi1C;QAAK,CAAC,IAAIwkC,KAAK,EAAE;UAClC,IAAI1lC,MAAM,CAAC/zC,KAAK,CAAC,KAAKi1C,KAAK,EAAE;YAC3BlB,MAAM,CAACrqC,MAAM,CAAC1J,KAAK,EAAE,CAAC,CAAC;UACzB;QACF;QACA,IAAI,CAACw5E,YAAY,GAAG,EAAE;MACxB;MACA,KAAK,CAAC36B,IAAI,CAACqM,YAAY,CAAC;IAC1B;IACA/3B,KAAKA,CAAC8c,GAAG,EAAEjwC,KAAK,EAAE;MAChB,IAAIzC,aAAa,CAAC0yC,GAAG,CAAC,EAAE;QACtB,OAAO,IAAI;MACb;MACA,MAAM8D,MAAM,GAAG,IAAI,CAACC,SAAS,CAAC,CAAC;MAC/Bh0C,KAAK,GAAG5B,QAAQ,CAAC4B,KAAK,CAAC,IAAI+zC,MAAM,CAAC/zC,KAAK,CAAC,KAAKiwC,GAAG,GAAGjwC,KAAK,GACpDm5E,cAAc,CAACplC,MAAM,EAAE9D,GAAG,EAAE1xC,cAAc,CAACyB,KAAK,EAAEiwC,GAAG,CAAC,EAAE,IAAI,CAACupC,YAAY,CAAC;MAC9E,OAAO98B,UAAU,CAAC18C,KAAK,EAAE+zC,MAAM,CAACv0C,MAAM,GAAG,CAAC,CAAC;IAC7C;IACAkgD,mBAAmBA,CAAA,EAAG;MACpB,MAAM;QAACtzC,UAAU;QAAEC;MAAU,CAAC,GAAG,IAAI,CAACC,aAAa,CAAC,CAAC;MACrD,IAAI;QAACxG,GAAG;QAAEC;MAAG,CAAC,GAAG,IAAI,CAAC0uC,SAAS,CAAC,IAAI,CAAC;MACrC,IAAI,IAAI,CAAC7zC,OAAO,CAACy7B,MAAM,KAAK,OAAO,EAAE;QACnC,IAAI,CAACjwB,UAAU,EAAE;UACftG,GAAG,GAAG,CAAC;QACT;QACA,IAAI,CAACuG,UAAU,EAAE;UACftG,GAAG,GAAG,IAAI,CAACiuC,SAAS,CAAC,CAAC,CAACx0C,MAAM,GAAG,CAAC;QACnC;MACF;MACA,IAAI,CAACsG,GAAG,GAAGA,GAAG;MACd,IAAI,CAACC,GAAG,GAAGA,GAAG;IAChB;IACA85C,UAAUA,CAAA,EAAG;MACX,MAAM/5C,GAAG,GAAG,IAAI,CAACA,GAAG;MACpB,MAAMC,GAAG,GAAG,IAAI,CAACA,GAAG;MACpB,MAAMkzC,MAAM,GAAG,IAAI,CAACr4C,OAAO,CAACq4C,MAAM;MAClC,MAAMV,KAAK,GAAG,EAAE;MAChB,IAAIxE,MAAM,GAAG,IAAI,CAACC,SAAS,CAAC,CAAC;MAC7BD,MAAM,GAAIjuC,GAAG,KAAK,CAAC,IAAIC,GAAG,KAAKguC,MAAM,CAACv0C,MAAM,GAAG,CAAC,GAAIu0C,MAAM,GAAGA,MAAM,CAAC/1C,KAAK,CAAC8H,GAAG,EAAEC,GAAG,GAAG,CAAC,CAAC;MACvF,IAAI,CAACwzE,WAAW,GAAG71E,IAAI,CAACqC,GAAG,CAACguC,MAAM,CAACv0C,MAAM,IAAIy5C,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;MAChE,IAAI,CAACqgC,WAAW,GAAG,IAAI,CAACxzE,GAAG,IAAImzC,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC;MAChD,KAAK,IAAIz7C,KAAK,GAAGsI,GAAG,EAAEtI,KAAK,IAAIuI,GAAG,EAAEvI,KAAK,EAAE,EAAE;QAC3C+6C,KAAK,CAAC71C,IAAI,CAAC;UAAClF;QAAK,CAAC,CAAC;MACrB;MACA,OAAO+6C,KAAK;IACd;IACArD,gBAAgBA,CAAC13C,KAAK,EAAE;MACtB,MAAMu2C,MAAM,GAAG,IAAI,CAACC,SAAS,CAAC,CAAC;MAC/B,IAAIx2C,KAAK,IAAI,CAAC,IAAIA,KAAK,GAAGu2C,MAAM,CAACv0C,MAAM,EAAE;QACvC,OAAOu0C,MAAM,CAACv2C,KAAK,CAAC;MACtB;MACA,OAAOA,KAAK;IACd;IACAooC,SAASA,CAAA,EAAG;MACV,KAAK,CAACA,SAAS,CAAC,CAAC;MACjB,IAAI,CAAC,IAAI,CAACtD,YAAY,CAAC,CAAC,EAAE;QACxB,IAAI,CAAChD,cAAc,GAAG,CAAC,IAAI,CAACA,cAAc;MAC5C;IACF;IACA/yB,gBAAgBA,CAAC/O,KAAK,EAAE;MACtB,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;QAC7BA,KAAK,GAAG,IAAI,CAAC21B,KAAK,CAAC31B,KAAK,CAAC;MAC3B;MACA,OAAOA,KAAK,KAAK,IAAI,GAAGg3C,GAAG,GAAG,IAAI,CAAC+O,kBAAkB,CAAC,CAAC/lD,KAAK,GAAG,IAAI,CAAC87E,WAAW,IAAI,IAAI,CAACC,WAAW,CAAC;IACtG;IACAz8B,eAAeA,CAAC98C,KAAK,EAAE;MACrB,MAAMu4C,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAIv4C,KAAK,GAAG,CAAC,IAAIA,KAAK,GAAGu4C,KAAK,CAAC/4C,MAAM,GAAG,CAAC,EAAE;QACzC,OAAO,IAAI;MACb;MACA,OAAO,IAAI,CAAC+M,gBAAgB,CAACgsC,KAAK,CAACv4C,KAAK,CAAC,CAACxC,KAAK,CAAC;IAClD;IACA8lD,gBAAgBA,CAACh5B,KAAK,EAAE;MACtB,OAAO5mB,IAAI,CAACc,KAAK,CAAC,IAAI,CAAC80E,WAAW,GAAG,IAAI,CAAC71B,kBAAkB,CAACn5B,KAAK,CAAC,GAAG,IAAI,CAACivD,WAAW,CAAC;IACzF;IACA71B,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAAC59B,MAAM;IACpB;EACF;EACAuzD,aAAa,CAAC/7E,EAAE,GAAG,UAAU;EAC7B+7E,aAAa,CAACp1D,QAAQ,GAAG;IACvBs0B,KAAK,EAAE;MACL15C,QAAQ,EAAEw6E,aAAa,CAACx7E,SAAS,CAACq3C;IACpC;EACF,CAAC;EAED,SAASwkC,eAAeA,CAACC,iBAAiB,EAAEC,SAAS,EAAE;IACrD,MAAMrhC,KAAK,GAAG,EAAE;IAChB,MAAMshC,WAAW,GAAG,KAAK;IACzB,MAAM;MAACx9C,MAAM;MAAE2oB,IAAI;MAAEl/C,GAAG;MAAEC,GAAG;MAAE+zE,SAAS;MAAE/tE,KAAK;MAAEguE,QAAQ;MAAEC,SAAS;MAAEC;IAAa,CAAC,GAAGN,iBAAiB;IACxG,MAAMxkB,IAAI,GAAGnQ,IAAI,IAAI,CAAC;IACtB,MAAMk1B,SAAS,GAAGH,QAAQ,GAAG,CAAC;IAC9B,MAAM;MAACj0E,GAAG,EAAEq0E,IAAI;MAAEp0E,GAAG,EAAEq0E;IAAI,CAAC,GAAGR,SAAS;IACxC,MAAMxtE,UAAU,GAAG,CAAC7O,aAAa,CAACuI,GAAG,CAAC;IACtC,MAAMuG,UAAU,GAAG,CAAC9O,aAAa,CAACwI,GAAG,CAAC;IACtC,MAAMs0E,YAAY,GAAG,CAAC98E,aAAa,CAACwO,KAAK,CAAC;IAC1C,MAAMuuE,UAAU,GAAG,CAACF,IAAI,GAAGD,IAAI,KAAKH,SAAS,GAAG,CAAC,CAAC;IAClD,IAAI7+B,OAAO,GAAG92C,OAAO,CAAC,CAAC+1E,IAAI,GAAGD,IAAI,IAAID,SAAS,GAAG/kB,IAAI,CAAC,GAAGA,IAAI;IAC9D,IAAIjyB,MAAM,EAAEq3C,OAAO,EAAEC,OAAO,EAAEC,SAAS;IACvC,IAAIt/B,OAAO,GAAG0+B,WAAW,IAAI,CAACztE,UAAU,IAAI,CAACC,UAAU,EAAE;MACvD,OAAO,CAAC;QAAC7O,KAAK,EAAE28E;MAAI,CAAC,EAAE;QAAC38E,KAAK,EAAE48E;MAAI,CAAC,CAAC;IACvC;IACAK,SAAS,GAAG/2E,IAAI,CAACo4C,IAAI,CAACs+B,IAAI,GAAGj/B,OAAO,CAAC,GAAGz3C,IAAI,CAACkB,KAAK,CAACu1E,IAAI,GAAGh/B,OAAO,CAAC;IAClE,IAAIs/B,SAAS,GAAGP,SAAS,EAAE;MACzB/+B,OAAO,GAAG92C,OAAO,CAACo2E,SAAS,GAAGt/B,OAAO,GAAG++B,SAAS,GAAG/kB,IAAI,CAAC,GAAGA,IAAI;IAClE;IACA,IAAI,CAAC53D,aAAa,CAACu8E,SAAS,CAAC,EAAE;MAC7B52C,MAAM,GAAGx/B,IAAI,CAACiB,GAAG,CAAC,EAAE,EAAEm1E,SAAS,CAAC;MAChC3+B,OAAO,GAAGz3C,IAAI,CAACo4C,IAAI,CAACX,OAAO,GAAGjY,MAAM,CAAC,GAAGA,MAAM;IAChD;IACA,IAAI7G,MAAM,KAAK,OAAO,EAAE;MACtBk+C,OAAO,GAAG72E,IAAI,CAACkB,KAAK,CAACu1E,IAAI,GAAGh/B,OAAO,CAAC,GAAGA,OAAO;MAC9Cq/B,OAAO,GAAG92E,IAAI,CAACo4C,IAAI,CAACs+B,IAAI,GAAGj/B,OAAO,CAAC,GAAGA,OAAO;IAC/C,CAAC,MAAM;MACLo/B,OAAO,GAAGJ,IAAI;MACdK,OAAO,GAAGJ,IAAI;IAChB;IACA,IAAIhuE,UAAU,IAAIC,UAAU,IAAI24C,IAAI,IAAIv/C,WAAW,CAAC,CAACM,GAAG,GAAGD,GAAG,IAAIk/C,IAAI,EAAE7J,OAAO,GAAG,IAAI,CAAC,EAAE;MACvFs/B,SAAS,GAAG/2E,IAAI,CAACc,KAAK,CAACd,IAAI,CAACoC,GAAG,CAAC,CAACC,GAAG,GAAGD,GAAG,IAAIq1C,OAAO,EAAE4+B,QAAQ,CAAC,CAAC;MACjE5+B,OAAO,GAAG,CAACp1C,GAAG,GAAGD,GAAG,IAAI20E,SAAS;MACjCF,OAAO,GAAGz0E,GAAG;MACb00E,OAAO,GAAGz0E,GAAG;IACf,CAAC,MAAM,IAAIs0E,YAAY,EAAE;MACvBE,OAAO,GAAGnuE,UAAU,GAAGtG,GAAG,GAAGy0E,OAAO;MACpCC,OAAO,GAAGnuE,UAAU,GAAGtG,GAAG,GAAGy0E,OAAO;MACpCC,SAAS,GAAG1uE,KAAK,GAAG,CAAC;MACrBovC,OAAO,GAAG,CAACq/B,OAAO,GAAGD,OAAO,IAAIE,SAAS;IAC3C,CAAC,MAAM;MACLA,SAAS,GAAG,CAACD,OAAO,GAAGD,OAAO,IAAIp/B,OAAO;MACzC,IAAI12C,YAAY,CAACg2E,SAAS,EAAE/2E,IAAI,CAACc,KAAK,CAACi2E,SAAS,CAAC,EAAEt/B,OAAO,GAAG,IAAI,CAAC,EAAE;QAClEs/B,SAAS,GAAG/2E,IAAI,CAACc,KAAK,CAACi2E,SAAS,CAAC;MACnC,CAAC,MAAM;QACLA,SAAS,GAAG/2E,IAAI,CAACo4C,IAAI,CAAC2+B,SAAS,CAAC;MAClC;IACF;IACA,MAAMC,aAAa,GAAGh3E,IAAI,CAACqC,GAAG,CAC5BK,cAAc,CAAC+0C,OAAO,CAAC,EACvB/0C,cAAc,CAACm0E,OAAO,CACxB,CAAC;IACDr3C,MAAM,GAAGx/B,IAAI,CAACiB,GAAG,CAAC,EAAE,EAAEpH,aAAa,CAACu8E,SAAS,CAAC,GAAGY,aAAa,GAAGZ,SAAS,CAAC;IAC3ES,OAAO,GAAG72E,IAAI,CAACc,KAAK,CAAC+1E,OAAO,GAAGr3C,MAAM,CAAC,GAAGA,MAAM;IAC/Cs3C,OAAO,GAAG92E,IAAI,CAACc,KAAK,CAACg2E,OAAO,GAAGt3C,MAAM,CAAC,GAAGA,MAAM;IAC/C,IAAItlB,CAAC,GAAG,CAAC;IACT,IAAIxR,UAAU,EAAE;MACd,IAAI6tE,aAAa,IAAIM,OAAO,KAAKz0E,GAAG,EAAE;QACpCyyC,KAAK,CAAC71C,IAAI,CAAC;UAAClF,KAAK,EAAEsI;QAAG,CAAC,CAAC;QACxB,IAAIy0E,OAAO,GAAGz0E,GAAG,EAAE;UACjB8X,CAAC,EAAE;QACL;QACA,IAAInZ,YAAY,CAACf,IAAI,CAACc,KAAK,CAAC,CAAC+1E,OAAO,GAAG38D,CAAC,GAAGu9B,OAAO,IAAIjY,MAAM,CAAC,GAAGA,MAAM,EAAEp9B,GAAG,EAAE60E,iBAAiB,CAAC70E,GAAG,EAAEw0E,UAAU,EAAEX,iBAAiB,CAAC,CAAC,EAAE;UACnI/7D,CAAC,EAAE;QACL;MACF,CAAC,MAAM,IAAI28D,OAAO,GAAGz0E,GAAG,EAAE;QACxB8X,CAAC,EAAE;MACL;IACF;IACA,OAAOA,CAAC,GAAG68D,SAAS,EAAE,EAAE78D,CAAC,EAAE;MACzB26B,KAAK,CAAC71C,IAAI,CAAC;QAAClF,KAAK,EAAEkG,IAAI,CAACc,KAAK,CAAC,CAAC+1E,OAAO,GAAG38D,CAAC,GAAGu9B,OAAO,IAAIjY,MAAM,CAAC,GAAGA;MAAM,CAAC,CAAC;IAC5E;IACA,IAAI72B,UAAU,IAAI4tE,aAAa,IAAIO,OAAO,KAAKz0E,GAAG,EAAE;MAClD,IAAIwyC,KAAK,CAAC/4C,MAAM,IAAIiF,YAAY,CAAC8zC,KAAK,CAACA,KAAK,CAAC/4C,MAAM,GAAG,CAAC,CAAC,CAAChC,KAAK,EAAEuI,GAAG,EAAE40E,iBAAiB,CAAC50E,GAAG,EAAEu0E,UAAU,EAAEX,iBAAiB,CAAC,CAAC,EAAE;QAC3HphC,KAAK,CAACA,KAAK,CAAC/4C,MAAM,GAAG,CAAC,CAAC,CAAChC,KAAK,GAAGuI,GAAG;MACrC,CAAC,MAAM;QACLwyC,KAAK,CAAC71C,IAAI,CAAC;UAAClF,KAAK,EAAEuI;QAAG,CAAC,CAAC;MAC1B;IACF,CAAC,MAAM,IAAI,CAACsG,UAAU,IAAImuE,OAAO,KAAKz0E,GAAG,EAAE;MACzCwyC,KAAK,CAAC71C,IAAI,CAAC;QAAClF,KAAK,EAAEg9E;MAAO,CAAC,CAAC;IAC9B;IACA,OAAOjiC,KAAK;EACd;EACA,SAASoiC,iBAAiBA,CAACn9E,KAAK,EAAE88E,UAAU,EAAE;IAACj4C,UAAU;IAAEqX;EAAW,CAAC,EAAE;IACvE,MAAMxuB,GAAG,GAAGllB,SAAS,CAAC0zC,WAAW,CAAC;IAClC,MAAM56B,KAAK,GAAG,CAACujB,UAAU,GAAG3+B,IAAI,CAACgoB,GAAG,CAACR,GAAG,CAAC,GAAGxnB,IAAI,CAACioB,GAAG,CAACT,GAAG,CAAC,KAAK,KAAK;IACnE,MAAM1rB,MAAM,GAAG,IAAI,GAAG86E,UAAU,GAAG,CAAC,EAAE,GAAG98E,KAAK,EAAEgC,MAAM;IACtD,OAAOkE,IAAI,CAACoC,GAAG,CAACw0E,UAAU,GAAGx7D,KAAK,EAAEtf,MAAM,CAAC;EAC7C;EACA,MAAMo7E,eAAe,SAASn9B,KAAK,CAAC;IAClCrwC,WAAWA,CAAC29B,GAAG,EAAE;MACf,KAAK,CAACA,GAAG,CAAC;MACV,IAAI,CAAC1jC,KAAK,GAAG5F,SAAS;MACtB,IAAI,CAAC6F,GAAG,GAAG7F,SAAS;MACpB,IAAI,CAAC63E,WAAW,GAAG73E,SAAS;MAC5B,IAAI,CAACo5E,SAAS,GAAGp5E,SAAS;MAC1B,IAAI,CAAC83E,WAAW,GAAG,CAAC;IACtB;IACApmD,KAAKA,CAAC8c,GAAG,EAAEjwC,KAAK,EAAE;MAChB,IAAIzC,aAAa,CAAC0yC,GAAG,CAAC,EAAE;QACtB,OAAO,IAAI;MACb;MACA,IAAI,CAAC,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,YAAY9xC,MAAM,KAAK,CAACC,QAAQ,CAAC,CAAC6xC,GAAG,CAAC,EAAE;QACzE,OAAO,IAAI;MACb;MACA,OAAO,CAACA,GAAG;IACb;IACA6qC,sBAAsBA,CAAA,EAAG;MACvB,MAAM;QAACrgD;MAAW,CAAC,GAAG,IAAI,CAAC75B,OAAO;MAClC,MAAM;QAACwL,UAAU;QAAEC;MAAU,CAAC,GAAG,IAAI,CAACC,aAAa,CAAC,CAAC;MACrD,IAAI;QAACxG,GAAG;QAAEC;MAAG,CAAC,GAAG,IAAI;MACrB,MAAMg1E,MAAM,GAAGl5E,CAAC,IAAKiE,GAAG,GAAGsG,UAAU,GAAGtG,GAAG,GAAGjE,CAAE;MAChD,MAAMm5E,MAAM,GAAGn5E,CAAC,IAAKkE,GAAG,GAAGsG,UAAU,GAAGtG,GAAG,GAAGlE,CAAE;MAChD,IAAI44B,WAAW,EAAE;QACf,MAAMwgD,OAAO,GAAG72E,IAAI,CAAC0B,GAAG,CAAC;QACzB,MAAMo1E,OAAO,GAAG92E,IAAI,CAAC2B,GAAG,CAAC;QACzB,IAAIk1E,OAAO,GAAG,CAAC,IAAIC,OAAO,GAAG,CAAC,EAAE;UAC9BF,MAAM,CAAC,CAAC,CAAC;QACX,CAAC,MAAM,IAAIC,OAAO,GAAG,CAAC,IAAIC,OAAO,GAAG,CAAC,EAAE;UACrCH,MAAM,CAAC,CAAC,CAAC;QACX;MACF;MACA,IAAIj1E,GAAG,KAAKC,GAAG,EAAE;QACf,IAAIkzC,MAAM,GAAG,CAAC;QACd,IAAIlzC,GAAG,IAAI5H,MAAM,CAACg9E,gBAAgB,IAAIr1E,GAAG,IAAI3H,MAAM,CAACi9E,gBAAgB,EAAE;UACpEniC,MAAM,GAAGv1C,IAAI,CAAC8B,GAAG,CAACO,GAAG,GAAG,IAAI,CAAC;QAC/B;QACAi1E,MAAM,CAACj1E,GAAG,GAAGkzC,MAAM,CAAC;QACpB,IAAI,CAACxe,WAAW,EAAE;UAChBsgD,MAAM,CAACj1E,GAAG,GAAGmzC,MAAM,CAAC;QACtB;MACF;MACA,IAAI,CAACnzC,GAAG,GAAGA,GAAG;MACd,IAAI,CAACC,GAAG,GAAGA,GAAG;IAChB;IACAs1E,YAAYA,CAAA,EAAG;MACb,MAAM7gC,QAAQ,GAAG,IAAI,CAAC55C,OAAO,CAAC23C,KAAK;MACnC,IAAI;QAACmC,aAAa;QAAE4gC;MAAQ,CAAC,GAAG9gC,QAAQ;MACxC,IAAIu/B,QAAQ;MACZ,IAAIuB,QAAQ,EAAE;QACZvB,QAAQ,GAAGr2E,IAAI,CAACo4C,IAAI,CAAC,IAAI,CAAC/1C,GAAG,GAAGu1E,QAAQ,CAAC,GAAG53E,IAAI,CAACkB,KAAK,CAAC,IAAI,CAACkB,GAAG,GAAGw1E,QAAQ,CAAC,GAAG,CAAC;QAC/E,IAAIvB,QAAQ,GAAG,IAAI,EAAE;UACnBr4E,OAAO,CAACC,IAAI,CAAE,UAAS,IAAI,CAACrE,EAAG,oBAAmBg+E,QAAS,kCAAiCvB,QAAS,2BAA0B,CAAC;UAChIA,QAAQ,GAAG,IAAI;QACjB;MACF,CAAC,MAAM;QACLA,QAAQ,GAAG,IAAI,CAACwB,gBAAgB,CAAC,CAAC;QAClC7gC,aAAa,GAAGA,aAAa,IAAI,EAAE;MACrC;MACA,IAAIA,aAAa,EAAE;QACjBq/B,QAAQ,GAAGr2E,IAAI,CAACoC,GAAG,CAAC40C,aAAa,EAAEq/B,QAAQ,CAAC;MAC9C;MACA,OAAOA,QAAQ;IACjB;IACAwB,gBAAgBA,CAAA,EAAG;MACjB,OAAOp9E,MAAM,CAAC2F,iBAAiB;IACjC;IACA+7C,UAAUA,CAAA,EAAG;MACX,MAAM1yB,IAAI,GAAG,IAAI,CAACvsB,OAAO;MACzB,MAAM45C,QAAQ,GAAGrtB,IAAI,CAACorB,KAAK;MAC3B,IAAIwhC,QAAQ,GAAG,IAAI,CAACsB,YAAY,CAAC,CAAC;MAClCtB,QAAQ,GAAGr2E,IAAI,CAACqC,GAAG,CAAC,CAAC,EAAEg0E,QAAQ,CAAC;MAChC,MAAMyB,uBAAuB,GAAG;QAC9BzB,QAAQ;QACR19C,MAAM,EAAElP,IAAI,CAACkP,MAAM;QACnBv2B,GAAG,EAAEqnB,IAAI,CAACrnB,GAAG;QACbC,GAAG,EAAEonB,IAAI,CAACpnB,GAAG;QACb+zE,SAAS,EAAEt/B,QAAQ,CAACs/B,SAAS;QAC7B90B,IAAI,EAAExK,QAAQ,CAAC8gC,QAAQ;QACvBvvE,KAAK,EAAEyuC,QAAQ,CAACzuC,KAAK;QACrBiuE,SAAS,EAAE,IAAI,CAACjzB,UAAU,CAAC,CAAC;QAC5B1kB,UAAU,EAAE,IAAI,CAACC,YAAY,CAAC,CAAC;QAC/BoX,WAAW,EAAEc,QAAQ,CAACd,WAAW,IAAI,CAAC;QACtCugC,aAAa,EAAEz/B,QAAQ,CAACy/B,aAAa,KAAK;MAC5C,CAAC;MACD,MAAML,SAAS,GAAG,IAAI,CAAC57B,MAAM,IAAI,IAAI;MACrC,MAAMzF,KAAK,GAAGmhC,eAAe,CAAC8B,uBAAuB,EAAE5B,SAAS,CAAC;MACjE,IAAIzsD,IAAI,CAACkP,MAAM,KAAK,OAAO,EAAE;QAC3B12B,kBAAkB,CAAC4yC,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC;MAC1C;MACA,IAAIprB,IAAI,CAAC/tB,OAAO,EAAE;QAChBm5C,KAAK,CAACn5C,OAAO,CAAC,CAAC;QACf,IAAI,CAACiI,KAAK,GAAG,IAAI,CAACtB,GAAG;QACrB,IAAI,CAACuB,GAAG,GAAG,IAAI,CAACxB,GAAG;MACrB,CAAC,MAAM;QACL,IAAI,CAACuB,KAAK,GAAG,IAAI,CAACvB,GAAG;QACrB,IAAI,CAACwB,GAAG,GAAG,IAAI,CAACvB,GAAG;MACrB;MACA,OAAOwyC,KAAK;IACd;IACA3S,SAASA,CAAA,EAAG;MACV,MAAM2S,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAIlxC,KAAK,GAAG,IAAI,CAACvB,GAAG;MACpB,IAAIwB,GAAG,GAAG,IAAI,CAACvB,GAAG;MAClB,KAAK,CAAC6/B,SAAS,CAAC,CAAC;MACjB,IAAI,IAAI,CAAChlC,OAAO,CAACq4C,MAAM,IAAIV,KAAK,CAAC/4C,MAAM,EAAE;QACvC,MAAMy5C,MAAM,GAAG,CAAC3xC,GAAG,GAAGD,KAAK,IAAI3D,IAAI,CAACqC,GAAG,CAACwyC,KAAK,CAAC/4C,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC;QAChE6H,KAAK,IAAI4xC,MAAM;QACf3xC,GAAG,IAAI2xC,MAAM;MACf;MACA,IAAI,CAACqgC,WAAW,GAAGjyE,KAAK;MACxB,IAAI,CAACwzE,SAAS,GAAGvzE,GAAG;MACpB,IAAI,CAACiyE,WAAW,GAAGjyE,GAAG,GAAGD,KAAK;IAChC;IACA6tC,gBAAgBA,CAAC13C,KAAK,EAAE;MACtB,OAAO27B,YAAY,CAAC37B,KAAK,EAAE,IAAI,CAACmQ,KAAK,CAAC/M,OAAO,CAACg4B,MAAM,EAAE,IAAI,CAACh4B,OAAO,CAAC23C,KAAK,CAAClf,MAAM,CAAC;IAClF;EACF;EAEA,MAAMoiD,WAAW,SAASb,eAAe,CAAC;IACxCl7B,mBAAmBA,CAAA,EAAG;MACpB,MAAM;QAAC55C,GAAG;QAAEC;MAAG,CAAC,GAAG,IAAI,CAAC0uC,SAAS,CAAC,IAAI,CAAC;MACvC,IAAI,CAAC3uC,GAAG,GAAG5H,cAAc,CAAC4H,GAAG,CAAC,GAAGA,GAAG,GAAG,CAAC;MACxC,IAAI,CAACC,GAAG,GAAG7H,cAAc,CAAC6H,GAAG,CAAC,GAAGA,GAAG,GAAG,CAAC;MACxC,IAAI,CAAC+0E,sBAAsB,CAAC,CAAC;IAC/B;IACAS,gBAAgBA,CAAA,EAAG;MACjB,MAAMl5C,UAAU,GAAG,IAAI,CAACC,YAAY,CAAC,CAAC;MACtC,MAAM9iC,MAAM,GAAG6iC,UAAU,GAAG,IAAI,CAAC1c,KAAK,GAAG,IAAI,CAACC,MAAM;MACpD,MAAM8zB,WAAW,GAAG1zC,SAAS,CAAC,IAAI,CAACpF,OAAO,CAAC23C,KAAK,CAACmB,WAAW,CAAC;MAC7D,MAAM56B,KAAK,GAAG,CAACujB,UAAU,GAAG3+B,IAAI,CAACgoB,GAAG,CAACguB,WAAW,CAAC,GAAGh2C,IAAI,CAACioB,GAAG,CAAC+tB,WAAW,CAAC,KAAK,KAAK;MACnF,MAAMuJ,QAAQ,GAAG,IAAI,CAACE,uBAAuB,CAAC,CAAC,CAAC;MAChD,OAAOz/C,IAAI,CAACo4C,IAAI,CAACt8C,MAAM,GAAGkE,IAAI,CAACoC,GAAG,CAAC,EAAE,EAAEm9C,QAAQ,CAACjhC,UAAU,GAAGlD,KAAK,CAAC,CAAC;IACtE;IACAvS,gBAAgBA,CAAC/O,KAAK,EAAE;MACtB,OAAOA,KAAK,KAAK,IAAI,GAAGg3C,GAAG,GAAG,IAAI,CAAC+O,kBAAkB,CAAC,CAAC/lD,KAAK,GAAG,IAAI,CAAC87E,WAAW,IAAI,IAAI,CAACC,WAAW,CAAC;IACtG;IACAj2B,gBAAgBA,CAACh5B,KAAK,EAAE;MACtB,OAAO,IAAI,CAACgvD,WAAW,GAAG,IAAI,CAAC71B,kBAAkB,CAACn5B,KAAK,CAAC,GAAG,IAAI,CAACivD,WAAW;IAC7E;EACF;EACAkC,WAAW,CAACn+E,EAAE,GAAG,QAAQ;EACzBm+E,WAAW,CAACx3D,QAAQ,GAAG;IACrBs0B,KAAK,EAAE;MACL15C,QAAQ,EAAEm6C,KAAK,CAACZ,UAAU,CAACC;IAC7B;EACF,CAAC;EAED,SAASqjC,OAAOA,CAACC,OAAO,EAAE;IACxB,MAAM/vC,MAAM,GAAG+vC,OAAO,GAAIj4E,IAAI,CAACiB,GAAG,CAAC,EAAE,EAAEjB,IAAI,CAACkB,KAAK,CAACT,KAAK,CAACw3E,OAAO,CAAC,CAAC,CAAE;IACnE,OAAO/vC,MAAM,KAAK,CAAC;EACrB;EACA,SAASgwC,aAAaA,CAACjC,iBAAiB,EAAEC,SAAS,EAAE;IACnD,MAAMiC,MAAM,GAAGn4E,IAAI,CAACkB,KAAK,CAACT,KAAK,CAACy1E,SAAS,CAAC7zE,GAAG,CAAC,CAAC;IAC/C,MAAM+1E,cAAc,GAAGp4E,IAAI,CAACo4C,IAAI,CAAC89B,SAAS,CAAC7zE,GAAG,GAAGrC,IAAI,CAACiB,GAAG,CAAC,EAAE,EAAEk3E,MAAM,CAAC,CAAC;IACtE,MAAMtjC,KAAK,GAAG,EAAE;IAChB,IAAIojC,OAAO,GAAGt9E,eAAe,CAACs7E,iBAAiB,CAAC7zE,GAAG,EAAEpC,IAAI,CAACiB,GAAG,CAAC,EAAE,EAAEjB,IAAI,CAACkB,KAAK,CAACT,KAAK,CAACy1E,SAAS,CAAC9zE,GAAG,CAAC,CAAC,CAAC,CAAC;IACpG,IAAIi2E,GAAG,GAAGr4E,IAAI,CAACkB,KAAK,CAACT,KAAK,CAACw3E,OAAO,CAAC,CAAC;IACpC,IAAIK,WAAW,GAAGt4E,IAAI,CAACkB,KAAK,CAAC+2E,OAAO,GAAGj4E,IAAI,CAACiB,GAAG,CAAC,EAAE,EAAEo3E,GAAG,CAAC,CAAC;IACzD,IAAIjC,SAAS,GAAGiC,GAAG,GAAG,CAAC,GAAGr4E,IAAI,CAACiB,GAAG,CAAC,EAAE,EAAEjB,IAAI,CAAC8B,GAAG,CAACu2E,GAAG,CAAC,CAAC,GAAG,CAAC;IACzD,GAAG;MACDxjC,KAAK,CAAC71C,IAAI,CAAC;QAAClF,KAAK,EAAEm+E,OAAO;QAAExhC,KAAK,EAAEuhC,OAAO,CAACC,OAAO;MAAC,CAAC,CAAC;MACrD,EAAEK,WAAW;MACb,IAAIA,WAAW,KAAK,EAAE,EAAE;QACtBA,WAAW,GAAG,CAAC;QACf,EAAED,GAAG;QACLjC,SAAS,GAAGiC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAGjC,SAAS;MACtC;MACA6B,OAAO,GAAGj4E,IAAI,CAACc,KAAK,CAACw3E,WAAW,GAAGt4E,IAAI,CAACiB,GAAG,CAAC,EAAE,EAAEo3E,GAAG,CAAC,GAAGjC,SAAS,CAAC,GAAGA,SAAS;IAC/E,CAAC,QAAQiC,GAAG,GAAGF,MAAM,IAAKE,GAAG,KAAKF,MAAM,IAAIG,WAAW,GAAGF,cAAe;IACzE,MAAMG,QAAQ,GAAG59E,eAAe,CAACs7E,iBAAiB,CAAC5zE,GAAG,EAAE41E,OAAO,CAAC;IAChEpjC,KAAK,CAAC71C,IAAI,CAAC;MAAClF,KAAK,EAAEy+E,QAAQ;MAAE9hC,KAAK,EAAEuhC,OAAO,CAACC,OAAO;IAAC,CAAC,CAAC;IACtD,OAAOpjC,KAAK;EACd;EACA,MAAM2jC,gBAAgB,SAASz+B,KAAK,CAAC;IACnCrwC,WAAWA,CAAC29B,GAAG,EAAE;MACf,KAAK,CAACA,GAAG,CAAC;MACV,IAAI,CAAC1jC,KAAK,GAAG5F,SAAS;MACtB,IAAI,CAAC6F,GAAG,GAAG7F,SAAS;MACpB,IAAI,CAAC63E,WAAW,GAAG73E,SAAS;MAC5B,IAAI,CAAC83E,WAAW,GAAG,CAAC;IACtB;IACApmD,KAAKA,CAAC8c,GAAG,EAAEjwC,KAAK,EAAE;MAChB,MAAMxC,KAAK,GAAGo9E,eAAe,CAAC/8E,SAAS,CAACs1B,KAAK,CAACl0B,KAAK,CAAC,IAAI,EAAE,CAACgxC,GAAG,EAAEjwC,KAAK,CAAC,CAAC;MACvE,IAAIxC,KAAK,KAAK,CAAC,EAAE;QACf,IAAI,CAAC2+E,KAAK,GAAG,IAAI;QACjB,OAAO16E,SAAS;MAClB;MACA,OAAOvD,cAAc,CAACV,KAAK,CAAC,IAAIA,KAAK,GAAG,CAAC,GAAGA,KAAK,GAAG,IAAI;IAC1D;IACAkiD,mBAAmBA,CAAA,EAAG;MACpB,MAAM;QAAC55C,GAAG;QAAEC;MAAG,CAAC,GAAG,IAAI,CAAC0uC,SAAS,CAAC,IAAI,CAAC;MACvC,IAAI,CAAC3uC,GAAG,GAAG5H,cAAc,CAAC4H,GAAG,CAAC,GAAGpC,IAAI,CAACqC,GAAG,CAAC,CAAC,EAAED,GAAG,CAAC,GAAG,IAAI;MACxD,IAAI,CAACC,GAAG,GAAG7H,cAAc,CAAC6H,GAAG,CAAC,GAAGrC,IAAI,CAACqC,GAAG,CAAC,CAAC,EAAEA,GAAG,CAAC,GAAG,IAAI;MACxD,IAAI,IAAI,CAACnF,OAAO,CAAC65B,WAAW,EAAE;QAC5B,IAAI,CAAC0hD,KAAK,GAAG,IAAI;MACnB;MACA,IAAI,CAACrB,sBAAsB,CAAC,CAAC;IAC/B;IACAA,sBAAsBA,CAAA,EAAG;MACvB,MAAM;QAAC1uE,UAAU;QAAEC;MAAU,CAAC,GAAG,IAAI,CAACC,aAAa,CAAC,CAAC;MACrD,IAAIxG,GAAG,GAAG,IAAI,CAACA,GAAG;MAClB,IAAIC,GAAG,GAAG,IAAI,CAACA,GAAG;MAClB,MAAMg1E,MAAM,GAAGl5E,CAAC,IAAKiE,GAAG,GAAGsG,UAAU,GAAGtG,GAAG,GAAGjE,CAAE;MAChD,MAAMm5E,MAAM,GAAGn5E,CAAC,IAAKkE,GAAG,GAAGsG,UAAU,GAAGtG,GAAG,GAAGlE,CAAE;MAChD,MAAMk6E,GAAG,GAAGA,CAACl6E,CAAC,EAAE2Q,CAAC,KAAK9O,IAAI,CAACiB,GAAG,CAAC,EAAE,EAAEjB,IAAI,CAACkB,KAAK,CAACT,KAAK,CAACtC,CAAC,CAAC,CAAC,GAAG2Q,CAAC,CAAC;MAC5D,IAAI1M,GAAG,KAAKC,GAAG,EAAE;QACf,IAAID,GAAG,IAAI,CAAC,EAAE;UACZi1E,MAAM,CAAC,CAAC,CAAC;UACTC,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC,MAAM;UACLD,MAAM,CAACgB,GAAG,CAACj2E,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;UACpBk1E,MAAM,CAACe,GAAG,CAACh2E,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;QACtB;MACF;MACA,IAAID,GAAG,IAAI,CAAC,EAAE;QACZi1E,MAAM,CAACgB,GAAG,CAACh2E,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;MACtB;MACA,IAAIA,GAAG,IAAI,CAAC,EAAE;QACZi1E,MAAM,CAACe,GAAG,CAACj2E,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;MACtB;MACA,IAAI,IAAI,CAACq2E,KAAK,IAAI,IAAI,CAACr2E,GAAG,KAAK,IAAI,CAAC04C,aAAa,IAAI14C,GAAG,KAAKi2E,GAAG,CAAC,IAAI,CAACj2E,GAAG,EAAE,CAAC,CAAC,EAAE;QAC7Ei1E,MAAM,CAACgB,GAAG,CAACj2E,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;MACtB;MACA,IAAI,CAACA,GAAG,GAAGA,GAAG;MACd,IAAI,CAACC,GAAG,GAAGA,GAAG;IAChB;IACA85C,UAAUA,CAAA,EAAG;MACX,MAAM1yB,IAAI,GAAG,IAAI,CAACvsB,OAAO;MACzB,MAAM+4E,iBAAiB,GAAG;QACxB7zE,GAAG,EAAE,IAAI,CAACw4C,QAAQ;QAClBv4C,GAAG,EAAE,IAAI,CAACs4C;MACZ,CAAC;MACD,MAAM9F,KAAK,GAAGqjC,aAAa,CAACjC,iBAAiB,EAAE,IAAI,CAAC;MACpD,IAAIxsD,IAAI,CAACkP,MAAM,KAAK,OAAO,EAAE;QAC3B12B,kBAAkB,CAAC4yC,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC;MAC1C;MACA,IAAIprB,IAAI,CAAC/tB,OAAO,EAAE;QAChBm5C,KAAK,CAACn5C,OAAO,CAAC,CAAC;QACf,IAAI,CAACiI,KAAK,GAAG,IAAI,CAACtB,GAAG;QACrB,IAAI,CAACuB,GAAG,GAAG,IAAI,CAACxB,GAAG;MACrB,CAAC,MAAM;QACL,IAAI,CAACuB,KAAK,GAAG,IAAI,CAACvB,GAAG;QACrB,IAAI,CAACwB,GAAG,GAAG,IAAI,CAACvB,GAAG;MACrB;MACA,OAAOwyC,KAAK;IACd;IACArD,gBAAgBA,CAAC13C,KAAK,EAAE;MACtB,OAAOA,KAAK,KAAKiE,SAAS,GACtB,GAAG,GACH03B,YAAY,CAAC37B,KAAK,EAAE,IAAI,CAACmQ,KAAK,CAAC/M,OAAO,CAACg4B,MAAM,EAAE,IAAI,CAACh4B,OAAO,CAAC23C,KAAK,CAAClf,MAAM,CAAC;IAC/E;IACAuM,SAASA,CAAA,EAAG;MACV,MAAMv+B,KAAK,GAAG,IAAI,CAACvB,GAAG;MACtB,KAAK,CAAC8/B,SAAS,CAAC,CAAC;MACjB,IAAI,CAAC0zC,WAAW,GAAGn1E,KAAK,CAACkD,KAAK,CAAC;MAC/B,IAAI,CAACkyE,WAAW,GAAGp1E,KAAK,CAAC,IAAI,CAAC4B,GAAG,CAAC,GAAG5B,KAAK,CAACkD,KAAK,CAAC;IACnD;IACAkF,gBAAgBA,CAAC/O,KAAK,EAAE;MACtB,IAAIA,KAAK,KAAKiE,SAAS,IAAIjE,KAAK,KAAK,CAAC,EAAE;QACtCA,KAAK,GAAG,IAAI,CAACsI,GAAG;MAClB;MACA,IAAItI,KAAK,KAAK,IAAI,IAAI8H,KAAK,CAAC9H,KAAK,CAAC,EAAE;QAClC,OAAOg3C,GAAG;MACZ;MACA,OAAO,IAAI,CAAC+O,kBAAkB,CAAC/lD,KAAK,KAAK,IAAI,CAACsI,GAAG,GAC7C,CAAC,GACD,CAAC3B,KAAK,CAAC3G,KAAK,CAAC,GAAG,IAAI,CAAC87E,WAAW,IAAI,IAAI,CAACC,WAAW,CAAC;IAC3D;IACAj2B,gBAAgBA,CAACh5B,KAAK,EAAE;MACtB,MAAMk5B,OAAO,GAAG,IAAI,CAACC,kBAAkB,CAACn5B,KAAK,CAAC;MAC9C,OAAO5mB,IAAI,CAACiB,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC20E,WAAW,GAAG91B,OAAO,GAAG,IAAI,CAAC+1B,WAAW,CAAC;IACpE;EACF;EACA2C,gBAAgB,CAAC5+E,EAAE,GAAG,aAAa;EACnC4+E,gBAAgB,CAACj4D,QAAQ,GAAG;IAC1Bs0B,KAAK,EAAE;MACL15C,QAAQ,EAAEm6C,KAAK,CAACZ,UAAU,CAACW,WAAW;MACtCoB,KAAK,EAAE;QACLU,OAAO,EAAE;MACX;IACF;EACF,CAAC;EAED,SAASuhC,qBAAqBA,CAACjvD,IAAI,EAAE;IACnC,MAAMqtB,QAAQ,GAAGrtB,IAAI,CAACorB,KAAK;IAC3B,IAAIiC,QAAQ,CAACrU,OAAO,IAAIhZ,IAAI,CAACgZ,OAAO,EAAE;MACpC,MAAMd,OAAO,GAAGpL,SAAS,CAACugB,QAAQ,CAACD,eAAe,CAAC;MACnD,OAAOh8C,cAAc,CAACi8C,QAAQ,CAAC34B,IAAI,IAAI24B,QAAQ,CAAC34B,IAAI,CAACze,IAAI,EAAE6gB,QAAQ,CAACpC,IAAI,CAACze,IAAI,CAAC,GAAGiiC,OAAO,CAACzf,MAAM;IACjG;IACA,OAAO,CAAC;EACV;EACA,SAASy2D,gBAAgBA,CAACl6D,GAAG,EAAEN,IAAI,EAAEozB,KAAK,EAAE;IAC1CA,KAAK,GAAGx3C,OAAO,CAACw3C,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK,CAAC;IACxC,OAAO;MACLnjC,CAAC,EAAE6X,YAAY,CAACxH,GAAG,EAAEN,IAAI,CAAC2H,MAAM,EAAEyrB,KAAK,CAAC;MACxCjlC,CAAC,EAAEilC,KAAK,CAACz1C,MAAM,GAAGqiB,IAAI,CAACG;IACzB,CAAC;EACH;EACA,SAASs6D,eAAeA,CAAC11E,KAAK,EAAE8e,GAAG,EAAEtiB,IAAI,EAAE0C,GAAG,EAAEC,GAAG,EAAE;IACnD,IAAIa,KAAK,KAAKd,GAAG,IAAIc,KAAK,KAAKb,GAAG,EAAE;MAClC,OAAO;QACLsB,KAAK,EAAEqe,GAAG,GAAItiB,IAAI,GAAG,CAAE;QACvBkE,GAAG,EAAEoe,GAAG,GAAItiB,IAAI,GAAG;MACrB,CAAC;IACH,CAAC,MAAM,IAAIwD,KAAK,GAAGd,GAAG,IAAIc,KAAK,GAAGb,GAAG,EAAE;MACrC,OAAO;QACLsB,KAAK,EAAEqe,GAAG,GAAGtiB,IAAI;QACjBkE,GAAG,EAAEoe;MACP,CAAC;IACH;IACA,OAAO;MACLre,KAAK,EAAEqe,GAAG;MACVpe,GAAG,EAAEoe,GAAG,GAAGtiB;IACb,CAAC;EACH;EACA,SAASm5E,kBAAkBA,CAACt5D,KAAK,EAAE;IACjC,MAAM60C,IAAI,GAAG;MACX/nD,CAAC,EAAEkT,KAAK,CAAC3X,IAAI,GAAG2X,KAAK,CAACmtD,QAAQ,CAAC9kE,IAAI;MACnC8F,CAAC,EAAE6R,KAAK,CAAC1X,KAAK,GAAG0X,KAAK,CAACmtD,QAAQ,CAAC7kE,KAAK;MACrCqT,CAAC,EAAEqE,KAAK,CAAC4C,GAAG,GAAG5C,KAAK,CAACmtD,QAAQ,CAACvqD,GAAG;MACjC1iB,CAAC,EAAE8f,KAAK,CAAC6C,MAAM,GAAG7C,KAAK,CAACmtD,QAAQ,CAACtqD;IACnC,CAAC;IACD,MAAM02D,MAAM,GAAG5+E,MAAM,CAACsP,MAAM,CAAC,CAAC,CAAC,EAAE4qD,IAAI,CAAC;IACtC,MAAMxW,UAAU,GAAG,EAAE;IACrB,MAAMjc,OAAO,GAAG,EAAE;IAClB,MAAMo3C,UAAU,GAAGx5D,KAAK,CAACy5D,YAAY,CAACl9E,MAAM;IAC5C,MAAMm9E,cAAc,GAAG15D,KAAK,CAACriB,OAAO,CAAC49D,WAAW;IAChD,MAAMoe,eAAe,GAAGD,cAAc,CAACE,iBAAiB,GAAGp5E,EAAE,GAAGg5E,UAAU,GAAG,CAAC;IAC9E,KAAK,IAAIp9E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGo9E,UAAU,EAAEp9E,CAAC,EAAE,EAAE;MACnC,MAAM8tB,IAAI,GAAGwvD,cAAc,CAACxrD,UAAU,CAAClO,KAAK,CAAC65D,oBAAoB,CAACz9E,CAAC,CAAC,CAAC;MACrEgmC,OAAO,CAAChmC,CAAC,CAAC,GAAG8tB,IAAI,CAACkY,OAAO;MACzB,MAAMs5B,aAAa,GAAG17C,KAAK,CAAC85D,gBAAgB,CAAC19E,CAAC,EAAE4jB,KAAK,CAAC+5D,WAAW,GAAG33C,OAAO,CAAChmC,CAAC,CAAC,EAAEu9E,eAAe,CAAC;MAChG,MAAMK,MAAM,GAAG/iD,MAAM,CAAC/M,IAAI,CAACtL,IAAI,CAAC;MAChC,MAAMwuD,QAAQ,GAAGgM,gBAAgB,CAACp5D,KAAK,CAACd,GAAG,EAAE86D,MAAM,EAAEh6D,KAAK,CAACy5D,YAAY,CAACr9E,CAAC,CAAC,CAAC;MAC3EiiD,UAAU,CAACjiD,CAAC,CAAC,GAAGgxE,QAAQ;MACxB,MAAMnuB,YAAY,GAAG/6C,eAAe,CAAC8b,KAAK,CAACg7C,aAAa,CAAC5+D,CAAC,CAAC,GAAGu9E,eAAe,CAAC;MAC9E,MAAMh2E,KAAK,GAAGlD,IAAI,CAACc,KAAK,CAAC0B,SAAS,CAACg8C,YAAY,CAAC,CAAC;MACjD,MAAMg7B,OAAO,GAAGZ,eAAe,CAAC11E,KAAK,EAAE+3D,aAAa,CAAC78D,CAAC,EAAEuuE,QAAQ,CAACv+D,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;MAC3E,MAAMqrE,OAAO,GAAGb,eAAe,CAAC11E,KAAK,EAAE+3D,aAAa,CAAC38D,CAAC,EAAEquE,QAAQ,CAACrgE,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC;MAC5EotE,YAAY,CAACZ,MAAM,EAAE1kB,IAAI,EAAE5V,YAAY,EAAEg7B,OAAO,EAAEC,OAAO,CAAC;IAC5D;IACAl6D,KAAK,CAACo6D,cAAc,CAClBvlB,IAAI,CAAC/nD,CAAC,GAAGysE,MAAM,CAACzsE,CAAC,EACjBysE,MAAM,CAACprE,CAAC,GAAG0mD,IAAI,CAAC1mD,CAAC,EACjB0mD,IAAI,CAACl5C,CAAC,GAAG49D,MAAM,CAAC59D,CAAC,EACjB49D,MAAM,CAACr5E,CAAC,GAAG20D,IAAI,CAAC30D,CAClB,CAAC;IACD8f,KAAK,CAACq6D,gBAAgB,GAAGC,oBAAoB,CAACt6D,KAAK,EAAEq+B,UAAU,EAAEjc,OAAO,CAAC;EAC3E;EACA,SAAS+3C,YAAYA,CAACZ,MAAM,EAAE1kB,IAAI,EAAElxD,KAAK,EAAEs2E,OAAO,EAAEC,OAAO,EAAE;IAC3D,MAAMzxD,GAAG,GAAGhoB,IAAI,CAAC8B,GAAG,CAAC9B,IAAI,CAACgoB,GAAG,CAAC9kB,KAAK,CAAC,CAAC;IACrC,MAAM+kB,GAAG,GAAGjoB,IAAI,CAAC8B,GAAG,CAAC9B,IAAI,CAACioB,GAAG,CAAC/kB,KAAK,CAAC,CAAC;IACrC,IAAI9E,CAAC,GAAG,CAAC;IACT,IAAIE,CAAC,GAAG,CAAC;IACT,IAAIk7E,OAAO,CAAC71E,KAAK,GAAGywD,IAAI,CAAC/nD,CAAC,EAAE;MAC1BjO,CAAC,GAAG,CAACg2D,IAAI,CAAC/nD,CAAC,GAAGmtE,OAAO,CAAC71E,KAAK,IAAIqkB,GAAG;MAClC8wD,MAAM,CAACzsE,CAAC,GAAGrM,IAAI,CAACoC,GAAG,CAAC02E,MAAM,CAACzsE,CAAC,EAAE+nD,IAAI,CAAC/nD,CAAC,GAAGjO,CAAC,CAAC;IAC3C,CAAC,MAAM,IAAIo7E,OAAO,CAAC51E,GAAG,GAAGwwD,IAAI,CAAC1mD,CAAC,EAAE;MAC/BtP,CAAC,GAAG,CAACo7E,OAAO,CAAC51E,GAAG,GAAGwwD,IAAI,CAAC1mD,CAAC,IAAIsa,GAAG;MAChC8wD,MAAM,CAACprE,CAAC,GAAG1N,IAAI,CAACqC,GAAG,CAACy2E,MAAM,CAACprE,CAAC,EAAE0mD,IAAI,CAAC1mD,CAAC,GAAGtP,CAAC,CAAC;IAC3C;IACA,IAAIq7E,OAAO,CAAC91E,KAAK,GAAGywD,IAAI,CAACl5C,CAAC,EAAE;MAC1B5c,CAAC,GAAG,CAAC81D,IAAI,CAACl5C,CAAC,GAAGu+D,OAAO,CAAC91E,KAAK,IAAIskB,GAAG;MAClC6wD,MAAM,CAAC59D,CAAC,GAAGlb,IAAI,CAACoC,GAAG,CAAC02E,MAAM,CAAC59D,CAAC,EAAEk5C,IAAI,CAACl5C,CAAC,GAAG5c,CAAC,CAAC;IAC3C,CAAC,MAAM,IAAIm7E,OAAO,CAAC71E,GAAG,GAAGwwD,IAAI,CAAC30D,CAAC,EAAE;MAC/BnB,CAAC,GAAG,CAACm7E,OAAO,CAAC71E,GAAG,GAAGwwD,IAAI,CAAC30D,CAAC,IAAIwoB,GAAG;MAChC6wD,MAAM,CAACr5E,CAAC,GAAGO,IAAI,CAACqC,GAAG,CAACy2E,MAAM,CAACr5E,CAAC,EAAE20D,IAAI,CAAC30D,CAAC,GAAGnB,CAAC,CAAC;IAC3C;EACF;EACA,SAASu7E,oBAAoBA,CAACt6D,KAAK,EAAEq+B,UAAU,EAAEjc,OAAO,EAAE;IACxD,MAAMz7B,KAAK,GAAG,EAAE;IAChB,MAAM6yE,UAAU,GAAGx5D,KAAK,CAACy5D,YAAY,CAACl9E,MAAM;IAC5C,MAAM2tB,IAAI,GAAGlK,KAAK,CAACriB,OAAO;IAC1B,MAAM48E,KAAK,GAAGpB,qBAAqB,CAACjvD,IAAI,CAAC,GAAG,CAAC;IAC7C,MAAMswD,aAAa,GAAGx6D,KAAK,CAAC+5D,WAAW;IACvC,MAAMJ,eAAe,GAAGzvD,IAAI,CAACqxC,WAAW,CAACqe,iBAAiB,GAAGp5E,EAAE,GAAGg5E,UAAU,GAAG,CAAC;IAChF,KAAK,IAAIp9E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGo9E,UAAU,EAAEp9E,CAAC,EAAE,EAAE;MACnC,MAAMq+E,kBAAkB,GAAGz6D,KAAK,CAAC85D,gBAAgB,CAAC19E,CAAC,EAAEo+E,aAAa,GAAGD,KAAK,GAAGn4C,OAAO,CAAChmC,CAAC,CAAC,EAAEu9E,eAAe,CAAC;MACzG,MAAMh2E,KAAK,GAAGlD,IAAI,CAACc,KAAK,CAAC0B,SAAS,CAACiB,eAAe,CAACu2E,kBAAkB,CAAC92E,KAAK,GAAG5C,OAAO,CAAC,CAAC,CAAC;MACxF,MAAMZ,IAAI,GAAGk+C,UAAU,CAACjiD,CAAC,CAAC;MAC1B,MAAM2C,CAAC,GAAG27E,SAAS,CAACD,kBAAkB,CAAC17E,CAAC,EAAEoB,IAAI,CAAC4M,CAAC,EAAEpJ,KAAK,CAAC;MACxD,MAAMonB,SAAS,GAAG4vD,oBAAoB,CAACh3E,KAAK,CAAC;MAC7C,MAAM0E,IAAI,GAAGuyE,gBAAgB,CAACH,kBAAkB,CAAC57E,CAAC,EAAEsB,IAAI,CAAC0O,CAAC,EAAEkc,SAAS,CAAC;MACtEpkB,KAAK,CAAClH,IAAI,CAAC;QACTZ,CAAC,EAAE47E,kBAAkB,CAAC57E,CAAC;QACvBE,CAAC;QACDgsB,SAAS;QACT1iB,IAAI;QACJua,GAAG,EAAE7jB,CAAC;QACNuJ,KAAK,EAAED,IAAI,GAAGlI,IAAI,CAAC0O,CAAC;QACpBgU,MAAM,EAAE9jB,CAAC,GAAGoB,IAAI,CAAC4M;MACnB,CAAC,CAAC;IACJ;IACA,OAAOpG,KAAK;EACd;EACA,SAASg0E,oBAAoBA,CAACh3E,KAAK,EAAE;IACnC,IAAIA,KAAK,KAAK,CAAC,IAAIA,KAAK,KAAK,GAAG,EAAE;MAChC,OAAO,QAAQ;IACjB,CAAC,MAAM,IAAIA,KAAK,GAAG,GAAG,EAAE;MACtB,OAAO,MAAM;IACf;IACA,OAAO,OAAO;EAChB;EACA,SAASi3E,gBAAgBA,CAAC/7E,CAAC,EAAEgQ,CAAC,EAAE3G,KAAK,EAAE;IACrC,IAAIA,KAAK,KAAK,OAAO,EAAE;MACrBrJ,CAAC,IAAIgQ,CAAC;IACR,CAAC,MAAM,IAAI3G,KAAK,KAAK,QAAQ,EAAE;MAC7BrJ,CAAC,IAAKgQ,CAAC,GAAG,CAAE;IACd;IACA,OAAOhQ,CAAC;EACV;EACA,SAAS67E,SAASA,CAAC37E,CAAC,EAAEgO,CAAC,EAAEpJ,KAAK,EAAE;IAC9B,IAAIA,KAAK,KAAK,EAAE,IAAIA,KAAK,KAAK,GAAG,EAAE;MACjC5E,CAAC,IAAKgO,CAAC,GAAG,CAAE;IACd,CAAC,MAAM,IAAIpJ,KAAK,GAAG,GAAG,IAAIA,KAAK,GAAG,EAAE,EAAE;MACpC5E,CAAC,IAAIgO,CAAC;IACR;IACA,OAAOhO,CAAC;EACV;EACA,SAAS87E,eAAeA,CAAC76D,KAAK,EAAE41D,UAAU,EAAE;IAC1C,MAAM;MAAC12D,GAAG;MAAEvhB,OAAO,EAAE;QAAC49D;MAAW;IAAC,CAAC,GAAGv7C,KAAK;IAC3C,KAAK,IAAI5jB,CAAC,GAAGw5E,UAAU,GAAG,CAAC,EAAEx5E,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MACxC,MAAM4lD,WAAW,GAAGuZ,WAAW,CAACrtC,UAAU,CAAClO,KAAK,CAAC65D,oBAAoB,CAACz9E,CAAC,CAAC,CAAC;MACzE,MAAM49E,MAAM,GAAG/iD,MAAM,CAAC+qB,WAAW,CAACpjC,IAAI,CAAC;MACvC,MAAM;QAAC/f,CAAC;QAAEE,CAAC;QAAEgsB,SAAS;QAAE1iB,IAAI;QAAEua,GAAG;QAAEta,KAAK;QAAEua;MAAM,CAAC,GAAG7C,KAAK,CAACq6D,gBAAgB,CAACj+E,CAAC,CAAC;MAC7E,MAAM;QAACi7C;MAAa,CAAC,GAAG2K,WAAW;MACnC,IAAI,CAAC1nD,aAAa,CAAC+8C,aAAa,CAAC,EAAE;QACjC,MAAM8kB,YAAY,GAAGplC,aAAa,CAACirB,WAAW,CAACma,YAAY,CAAC;QAC5D,MAAM/5B,OAAO,GAAGpL,SAAS,CAACgrB,WAAW,CAAC1K,eAAe,CAAC;QACtDp4B,GAAG,CAAC4L,SAAS,GAAGusB,aAAa;QAC7B,MAAMyjC,YAAY,GAAGzyE,IAAI,GAAG+5B,OAAO,CAAC/5B,IAAI;QACxC,MAAM0yE,WAAW,GAAGn4D,GAAG,GAAGwf,OAAO,CAACxf,GAAG;QACrC,MAAMo4D,aAAa,GAAG1yE,KAAK,GAAGD,IAAI,GAAG+5B,OAAO,CAAC1f,KAAK;QAClD,MAAMu4D,cAAc,GAAGp4D,MAAM,GAAGD,GAAG,GAAGwf,OAAO,CAACzf,MAAM;QACpD,IAAIhoB,MAAM,CAAC8K,MAAM,CAAC02D,YAAY,CAAC,CAAC9U,IAAI,CAACzoD,CAAC,IAAIA,CAAC,KAAK,CAAC,CAAC,EAAE;UAClDsgB,GAAG,CAACkJ,SAAS,CAAC,CAAC;UACfsD,kBAAkB,CAACxM,GAAG,EAAE;YACtBrgB,CAAC,EAAEi8E,YAAY;YACf/7E,CAAC,EAAEg8E,WAAW;YACdlsE,CAAC,EAAEmsE,aAAa;YAChBjuE,CAAC,EAAEkuE,cAAc;YACjBjzD,MAAM,EAAEm0C;UACV,CAAC,CAAC;UACFj9C,GAAG,CAAC2J,IAAI,CAAC,CAAC;QACZ,CAAC,MAAM;UACL3J,GAAG,CAAC+jC,QAAQ,CAAC63B,YAAY,EAAEC,WAAW,EAAEC,aAAa,EAAEC,cAAc,CAAC;QACxE;MACF;MACAjxD,UAAU,CACR9K,GAAG,EACHc,KAAK,CAACy5D,YAAY,CAACr9E,CAAC,CAAC,EACrByC,CAAC,EACDE,CAAC,GAAIi7E,MAAM,CAACj7D,UAAU,GAAG,CAAE,EAC3Bi7D,MAAM,EACN;QACEx9D,KAAK,EAAEwlC,WAAW,CAACxlC,KAAK;QACxBuO,SAAS,EAAEA,SAAS;QACpBC,YAAY,EAAE;MAChB,CACF,CAAC;IACH;EACF;EACA,SAASkwD,cAAcA,CAACl7D,KAAK,EAAEgI,MAAM,EAAEszC,QAAQ,EAAEsa,UAAU,EAAE;IAC3D,MAAM;MAAC12D;IAAG,CAAC,GAAGc,KAAK;IACnB,IAAIs7C,QAAQ,EAAE;MACZp8C,GAAG,CAACoJ,GAAG,CAACtI,KAAK,CAAC66C,OAAO,EAAE76C,KAAK,CAAC86C,OAAO,EAAE9yC,MAAM,EAAE,CAAC,EAAEtnB,GAAG,CAAC;IACvD,CAAC,MAAM;MACL,IAAIg7D,aAAa,GAAG17C,KAAK,CAAC85D,gBAAgB,CAAC,CAAC,EAAE9xD,MAAM,CAAC;MACrD9I,GAAG,CAACsJ,MAAM,CAACkzC,aAAa,CAAC78D,CAAC,EAAE68D,aAAa,CAAC38D,CAAC,CAAC;MAC5C,KAAK,IAAI3C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGw5E,UAAU,EAAEx5E,CAAC,EAAE,EAAE;QACnCs/D,aAAa,GAAG17C,KAAK,CAAC85D,gBAAgB,CAAC19E,CAAC,EAAE4rB,MAAM,CAAC;QACjD9I,GAAG,CAACyJ,MAAM,CAAC+yC,aAAa,CAAC78D,CAAC,EAAE68D,aAAa,CAAC38D,CAAC,CAAC;MAC9C;IACF;EACF;EACA,SAASo8E,cAAcA,CAACn7D,KAAK,EAAEo7D,YAAY,EAAEpzD,MAAM,EAAE4tD,UAAU,EAAE;IAC/D,MAAM12D,GAAG,GAAGc,KAAK,CAACd,GAAG;IACrB,MAAMo8C,QAAQ,GAAG8f,YAAY,CAAC9f,QAAQ;IACtC,MAAM;MAAC9+C,KAAK;MAAEiO;IAAS,CAAC,GAAG2wD,YAAY;IACvC,IAAK,CAAC9f,QAAQ,IAAI,CAACsa,UAAU,IAAK,CAACp5D,KAAK,IAAI,CAACiO,SAAS,IAAIzC,MAAM,GAAG,CAAC,EAAE;MACpE;IACF;IACA9I,GAAG,CAAC4H,IAAI,CAAC,CAAC;IACV5H,GAAG,CAACsL,WAAW,GAAGhO,KAAK;IACvB0C,GAAG,CAACuL,SAAS,GAAGA,SAAS;IACzBvL,GAAG,CAACokC,WAAW,CAAC83B,YAAY,CAAC3/C,UAAU,CAAC;IACxCvc,GAAG,CAACqkC,cAAc,GAAG63B,YAAY,CAAC1/C,gBAAgB;IAClDxc,GAAG,CAACkJ,SAAS,CAAC,CAAC;IACf8yD,cAAc,CAACl7D,KAAK,EAAEgI,MAAM,EAAEszC,QAAQ,EAAEsa,UAAU,CAAC;IACnD12D,GAAG,CAACqJ,SAAS,CAAC,CAAC;IACfrJ,GAAG,CAAC6J,MAAM,CAAC,CAAC;IACZ7J,GAAG,CAACgI,OAAO,CAAC,CAAC;EACf;EACA,SAASm0D,uBAAuBA,CAAC55D,MAAM,EAAE1kB,KAAK,EAAEi1C,KAAK,EAAE;IACrD,OAAOra,aAAa,CAAClW,MAAM,EAAE;MAC3BuwB,KAAK;MACLj1C,KAAK;MACLrC,IAAI,EAAE;IACR,CAAC,CAAC;EACJ;EACA,MAAM4gF,iBAAiB,SAAS3D,eAAe,CAAC;IAC9CxtE,WAAWA,CAAC29B,GAAG,EAAE;MACf,KAAK,CAACA,GAAG,CAAC;MACV,IAAI,CAAC+yB,OAAO,GAAGr8D,SAAS;MACxB,IAAI,CAACs8D,OAAO,GAAGt8D,SAAS;MACxB,IAAI,CAACu7E,WAAW,GAAGv7E,SAAS;MAC5B,IAAI,CAACi7E,YAAY,GAAG,EAAE;MACtB,IAAI,CAACY,gBAAgB,GAAG,EAAE;IAC5B;IACA/9B,aAAaA,CAAA,EAAG;MACd,MAAMla,OAAO,GAAG,IAAI,CAAC+qC,QAAQ,GAAGn2C,SAAS,CAACmiD,qBAAqB,CAAC,IAAI,CAACx7E,OAAO,CAAC,GAAG,CAAC,CAAC;MAClF,MAAMkR,CAAC,GAAG,IAAI,CAAC6T,KAAK,GAAG,IAAI,CAAC0B,QAAQ,GAAGge,OAAO,CAAC1f,KAAK;MACpD,MAAM3V,CAAC,GAAG,IAAI,CAAC4V,MAAM,GAAG,IAAI,CAAC0B,SAAS,GAAG+d,OAAO,CAACzf,MAAM;MACvD,IAAI,CAACk4C,OAAO,GAAGp6D,IAAI,CAACkB,KAAK,CAAC,IAAI,CAAC0G,IAAI,GAAGwG,CAAC,GAAG,CAAC,GAAGuzB,OAAO,CAAC/5B,IAAI,CAAC;MAC3D,IAAI,CAACyyD,OAAO,GAAGr6D,IAAI,CAACkB,KAAK,CAAC,IAAI,CAACihB,GAAG,GAAG7V,CAAC,GAAG,CAAC,GAAGq1B,OAAO,CAACxf,GAAG,CAAC;MACzD,IAAI,CAACm3D,WAAW,GAAGt5E,IAAI,CAACkB,KAAK,CAAClB,IAAI,CAACoC,GAAG,CAACgM,CAAC,EAAE9B,CAAC,CAAC,GAAG,CAAC,CAAC;IACnD;IACA0vC,mBAAmBA,CAAA,EAAG;MACpB,MAAM;QAAC55C,GAAG;QAAEC;MAAG,CAAC,GAAG,IAAI,CAAC0uC,SAAS,CAAC,KAAK,CAAC;MACxC,IAAI,CAAC3uC,GAAG,GAAG5H,cAAc,CAAC4H,GAAG,CAAC,IAAI,CAACR,KAAK,CAACQ,GAAG,CAAC,GAAGA,GAAG,GAAG,CAAC;MACvD,IAAI,CAACC,GAAG,GAAG7H,cAAc,CAAC6H,GAAG,CAAC,IAAI,CAACT,KAAK,CAACS,GAAG,CAAC,GAAGA,GAAG,GAAG,CAAC;MACvD,IAAI,CAAC+0E,sBAAsB,CAAC,CAAC;IAC/B;IACAS,gBAAgBA,CAAA,EAAG;MACjB,OAAO73E,IAAI,CAACo4C,IAAI,CAAC,IAAI,CAACkhC,WAAW,GAAGZ,qBAAqB,CAAC,IAAI,CAACx7E,OAAO,CAAC,CAAC;IAC1E;IACAqgD,kBAAkBA,CAAC1I,KAAK,EAAE;MACxBqiC,eAAe,CAAC/8E,SAAS,CAACojD,kBAAkB,CAACljD,IAAI,CAAC,IAAI,EAAEw6C,KAAK,CAAC;MAC9D,IAAI,CAACmkC,YAAY,GAAG,IAAI,CAAC1oC,SAAS,CAAC,CAAC,CACjC7zC,GAAG,CAAC,CAAC3C,KAAK,EAAEwC,KAAK,KAAK;QACrB,MAAMi1C,KAAK,GAAGp2C,QAAQ,CAAC,IAAI,CAAC+B,OAAO,CAAC49D,WAAW,CAAC3/D,QAAQ,EAAE,CAACrB,KAAK,EAAEwC,KAAK,CAAC,EAAE,IAAI,CAAC;QAC/E,OAAOi1C,KAAK,IAAIA,KAAK,KAAK,CAAC,GAAGA,KAAK,GAAG,EAAE;MAC1C,CAAC,CAAC,CACD3iB,MAAM,CAAC,CAACzwB,CAAC,EAAExC,CAAC,KAAK,IAAI,CAACsO,KAAK,CAAC0lD,iBAAiB,CAACh0D,CAAC,CAAC,CAAC;IACtD;IACAihD,GAAGA,CAAA,EAAG;MACJ,MAAMnzB,IAAI,GAAG,IAAI,CAACvsB,OAAO;MACzB,IAAIusB,IAAI,CAACgZ,OAAO,IAAIhZ,IAAI,CAACqxC,WAAW,CAACr4B,OAAO,EAAE;QAC5Co2C,kBAAkB,CAAC,IAAI,CAAC;MAC1B,CAAC,MAAM;QACL,IAAI,CAACc,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACjC;IACF;IACAA,cAAcA,CAACmB,YAAY,EAAEC,aAAa,EAAEC,WAAW,EAAEC,cAAc,EAAE;MACvE,IAAI,CAAC7gB,OAAO,IAAIp6D,IAAI,CAACkB,KAAK,CAAC,CAAC45E,YAAY,GAAGC,aAAa,IAAI,CAAC,CAAC;MAC9D,IAAI,CAAC1gB,OAAO,IAAIr6D,IAAI,CAACkB,KAAK,CAAC,CAAC85E,WAAW,GAAGC,cAAc,IAAI,CAAC,CAAC;MAC9D,IAAI,CAAC3B,WAAW,IAAIt5E,IAAI,CAACoC,GAAG,CAAC,IAAI,CAACk3E,WAAW,GAAG,CAAC,EAAEt5E,IAAI,CAACqC,GAAG,CAACy4E,YAAY,EAAEC,aAAa,EAAEC,WAAW,EAAEC,cAAc,CAAC,CAAC;IACxH;IACA1gB,aAAaA,CAACj+D,KAAK,EAAE;MACnB,MAAM4+E,eAAe,GAAGj7E,GAAG,IAAI,IAAI,CAAC+4E,YAAY,CAACl9E,MAAM,IAAI,CAAC,CAAC;MAC7D,MAAMkhC,UAAU,GAAG,IAAI,CAAC9/B,OAAO,CAAC8/B,UAAU,IAAI,CAAC;MAC/C,OAAOv5B,eAAe,CAACnH,KAAK,GAAG4+E,eAAe,GAAG54E,SAAS,CAAC06B,UAAU,CAAC,CAAC;IACzE;IACA29B,6BAA6BA,CAAC7gE,KAAK,EAAE;MACnC,IAAID,aAAa,CAACC,KAAK,CAAC,EAAE;QACxB,OAAOg3C,GAAG;MACZ;MACA,MAAMqqC,aAAa,GAAG,IAAI,CAAC7B,WAAW,IAAI,IAAI,CAACj3E,GAAG,GAAG,IAAI,CAACD,GAAG,CAAC;MAC9D,IAAI,IAAI,CAAClF,OAAO,CAACxB,OAAO,EAAE;QACxB,OAAO,CAAC,IAAI,CAAC2G,GAAG,GAAGvI,KAAK,IAAIqhF,aAAa;MAC3C;MACA,OAAO,CAACrhF,KAAK,GAAG,IAAI,CAACsI,GAAG,IAAI+4E,aAAa;IAC3C;IACAC,6BAA6BA,CAACh4E,QAAQ,EAAE;MACtC,IAAIvJ,aAAa,CAACuJ,QAAQ,CAAC,EAAE;QAC3B,OAAO0tC,GAAG;MACZ;MACA,MAAMuqC,cAAc,GAAGj4E,QAAQ,IAAI,IAAI,CAACk2E,WAAW,IAAI,IAAI,CAACj3E,GAAG,GAAG,IAAI,CAACD,GAAG,CAAC,CAAC;MAC5E,OAAO,IAAI,CAAClF,OAAO,CAACxB,OAAO,GAAG,IAAI,CAAC2G,GAAG,GAAGg5E,cAAc,GAAG,IAAI,CAACj5E,GAAG,GAAGi5E,cAAc;IACrF;IACAjC,oBAAoBA,CAAC98E,KAAK,EAAE;MAC1B,MAAMw+D,WAAW,GAAG,IAAI,CAACke,YAAY,IAAI,EAAE;MAC3C,IAAI18E,KAAK,IAAI,CAAC,IAAIA,KAAK,GAAGw+D,WAAW,CAACh/D,MAAM,EAAE;QAC5C,MAAMw/E,UAAU,GAAGxgB,WAAW,CAACx+D,KAAK,CAAC;QACrC,OAAOs+E,uBAAuB,CAAC,IAAI,CAAC7zD,UAAU,CAAC,CAAC,EAAEzqB,KAAK,EAAEg/E,UAAU,CAAC;MACtE;IACF;IACAjC,gBAAgBA,CAAC/8E,KAAK,EAAEi/E,kBAAkB,EAAErC,eAAe,GAAG,CAAC,EAAE;MAC/D,MAAMh2E,KAAK,GAAG,IAAI,CAACq3D,aAAa,CAACj+D,KAAK,CAAC,GAAGgE,OAAO,GAAG44E,eAAe;MACnE,OAAO;QACL96E,CAAC,EAAE4B,IAAI,CAACioB,GAAG,CAAC/kB,KAAK,CAAC,GAAGq4E,kBAAkB,GAAG,IAAI,CAACnhB,OAAO;QACtD97D,CAAC,EAAE0B,IAAI,CAACgoB,GAAG,CAAC9kB,KAAK,CAAC,GAAGq4E,kBAAkB,GAAG,IAAI,CAAClhB,OAAO;QACtDn3D;MACF,CAAC;IACH;IACAg4D,wBAAwBA,CAAC5+D,KAAK,EAAExC,KAAK,EAAE;MACrC,OAAO,IAAI,CAACu/E,gBAAgB,CAAC/8E,KAAK,EAAE,IAAI,CAACq+D,6BAA6B,CAAC7gE,KAAK,CAAC,CAAC;IAChF;IACA0hF,eAAeA,CAACl/E,KAAK,EAAE;MACrB,OAAO,IAAI,CAAC4+D,wBAAwB,CAAC5+D,KAAK,IAAI,CAAC,EAAE,IAAI,CAAC2jD,YAAY,CAAC,CAAC,CAAC;IACvE;IACAw7B,qBAAqBA,CAACn/E,KAAK,EAAE;MAC3B,MAAM;QAACsL,IAAI;QAAEua,GAAG;QAAEta,KAAK;QAAEua;MAAM,CAAC,GAAG,IAAI,CAACw3D,gBAAgB,CAACt9E,KAAK,CAAC;MAC/D,OAAO;QACLsL,IAAI;QACJua,GAAG;QACHta,KAAK;QACLua;MACF,CAAC;IACH;IACAmgC,cAAcA,CAAA,EAAG;MACf,MAAM;QAAC7kC,eAAe;QAAE83B,IAAI,EAAE;UAACqlB;QAAQ;MAAC,CAAC,GAAG,IAAI,CAAC39D,OAAO;MACxD,IAAIwgB,eAAe,EAAE;QACnB,MAAMe,GAAG,GAAG,IAAI,CAACA,GAAG;QACpBA,GAAG,CAAC4H,IAAI,CAAC,CAAC;QACV5H,GAAG,CAACkJ,SAAS,CAAC,CAAC;QACf8yD,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC9f,6BAA6B,CAAC,IAAI,CAACwc,SAAS,CAAC,EAAEtc,QAAQ,EAAE,IAAI,CAACme,YAAY,CAACl9E,MAAM,CAAC;QAC5G2iB,GAAG,CAACqJ,SAAS,CAAC,CAAC;QACfrJ,GAAG,CAAC4L,SAAS,GAAG3M,eAAe;QAC/Be,GAAG,CAAC2J,IAAI,CAAC,CAAC;QACV3J,GAAG,CAACgI,OAAO,CAAC,CAAC;MACf;IACF;IACAk8B,QAAQA,CAAA,EAAG;MACT,MAAMlkC,GAAG,GAAG,IAAI,CAACA,GAAG;MACpB,MAAMgL,IAAI,GAAG,IAAI,CAACvsB,OAAO;MACzB,MAAM;QAAC09D,UAAU;QAAEplB;MAAI,CAAC,GAAG/rB,IAAI;MAC/B,MAAM0rD,UAAU,GAAG,IAAI,CAAC6D,YAAY,CAACl9E,MAAM;MAC3C,IAAIH,CAAC,EAAE45C,MAAM,EAAEvZ,QAAQ;MACvB,IAAIvS,IAAI,CAACqxC,WAAW,CAACr4B,OAAO,EAAE;QAC5B23C,eAAe,CAAC,IAAI,EAAEjF,UAAU,CAAC;MACnC;MACA,IAAI3/B,IAAI,CAAC/S,OAAO,EAAE;QAChB,IAAI,CAACoS,KAAK,CAACpvC,OAAO,CAAC,CAACyF,IAAI,EAAE5O,KAAK,KAAK;UAClC,IAAIA,KAAK,KAAK,CAAC,EAAE;YACfi5C,MAAM,GAAG,IAAI,CAAColB,6BAA6B,CAACzvD,IAAI,CAACpR,KAAK,CAAC;YACvD,MAAMynD,WAAW,GAAG/L,IAAI,CAAC/nB,UAAU,CAAC,IAAI,CAAC1G,UAAU,CAACzqB,KAAK,GAAG,CAAC,CAAC,CAAC;YAC/Do+E,cAAc,CAAC,IAAI,EAAEn5B,WAAW,EAAEhM,MAAM,EAAE4/B,UAAU,CAAC;UACvD;QACF,CAAC,CAAC;MACJ;MACA,IAAIva,UAAU,CAACn4B,OAAO,EAAE;QACtBhkB,GAAG,CAAC4H,IAAI,CAAC,CAAC;QACV,KAAK1qB,CAAC,GAAGw5E,UAAU,GAAG,CAAC,EAAEx5E,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;UACpC,MAAM4lD,WAAW,GAAGqZ,UAAU,CAACntC,UAAU,CAAC,IAAI,CAAC2rD,oBAAoB,CAACz9E,CAAC,CAAC,CAAC;UACvE,MAAM;YAACogB,KAAK;YAAEiO;UAAS,CAAC,GAAGu3B,WAAW;UACtC,IAAI,CAACv3B,SAAS,IAAI,CAACjO,KAAK,EAAE;YACxB;UACF;UACA0C,GAAG,CAACuL,SAAS,GAAGA,SAAS;UACzBvL,GAAG,CAACsL,WAAW,GAAGhO,KAAK;UACvB0C,GAAG,CAACokC,WAAW,CAACtB,WAAW,CAACvmB,UAAU,CAAC;UACvCvc,GAAG,CAACqkC,cAAc,GAAGvB,WAAW,CAACtmB,gBAAgB;UACjDsa,MAAM,GAAG,IAAI,CAAColB,6BAA6B,CAAClxC,IAAI,CAACorB,KAAK,CAACn5C,OAAO,GAAG,IAAI,CAAC0G,GAAG,GAAG,IAAI,CAACC,GAAG,CAAC;UACrF25B,QAAQ,GAAG,IAAI,CAACq9C,gBAAgB,CAAC19E,CAAC,EAAE45C,MAAM,CAAC;UAC3C92B,GAAG,CAACkJ,SAAS,CAAC,CAAC;UACflJ,GAAG,CAACsJ,MAAM,CAAC,IAAI,CAACqyC,OAAO,EAAE,IAAI,CAACC,OAAO,CAAC;UACtC57C,GAAG,CAACyJ,MAAM,CAAC8T,QAAQ,CAAC59B,CAAC,EAAE49B,QAAQ,CAAC19B,CAAC,CAAC;UAClCmgB,GAAG,CAAC6J,MAAM,CAAC,CAAC;QACd;QACA7J,GAAG,CAACgI,OAAO,CAAC,CAAC;MACf;IACF;IACAgvB,UAAUA,CAAA,EAAG,CAAC;IACduN,UAAUA,CAAA,EAAG;MACX,MAAMvkC,GAAG,GAAG,IAAI,CAACA,GAAG;MACpB,MAAMgL,IAAI,GAAG,IAAI,CAACvsB,OAAO;MACzB,MAAM45C,QAAQ,GAAGrtB,IAAI,CAACorB,KAAK;MAC3B,IAAI,CAACiC,QAAQ,CAACrU,OAAO,EAAE;QACrB;MACF;MACA,MAAMzF,UAAU,GAAG,IAAI,CAACu9B,aAAa,CAAC,CAAC,CAAC;MACxC,IAAIhlB,MAAM,EAAEtzB,KAAK;MACjBxD,GAAG,CAAC4H,IAAI,CAAC,CAAC;MACV5H,GAAG,CAACgJ,SAAS,CAAC,IAAI,CAAC2yC,OAAO,EAAE,IAAI,CAACC,OAAO,CAAC;MACzC57C,GAAG,CAACvP,MAAM,CAAC8tB,UAAU,CAAC;MACtBve,GAAG,CAAC6L,SAAS,GAAG,QAAQ;MACxB7L,GAAG,CAAC8L,YAAY,GAAG,QAAQ;MAC3B,IAAI,CAACsqB,KAAK,CAACpvC,OAAO,CAAC,CAACyF,IAAI,EAAE5O,KAAK,KAAK;QAClC,IAAIA,KAAK,KAAK,CAAC,IAAI,CAACmtB,IAAI,CAAC/tB,OAAO,EAAE;UAChC;QACF;QACA,MAAM6lD,WAAW,GAAGzK,QAAQ,CAACrpB,UAAU,CAAC,IAAI,CAAC1G,UAAU,CAACzqB,KAAK,CAAC,CAAC;QAC/D,MAAMijD,QAAQ,GAAG/oB,MAAM,CAAC+qB,WAAW,CAACpjC,IAAI,CAAC;QACzCo3B,MAAM,GAAG,IAAI,CAAColB,6BAA6B,CAAC,IAAI,CAAC9lB,KAAK,CAACv4C,KAAK,CAAC,CAACxC,KAAK,CAAC;QACpE,IAAIynD,WAAW,CAAC5K,iBAAiB,EAAE;UACjCl4B,GAAG,CAACN,IAAI,GAAGohC,QAAQ,CAACz5B,MAAM;UAC1B7D,KAAK,GAAGxD,GAAG,CAACuH,WAAW,CAAC9a,IAAI,CAACqmC,KAAK,CAAC,CAACtvB,KAAK;UACzCxD,GAAG,CAAC4L,SAAS,GAAGk3B,WAAW,CAAC3K,aAAa;UACzC,MAAMjV,OAAO,GAAGpL,SAAS,CAACgrB,WAAW,CAAC1K,eAAe,CAAC;UACtDp4B,GAAG,CAAC+jC,QAAQ,CACV,CAACvgC,KAAK,GAAG,CAAC,GAAG0f,OAAO,CAAC/5B,IAAI,EACzB,CAAC2tC,MAAM,GAAGgK,QAAQ,CAAC7/C,IAAI,GAAG,CAAC,GAAGiiC,OAAO,CAACxf,GAAG,EACzCF,KAAK,GAAG0f,OAAO,CAAC1f,KAAK,EACrBs9B,QAAQ,CAAC7/C,IAAI,GAAGiiC,OAAO,CAACzf,MAC1B,CAAC;QACH;QACAqH,UAAU,CAAC9K,GAAG,EAAEvT,IAAI,CAACqmC,KAAK,EAAE,CAAC,EAAE,CAACgE,MAAM,EAAEgK,QAAQ,EAAE;UAChDxjC,KAAK,EAAEwlC,WAAW,CAACxlC;QACrB,CAAC,CAAC;MACJ,CAAC,CAAC;MACF0C,GAAG,CAACgI,OAAO,CAAC,CAAC;IACf;IACAw8B,SAASA,CAAA,EAAG,CAAC;EACf;EACA43B,iBAAiB,CAACjhF,EAAE,GAAG,cAAc;EACrCihF,iBAAiB,CAACt6D,QAAQ,GAAG;IAC3BkiB,OAAO,EAAE,IAAI;IACbi5C,OAAO,EAAE,IAAI;IACb1/C,QAAQ,EAAE,WAAW;IACrB4+B,UAAU,EAAE;MACVn4B,OAAO,EAAE,IAAI;MACbzY,SAAS,EAAE,CAAC;MACZgR,UAAU,EAAE,EAAE;MACdC,gBAAgB,EAAE;IACpB,CAAC;IACDua,IAAI,EAAE;MACJqlB,QAAQ,EAAE;IACZ,CAAC;IACD79B,UAAU,EAAE,CAAC;IACb6X,KAAK,EAAE;MACL8B,iBAAiB,EAAE,IAAI;MACvBx7C,QAAQ,EAAEm6C,KAAK,CAACZ,UAAU,CAACC;IAC7B,CAAC;IACDmmB,WAAW,EAAE;MACXlkB,aAAa,EAAE74C,SAAS;MACxB84C,eAAe,EAAE,CAAC;MAClBpU,OAAO,EAAE,IAAI;MACbtkB,IAAI,EAAE;QACJze,IAAI,EAAE;MACR,CAAC;MACDvE,QAAQA,CAACo2C,KAAK,EAAE;QACd,OAAOA,KAAK;MACd,CAAC;MACD5P,OAAO,EAAE,CAAC;MACVw3C,iBAAiB,EAAE;IACrB;EACF,CAAC;EACD0B,iBAAiB,CAACpmC,aAAa,GAAG;IAChC,kBAAkB,EAAE,aAAa;IACjC,mBAAmB,EAAE,OAAO;IAC5B,aAAa,EAAE;EACjB,CAAC;EACDomC,iBAAiB,CAAC19D,WAAW,GAAG;IAC9By9C,UAAU,EAAE;MACVj6C,SAAS,EAAE;IACb;EACF,CAAC;EAED,MAAMg7D,SAAS,GAAG;IAChBC,WAAW,EAAE;MAACC,MAAM,EAAE,IAAI;MAAEn8E,IAAI,EAAE,CAAC;MAAEo8E,KAAK,EAAE;IAAI,CAAC;IACjDC,MAAM,EAAE;MAACF,MAAM,EAAE,IAAI;MAAEn8E,IAAI,EAAE,IAAI;MAAEo8E,KAAK,EAAE;IAAE,CAAC;IAC7CE,MAAM,EAAE;MAACH,MAAM,EAAE,IAAI;MAAEn8E,IAAI,EAAE,KAAK;MAAEo8E,KAAK,EAAE;IAAE,CAAC;IAC9CG,IAAI,EAAE;MAACJ,MAAM,EAAE,IAAI;MAAEn8E,IAAI,EAAE,OAAO;MAAEo8E,KAAK,EAAE;IAAE,CAAC;IAC9CI,GAAG,EAAE;MAACL,MAAM,EAAE,IAAI;MAAEn8E,IAAI,EAAE,QAAQ;MAAEo8E,KAAK,EAAE;IAAE,CAAC;IAC9CK,IAAI,EAAE;MAACN,MAAM,EAAE,KAAK;MAAEn8E,IAAI,EAAE,SAAS;MAAEo8E,KAAK,EAAE;IAAC,CAAC;IAChDM,KAAK,EAAE;MAACP,MAAM,EAAE,IAAI;MAAEn8E,IAAI,EAAE,OAAO;MAAEo8E,KAAK,EAAE;IAAE,CAAC;IAC/CO,OAAO,EAAE;MAACR,MAAM,EAAE,KAAK;MAAEn8E,IAAI,EAAE,OAAO;MAAEo8E,KAAK,EAAE;IAAC,CAAC;IACjDQ,IAAI,EAAE;MAACT,MAAM,EAAE,IAAI;MAAEn8E,IAAI,EAAE;IAAQ;EACrC,CAAC;EACD,MAAM68E,KAAK,GAAIriF,MAAM,CAAC2B,IAAI,CAAC8/E,SAAS,CAAE;EACtC,SAASa,MAAMA,CAACh9E,CAAC,EAAEC,CAAC,EAAE;IACpB,OAAOD,CAAC,GAAGC,CAAC;EACd;EACA,SAASgwB,KAAKA,CAAClQ,KAAK,EAAE/D,KAAK,EAAE;IAC3B,IAAI3hB,aAAa,CAAC2hB,KAAK,CAAC,EAAE;MACxB,OAAO,IAAI;IACb;IACA,MAAMihE,OAAO,GAAGl9D,KAAK,CAACm9D,QAAQ;IAC9B,MAAM;MAACC,MAAM;MAAE77E,KAAK;MAAE87E;IAAU,CAAC,GAAGr9D,KAAK,CAACs9D,UAAU;IACpD,IAAI/iF,KAAK,GAAG0hB,KAAK;IACjB,IAAI,OAAOmhE,MAAM,KAAK,UAAU,EAAE;MAChC7iF,KAAK,GAAG6iF,MAAM,CAAC7iF,KAAK,CAAC;IACvB;IACA,IAAI,CAACU,cAAc,CAACV,KAAK,CAAC,EAAE;MAC1BA,KAAK,GAAG,OAAO6iF,MAAM,KAAK,QAAQ,GAC9BF,OAAO,CAAChtD,KAAK,CAAC31B,KAAK,EAAE6iF,MAAM,CAAC,GAC5BF,OAAO,CAAChtD,KAAK,CAAC31B,KAAK,CAAC;IAC1B;IACA,IAAIA,KAAK,KAAK,IAAI,EAAE;MAClB,OAAO,IAAI;IACb;IACA,IAAIgH,KAAK,EAAE;MACThH,KAAK,GAAGgH,KAAK,KAAK,MAAM,KAAKY,QAAQ,CAACk7E,UAAU,CAAC,IAAIA,UAAU,KAAK,IAAI,CAAC,GACrEH,OAAO,CAAC/qB,OAAO,CAAC53D,KAAK,EAAE,SAAS,EAAE8iF,UAAU,CAAC,GAC7CH,OAAO,CAAC/qB,OAAO,CAAC53D,KAAK,EAAEgH,KAAK,CAAC;IACnC;IACA,OAAO,CAAChH,KAAK;EACf;EACA,SAASgjF,yBAAyBA,CAACC,OAAO,EAAE36E,GAAG,EAAEC,GAAG,EAAE26E,QAAQ,EAAE;IAC9D,MAAM9gF,IAAI,GAAGqgF,KAAK,CAACzgF,MAAM;IACzB,KAAK,IAAIH,CAAC,GAAG4gF,KAAK,CAACv/E,OAAO,CAAC+/E,OAAO,CAAC,EAAEphF,CAAC,GAAGO,IAAI,GAAG,CAAC,EAAE,EAAEP,CAAC,EAAE;MACtD,MAAMshF,QAAQ,GAAGtB,SAAS,CAACY,KAAK,CAAC5gF,CAAC,CAAC,CAAC;MACpC,MAAM6jC,MAAM,GAAGy9C,QAAQ,CAACnB,KAAK,GAAGmB,QAAQ,CAACnB,KAAK,GAAGrhF,MAAM,CAACg9E,gBAAgB;MACxE,IAAIwF,QAAQ,CAACpB,MAAM,IAAI77E,IAAI,CAACo4C,IAAI,CAAC,CAAC/1C,GAAG,GAAGD,GAAG,KAAKo9B,MAAM,GAAGy9C,QAAQ,CAACv9E,IAAI,CAAC,CAAC,IAAIs9E,QAAQ,EAAE;QACpF,OAAOT,KAAK,CAAC5gF,CAAC,CAAC;MACjB;IACF;IACA,OAAO4gF,KAAK,CAACrgF,IAAI,GAAG,CAAC,CAAC;EACxB;EACA,SAASghF,0BAA0BA,CAAC39D,KAAK,EAAEk+B,QAAQ,EAAEs/B,OAAO,EAAE36E,GAAG,EAAEC,GAAG,EAAE;IACtE,KAAK,IAAI1G,CAAC,GAAG4gF,KAAK,CAACzgF,MAAM,GAAG,CAAC,EAAEH,CAAC,IAAI4gF,KAAK,CAACv/E,OAAO,CAAC+/E,OAAO,CAAC,EAAEphF,CAAC,EAAE,EAAE;MAC/D,MAAM81D,IAAI,GAAG8qB,KAAK,CAAC5gF,CAAC,CAAC;MACrB,IAAIggF,SAAS,CAAClqB,IAAI,CAAC,CAACoqB,MAAM,IAAIt8D,KAAK,CAACm9D,QAAQ,CAACnkC,IAAI,CAACl2C,GAAG,EAAED,GAAG,EAAEqvD,IAAI,CAAC,IAAIhU,QAAQ,GAAG,CAAC,EAAE;QACjF,OAAOgU,IAAI;MACb;IACF;IACA,OAAO8qB,KAAK,CAACQ,OAAO,GAAGR,KAAK,CAACv/E,OAAO,CAAC+/E,OAAO,CAAC,GAAG,CAAC,CAAC;EACpD;EACA,SAASI,kBAAkBA,CAAC1rB,IAAI,EAAE;IAChC,KAAK,IAAI91D,CAAC,GAAG4gF,KAAK,CAACv/E,OAAO,CAACy0D,IAAI,CAAC,GAAG,CAAC,EAAEv1D,IAAI,GAAGqgF,KAAK,CAACzgF,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;MACxE,IAAIggF,SAAS,CAACY,KAAK,CAAC5gF,CAAC,CAAC,CAAC,CAACkgF,MAAM,EAAE;QAC9B,OAAOU,KAAK,CAAC5gF,CAAC,CAAC;MACjB;IACF;EACF;EACA,SAASyhF,OAAOA,CAACvoC,KAAK,EAAEwoC,IAAI,EAAEC,UAAU,EAAE;IACxC,IAAI,CAACA,UAAU,EAAE;MACfzoC,KAAK,CAACwoC,IAAI,CAAC,GAAG,IAAI;IACpB,CAAC,MAAM,IAAIC,UAAU,CAACxhF,MAAM,EAAE;MAC5B,MAAM;QAAC4I,EAAE;QAAED;MAAE,CAAC,GAAGH,OAAO,CAACg5E,UAAU,EAAED,IAAI,CAAC;MAC1C,MAAM9rB,SAAS,GAAG+rB,UAAU,CAAC54E,EAAE,CAAC,IAAI24E,IAAI,GAAGC,UAAU,CAAC54E,EAAE,CAAC,GAAG44E,UAAU,CAAC74E,EAAE,CAAC;MAC1EowC,KAAK,CAAC0c,SAAS,CAAC,GAAG,IAAI;IACzB;EACF;EACA,SAASgsB,aAAaA,CAACh+D,KAAK,EAAEs1B,KAAK,EAAEp4C,GAAG,EAAE+gF,SAAS,EAAE;IACnD,MAAMf,OAAO,GAAGl9D,KAAK,CAACm9D,QAAQ;IAC9B,MAAMplC,KAAK,GAAG,CAACmlC,OAAO,CAAC/qB,OAAO,CAAC7c,KAAK,CAAC,CAAC,CAAC,CAAC/6C,KAAK,EAAE0jF,SAAS,CAAC;IACzD,MAAM34E,IAAI,GAAGgwC,KAAK,CAACA,KAAK,CAAC/4C,MAAM,GAAG,CAAC,CAAC,CAAChC,KAAK;IAC1C,IAAI28C,KAAK,EAAEn6C,KAAK;IAChB,KAAKm6C,KAAK,GAAGa,KAAK,EAAEb,KAAK,IAAI5xC,IAAI,EAAE4xC,KAAK,GAAG,CAACgmC,OAAO,CAACp2E,GAAG,CAACowC,KAAK,EAAE,CAAC,EAAE+mC,SAAS,CAAC,EAAE;MAC5ElhF,KAAK,GAAGG,GAAG,CAACg6C,KAAK,CAAC;MAClB,IAAIn6C,KAAK,IAAI,CAAC,EAAE;QACdu4C,KAAK,CAACv4C,KAAK,CAAC,CAACm6C,KAAK,GAAG,IAAI;MAC3B;IACF;IACA,OAAO5B,KAAK;EACd;EACA,SAAS4oC,mBAAmBA,CAACl+D,KAAK,EAAEva,MAAM,EAAEw4E,SAAS,EAAE;IACrD,MAAM3oC,KAAK,GAAG,EAAE;IAChB,MAAMp4C,GAAG,GAAG,CAAC,CAAC;IACd,MAAMP,IAAI,GAAG8I,MAAM,CAAClJ,MAAM;IAC1B,IAAIH,CAAC,EAAE7B,KAAK;IACZ,KAAK6B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;MACzB7B,KAAK,GAAGkL,MAAM,CAACrJ,CAAC,CAAC;MACjBc,GAAG,CAAC3C,KAAK,CAAC,GAAG6B,CAAC;MACdk5C,KAAK,CAAC71C,IAAI,CAAC;QACTlF,KAAK;QACL28C,KAAK,EAAE;MACT,CAAC,CAAC;IACJ;IACA,OAAQv6C,IAAI,KAAK,CAAC,IAAI,CAACshF,SAAS,GAAI3oC,KAAK,GAAG0oC,aAAa,CAACh+D,KAAK,EAAEs1B,KAAK,EAAEp4C,GAAG,EAAE+gF,SAAS,CAAC;EACzF;EACA,MAAME,SAAS,SAAS3jC,KAAK,CAAC;IAC5BrwC,WAAWA,CAACwsB,KAAK,EAAE;MACjB,KAAK,CAACA,KAAK,CAAC;MACZ,IAAI,CAAC+kB,MAAM,GAAG;QACZt1B,IAAI,EAAE,EAAE;QACR0qB,MAAM,EAAE,EAAE;QACVvG,GAAG,EAAE;MACP,CAAC;MACD,IAAI,CAAC6zC,KAAK,GAAG,KAAK;MAClB,IAAI,CAACC,UAAU,GAAG7/E,SAAS;MAC3B,IAAI,CAAC8/E,QAAQ,GAAG,CAAC,CAAC;MAClB,IAAI,CAACC,WAAW,GAAG,KAAK;MACxB,IAAI,CAACjB,UAAU,GAAG9+E,SAAS;IAC7B;IACAo9C,IAAIA,CAAC0R,SAAS,EAAEpjC,IAAI,EAAE;MACpB,MAAM4zD,IAAI,GAAGxwB,SAAS,CAACwwB,IAAI,KAAKxwB,SAAS,CAACwwB,IAAI,GAAG,CAAC,CAAC,CAAC;MACpD,MAAMZ,OAAO,GAAG,IAAI,CAACC,QAAQ,GAAG,IAAI5qB,SAAS,CAACC,KAAK,CAAClF,SAAS,CAACkxB,QAAQ,CAAC5zE,IAAI,CAAC;MAC5EsyE,OAAO,CAACthC,IAAI,CAAC1xB,IAAI,CAAC;MAClBjsB,OAAO,CAAC6/E,IAAI,CAACW,cAAc,EAAEvB,OAAO,CAACnrB,OAAO,CAAC,CAAC,CAAC;MAC/C,IAAI,CAACurB,UAAU,GAAG;QAChBF,MAAM,EAAEU,IAAI,CAACV,MAAM;QACnB77E,KAAK,EAAEu8E,IAAI,CAACv8E,KAAK;QACjB87E,UAAU,EAAES,IAAI,CAACT;MACnB,CAAC;MACD,KAAK,CAACzhC,IAAI,CAAC0R,SAAS,CAAC;MACrB,IAAI,CAACixB,WAAW,GAAGr0D,IAAI,CAACw0D,UAAU;IACpC;IACAxuD,KAAKA,CAAC8c,GAAG,EAAEjwC,KAAK,EAAE;MAChB,IAAIiwC,GAAG,KAAKxuC,SAAS,EAAE;QACrB,OAAO,IAAI;MACb;MACA,OAAO0xB,KAAK,CAAC,IAAI,EAAE8c,GAAG,CAAC;IACzB;IACAjK,YAAYA,CAAA,EAAG;MACb,KAAK,CAACA,YAAY,CAAC,CAAC;MACpB,IAAI,CAAC2Y,MAAM,GAAG;QACZt1B,IAAI,EAAE,EAAE;QACR0qB,MAAM,EAAE,EAAE;QACVvG,GAAG,EAAE;MACP,CAAC;IACH;IACAkS,mBAAmBA,CAAA,EAAG;MACpB,MAAM9+C,OAAO,GAAG,IAAI,CAACA,OAAO;MAC5B,MAAMu/E,OAAO,GAAG,IAAI,CAACC,QAAQ;MAC7B,MAAMjrB,IAAI,GAAGv0D,OAAO,CAACmgF,IAAI,CAAC5rB,IAAI,IAAI,KAAK;MACvC,IAAI;QAACrvD,GAAG;QAAEC,GAAG;QAAEqG,UAAU;QAAEC;MAAU,CAAC,GAAG,IAAI,CAACC,aAAa,CAAC,CAAC;MAC7D,SAASs1E,YAAYA,CAACvlD,MAAM,EAAE;QAC5B,IAAI,CAACjwB,UAAU,IAAI,CAAC9G,KAAK,CAAC+2B,MAAM,CAACv2B,GAAG,CAAC,EAAE;UACrCA,GAAG,GAAGpC,IAAI,CAACoC,GAAG,CAACA,GAAG,EAAEu2B,MAAM,CAACv2B,GAAG,CAAC;QACjC;QACA,IAAI,CAACuG,UAAU,IAAI,CAAC/G,KAAK,CAAC+2B,MAAM,CAACt2B,GAAG,CAAC,EAAE;UACrCA,GAAG,GAAGrC,IAAI,CAACqC,GAAG,CAACA,GAAG,EAAEs2B,MAAM,CAACt2B,GAAG,CAAC;QACjC;MACF;MACA,IAAI,CAACqG,UAAU,IAAI,CAACC,UAAU,EAAE;QAC9Bu1E,YAAY,CAAC,IAAI,CAACC,eAAe,CAAC,CAAC,CAAC;QACpC,IAAIjhF,OAAO,CAACy7B,MAAM,KAAK,OAAO,IAAIz7B,OAAO,CAAC23C,KAAK,CAACr4C,MAAM,KAAK,QAAQ,EAAE;UACnE0hF,YAAY,CAAC,IAAI,CAACntC,SAAS,CAAC,KAAK,CAAC,CAAC;QACrC;MACF;MACA3uC,GAAG,GAAG5H,cAAc,CAAC4H,GAAG,CAAC,IAAI,CAACR,KAAK,CAACQ,GAAG,CAAC,GAAGA,GAAG,GAAG,CAACq6E,OAAO,CAAC/qB,OAAO,CAAC/mD,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE6mD,IAAI,CAAC;MACnFpvD,GAAG,GAAG7H,cAAc,CAAC6H,GAAG,CAAC,IAAI,CAACT,KAAK,CAACS,GAAG,CAAC,GAAGA,GAAG,GAAG,CAACo6E,OAAO,CAAC7qB,KAAK,CAACjnD,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE6mD,IAAI,CAAC,GAAG,CAAC;MACrF,IAAI,CAACrvD,GAAG,GAAGpC,IAAI,CAACoC,GAAG,CAACA,GAAG,EAAEC,GAAG,GAAG,CAAC,CAAC;MACjC,IAAI,CAACA,GAAG,GAAGrC,IAAI,CAACqC,GAAG,CAACD,GAAG,GAAG,CAAC,EAAEC,GAAG,CAAC;IACnC;IACA87E,eAAeA,CAAA,EAAG;MAChB,MAAMxvD,GAAG,GAAG,IAAI,CAACyvD,kBAAkB,CAAC,CAAC;MACrC,IAAIh8E,GAAG,GAAG3H,MAAM,CAAC2F,iBAAiB;MAClC,IAAIiC,GAAG,GAAG5H,MAAM,CAACywC,iBAAiB;MAClC,IAAIvc,GAAG,CAAC7yB,MAAM,EAAE;QACdsG,GAAG,GAAGusB,GAAG,CAAC,CAAC,CAAC;QACZtsB,GAAG,GAAGssB,GAAG,CAACA,GAAG,CAAC7yB,MAAM,GAAG,CAAC,CAAC;MAC3B;MACA,OAAO;QAACsG,GAAG;QAAEC;MAAG,CAAC;IACnB;IACA85C,UAAUA,CAAA,EAAG;MACX,MAAMj/C,OAAO,GAAG,IAAI,CAACA,OAAO;MAC5B,MAAMmhF,QAAQ,GAAGnhF,OAAO,CAACmgF,IAAI;MAC7B,MAAMvmC,QAAQ,GAAG55C,OAAO,CAAC23C,KAAK;MAC9B,MAAMyoC,UAAU,GAAGxmC,QAAQ,CAACt6C,MAAM,KAAK,QAAQ,GAAG,IAAI,CAAC4hF,kBAAkB,CAAC,CAAC,GAAG,IAAI,CAACE,SAAS,CAAC,CAAC;MAC9F,IAAIphF,OAAO,CAACy7B,MAAM,KAAK,OAAO,IAAI2kD,UAAU,CAACxhF,MAAM,EAAE;QACnD,IAAI,CAACsG,GAAG,GAAG,IAAI,CAACw4C,QAAQ,IAAI0iC,UAAU,CAAC,CAAC,CAAC;QACzC,IAAI,CAACj7E,GAAG,GAAG,IAAI,CAACs4C,QAAQ,IAAI2iC,UAAU,CAACA,UAAU,CAACxhF,MAAM,GAAG,CAAC,CAAC;MAC/D;MACA,MAAMsG,GAAG,GAAG,IAAI,CAACA,GAAG;MACpB,MAAMC,GAAG,GAAG,IAAI,CAACA,GAAG;MACpB,MAAMwyC,KAAK,GAAG9vC,cAAc,CAACu4E,UAAU,EAAEl7E,GAAG,EAAEC,GAAG,CAAC;MAClD,IAAI,CAACs7E,KAAK,GAAGU,QAAQ,CAAC5sB,IAAI,KAAK3a,QAAQ,CAACT,QAAQ,GAC5CymC,yBAAyB,CAACuB,QAAQ,CAACtB,OAAO,EAAE,IAAI,CAAC36E,GAAG,EAAE,IAAI,CAACC,GAAG,EAAE,IAAI,CAACk8E,iBAAiB,CAACn8E,GAAG,CAAC,CAAC,GAC5F86E,0BAA0B,CAAC,IAAI,EAAEroC,KAAK,CAAC/4C,MAAM,EAAEuiF,QAAQ,CAACtB,OAAO,EAAE,IAAI,CAAC36E,GAAG,EAAE,IAAI,CAACC,GAAG,CAAC,CAAC;MACzF,IAAI,CAACu7E,UAAU,GAAG,CAAC9mC,QAAQ,CAACL,KAAK,CAACU,OAAO,IAAI,IAAI,CAACwmC,KAAK,KAAK,MAAM,GAAG5/E,SAAS,GAC1Eo/E,kBAAkB,CAAC,IAAI,CAACQ,KAAK,CAAC;MAClC,IAAI,CAACa,WAAW,CAAClB,UAAU,CAAC;MAC5B,IAAIpgF,OAAO,CAACxB,OAAO,EAAE;QACnBm5C,KAAK,CAACn5C,OAAO,CAAC,CAAC;MACjB;MACA,OAAO+hF,mBAAmB,CAAC,IAAI,EAAE5oC,KAAK,EAAE,IAAI,CAAC+oC,UAAU,CAAC;IAC1D;IACAlhC,aAAaA,CAAA,EAAG;MACd,IAAI,IAAI,CAACx/C,OAAO,CAACuhF,mBAAmB,EAAE;QACpC,IAAI,CAACD,WAAW,CAAC,IAAI,CAAC3pC,KAAK,CAACp4C,GAAG,CAACyO,IAAI,IAAI,CAACA,IAAI,CAACpR,KAAK,CAAC,CAAC;MACvD;IACF;IACA0kF,WAAWA,CAAClB,UAAU,EAAE;MACtB,IAAI35E,KAAK,GAAG,CAAC;MACb,IAAIC,GAAG,GAAG,CAAC;MACX,IAAI0zC,KAAK,EAAEzyC,IAAI;MACf,IAAI,IAAI,CAAC3H,OAAO,CAACq4C,MAAM,IAAI+nC,UAAU,CAACxhF,MAAM,EAAE;QAC5Cw7C,KAAK,GAAG,IAAI,CAAConC,kBAAkB,CAACpB,UAAU,CAAC,CAAC,CAAC,CAAC;QAC9C,IAAIA,UAAU,CAACxhF,MAAM,KAAK,CAAC,EAAE;UAC3B6H,KAAK,GAAG,CAAC,GAAG2zC,KAAK;QACnB,CAAC,MAAM;UACL3zC,KAAK,GAAG,CAAC,IAAI,CAAC+6E,kBAAkB,CAACpB,UAAU,CAAC,CAAC,CAAC,CAAC,GAAGhmC,KAAK,IAAI,CAAC;QAC9D;QACAzyC,IAAI,GAAG,IAAI,CAAC65E,kBAAkB,CAACpB,UAAU,CAACA,UAAU,CAACxhF,MAAM,GAAG,CAAC,CAAC,CAAC;QACjE,IAAIwhF,UAAU,CAACxhF,MAAM,KAAK,CAAC,EAAE;UAC3B8H,GAAG,GAAGiB,IAAI;QACZ,CAAC,MAAM;UACLjB,GAAG,GAAG,CAACiB,IAAI,GAAG,IAAI,CAAC65E,kBAAkB,CAACpB,UAAU,CAACA,UAAU,CAACxhF,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;QAC/E;MACF;MACA,MAAMulD,KAAK,GAAGi8B,UAAU,CAACxhF,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI;MAChD6H,KAAK,GAAGQ,WAAW,CAACR,KAAK,EAAE,CAAC,EAAE09C,KAAK,CAAC;MACpCz9C,GAAG,GAAGO,WAAW,CAACP,GAAG,EAAE,CAAC,EAAEy9C,KAAK,CAAC;MAChC,IAAI,CAACw8B,QAAQ,GAAG;QAACl6E,KAAK;QAAEC,GAAG;QAAE47B,MAAM,EAAE,CAAC,IAAI77B,KAAK,GAAG,CAAC,GAAGC,GAAG;MAAC,CAAC;IAC7D;IACA06E,SAASA,CAAA,EAAG;MACV,MAAM7B,OAAO,GAAG,IAAI,CAACC,QAAQ;MAC7B,MAAMt6E,GAAG,GAAG,IAAI,CAACA,GAAG;MACpB,MAAMC,GAAG,GAAG,IAAI,CAACA,GAAG;MACpB,MAAMnF,OAAO,GAAG,IAAI,CAACA,OAAO;MAC5B,MAAMmhF,QAAQ,GAAGnhF,OAAO,CAACmgF,IAAI;MAC7B,MAAM7mC,KAAK,GAAG6nC,QAAQ,CAAC5sB,IAAI,IAAIqrB,yBAAyB,CAACuB,QAAQ,CAACtB,OAAO,EAAE36E,GAAG,EAAEC,GAAG,EAAE,IAAI,CAACk8E,iBAAiB,CAACn8E,GAAG,CAAC,CAAC;MACjH,MAAMw1E,QAAQ,GAAG/8E,cAAc,CAACwjF,QAAQ,CAACzG,QAAQ,EAAE,CAAC,CAAC;MACrD,MAAMjmB,OAAO,GAAGnb,KAAK,KAAK,MAAM,GAAG6nC,QAAQ,CAACzB,UAAU,GAAG,KAAK;MAC9D,MAAM+B,UAAU,GAAGj9E,QAAQ,CAACiwD,OAAO,CAAC,IAAIA,OAAO,KAAK,IAAI;MACxD,MAAM9c,KAAK,GAAG,CAAC,CAAC;MAChB,IAAIyC,KAAK,GAAGl1C,GAAG;MACf,IAAIi7E,IAAI,EAAEh1E,KAAK;MACf,IAAIs2E,UAAU,EAAE;QACdrnC,KAAK,GAAG,CAACmlC,OAAO,CAAC/qB,OAAO,CAACpa,KAAK,EAAE,SAAS,EAAEqa,OAAO,CAAC;MACrD;MACAra,KAAK,GAAG,CAACmlC,OAAO,CAAC/qB,OAAO,CAACpa,KAAK,EAAEqnC,UAAU,GAAG,KAAK,GAAGnoC,KAAK,CAAC;MAC3D,IAAIimC,OAAO,CAAClkC,IAAI,CAACl2C,GAAG,EAAED,GAAG,EAAEo0C,KAAK,CAAC,GAAG,MAAM,GAAGohC,QAAQ,EAAE;QACrD,MAAM,IAAIppD,KAAK,CAACpsB,GAAG,GAAG,OAAO,GAAGC,GAAG,GAAG,sCAAsC,GAAGu1E,QAAQ,GAAG,GAAG,GAAGphC,KAAK,CAAC;MACxG;MACA,MAAM8mC,UAAU,GAAGpgF,OAAO,CAAC23C,KAAK,CAACr4C,MAAM,KAAK,MAAM,IAAI,IAAI,CAACoiF,iBAAiB,CAAC,CAAC;MAC9E,KAAKvB,IAAI,GAAG/lC,KAAK,EAAEjvC,KAAK,GAAG,CAAC,EAAEg1E,IAAI,GAAGh7E,GAAG,EAAEg7E,IAAI,GAAG,CAACZ,OAAO,CAACp2E,GAAG,CAACg3E,IAAI,EAAEzF,QAAQ,EAAEphC,KAAK,CAAC,EAAEnuC,KAAK,EAAE,EAAE;QAC7F+0E,OAAO,CAACvoC,KAAK,EAAEwoC,IAAI,EAAEC,UAAU,CAAC;MAClC;MACA,IAAID,IAAI,KAAKh7E,GAAG,IAAInF,OAAO,CAACy7B,MAAM,KAAK,OAAO,IAAItwB,KAAK,KAAK,CAAC,EAAE;QAC7D+0E,OAAO,CAACvoC,KAAK,EAAEwoC,IAAI,EAAEC,UAAU,CAAC;MAClC;MACA,OAAOpjF,MAAM,CAAC2B,IAAI,CAACg5C,KAAK,CAAC,CAACrzC,IAAI,CAAC,CAAChC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,CAAC,CAAChD,GAAG,CAAC2B,CAAC,IAAI,CAACA,CAAC,CAAC;IAC9D;IACAozC,gBAAgBA,CAAC13C,KAAK,EAAE;MACtB,MAAM2iF,OAAO,GAAG,IAAI,CAACC,QAAQ;MAC7B,MAAM2B,QAAQ,GAAG,IAAI,CAACnhF,OAAO,CAACmgF,IAAI;MAClC,IAAIgB,QAAQ,CAACQ,aAAa,EAAE;QAC1B,OAAOpC,OAAO,CAAC9mD,MAAM,CAAC77B,KAAK,EAAEukF,QAAQ,CAACQ,aAAa,CAAC;MACtD;MACA,OAAOpC,OAAO,CAAC9mD,MAAM,CAAC77B,KAAK,EAAEukF,QAAQ,CAACL,cAAc,CAACc,QAAQ,CAAC;IAChE;IACAC,mBAAmBA,CAAC1B,IAAI,EAAE/gF,KAAK,EAAEu4C,KAAK,EAAElf,MAAM,EAAE;MAC9C,MAAMz4B,OAAO,GAAG,IAAI,CAACA,OAAO;MAC5B,MAAMo0D,OAAO,GAAGp0D,OAAO,CAACmgF,IAAI,CAACW,cAAc;MAC3C,MAAMvsB,IAAI,GAAG,IAAI,CAACksB,KAAK;MACvB,MAAMH,SAAS,GAAG,IAAI,CAACI,UAAU;MACjC,MAAMoB,WAAW,GAAGvtB,IAAI,IAAIH,OAAO,CAACG,IAAI,CAAC;MACzC,MAAMwtB,WAAW,GAAGzB,SAAS,IAAIlsB,OAAO,CAACksB,SAAS,CAAC;MACnD,MAAMtyE,IAAI,GAAG2pC,KAAK,CAACv4C,KAAK,CAAC;MACzB,MAAMm6C,KAAK,GAAG+mC,SAAS,IAAIyB,WAAW,IAAI/zE,IAAI,IAAIA,IAAI,CAACurC,KAAK;MAC5D,MAAMlF,KAAK,GAAG,IAAI,CAACmrC,QAAQ,CAAC/mD,MAAM,CAAC0nD,IAAI,EAAE1nD,MAAM,KAAK8gB,KAAK,GAAGwoC,WAAW,GAAGD,WAAW,CAAC,CAAC;MACvF,MAAM1pD,SAAS,GAAGp4B,OAAO,CAAC23C,KAAK,CAAC15C,QAAQ;MACxC,OAAOm6B,SAAS,GAAGn6B,QAAQ,CAACm6B,SAAS,EAAE,CAACic,KAAK,EAAEj1C,KAAK,EAAEu4C,KAAK,CAAC,EAAE,IAAI,CAAC,GAAGtD,KAAK;IAC7E;IACAgM,kBAAkBA,CAAC1I,KAAK,EAAE;MACxB,IAAIl5C,CAAC,EAAEO,IAAI,EAAEgP,IAAI;MACjB,KAAKvP,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAG24C,KAAK,CAAC/4C,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;QAC9CuP,IAAI,GAAG2pC,KAAK,CAACl5C,CAAC,CAAC;QACfuP,IAAI,CAACqmC,KAAK,GAAG,IAAI,CAACwtC,mBAAmB,CAAC7zE,IAAI,CAACpR,KAAK,EAAE6B,CAAC,EAAEk5C,KAAK,CAAC;MAC7D;IACF;IACA6pC,kBAAkBA,CAAC5kF,KAAK,EAAE;MACxB,OAAOA,KAAK,KAAK,IAAI,GAAGg3C,GAAG,GAAG,CAACh3C,KAAK,GAAG,IAAI,CAACsI,GAAG,KAAK,IAAI,CAACC,GAAG,GAAG,IAAI,CAACD,GAAG,CAAC;IAC1E;IACAyG,gBAAgBA,CAAC/O,KAAK,EAAE;MACtB,MAAMolF,OAAO,GAAG,IAAI,CAACrB,QAAQ;MAC7B,MAAM77D,GAAG,GAAG,IAAI,CAAC08D,kBAAkB,CAAC5kF,KAAK,CAAC;MAC1C,OAAO,IAAI,CAAC+lD,kBAAkB,CAAC,CAACq/B,OAAO,CAACv7E,KAAK,GAAGqe,GAAG,IAAIk9D,OAAO,CAAC1/C,MAAM,CAAC;IACxE;IACAogB,gBAAgBA,CAACh5B,KAAK,EAAE;MACtB,MAAMs4D,OAAO,GAAG,IAAI,CAACrB,QAAQ;MAC7B,MAAM77D,GAAG,GAAG,IAAI,CAAC+9B,kBAAkB,CAACn5B,KAAK,CAAC,GAAGs4D,OAAO,CAAC1/C,MAAM,GAAG0/C,OAAO,CAACt7E,GAAG;MACzE,OAAO,IAAI,CAACxB,GAAG,GAAG4f,GAAG,IAAI,IAAI,CAAC3f,GAAG,GAAG,IAAI,CAACD,GAAG,CAAC;IAC/C;IACA+8E,aAAaA,CAAC5tC,KAAK,EAAE;MACnB,MAAM6tC,SAAS,GAAG,IAAI,CAACliF,OAAO,CAAC23C,KAAK;MACpC,MAAMwqC,cAAc,GAAG,IAAI,CAAC5gE,GAAG,CAACuH,WAAW,CAACurB,KAAK,CAAC,CAACtvB,KAAK;MACxD,MAAM/e,KAAK,GAAGZ,SAAS,CAAC,IAAI,CAACs8B,YAAY,CAAC,CAAC,GAAGwgD,SAAS,CAACnpC,WAAW,GAAGmpC,SAAS,CAACppC,WAAW,CAAC;MAC5F,MAAMspC,WAAW,GAAGt/E,IAAI,CAACioB,GAAG,CAAC/kB,KAAK,CAAC;MACnC,MAAMq8E,WAAW,GAAGv/E,IAAI,CAACgoB,GAAG,CAAC9kB,KAAK,CAAC;MACnC,MAAMs8E,YAAY,GAAG,IAAI,CAAC//B,uBAAuB,CAAC,CAAC,CAAC,CAAC//C,IAAI;MACzD,OAAO;QACL0O,CAAC,EAAGixE,cAAc,GAAGC,WAAW,GAAKE,YAAY,GAAGD,WAAY;QAChEjzE,CAAC,EAAG+yE,cAAc,GAAGE,WAAW,GAAKC,YAAY,GAAGF;MACtD,CAAC;IACH;IACAf,iBAAiBA,CAACkB,WAAW,EAAE;MAC7B,MAAMpB,QAAQ,GAAG,IAAI,CAACnhF,OAAO,CAACmgF,IAAI;MAClC,MAAMW,cAAc,GAAGK,QAAQ,CAACL,cAAc;MAC9C,MAAMroD,MAAM,GAAGqoD,cAAc,CAACK,QAAQ,CAAC5sB,IAAI,CAAC,IAAIusB,cAAc,CAACpC,WAAW;MAC1E,MAAM8D,YAAY,GAAG,IAAI,CAACX,mBAAmB,CAACU,WAAW,EAAE,CAAC,EAAEhC,mBAAmB,CAAC,IAAI,EAAE,CAACgC,WAAW,CAAC,EAAE,IAAI,CAAC7B,UAAU,CAAC,EAAEjoD,MAAM,CAAC;MAChI,MAAMj2B,IAAI,GAAG,IAAI,CAACy/E,aAAa,CAACO,YAAY,CAAC;MAC7C,MAAM1C,QAAQ,GAAGh9E,IAAI,CAACkB,KAAK,CAAC,IAAI,CAAC09B,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC3c,KAAK,GAAGviB,IAAI,CAAC0O,CAAC,GAAG,IAAI,CAAC8T,MAAM,GAAGxiB,IAAI,CAAC4M,CAAC,CAAC,GAAG,CAAC;MACjG,OAAO0wE,QAAQ,GAAG,CAAC,GAAGA,QAAQ,GAAG,CAAC;IACpC;IACA4B,iBAAiBA,CAAA,EAAG;MAClB,IAAItB,UAAU,GAAG,IAAI,CAACriC,MAAM,CAACt1B,IAAI,IAAI,EAAE;MACvC,IAAIhqB,CAAC,EAAEO,IAAI;MACX,IAAIohF,UAAU,CAACxhF,MAAM,EAAE;QACrB,OAAOwhF,UAAU;MACnB;MACA,MAAMhiC,KAAK,GAAG,IAAI,CAAC5P,uBAAuB,CAAC,CAAC;MAC5C,IAAI,IAAI,CAACoyC,WAAW,IAAIxiC,KAAK,CAACx/C,MAAM,EAAE;QACpC,OAAQ,IAAI,CAACm/C,MAAM,CAACt1B,IAAI,GAAG21B,KAAK,CAAC,CAAC,CAAC,CAAC7f,UAAU,CAAC2V,kBAAkB,CAAC,IAAI,CAAC;MACzE;MACA,KAAKz1C,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAGo/C,KAAK,CAACx/C,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;QAC9C2hF,UAAU,GAAGA,UAAU,CAACv9C,MAAM,CAACub,KAAK,CAAC3/C,CAAC,CAAC,CAAC8/B,UAAU,CAAC2V,kBAAkB,CAAC,IAAI,CAAC,CAAC;MAC9E;MACA,OAAQ,IAAI,CAAC6J,MAAM,CAACt1B,IAAI,GAAG,IAAI,CAAC4S,SAAS,CAAC+kD,UAAU,CAAC;IACvD;IACAc,kBAAkBA,CAAA,EAAG;MACnB,MAAMd,UAAU,GAAG,IAAI,CAACriC,MAAM,CAAC5K,MAAM,IAAI,EAAE;MAC3C,IAAI10C,CAAC,EAAEO,IAAI;MACX,IAAIohF,UAAU,CAACxhF,MAAM,EAAE;QACrB,OAAOwhF,UAAU;MACnB;MACA,MAAMjtC,MAAM,GAAG,IAAI,CAACC,SAAS,CAAC,CAAC;MAC/B,KAAK30C,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAGm0C,MAAM,CAACv0C,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;QAC/C2hF,UAAU,CAACt+E,IAAI,CAACywB,KAAK,CAAC,IAAI,EAAE4gB,MAAM,CAAC10C,CAAC,CAAC,CAAC,CAAC;MACzC;MACA,OAAQ,IAAI,CAACs/C,MAAM,CAAC5K,MAAM,GAAG,IAAI,CAACytC,WAAW,GAAGR,UAAU,GAAG,IAAI,CAAC/kD,SAAS,CAAC+kD,UAAU,CAAC;IACzF;IACA/kD,SAASA,CAACvzB,MAAM,EAAE;MAChB,OAAOiB,YAAY,CAACjB,MAAM,CAACxD,IAAI,CAACg7E,MAAM,CAAC,CAAC;IAC1C;EACF;EACAkB,SAAS,CAAC9jF,EAAE,GAAG,MAAM;EACrB8jF,SAAS,CAACn9D,QAAQ,GAAG;IACnBoY,MAAM,EAAE,MAAM;IACdolD,QAAQ,EAAE,CAAC,CAAC;IACZV,IAAI,EAAE;MACJV,MAAM,EAAE,KAAK;MACblrB,IAAI,EAAE,KAAK;MACX3wD,KAAK,EAAE,KAAK;MACZ87E,UAAU,EAAE,KAAK;MACjBG,OAAO,EAAE,aAAa;MACtBiB,cAAc,EAAE,CAAC;IACnB,CAAC;IACDnpC,KAAK,EAAE;MACLr4C,MAAM,EAAE,MAAM;MACdi6C,KAAK,EAAE;QACLU,OAAO,EAAE;MACX;IACF;EACF,CAAC;EAED,SAAS96B,WAAWA,CAAC9X,KAAK,EAAEiY,GAAG,EAAE9gB,OAAO,EAAE;IACxC,IAAIgJ,EAAE,GAAG,CAAC;IACV,IAAID,EAAE,GAAGF,KAAK,CAACzI,MAAM,GAAG,CAAC;IACzB,IAAI6jF,UAAU,EAAEC,UAAU,EAAEC,UAAU,EAAEC,UAAU;IAClD,IAAIpkF,OAAO,EAAE;MACX,IAAI8gB,GAAG,IAAIjY,KAAK,CAACG,EAAE,CAAC,CAACsd,GAAG,IAAIxF,GAAG,IAAIjY,KAAK,CAACE,EAAE,CAAC,CAACud,GAAG,EAAE;QAChD,CAAC;UAACtd,EAAE;UAAED;QAAE,CAAC,GAAGG,YAAY,CAACL,KAAK,EAAE,KAAK,EAAEiY,GAAG,CAAC;MAC7C;MACA,CAAC;QAACwF,GAAG,EAAE29D,UAAU;QAAEtC,IAAI,EAAEwC;MAAU,CAAC,GAAGt7E,KAAK,CAACG,EAAE,CAAC;MAChD,CAAC;QAACsd,GAAG,EAAE49D,UAAU;QAAEvC,IAAI,EAAEyC;MAAU,CAAC,GAAGv7E,KAAK,CAACE,EAAE,CAAC;IAClD,CAAC,MAAM;MACL,IAAI+X,GAAG,IAAIjY,KAAK,CAACG,EAAE,CAAC,CAAC24E,IAAI,IAAI7gE,GAAG,IAAIjY,KAAK,CAACE,EAAE,CAAC,CAAC44E,IAAI,EAAE;QAClD,CAAC;UAAC34E,EAAE;UAAED;QAAE,CAAC,GAAGG,YAAY,CAACL,KAAK,EAAE,MAAM,EAAEiY,GAAG,CAAC;MAC9C;MACA,CAAC;QAAC6gE,IAAI,EAAEsC,UAAU;QAAE39D,GAAG,EAAE69D;MAAU,CAAC,GAAGt7E,KAAK,CAACG,EAAE,CAAC;MAChD,CAAC;QAAC24E,IAAI,EAAEuC,UAAU;QAAE59D,GAAG,EAAE89D;MAAU,CAAC,GAAGv7E,KAAK,CAACE,EAAE,CAAC;IAClD;IACA,MAAMs7E,IAAI,GAAGH,UAAU,GAAGD,UAAU;IACpC,OAAOI,IAAI,GAAGF,UAAU,GAAG,CAACC,UAAU,GAAGD,UAAU,KAAKrjE,GAAG,GAAGmjE,UAAU,CAAC,GAAGI,IAAI,GAAGF,UAAU;EAC/F;EACA,MAAMG,eAAe,SAAStC,SAAS,CAAC;IACtCh0E,WAAWA,CAACwsB,KAAK,EAAE;MACjB,KAAK,CAACA,KAAK,CAAC;MACZ,IAAI,CAAC+pD,MAAM,GAAG,EAAE;MAChB,IAAI,CAACC,OAAO,GAAGniF,SAAS;MACxB,IAAI,CAACoiF,WAAW,GAAGpiF,SAAS;IAC9B;IACAygF,WAAWA,CAAA,EAAG;MACZ,MAAMlB,UAAU,GAAG,IAAI,CAAC8C,sBAAsB,CAAC,CAAC;MAChD,MAAM77E,KAAK,GAAG,IAAI,CAAC07E,MAAM,GAAG,IAAI,CAACI,gBAAgB,CAAC/C,UAAU,CAAC;MAC7D,IAAI,CAAC4C,OAAO,GAAG7jE,WAAW,CAAC9X,KAAK,EAAE,IAAI,CAACnC,GAAG,CAAC;MAC3C,IAAI,CAAC+9E,WAAW,GAAG9jE,WAAW,CAAC9X,KAAK,EAAE,IAAI,CAAClC,GAAG,CAAC,GAAG,IAAI,CAAC69E,OAAO;MAC9D,KAAK,CAAC1B,WAAW,CAAClB,UAAU,CAAC;IAC/B;IACA+C,gBAAgBA,CAAC/C,UAAU,EAAE;MAC3B,MAAM;QAACl7E,GAAG;QAAEC;MAAG,CAAC,GAAG,IAAI;MACvB,MAAM6D,KAAK,GAAG,EAAE;MAChB,MAAM3B,KAAK,GAAG,EAAE;MAChB,IAAI5I,CAAC,EAAEO,IAAI,EAAEo2B,IAAI,EAAE8/B,IAAI,EAAEliC,IAAI;MAC7B,KAAKv0B,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAGohF,UAAU,CAACxhF,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;QACnDy2D,IAAI,GAAGkrB,UAAU,CAAC3hF,CAAC,CAAC;QACpB,IAAIy2D,IAAI,IAAIhwD,GAAG,IAAIgwD,IAAI,IAAI/vD,GAAG,EAAE;UAC9B6D,KAAK,CAAClH,IAAI,CAACozD,IAAI,CAAC;QAClB;MACF;MACA,IAAIlsD,KAAK,CAACpK,MAAM,GAAG,CAAC,EAAE;QACpB,OAAO,CACL;UAACuhF,IAAI,EAAEj7E,GAAG;UAAE4f,GAAG,EAAE;QAAC,CAAC,EACnB;UAACq7D,IAAI,EAAEh7E,GAAG;UAAE2f,GAAG,EAAE;QAAC,CAAC,CACpB;MACH;MACA,KAAKrmB,CAAC,GAAG,CAAC,EAAEO,IAAI,GAAGgK,KAAK,CAACpK,MAAM,EAAEH,CAAC,GAAGO,IAAI,EAAE,EAAEP,CAAC,EAAE;QAC9Cu0B,IAAI,GAAGhqB,KAAK,CAACvK,CAAC,GAAG,CAAC,CAAC;QACnB22B,IAAI,GAAGpsB,KAAK,CAACvK,CAAC,GAAG,CAAC,CAAC;QACnBy2D,IAAI,GAAGlsD,KAAK,CAACvK,CAAC,CAAC;QACf,IAAIqE,IAAI,CAACc,KAAK,CAAC,CAACovB,IAAI,GAAGoC,IAAI,IAAI,CAAC,CAAC,KAAK8/B,IAAI,EAAE;UAC1C7tD,KAAK,CAACvF,IAAI,CAAC;YAACq+E,IAAI,EAAEjrB,IAAI;YAAEpwC,GAAG,EAAErmB,CAAC,IAAIO,IAAI,GAAG,CAAC;UAAC,CAAC,CAAC;QAC/C;MACF;MACA,OAAOqI,KAAK;IACd;IACA67E,sBAAsBA,CAAA,EAAG;MACvB,IAAI9C,UAAU,GAAG,IAAI,CAACriC,MAAM,CAACnR,GAAG,IAAI,EAAE;MACtC,IAAIwzC,UAAU,CAACxhF,MAAM,EAAE;QACrB,OAAOwhF,UAAU;MACnB;MACA,MAAM33D,IAAI,GAAG,IAAI,CAACi5D,iBAAiB,CAAC,CAAC;MACrC,MAAMrtC,KAAK,GAAG,IAAI,CAAC6sC,kBAAkB,CAAC,CAAC;MACvC,IAAIz4D,IAAI,CAAC7pB,MAAM,IAAIy1C,KAAK,CAACz1C,MAAM,EAAE;QAC/BwhF,UAAU,GAAG,IAAI,CAAC/kD,SAAS,CAAC5S,IAAI,CAACoa,MAAM,CAACwR,KAAK,CAAC,CAAC;MACjD,CAAC,MAAM;QACL+rC,UAAU,GAAG33D,IAAI,CAAC7pB,MAAM,GAAG6pB,IAAI,GAAG4rB,KAAK;MACzC;MACA+rC,UAAU,GAAG,IAAI,CAACriC,MAAM,CAACnR,GAAG,GAAGwzC,UAAU;MACzC,OAAOA,UAAU;IACnB;IACAoB,kBAAkBA,CAAC5kF,KAAK,EAAE;MACxB,OAAO,CAACuiB,WAAW,CAAC,IAAI,CAAC4jE,MAAM,EAAEnmF,KAAK,CAAC,GAAG,IAAI,CAAComF,OAAO,IAAI,IAAI,CAACC,WAAW;IAC5E;IACAvgC,gBAAgBA,CAACh5B,KAAK,EAAE;MACtB,MAAMs4D,OAAO,GAAG,IAAI,CAACrB,QAAQ;MAC7B,MAAM/9B,OAAO,GAAG,IAAI,CAACC,kBAAkB,CAACn5B,KAAK,CAAC,GAAGs4D,OAAO,CAAC1/C,MAAM,GAAG0/C,OAAO,CAACt7E,GAAG;MAC7E,OAAOyY,WAAW,CAAC,IAAI,CAAC4jE,MAAM,EAAEngC,OAAO,GAAG,IAAI,CAACqgC,WAAW,GAAG,IAAI,CAACD,OAAO,EAAE,IAAI,CAAC;IAClF;EACF;EACAF,eAAe,CAACpmF,EAAE,GAAG,YAAY;EACjComF,eAAe,CAACz/D,QAAQ,GAAGm9D,SAAS,CAACn9D,QAAQ;EAE7C,IAAIf,MAAM,GAAG,aAAatlB,MAAM,CAACkhC,MAAM,CAAC;IACxCC,SAAS,EAAE,IAAI;IACfs6C,aAAa,EAAEA,aAAa;IAC5BoC,WAAW,EAAEA,WAAW;IACxBS,gBAAgB,EAAEA,gBAAgB;IAClCqC,iBAAiB,EAAEA,iBAAiB;IACpC6C,SAAS,EAAEA,SAAS;IACpBsC,eAAe,EAAEA;EACjB,CAAC,CAAC;EAEFvmF,KAAK,CAACiqD,QAAQ,CAACY,WAAW,EAAE9kC,MAAM,EAAEvB,QAAQ,EAAEoB,OAAO,CAAC;EACtD5lB,KAAK,CAAC0hC,OAAO,GAAG;IAAC,GAAGA;EAAO,CAAC;EAC5B1hC,KAAK,CAACq4D,SAAS,GAAGA,SAAS;EAC3Br4D,KAAK,CAAC2tC,SAAS,GAAGA,SAAS;EAC3B3tC,KAAK,CAACuvC,UAAU,GAAGA,UAAU;EAC7BvvC,KAAK,CAAC0S,QAAQ,GAAGA,QAAQ;EACzB1S,KAAK,CAAC6qD,WAAW,GAAGqB,QAAQ,CAACrB,WAAW,CAACp+C,KAAK;EAC9CzM,KAAK,CAACwzC,iBAAiB,GAAGA,iBAAiB;EAC3CxzC,KAAK,CAAC46C,OAAO,GAAGA,OAAO;EACvB56C,KAAK,CAACwkB,QAAQ,GAAGA,QAAQ;EACzBxkB,KAAK,CAACokC,WAAW,GAAGA,WAAW;EAC/BpkC,KAAK,CAACqlC,OAAO,GAAGA,OAAO;EACvBrlC,KAAK,CAACstC,SAAS,GAAGA,SAAS;EAC3BttC,KAAK,CAACsgD,KAAK,GAAGA,KAAK;EACnBtgD,KAAK,CAAC67C,KAAK,GAAGA,KAAK;EACnBp7C,MAAM,CAACsP,MAAM,CAAC/P,KAAK,EAAE6qD,WAAW,EAAE9kC,MAAM,EAAEvB,QAAQ,EAAEoB,OAAO,EAAE0nB,SAAS,CAAC;EACvEttC,KAAK,CAACA,KAAK,GAAGA,KAAK;EACnB,IAAI,OAAOmN,MAAM,KAAK,WAAW,EAAE;IACjCA,MAAM,CAACnN,KAAK,GAAGA,KAAK;EACtB;EAEA,OAAOA,KAAK;AAEZ,CAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
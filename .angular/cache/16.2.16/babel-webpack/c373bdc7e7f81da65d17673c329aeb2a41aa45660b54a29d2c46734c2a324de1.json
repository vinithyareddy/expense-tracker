{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\nexport class AuthService {\n  constructor(afAuth) {\n    this.afAuth = afAuth;\n  }\n  // üîê Login with email & password\n  login(email, password) {\n    return this.afAuth.signInWithEmailAndPassword(email, password);\n  }\n  // üìù Register and update displayName & phone (stored in photoURL for simplicity)\n  register(name, phone, email, password) {\n    return this.afAuth.createUserWithEmailAndPassword(email, password).then(userCredential => {\n      return userCredential.user?.updateProfile({\n        displayName: name,\n        photoURL: phone\n      }); // üëà explicitly cast to match return type\n    });\n  }\n  // üîì Logout\n  logout() {\n    return this.afAuth.signOut();\n  }\n  // üë§ Observe current user\n  getCurrentUser() {\n    return this.afAuth.authState;\n  }\n  sendPasswordResetEmail(email) {\n    return this.afAuth.sendPasswordResetEmail(email);\n  }\n  // auth.service.ts\n  setPersistence(persistence) {\n    return this.afAuth.setPersistence(persistence);\n  }\n  static {\n    this.…µfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.…µ…µinject(i1.AngularFireAuth));\n    };\n  }\n  static {\n    this.…µprov = /*@__PURE__*/i0.…µ…µdefineInjectable({\n      token: AuthService,\n      factory: AuthService.…µfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AuthService","constructor","afAuth","login","email","password","signInWithEmailAndPassword","register","name","phone","createUserWithEmailAndPassword","then","userCredential","user","updateProfile","displayName","photoURL","logout","signOut","getCurrentUser","authState","sendPasswordResetEmail","setPersistence","persistence","i0","…µ…µinject","i1","AngularFireAuth","factory","…µfac","providedIn"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/expense-tracker/src/app/services/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport firebase from 'firebase/compat/app';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  constructor(private afAuth: AngularFireAuth) {}\n\n  // üîê Login with email & password\n  login(email: string, password: string): Promise<firebase.auth.UserCredential> {\n    return this.afAuth.signInWithEmailAndPassword(email, password);\n  }\n\n  // üìù Register and update displayName & phone (stored in photoURL for simplicity)\n  register(name: string, phone: string, email: string, password: string): Promise<void> {\n    return this.afAuth.createUserWithEmailAndPassword(email, password).then(userCredential => {\n      return userCredential.user?.updateProfile({\n        displayName: name,\n        photoURL: phone\n      }) as Promise<void>; // üëà explicitly cast to match return type\n    });\n  }\n\n  // üîì Logout\n  logout(): Promise<void> {\n    return this.afAuth.signOut();\n  }\n\n  // üë§ Observe current user\n  getCurrentUser(): Observable<firebase.User | null> {\n    return this.afAuth.authState;\n  }\n  sendPasswordResetEmail(email: string) {\n    return this.afAuth.sendPasswordResetEmail(email);\n  }\n // auth.service.ts\nsetPersistence(persistence: 'local' | 'session' | 'none'): Promise<void> {\n  return this.afAuth.setPersistence(persistence);\n}\n\n  \n}\n"],"mappings":";;AAQA,OAAM,MAAOA,WAAW;EACtBC,YAAoBC,MAAuB;IAAvB,KAAAA,MAAM,GAANA,MAAM;EAAoB;EAE9C;EACAC,KAAKA,CAACC,KAAa,EAAEC,QAAgB;IACnC,OAAO,IAAI,CAACH,MAAM,CAACI,0BAA0B,CAACF,KAAK,EAAEC,QAAQ,CAAC;EAChE;EAEA;EACAE,QAAQA,CAACC,IAAY,EAAEC,KAAa,EAAEL,KAAa,EAAEC,QAAgB;IACnE,OAAO,IAAI,CAACH,MAAM,CAACQ,8BAA8B,CAACN,KAAK,EAAEC,QAAQ,CAAC,CAACM,IAAI,CAACC,cAAc,IAAG;MACvF,OAAOA,cAAc,CAACC,IAAI,EAAEC,aAAa,CAAC;QACxCC,WAAW,EAAEP,IAAI;QACjBQ,QAAQ,EAAEP;OACX,CAAkB,CAAC,CAAC;IACvB,CAAC,CAAC;EACJ;EAEA;EACAQ,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACf,MAAM,CAACgB,OAAO,EAAE;EAC9B;EAEA;EACAC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACjB,MAAM,CAACkB,SAAS;EAC9B;EACAC,sBAAsBA,CAACjB,KAAa;IAClC,OAAO,IAAI,CAACF,MAAM,CAACmB,sBAAsB,CAACjB,KAAK,CAAC;EAClD;EACD;EACDkB,cAAcA,CAACC,WAAyC;IACtD,OAAO,IAAI,CAACrB,MAAM,CAACoB,cAAc,CAACC,WAAW,CAAC;EAChD;;;uBAjCavB,WAAW,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,eAAA;IAAA;EAAA;;;aAAX3B,WAAW;MAAA4B,OAAA,EAAX5B,WAAW,CAAA6B,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
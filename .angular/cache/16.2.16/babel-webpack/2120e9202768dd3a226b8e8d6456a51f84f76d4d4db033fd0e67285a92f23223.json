{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class CurrencyService {\n  constructor() {\n    this.conversionRate = 0.012; // 1 INR = 0.012 USD (you can update this value)\n  }\n  // Convert INR to USD\n  convertToUSD(amount) {\n    return amount * this.conversionRate;\n  }\n  // If you want to change the conversion rate dynamically, you can add a method here\n  updateConversionRate(newRate) {\n    this.conversionRate = newRate;\n  }\n  static {\n    this.ɵfac = function CurrencyService_Factory(t) {\n      return new (t || CurrencyService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CurrencyService,\n      factory: CurrencyService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["CurrencyService","constructor","conversionRate","convertToUSD","amount","updateConversionRate","newRate","factory","ɵfac","providedIn"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/expense-tracker/src/app/services/currency.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CurrencyService {\n  private conversionRate = 0.012;  // 1 INR = 0.012 USD (you can update this value)\n\n  // Convert INR to USD\n  convertToUSD(amount: number): number {\n    return amount * this.conversionRate;\n  }\n\n  // If you want to change the conversion rate dynamically, you can add a method here\n  updateConversionRate(newRate: number): void {\n    this.conversionRate = newRate;\n  }\n}\n"],"mappings":";AAKA,OAAM,MAAOA,eAAe;EAH5BC,YAAA;IAIU,KAAAC,cAAc,GAAG,KAAK,CAAC,CAAE;;EAEjC;EACAC,YAAYA,CAACC,MAAc;IACzB,OAAOA,MAAM,GAAG,IAAI,CAACF,cAAc;EACrC;EAEA;EACAG,oBAAoBA,CAACC,OAAe;IAClC,IAAI,CAACJ,cAAc,GAAGI,OAAO;EAC/B;;;uBAXWN,eAAe;IAAA;EAAA;;;aAAfA,eAAe;MAAAO,OAAA,EAAfP,eAAe,CAAAQ,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { switchMap, take } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nimport * as i2 from \"./auth.service\";\nexport class FirestoreBillService {\n  constructor(afs, auth) {\n    this.afs = afs;\n    this.auth = auth;\n  }\n  getUserBillsCollection() {\n    return this.auth.user$.pipe(take(1), switchMap(user => this.afs.collection(`users/${user?.uid}/bills`).valueChanges({\n      idField: 'id'\n    })));\n  }\n  getBills() {\n    return this.getUserBillsCollection();\n  }\n  addBill(bill) {\n    return this.auth.user$.pipe(take(1), switchMap(user => {\n      const ref = this.afs.collection(`users/${user?.uid}/bills`);\n      return ref.add(bill);\n    }));\n  }\n  deleteBill(billId) {\n    return this.auth.user$.pipe(take(1), switchMap(user => this.afs.doc(`users/${user?.uid}/bills/${billId}`).delete()));\n  }\n  static {\n    this.ɵfac = function FirestoreBillService_Factory(t) {\n      return new (t || FirestoreBillService)(i0.ɵɵinject(i1.AngularFirestore), i0.ɵɵinject(i2.AuthService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: FirestoreBillService,\n      factory: FirestoreBillService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["switchMap","take","FirestoreBillService","constructor","afs","auth","getUserBillsCollection","user$","pipe","user","collection","uid","valueChanges","idField","getBills","addBill","bill","ref","add","deleteBill","billId","doc","delete","i0","ɵɵinject","i1","AngularFirestore","i2","AuthService","factory","ɵfac","providedIn"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/expense-tracker/src/app/services/firestore-bill.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { AuthService } from './auth.service';\nimport { Bill } from '../models/bill.model';\nimport { switchMap, take } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class FirestoreBillService {\n  constructor(private afs: AngularFirestore, private auth: AuthService) {}\n\n  private getUserBillsCollection() {\n    return this.auth.user$.pipe(\n      take(1),\n      switchMap(user => this.afs.collection<Bill>(`users/${user?.uid}/bills`).valueChanges({ idField: 'id' }))\n    );\n  }\n\n  getBills() {\n    return this.getUserBillsCollection();\n  }\n\n  addBill(bill: Bill) {\n    return this.auth.user$.pipe(\n      take(1),\n      switchMap(user => {\n        const ref = this.afs.collection(`users/${user?.uid}/bills`);\n        return ref.add(bill);\n      })\n    );\n  }\n\n  deleteBill(billId: string) {\n    return this.auth.user$.pipe(\n      take(1),\n      switchMap(user => this.afs.doc(`users/${user?.uid}/bills/${billId}`).delete())\n    );\n  }\n}\n"],"mappings":"AAIA,SAASA,SAAS,EAAEC,IAAI,QAAQ,gBAAgB;;;;AAGhD,OAAM,MAAOC,oBAAoB;EAC/BC,YAAoBC,GAAqB,EAAUC,IAAiB;IAAhD,KAAAD,GAAG,GAAHA,GAAG;IAA4B,KAAAC,IAAI,GAAJA,IAAI;EAAgB;EAE/DC,sBAAsBA,CAAA;IAC5B,OAAO,IAAI,CAACD,IAAI,CAACE,KAAK,CAACC,IAAI,CACzBP,IAAI,CAAC,CAAC,CAAC,EACPD,SAAS,CAACS,IAAI,IAAI,IAAI,CAACL,GAAG,CAACM,UAAU,CAAO,SAASD,IAAI,EAAEE,GAAG,QAAQ,CAAC,CAACC,YAAY,CAAC;MAAEC,OAAO,EAAE;IAAI,CAAE,CAAC,CAAC,CACzG;EACH;EAEAC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACR,sBAAsB,EAAE;EACtC;EAEAS,OAAOA,CAACC,IAAU;IAChB,OAAO,IAAI,CAACX,IAAI,CAACE,KAAK,CAACC,IAAI,CACzBP,IAAI,CAAC,CAAC,CAAC,EACPD,SAAS,CAACS,IAAI,IAAG;MACf,MAAMQ,GAAG,GAAG,IAAI,CAACb,GAAG,CAACM,UAAU,CAAC,SAASD,IAAI,EAAEE,GAAG,QAAQ,CAAC;MAC3D,OAAOM,GAAG,CAACC,GAAG,CAACF,IAAI,CAAC;IACtB,CAAC,CAAC,CACH;EACH;EAEAG,UAAUA,CAACC,MAAc;IACvB,OAAO,IAAI,CAACf,IAAI,CAACE,KAAK,CAACC,IAAI,CACzBP,IAAI,CAAC,CAAC,CAAC,EACPD,SAAS,CAACS,IAAI,IAAI,IAAI,CAACL,GAAG,CAACiB,GAAG,CAAC,SAASZ,IAAI,EAAEE,GAAG,UAAUS,MAAM,EAAE,CAAC,CAACE,MAAM,EAAE,CAAC,CAC/E;EACH;;;uBA7BWpB,oBAAoB,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,gBAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA;IAAA;EAAA;;;aAApB1B,oBAAoB;MAAA2B,OAAA,EAApB3B,oBAAoB,CAAA4B,IAAA;MAAAC,UAAA,EADP;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
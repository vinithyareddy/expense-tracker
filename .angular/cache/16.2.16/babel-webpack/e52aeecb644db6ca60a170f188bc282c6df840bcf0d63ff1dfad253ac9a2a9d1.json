{"ast":null,"code":"import { Chart } from 'chart.js/auto';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/material/card\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = [\"pieChart\"];\nconst _c1 = [\"barChart\"];\nconst _c2 = [\"lineChart\"];\nconst _c3 = [\"cardLineChart\"];\nChart.register(ChartDataLabels);\nexport let HomeComponent = /*#__PURE__*/(() => {\n  class HomeComponent {\n    // ✅ Inject AuthService in constructor\n    constructor(firestore, authService) {\n      this.firestore = firestore;\n      this.authService = authService;\n      this.totalReceived = 0;\n      this.totalSpent = 0;\n      this.totalSaved = 0;\n      this.totalCardAmount = 0;\n      this.cardBalanceChartData = {\n        labels: [],\n        datasets: [{\n          label: 'Card Balance',\n          data: [],\n          borderColor: '#9c27b0',\n          backgroundColor: 'rgba(156, 39, 176, 0.2)',\n          tension: 0.4,\n          fill: true\n        }]\n      };\n      this.lineChartData = {\n        labels: [],\n        datasets: [{\n          data: [],\n          label: 'Savings',\n          fill: true,\n          tension: 0.4,\n          borderColor: '#4caf50',\n          backgroundColor: 'rgba(76, 175, 80, 0.2)'\n        }]\n      };\n      this.pieChartData = {\n        labels: [],\n        datasets: [{\n          data: [],\n          backgroundColor: ['#42a5f5', '#66bb6a', '#ffa726', '#ef5350', '#ab47bc', '#26c6da']\n        }]\n      };\n      this.barChartData = {\n        labels: [],\n        datasets: [{\n          data: [],\n          label: 'Spent',\n          backgroundColor: '#ff7043',\n          barPercentage: 0.4,\n          categoryPercentage: 0.6\n        }]\n      };\n      this.pieChartOptions = {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: 'top'\n          },\n          datalabels: {\n            color: '#fff',\n            formatter: (value, ctx) => {\n              const data = ctx.chart.data.datasets[0].data;\n              const total = data.reduce((a, b) => a + b, 0);\n              return total ? (value / total * 100).toFixed(0) + '%' : '';\n            },\n            font: {\n              weight: 'bold',\n              size: 14\n            }\n          }\n        },\n        cutout: '60%'\n      };\n      this.pieChartPlugins = [ChartDataLabels];\n      this.lineChartOptions = {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            position: 'top'\n          }\n        },\n        layout: {\n          padding: {\n            top: 10,\n            bottom: 10\n          }\n        }\n      };\n      this.barChartOptions = {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            position: 'top'\n          }\n        },\n        scales: {\n          x: {\n            ticks: {\n              font: {\n                size: 12\n              }\n            },\n            grid: {\n              display: false\n            }\n          },\n          y: {\n            beginAtZero: true,\n            ticks: {\n              font: {\n                size: 12\n              }\n            },\n            grid: {\n              color: 'rgba(0, 0, 0, 0.05)'\n            }\n          }\n        }\n      };\n    }\n    ngOnInit() {\n      this.loadData();\n      this.loadBills();\n      window.addEventListener('storage', this.handleStorageChange.bind(this));\n    }\n    ngOnDestroy() {\n      window.removeEventListener('storage', this.handleStorageChange.bind(this));\n    }\n    handleStorageChange(event) {\n      if (event.key === 'cardBalanceHistory' || event.key === 'totalCreditCardAmount' || event.key === 'bills') {\n        this.loadBills();\n      }\n    }\n    ngOnChanges(changes) {\n      if (changes['pieChartData']) {\n        this.updateCharts();\n      }\n    }\n    loadData() {\n      this.authService.user$.subscribe(user => {\n        if (!user) return;\n        this.firestore.collection('expenses', ref => ref.where('userId', '==', user.uid)).valueChanges().subscribe(data => {\n          let received = 0;\n          let spent = 0;\n          const monthlyMap = {};\n          const categoryMap = {};\n          data.forEach(exp => {\n            const date = exp.date?.toDate ? exp.date.toDate() : new Date(exp.date);\n            if (isNaN(date.getTime())) return;\n            const monthKey = `${date.toLocaleString('default', {\n              month: 'short'\n            })} ${date.getFullYear()}`;\n            const isIncome = exp.category.toLowerCase() === 'income';\n            if (!monthlyMap[monthKey]) {\n              monthlyMap[monthKey] = {\n                received: 0,\n                spent: 0\n              };\n            }\n            if (isIncome) {\n              received += exp.amount;\n              monthlyMap[monthKey].received += exp.amount;\n            } else {\n              spent += exp.amount;\n              monthlyMap[monthKey].spent += exp.amount;\n              if (!categoryMap[exp.category]) categoryMap[exp.category] = 0;\n              categoryMap[exp.category] += exp.amount;\n            }\n          });\n          this.totalReceived = received;\n          this.totalSpent = spent;\n          this.totalSaved = received - spent;\n          const monthLabels = Object.keys(monthlyMap);\n          const savingsData = monthLabels.map(key => monthlyMap[key].received - monthlyMap[key].spent);\n          const spentData = monthLabels.map(key => monthlyMap[key].spent);\n          const pieLabels = Object.keys(categoryMap);\n          const pieData = pieLabels.map(key => categoryMap[key]);\n          this.lineChartData.labels = monthLabels;\n          this.lineChartData.datasets[0].data = savingsData;\n          this.barChartData.labels = monthLabels;\n          this.barChartData.datasets[0].data = spentData;\n          this.pieChartData.labels = pieLabels;\n          this.pieChartData.datasets[0].data = pieData;\n          this.updateCharts();\n        });\n      });\n    }\n    loadBills() {\n      this.authService.user$.subscribe(user => {\n        if (!user) return;\n        this.firestore.collection('users').doc(user.uid).collection('cardBalanceHistory').get().subscribe(snapshot => {\n          const history = {};\n          snapshot.forEach(doc => {\n            history[doc.id] = doc.data()['value'];\n          });\n          const sortedMonths = Object.keys(history).sort((a, b) => {\n            const [aMonth, aYear] = a.split(' ');\n            const [bMonth, bYear] = b.split(' ');\n            return new Date(`${aMonth} 1, ${aYear}`).getTime() - new Date(`${bMonth} 1, ${bYear}`).getTime();\n          });\n          this.cardBalanceChartData.labels = sortedMonths;\n          const chartData = sortedMonths.map(m => {\n            const val = history[m];\n            return typeof val === 'number' ? val : Number(val) || 0;\n          });\n          this.cardBalanceChartData.datasets[0].data = chartData;\n          const latestMonth = sortedMonths.at(-1);\n          this.totalCardAmount = latestMonth ? history[latestMonth] || 0 : 0;\n          setTimeout(() => {\n            if (this.cardLineChart && !this.cardLineChart.chart) {\n              this.cardLineChart.chart = new Chart(this.cardLineChart.nativeElement, {\n                type: 'line',\n                data: this.cardBalanceChartData,\n                options: {\n                  responsive: true,\n                  plugins: {\n                    legend: {\n                      position: 'top'\n                    },\n                    datalabels: {\n                      anchor: 'end',\n                      align: 'top',\n                      font: {\n                        size: 13,\n                        weight: 'bold'\n                      },\n                      color: '#6a11cb',\n                      formatter: value => {\n                        return `$${value.toLocaleString(undefined, {\n                          minimumFractionDigits: value % 1 === 0 ? 0 : 1,\n                          maximumFractionDigits: 2\n                        })}`;\n                      }\n                    }\n                  },\n                  layout: {\n                    padding: {\n                      top: 10,\n                      bottom: 10,\n                      right: 30\n                    }\n                  }\n                },\n                plugins: [ChartDataLabels]\n              });\n            } else if (this.cardLineChart?.chart) {\n              this.cardLineChart.chart.data = this.cardBalanceChartData;\n              this.cardLineChart.chart.update();\n            }\n          }, 100);\n        });\n      });\n    }\n    updateCharts() {\n      if (this.pieChart && !this.pieChart.chart) {\n        this.pieChart.chart = new Chart(this.pieChart.nativeElement, {\n          type: 'doughnut',\n          data: this.pieChartData,\n          options: this.pieChartOptions\n        });\n      }\n      if (this.barChart && !this.barChart.chart) {\n        this.barChart.chart = new Chart(this.barChart.nativeElement, {\n          type: 'bar',\n          data: this.barChartData,\n          options: this.barChartOptions\n        });\n      }\n      if (this.lineChart && !this.lineChart.chart) {\n        this.lineChart.chart = new Chart(this.lineChart.nativeElement, {\n          type: 'line',\n          data: this.lineChartData,\n          options: this.lineChartOptions\n        });\n      }\n    }\n    static {\n      this.ɵfac = function HomeComponent_Factory(t) {\n        return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.AngularFirestore), i0.ɵɵdirectiveInject(i2.AuthService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: HomeComponent,\n        selectors: [[\"app-home\"]],\n        viewQuery: function HomeComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 5);\n            i0.ɵɵviewQuery(_c1, 5);\n            i0.ɵɵviewQuery(_c2, 5);\n            i0.ɵɵviewQuery(_c3, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.pieChart = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.barChart = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.lineChart = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cardLineChart = _t.first);\n          }\n        },\n        features: [i0.ɵɵNgOnChangesFeature],\n        decls: 49,\n        vars: 16,\n        consts: [[1, \"dashboard-container\"], [1, \"summary-cards\"], [1, \"card\", \"received\"], [1, \"cardname\"], [1, \"currency\"], [1, \"card\", \"spent\"], [1, \"card\", \"saved\"], [1, \"card\", \"card-amount\"], [1, \"top-row\"], [1, \"chart\"], [\"lineChart\", \"\"], [\"pieChart\", \"\"], [1, \"bottom-row\"], [1, \"chart\", \"bar-chart\"], [\"barChart\", \"\"], [\"cardLineChart\", \"\"]],\n        template: function HomeComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"mat-card\", 2)(3, \"span\", 3);\n            i0.ɵɵtext(4, \"Total Received:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"span\", 4);\n            i0.ɵɵtext(6);\n            i0.ɵɵpipe(7, \"currency\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(8, \"mat-card\", 5)(9, \"span\", 3);\n            i0.ɵɵtext(10, \"Total Spent:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(11, \"span\", 4);\n            i0.ɵɵtext(12);\n            i0.ɵɵpipe(13, \"currency\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(14, \"mat-card\", 6)(15, \"span\", 3);\n            i0.ɵɵtext(16, \"Total Saved:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(17, \"span\", 4);\n            i0.ɵɵtext(18);\n            i0.ɵɵpipe(19, \"currency\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(20, \"mat-card\", 7)(21, \"span\", 3);\n            i0.ɵɵtext(22, \"Total Amount:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(23, \"span\", 4);\n            i0.ɵɵtext(24);\n            i0.ɵɵpipe(25, \"currency\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(26, \"div\", 8)(27, \"div\", 9)(28, \"h3\");\n            i0.ɵɵtext(29, \"Savings Growth\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(30, \"canvas\", null, 10);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(32, \"div\", 9)(33, \"h3\");\n            i0.ɵɵtext(34, \"Spending by Category\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(35, \"canvas\", null, 11);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(37, \"div\", 12)(38, \"div\", 13)(39, \"h3\");\n            i0.ɵɵtext(40, \"Monthly Spend\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(41, \"canvas\", null, 14);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(43, \"div\", 12)(44, \"div\", 13)(45, \"h3\");\n            i0.ɵɵtext(46, \"Credit Card Balance Over Time\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(47, \"canvas\", null, 15);\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(6);\n            i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(7, 4, ctx.totalReceived, \"USD\"));\n            i0.ɵɵadvance(6);\n            i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(13, 7, ctx.totalSpent, \"USD\"));\n            i0.ɵɵadvance(6);\n            i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(19, 10, ctx.totalSaved, \"USD\"));\n            i0.ɵɵadvance(6);\n            i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(25, 13, ctx.totalCardAmount, \"USD\"));\n          }\n        },\n        dependencies: [i3.MatCard, i4.CurrencyPipe],\n        styles: [\".dashboard-container[_ngcontent-%COMP%]{padding:2rem;background:#f5f7fb;font-family:Segoe UI,sans-serif;color:#2e2e2e}.dashboard-container[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin-bottom:.5rem;font-size:1.1rem;font-weight:600;color:#333}.dashboard-container[_ngcontent-%COMP%]   .summary-cards[_ngcontent-%COMP%]{display:flex;justify-content:space-between;flex-wrap:wrap;gap:2rem;margin-bottom:2rem;max-width:85%;margin-left:auto;margin-right:auto}.dashboard-container[_ngcontent-%COMP%]   .summary-cards[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]{flex:1;padding:1.5rem;font-size:1rem;text-align:center;border-radius:16px;box-shadow:0 6px 16px #00000014;color:#fff;font-weight:600;min-width:240px}.dashboard-container[_ngcontent-%COMP%]   .summary-cards[_ngcontent-%COMP%]   .received[_ngcontent-%COMP%]{background:linear-gradient(to right,#6a11cb,#2575fc)}.dashboard-container[_ngcontent-%COMP%]   .summary-cards[_ngcontent-%COMP%]   .spent[_ngcontent-%COMP%]{background:linear-gradient(to right,#ff416c,#ff4b2b)}.dashboard-container[_ngcontent-%COMP%]   .summary-cards[_ngcontent-%COMP%]   .saved[_ngcontent-%COMP%]{background:linear-gradient(to right,#00b09b,#96c93d)}.dashboard-container[_ngcontent-%COMP%]   .summary-cards[_ngcontent-%COMP%]   .card-total[_ngcontent-%COMP%]{background:linear-gradient(to right,#8e2de2,#c471ed)}.dashboard-container[_ngcontent-%COMP%]   .top-row[_ngcontent-%COMP%], .dashboard-container[_ngcontent-%COMP%]   .bottom-row[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:2rem;margin-bottom:2rem}.dashboard-container[_ngcontent-%COMP%]   .top-row[_ngcontent-%COMP%]   .chart[_ngcontent-%COMP%], .dashboard-container[_ngcontent-%COMP%]   .bottom-row[_ngcontent-%COMP%]   .chart[_ngcontent-%COMP%]{background:white;padding:1.5rem;border-radius:16px;box-shadow:0 6px 16px #0000000f;flex:1;min-width:300px;max-height:400px}.dashboard-container[_ngcontent-%COMP%]   .top-row[_ngcontent-%COMP%]   .chart[_ngcontent-%COMP%]   canvas[_ngcontent-%COMP%], .dashboard-container[_ngcontent-%COMP%]   .bottom-row[_ngcontent-%COMP%]   .chart[_ngcontent-%COMP%]   canvas[_ngcontent-%COMP%]{margin-top:30px;width:100%!important;max-height:85%}.dashboard-container[_ngcontent-%COMP%]   .bottom-row[_ngcontent-%COMP%]   .bar-chart[_ngcontent-%COMP%], .dashboard-container[_ngcontent-%COMP%]   .bottom-row[_ngcontent-%COMP%]   .card-chart[_ngcontent-%COMP%]{flex:1 1 100%}.cardname[_ngcontent-%COMP%]{text-align:left;font-size:2rem}.currency[_ngcontent-%COMP%]{margin-top:60px;margin-right:100px;font-size:3rem}.card-amount[_ngcontent-%COMP%]{background:linear-gradient(to right,#8e2de2,#c471ed)}@media screen and (max-width: 768px){.dashboard-container[_ngcontent-%COMP%]{padding:1rem}.summary-cards[_ngcontent-%COMP%]{flex-direction:column;align-items:stretch;gap:1rem;max-width:100%}.card[_ngcontent-%COMP%]{font-size:.95rem;padding:1rem;min-width:auto!important}.cardname[_ngcontent-%COMP%]{font-size:1.3rem;text-align:center}.currency[_ngcontent-%COMP%]{font-size:2rem;margin-top:20px;margin-right:0;display:block;text-align:center}.top-row[_ngcontent-%COMP%], .bottom-row[_ngcontent-%COMP%]{flex-direction:column;gap:1rem}.top-row[_ngcontent-%COMP%]   .chart[_ngcontent-%COMP%], .bottom-row[_ngcontent-%COMP%]   .chart[_ngcontent-%COMP%]{max-height:none;padding:1rem}}\"]\n      });\n    }\n  }\n  return HomeComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
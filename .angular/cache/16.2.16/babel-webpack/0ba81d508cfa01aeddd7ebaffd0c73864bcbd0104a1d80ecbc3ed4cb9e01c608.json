{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/card\";\nimport * as i9 from \"@angular/material/icon\";\nimport * as i10 from \"@angular/material/progress-spinner\";\nimport * as i11 from \"@angular/material/checkbox\";\nimport * as i12 from \"@angular/forms\";\nfunction AuthComponent_div_6_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AuthComponent_div_6_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Phone is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AuthComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-form-field\", 4)(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Full Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 18, 19);\n    i0.ɵɵlistener(\"ngModelChange\", function AuthComponent_div_6_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.name = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, AuthComponent_div_6_mat_error_6_Template, 2, 0, \"mat-error\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"mat-form-field\", 4)(8, \"mat-label\");\n    i0.ɵɵtext(9, \"Phone Number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"input\", 20, 21);\n    i0.ɵɵlistener(\"ngModelChange\", function AuthComponent_div_6_Template_input_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.phone = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(12, AuthComponent_div_6_mat_error_12_Template, 2, 0, \"mat-error\", 3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const _r10 = i0.ɵɵreference(5);\n    const _r12 = i0.ɵɵreference(11);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", _r10.invalid && _r10.touched);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.phone);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", _r12.invalid && _r12.touched);\n  }\n}\nfunction AuthComponent_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Valid email required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AuthComponent_mat_error_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password must be at least 6 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AuthComponent_mat_form_field_22_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Confirm your password \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AuthComponent_mat_form_field_22_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Passwords do not match \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AuthComponent_mat_form_field_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-form-field\", 4)(1, \"mat-label\");\n    i0.ɵɵtext(2, \"Confirm Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 22, 23);\n    i0.ɵɵlistener(\"ngModelChange\", function AuthComponent_mat_form_field_22_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.confirmPassword = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, AuthComponent_mat_form_field_22_mat_error_5_Template, 2, 0, \"mat-error\", 3);\n    i0.ɵɵtemplate(6, AuthComponent_mat_form_field_22_mat_error_6_Template, 2, 0, \"mat-error\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r17 = i0.ɵɵreference(4);\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"type\", ctx_r6.showPassword ? \"text\" : \"password\")(\"ngModel\", ctx_r6.confirmPassword);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", _r17.invalid && _r17.touched);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.password !== ctx_r6.confirmPassword && ctx_r6.confirmPassword);\n  }\n}\nfunction AuthComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 24)(1, \"a\", 17);\n    i0.ɵɵlistener(\"click\", function AuthComponent_div_23_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.onForgotPassword());\n    });\n    i0.ɵɵtext(2, \"Forgot Password?\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AuthComponent_mat_progress_spinner_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-progress-spinner\", 25);\n  }\n}\nfunction AuthComponent_span_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r9.isLoginMode ? \"Login\" : \"Register\");\n  }\n}\nexport let AuthComponent = /*#__PURE__*/(() => {\n  class AuthComponent {\n    constructor(authService, router, snackBar) {\n      this.authService = authService;\n      this.router = router;\n      this.snackBar = snackBar;\n      this.isLoginMode = true;\n      this.showPassword = false;\n      this.isLoading = false;\n      this.rememberMe = true;\n      this.email = '';\n      this.password = '';\n      this.name = '';\n      this.phone = '';\n      this.confirmPassword = '';\n    }\n    ngOnInit() {\n      this.authService.getCurrentUser().subscribe(user => {\n        if (user) {\n          this.router.navigate(['/home']);\n        }\n      });\n    }\n    togglePasswordVisibility() {\n      this.showPassword = !this.showPassword;\n    }\n    onToggleMode() {\n      this.isLoginMode = !this.isLoginMode;\n    }\n    onSubmit(form) {\n      // ✅ Step 1: Confirm passwords match (before form check)\n      if (!this.isLoginMode && this.password !== this.confirmPassword) {\n        this.snackBar.open('Passwords do not match.', 'Close', {\n          duration: 3000,\n          panelClass: ['snackbar-error']\n        });\n        return;\n      }\n      // ✅ Step 2: Validate form\n      if (form.invalid) return;\n      // ✅ Step 3: Start loading\n      this.isLoading = true;\n      const {\n        name,\n        phone,\n        email,\n        password\n      } = form.value;\n      const persistence = this.rememberMe ? 'local' : 'session';\n      // ✅ Step 4: Auth logic - FIXED\n      let authPromise;\n      this.authService.setPersistence(persistence).then(() => {\n        authPromise = this.isLoginMode ? this.authService.login(email, password) : this.authService.register(name, phone, email, password);\n        return authPromise;\n      }).then(() => {\n        const message = this.isLoginMode ? 'Login successful!' : 'Registration successful!';\n        this.snackBar.open(message, 'Close', {\n          duration: 3000,\n          panelClass: ['snackbar-success']\n        });\n        this.router.navigate(['/home']);\n      }).catch(err => {\n        console.error('Firebase Auth Error:', err);\n        let message = 'Something went wrong.';\n        if (err.code === 'auth/user-not-found' || err.code === 'auth/wrong-password' || err.code === 'auth/invalid-login-credentials') {\n          message = 'Incorrect email or password.';\n        } else if (err.code === 'auth/email-already-in-use') {\n          message = 'Email already in use. Try logging in.';\n        } else if (err.code === 'auth/invalid-email') {\n          message = 'Invalid email address.';\n        } else if (err.code === 'auth/weak-password') {\n          message = 'Password must be at least 6 characters.';\n        }\n        this.snackBar.open(message, 'Close', {\n          duration: 3000,\n          panelClass: ['snackbar-error']\n        });\n      }).finally(() => {\n        this.isLoading = false;\n      });\n    }\n    onForgotPassword() {\n      if (!this.email) {\n        this.snackBar.open('Please enter your email first.', 'Close', {\n          duration: 3000,\n          panelClass: ['snackbar-error']\n        });\n        return;\n      }\n      this.authService.sendPasswordResetEmail(this.email).then(() => {\n        this.snackBar.open('Password reset email sent!', 'Close', {\n          duration: 3000,\n          panelClass: ['snackbar-success']\n        });\n      }).catch(err => {\n        let message = 'Failed to send reset email.';\n        if (err.code === 'auth/user-not-found') message = 'No account found with this email.';else if (err.code === 'auth/invalid-email') message = 'Invalid email address.';\n        this.snackBar.open(message, 'Close', {\n          duration: 3000,\n          panelClass: ['snackbar-error']\n        });\n      });\n    }\n    static {\n      this.ɵfac = function AuthComponent_Factory(t) {\n        return new (t || AuthComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.MatSnackBar));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: AuthComponent,\n        selectors: [[\"app-auth\"]],\n        decls: 34,\n        vars: 16,\n        consts: [[1, \"auth-container\"], [3, \"ngSubmit\"], [\"authForm\", \"ngForm\"], [4, \"ngIf\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"name\", \"email\", \"type\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"emailInput\", \"ngModel\"], [\"matInput\", \"\", \"name\", \"password\", \"required\", \"\", \"minlength\", \"6\", 3, \"type\", \"ngModel\", \"ngModelChange\"], [\"passwordInput\", \"ngModel\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", \"type\", \"button\", \"aria-label\", \"Toggle password visibility\", 3, \"click\"], [\"appearance\", \"outline\", 4, \"ngIf\"], [\"class\", \"forgot-password\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"full-width-button\", 3, \"disabled\"], [\"diameter\", \"20\", \"mode\", \"indeterminate\", \"color\", \"accent\", 4, \"ngIf\"], [1, \"remember-checkbox\"], [\"name\", \"rememberMe\", 3, \"ngModel\", \"ngModelChange\"], [1, \"mode-toggle\"], [3, \"click\"], [\"matInput\", \"\", \"name\", \"name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"nameInput\", \"ngModel\"], [\"matInput\", \"\", \"name\", \"phone\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"phoneInput\", \"ngModel\"], [\"matInput\", \"\", \"name\", \"confirmPassword\", \"required\", \"\", 3, \"type\", \"ngModel\", \"ngModelChange\"], [\"confirmInput\", \"ngModel\"], [1, \"forgot-password\"], [\"diameter\", \"20\", \"mode\", \"indeterminate\", \"color\", \"accent\"]],\n        template: function AuthComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r24 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-card\")(2, \"h2\");\n            i0.ɵɵtext(3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"form\", 1, 2);\n            i0.ɵɵlistener(\"ngSubmit\", function AuthComponent_Template_form_ngSubmit_4_listener() {\n              i0.ɵɵrestoreView(_r24);\n              const _r0 = i0.ɵɵreference(5);\n              return i0.ɵɵresetView(ctx.onSubmit(_r0));\n            });\n            i0.ɵɵtemplate(6, AuthComponent_div_6_Template, 13, 4, \"div\", 3);\n            i0.ɵɵelementStart(7, \"mat-form-field\", 4)(8, \"mat-label\");\n            i0.ɵɵtext(9, \"Email\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(10, \"input\", 5, 6);\n            i0.ɵɵlistener(\"ngModelChange\", function AuthComponent_Template_input_ngModelChange_10_listener($event) {\n              return ctx.email = $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(12, AuthComponent_mat_error_12_Template, 2, 0, \"mat-error\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(13, \"mat-form-field\", 4)(14, \"mat-label\");\n            i0.ɵɵtext(15, \"Password\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(16, \"input\", 7, 8);\n            i0.ɵɵlistener(\"ngModelChange\", function AuthComponent_Template_input_ngModelChange_16_listener($event) {\n              return ctx.password = $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(18, \"button\", 9);\n            i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_18_listener() {\n              return ctx.togglePasswordVisibility();\n            });\n            i0.ɵɵelementStart(19, \"mat-icon\");\n            i0.ɵɵtext(20);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(21, AuthComponent_mat_error_21_Template, 2, 0, \"mat-error\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(22, AuthComponent_mat_form_field_22_Template, 7, 4, \"mat-form-field\", 10);\n            i0.ɵɵtemplate(23, AuthComponent_div_23_Template, 3, 0, \"div\", 11);\n            i0.ɵɵelementStart(24, \"button\", 12);\n            i0.ɵɵtemplate(25, AuthComponent_mat_progress_spinner_25_Template, 1, 0, \"mat-progress-spinner\", 13);\n            i0.ɵɵtemplate(26, AuthComponent_span_26_Template, 2, 1, \"span\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(27, \"div\", 14)(28, \"mat-checkbox\", 15);\n            i0.ɵɵlistener(\"ngModelChange\", function AuthComponent_Template_mat_checkbox_ngModelChange_28_listener($event) {\n              return ctx.rememberMe = $event;\n            });\n            i0.ɵɵtext(29, \" Remember Me \");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(30, \"p\", 16);\n            i0.ɵɵtext(31);\n            i0.ɵɵelementStart(32, \"a\", 17);\n            i0.ɵɵlistener(\"click\", function AuthComponent_Template_a_click_32_listener() {\n              return ctx.onToggleMode();\n            });\n            i0.ɵɵtext(33);\n            i0.ɵɵelementEnd()()()()();\n          }\n          if (rf & 2) {\n            const _r2 = i0.ɵɵreference(11);\n            const _r4 = i0.ɵɵreference(17);\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate(ctx.isLoginMode ? \"Login\" : \"Register\");\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngIf\", !ctx.isLoginMode);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngModel\", ctx.email);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", _r2.invalid && _r2.touched);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"type\", ctx.showPassword ? \"text\" : \"password\")(\"ngModel\", ctx.password);\n            i0.ɵɵadvance(4);\n            i0.ɵɵtextInterpolate(ctx.showPassword ? \"visibility_off\" : \"visibility\");\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", _r4.invalid && _r4.touched);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.isLoginMode);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.isLoginMode);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"disabled\", ctx.isLoading);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngModel\", ctx.rememberMe);\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate1(\" \", ctx.isLoginMode ? \"Don't have an account?\" : \"Already have an account?\", \" \");\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate(ctx.isLoginMode ? \"Register\" : \"Login\");\n          }\n        },\n        dependencies: [i4.NgIf, i5.MatButton, i5.MatIconButton, i6.MatFormField, i6.MatLabel, i6.MatError, i6.MatSuffix, i7.MatInput, i8.MatCard, i9.MatIcon, i10.MatProgressSpinner, i11.MatCheckbox, i12.ɵNgNoValidate, i12.DefaultValueAccessor, i12.NgControlStatus, i12.NgControlStatusGroup, i12.RequiredValidator, i12.MinLengthValidator, i12.NgModel, i12.NgForm],\n        styles: [\".auth-container[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;height:100vh;background:linear-gradient(to right,#e0eafc,#cfdef3)}.auth-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]{padding:2rem 2.5rem;border-radius:16px;box-shadow:0 10px 40px #00000026;min-width:400px;max-width:450px;width:100%}.auth-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin-bottom:1.5rem;text-align:center;font-size:1.8rem}.auth-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]{display:block;width:100%;margin-bottom:1rem}.auth-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]   .forgot-password[_ngcontent-%COMP%]{text-align:right;margin-bottom:1rem}.auth-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]   .forgot-password[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{font-size:.85rem;color:#3f51b5;cursor:pointer;font-weight:500}.auth-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]   .full-width-button[_ngcontent-%COMP%]{width:100%;display:flex;align-items:center;justify-content:center;margin-bottom:.75rem}.auth-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]   .remember-checkbox[_ngcontent-%COMP%]{text-align:center;margin-bottom:1rem}.auth-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]   .mat-mdc-progress-spinner[_ngcontent-%COMP%]{margin-right:.5rem}.auth-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]   .mode-toggle[_ngcontent-%COMP%]{margin-top:1.5rem;text-align:center}.auth-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]   .mode-toggle[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{cursor:pointer;font-weight:600;color:#3f51b5}@media screen and (max-width: 600px){.auth-container[_ngcontent-%COMP%]{padding:20px;align-items:flex-start;height:auto}.auth-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]{min-width:100%;max-width:100%;padding:1.5rem}.auth-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:1.5rem}.auth-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]   .full-width-button[_ngcontent-%COMP%]{font-size:1rem}.auth-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]   .mode-toggle[_ngcontent-%COMP%]{font-size:.9rem}.auth-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]   .forgot-password[_ngcontent-%COMP%]{text-align:left}}\"]\n      });\n    }\n  }\n  return AuthComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
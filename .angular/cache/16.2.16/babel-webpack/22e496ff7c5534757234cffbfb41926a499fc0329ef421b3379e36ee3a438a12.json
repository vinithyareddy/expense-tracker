{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { Chart } from 'chart.js/auto';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nChart.register(ChartDataLabels);\nlet HomeComponent = class HomeComponent {\n  constructor() {\n    this.totalReceived = 0;\n    this.totalSpent = 0;\n    this.totalSaved = 0;\n    this.totalCardAmount = 0;\n    this.cardBalanceChartData = {\n      labels: [],\n      datasets: [{\n        label: 'Card Balance',\n        data: [],\n        borderColor: '#9c27b0',\n        backgroundColor: 'rgba(156, 39, 176, 0.2)',\n        tension: 0.4,\n        fill: true\n      }]\n    };\n    this.lineChartData = {\n      labels: [],\n      datasets: [{\n        data: [],\n        label: 'Savings',\n        fill: true,\n        tension: 0.4,\n        borderColor: '#4caf50',\n        backgroundColor: 'rgba(76, 175, 80, 0.2)'\n      }]\n    };\n    this.pieChartData = {\n      labels: [],\n      datasets: [{\n        data: [],\n        backgroundColor: ['#42a5f5', '#66bb6a', '#ffa726', '#ef5350', '#ab47bc', '#26c6da']\n      }]\n    };\n    this.barChartData = {\n      labels: [],\n      datasets: [{\n        data: [],\n        label: 'Spent',\n        backgroundColor: '#ff7043',\n        barPercentage: 0.4,\n        categoryPercentage: 0.6\n      }]\n    };\n  }\n};\n__decorate([ViewChild('pieChart')], HomeComponent.prototype, \"pieChart\", void 0);\n__decorate([ViewChild('barChart')], HomeComponent.prototype, \"barChart\", void 0);\n__decorate([ViewChild('lineChart')], HomeComponent.prototype, \"lineChart\", void 0);\n__decorate([ViewChild('cardLineChart')], HomeComponent.prototype, \"cardLineChart\", void 0);\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})], HomeComponent);\nexport { HomeComponent };\n() => {\n  this.loadData();\n  this.loadBills();\n  // âœ… Auto-refresh Home on Bills page changes\n  window.addEventListener('storage', this.handleStorageChange.bind(this));\n};\nngOnDestroy();\n{\n  window.removeEventListener('storage', this.handleStorageChange.bind(this));\n}\nhandleStorageChange(event, StorageEvent);\n{\n  if (event.key === 'cardBalanceHistory' || event.key === 'totalCreditCardAmount' || event.key === 'bills') {\n    this.loadBills();\n  }\n}\nngOnChanges(changes, SimpleChanges);\n{\n  if (changes['pieChartData']) {\n    this.updateCharts();\n  }\n}\nloadData();\n{\n  this.authService.user$.subscribe(user => {\n    if (!user) return;\n    this.firestore.collection(`users/${user.uid}/expenses`).valueChanges().subscribe(data => {\n      // same processing logic...\n    });\n  });\n  let received = 0;\n  let spent = 0;\n  const monthlyMap = {};\n  const categoryMap = {};\n  data.forEach(exp => {\n    const date = exp.date?.toDate ? exp.date.toDate() : new Date(exp.date);\n    if (isNaN(date.getTime())) return;\n    const monthKey = `${date.toLocaleString('default', {\n      month: 'short'\n    })} ${date.getFullYear()}`;\n    const isIncome = exp.category.toLowerCase() === 'income';\n    if (!monthlyMap[monthKey]) {\n      monthlyMap[monthKey] = {\n        received: 0,\n        spent: 0\n      };\n    }\n    if (isIncome) {\n      received += exp.amount;\n      monthlyMap[monthKey].received += exp.amount;\n    } else {\n      spent += exp.amount;\n      monthlyMap[monthKey].spent += exp.amount;\n      if (!categoryMap[exp.category]) categoryMap[exp.category] = 0;\n      categoryMap[exp.category] += exp.amount;\n    }\n  });\n  this.totalReceived = received;\n  this.totalSpent = spent;\n  this.totalSaved = received - spent;\n  const monthLabels = Object.keys(monthlyMap);\n  const savingsData = monthLabels.map(key => monthlyMap[key].received - monthlyMap[key].spent);\n  const spentData = monthLabels.map(key => monthlyMap[key].spent);\n  const pieLabels = Object.keys(categoryMap);\n  const pieData = pieLabels.map(key => categoryMap[key]);\n  this.lineChartData.labels = monthLabels;\n  this.lineChartData.datasets[0].data = savingsData;\n  this.barChartData.labels = monthLabels;\n  this.barChartData.datasets[0].data = spentData;\n  this.pieChartData.labels = pieLabels;\n  this.pieChartData.datasets[0].data = pieData;\n  this.updateCharts();\n}\n;\nloadBills();\n{\n  this.authService.user$.subscribe(user => {\n    if (!user) return;\n    this.firestore.collection('users').doc(user.uid).collection('cardBalanceHistory').get().subscribe(snapshot => {\n      const history = {};\n      snapshot.forEach(doc => {\n        history[doc.id] = doc.data()['value']; // assuming 'value' is the field for balance\n      });\n      // then use the same sorting + chart logic here...\n    });\n  });\n\n  const sortedMonths = Object.keys(history).sort((a, b) => {\n    const [aMonth, aYear] = a.split(' ');\n    const [bMonth, bYear] = b.split(' ');\n    return new Date(`${aMonth} 1, ${aYear}`).getTime() - new Date(`${bMonth} 1, ${bYear}`).getTime();\n  });\n  this.cardBalanceChartData.labels = sortedMonths;\n  const chartData = sortedMonths.map(m => {\n    const val = history[m];\n    return typeof val === 'number' ? val : Number(val) || 0;\n  });\n  this.cardBalanceChartData.datasets[0].data = chartData;\n  const latestMonth = sortedMonths.at(-1);\n  this.totalCardAmount = latestMonth ? history[latestMonth] || 0 : 0;\n  setTimeout(() => {\n    if (this.cardLineChart && !this.cardLineChart.chart) {\n      this.cardLineChart.chart = new Chart(this.cardLineChart.nativeElement, {\n        type: 'line',\n        data: this.cardBalanceChartData,\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top'\n            },\n            datalabels: {\n              anchor: 'end',\n              align: 'top',\n              font: {\n                size: 13,\n                weight: 'bold'\n              },\n              color: '#6a11cb',\n              formatter: value => {\n                return `$${value.toLocaleString(undefined, {\n                  minimumFractionDigits: value % 1 === 0 ? 0 : 1,\n                  maximumFractionDigits: 2\n                })}`;\n              }\n            }\n          },\n          layout: {\n            padding: {\n              top: 10,\n              bottom: 10,\n              right: 30\n            }\n          }\n        },\n        plugins: [ChartDataLabels]\n      });\n    } else if (this.cardLineChart?.chart) {\n      this.cardLineChart.chart.data = this.cardBalanceChartData;\n      this.cardLineChart.chart.update();\n    }\n  }, 100);\n}\nupdateCharts();\n{\n  if (this.pieChart && !this.pieChart.chart) {\n    this.pieChart.chart = new Chart(this.pieChart.nativeElement, {\n      type: 'doughnut',\n      data: this.pieChartData,\n      options: this.pieChartOptions\n    });\n  }\n  if (this.barChart && !this.barChart.chart) {\n    this.barChart.chart = new Chart(this.barChart.nativeElement, {\n      type: 'bar',\n      data: this.barChartData,\n      options: this.barChartOptions\n    });\n  }\n  if (this.lineChart && !this.lineChart.chart) {\n    this.lineChart.chart = new Chart(this.lineChart.nativeElement, {\n      type: 'line',\n      data: this.lineChartData,\n      options: this.lineChartOptions\n    });\n  }\n}\npieChartOptions: ChartOptions = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'top'\n    },\n    datalabels: {\n      color: '#fff',\n      formatter: (value, ctx) => {\n        const data = ctx.chart.data.datasets[0].data;\n        const total = data.reduce((a, b) => a + b, 0);\n        return total ? (value / total * 100).toFixed(0) + '%' : '';\n      },\n      font: {\n        weight: 'bold',\n        size: 14\n      }\n    }\n  },\n  cutout: '60%'\n};\npieChartPlugins = [ChartDataLabels];\nlineChartOptions: ChartConfiguration < 'line' > ['options'];\n{\n  responsive: true, maintainAspectRatio;\n  false, plugins;\n  {\n    legend: {\n      position: 'top';\n    }\n  }\n  layout: {\n    padding: {\n      top: 10, bottom;\n      10;\n    }\n  }\n}\n;\nbarChartOptions: ChartConfiguration < 'bar' > ['options'];\n{\n  responsive: true, maintainAspectRatio;\n  false, plugins;\n  {\n    legend: {\n      position: 'top';\n    }\n  }\n  scales: {\n    x: {\n      ticks: {\n        font: {\n          size: 12;\n        }\n      }\n      grid: {\n        display: false;\n      }\n    }\n    y: {\n      beginAtZero: true, ticks;\n      {\n        font: {\n          size: 12;\n        }\n      }\n      grid: {\n        color: 'rgba(0, 0, 0, 0.05)';\n      }\n    }\n  }\n}\n;","map":{"version":3,"names":["Component","ViewChild","Chart","ChartDataLabels","register","HomeComponent","constructor","totalReceived","totalSpent","totalSaved","totalCardAmount","cardBalanceChartData","labels","datasets","label","data","borderColor","backgroundColor","tension","fill","lineChartData","pieChartData","barChartData","barPercentage","categoryPercentage","__decorate","selector","templateUrl","styleUrls","loadData","loadBills","window","addEventListener","handleStorageChange","bind","ngOnDestroy","removeEventListener","event","StorageEvent","key","ngOnChanges","changes","SimpleChanges","updateCharts","authService","user$","subscribe","user","firestore","collection","uid","valueChanges","received","spent","monthlyMap","categoryMap","forEach","exp","date","toDate","Date","isNaN","getTime","monthKey","toLocaleString","month","getFullYear","isIncome","category","toLowerCase","amount","monthLabels","Object","keys","savingsData","map","spentData","pieLabels","pieData","doc","get","snapshot","history","id","sortedMonths","sort","a","b","aMonth","aYear","split","bMonth","bYear","chartData","m","val","Number","latestMonth","at","setTimeout","cardLineChart","chart","nativeElement","type","options","responsive","plugins","legend","position","datalabels","anchor","align","font","size","weight","color","formatter","value","undefined","minimumFractionDigits","maximumFractionDigits","layout","padding","top","bottom","right","update","pieChart","pieChartOptions","barChart","barChartOptions","lineChart","lineChartOptions","ChartOptions","ctx","total","reduce","toFixed","cutout","pieChartPlugins","ChartConfiguration","maintainAspectRatio","scales","x","ticks","grid","display","y","beginAtZero"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/expense-tracker/src/app/pages/home/home.component.ts"],"sourcesContent":["import { Component, OnInit, OnChanges, OnDestroy, SimpleChanges, ViewChild } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Chart, ChartConfiguration, ChartOptions } from 'chart.js/auto';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { Expense } from '../expenses/expenses.component';\nimport { Bill } from '../../models/bill.model';\nimport firebase from 'firebase/compat/app';\n\nChart.register(ChartDataLabels);\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit, OnChanges, OnDestroy {\n  totalReceived = 0;\n  totalSpent = 0;\n  totalSaved = 0;\n  totalCardAmount = 0;\n\n  @ViewChild('pieChart') pieChart: any;\n  @ViewChild('barChart') barChart: any;\n  @ViewChild('lineChart') lineChart: any;\n  @ViewChild('cardLineChart') cardLineChart: any;\n\n  cardBalanceChartData: ChartConfiguration<'line'>['data'] = {\n    labels: [],\n    datasets: [\n      {\n        label: 'Card Balance',\n        data: [],\n        borderColor: '#9c27b0',\n        backgroundColor: 'rgba(156, 39, 176, 0.2)',\n        tension: 0.4,\n        fill: true\n      }\n    ]\n  };\n\n  lineChartData: ChartConfiguration<'line'>['data'] = {\n    labels: [],\n    datasets: [\n      {\n        data: [],\n        label: 'Savings',\n        fill: true,\n        tension: 0.4,\n        borderColor: '#4caf50',\n        backgroundColor: 'rgba(76, 175, 80, 0.2)'\n      }\n    ]\n  };\n\n  pieChartData: ChartConfiguration<'doughnut'>['data'] = {\n    labels: [],\n    datasets: [\n      {\n        data: [],\n        backgroundColor: ['#42a5f5', '#66bb6a', '#ffa726', '#ef5350', '#ab47bc', '#26c6da']\n      }\n    ]\n  };\n\n  barChartData: ChartConfiguration<'bar'>['data'] = {\n    labels: [],\n    datasets: [\n      {\n        data: [],\n        label: 'Spent',\n        backgroundColor: '#ff7043',\n        barPercentage: 0.4,\n        categoryPercentage: 0.6\n      }\n    ]\n  };\n\n  constructor(private firestore: AngularFirestore, private authService: AuthService {}\n\n  ngOnInit() {\n    this.loadData();\n    this.loadBills();\n\n    // âœ… Auto-refresh Home on Bills page changes\n    window.addEventListener('storage', this.handleStorageChange.bind(this));\n  }\n\n  ngOnDestroy() {\n    window.removeEventListener('storage', this.handleStorageChange.bind(this));\n  }\n\n  handleStorageChange(event: StorageEvent) {\n    if (\n      event.key === 'cardBalanceHistory' ||\n      event.key === 'totalCreditCardAmount' ||\n      event.key === 'bills'\n    ) {\n      this.loadBills();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['pieChartData']) {\n      this.updateCharts();\n    }\n  }\n\n  loadData() {\n    this.authService.user$.subscribe(user => {\n      if (!user) return;\n    \n      this.firestore.collection<Expense>(`users/${user.uid}/expenses`).valueChanges()\n        .subscribe((data: Expense[]) => {\n          // same processing logic...\n        });\n    });\n          let received = 0;\n      let spent = 0;\n\n      const monthlyMap: { [key: string]: { received: number; spent: number } } = {};\n      const categoryMap: { [category: string]: number } = {};\n\n      data.forEach(exp => {\n        const date = exp.date?.toDate ? exp.date.toDate() : new Date(exp.date);\n        if (isNaN(date.getTime())) return;\n\n        const monthKey = `${date.toLocaleString('default', { month: 'short' })} ${date.getFullYear()}`;\n        const isIncome = exp.category.toLowerCase() === 'income';\n\n        if (!monthlyMap[monthKey]) {\n          monthlyMap[monthKey] = { received: 0, spent: 0 };\n        }\n\n        if (isIncome) {\n          received += exp.amount;\n          monthlyMap[monthKey].received += exp.amount;\n        } else {\n          spent += exp.amount;\n          monthlyMap[monthKey].spent += exp.amount;\n\n          if (!categoryMap[exp.category]) categoryMap[exp.category] = 0;\n          categoryMap[exp.category] += exp.amount;\n        }\n      });\n\n      this.totalReceived = received;\n      this.totalSpent = spent;\n      this.totalSaved = received - spent;\n\n      const monthLabels = Object.keys(monthlyMap);\n      const savingsData = monthLabels.map(key => monthlyMap[key].received - monthlyMap[key].spent);\n      const spentData = monthLabels.map(key => monthlyMap[key].spent);\n      const pieLabels = Object.keys(categoryMap);\n      const pieData = pieLabels.map(key => categoryMap[key]);\n\n      this.lineChartData.labels = monthLabels;\n      this.lineChartData.datasets[0].data = savingsData;\n\n      this.barChartData.labels = monthLabels;\n      this.barChartData.datasets[0].data = spentData;\n\n      this.pieChartData.labels = pieLabels;\n      this.pieChartData.datasets[0].data = pieData;\n\n      this.updateCharts();\n    });\n  }\n\n  loadBills() {\n    this.authService.user$.subscribe(user => {\n      if (!user) return;\n    \n      this.firestore.collection('users').doc(user.uid).collection('cardBalanceHistory').get().subscribe(snapshot => {\n        const history: Record<string, number> = {};\n        snapshot.forEach(doc => {\n          history[doc.id] = doc.data()['value']; // assuming 'value' is the field for balance\n        });\n    \n        // then use the same sorting + chart logic here...\n      });\n    });\n    \n\n    const sortedMonths = Object.keys(history).sort((a, b) => {\n      const [aMonth, aYear] = a.split(' ');\n      const [bMonth, bYear] = b.split(' ');\n      return new Date(`${aMonth} 1, ${aYear}`).getTime() - new Date(`${bMonth} 1, ${bYear}`).getTime();\n    });\n\n    this.cardBalanceChartData.labels = sortedMonths;\n\n    const chartData = sortedMonths.map(m => {\n      const val = history[m];\n      return typeof val === 'number' ? val : Number(val) || 0;\n    }) as number[];\n\n    this.cardBalanceChartData.datasets[0].data = chartData;\n\n    const latestMonth = sortedMonths.at(-1);\n    this.totalCardAmount = latestMonth ? (history[latestMonth] || 0) : 0;\n\n    setTimeout(() => {\n      if (this.cardLineChart && !this.cardLineChart.chart) {\n        this.cardLineChart.chart = new Chart(this.cardLineChart.nativeElement, {\n          type: 'line',\n          data: this.cardBalanceChartData,\n          options: {\n            responsive: true,\n            plugins: {\n              legend: { position: 'top' },\n              datalabels: {\n                anchor: 'end',\n                align: 'top',\n                font: { size: 13, weight: 'bold' },\n                color: '#6a11cb',\n                formatter: (value: number) => {\n                  return `$${value.toLocaleString(undefined, {\n                    minimumFractionDigits: value % 1 === 0 ? 0 : 1,\n                    maximumFractionDigits: 2\n                  })}`;\n                }\n              }\n            },\n            layout: { padding: { top: 10, bottom: 10, right: 30 } }\n          },\n          plugins: [ChartDataLabels]\n        });\n      } else if (this.cardLineChart?.chart) {\n        this.cardLineChart.chart.data = this.cardBalanceChartData;\n        this.cardLineChart.chart.update();\n      }\n    }, 100);\n  }\n\n  updateCharts() {\n    if (this.pieChart && !this.pieChart.chart) {\n      this.pieChart.chart = new Chart(this.pieChart.nativeElement, {\n        type: 'doughnut',\n        data: this.pieChartData,\n        options: this.pieChartOptions\n      });\n    }\n    if (this.barChart && !this.barChart.chart) {\n      this.barChart.chart = new Chart(this.barChart.nativeElement, {\n        type: 'bar',\n        data: this.barChartData,\n        options: this.barChartOptions\n      });\n    }\n    if (this.lineChart && !this.lineChart.chart) {\n      this.lineChart.chart = new Chart(this.lineChart.nativeElement, {\n        type: 'line',\n        data: this.lineChartData,\n        options: this.lineChartOptions\n      });\n    }\n  }\n\n  pieChartOptions: ChartOptions<'doughnut'> = {\n    responsive: true,\n    plugins: {\n      legend: { position: 'top' },\n      datalabels: {\n        color: '#fff',\n        formatter: (value: number, ctx) => {\n          const data = ctx.chart.data.datasets[0].data as number[];\n          const total = data.reduce((a, b) => a + b, 0);\n          return total ? ((value / total) * 100).toFixed(0) + '%' : '';\n        },\n        font: { weight: 'bold', size: 14 }\n      }\n    },\n    cutout: '60%'\n  };\n\n  pieChartPlugins = [ChartDataLabels];\n\n  lineChartOptions: ChartConfiguration<'line'>['options'] = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: { position: 'top' }\n    },\n    layout: { padding: { top: 10, bottom: 10 } }\n  };\n\n  barChartOptions: ChartConfiguration<'bar'>['options'] = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: { position: 'top' }\n    },\n    scales: {\n      x: {\n        ticks: { font: { size: 12 } },\n        grid: { display: false }\n      },\n      y: {\n        beginAtZero: true,\n        ticks: { font: { size: 12 } },\n        grid: { color: 'rgba(0, 0, 0, 0.05)' }\n      }\n    }\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { Chart } from 'chart.js';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nChart.register(ChartDataLabels);\nlet HomeComponent = class HomeComponent {\n  constructor(firestore) {\n    this.firestore = firestore;\n    this.totalReceived = 0;\n    this.totalSpent = 0;\n    this.totalSaved = 0;\n    this.lineChartData = {\n      labels: [],\n      datasets: [{\n        data: [],\n        label: 'Savings',\n        fill: true,\n        tension: 0.4,\n        borderColor: '#4caf50',\n        backgroundColor: 'rgba(76, 175, 80, 0.2)'\n      }]\n    };\n    // 👇 Updated pie chart to doughnut chart\n    this.pieChartData = {\n      labels: [],\n      datasets: [{\n        data: [],\n        backgroundColor: ['#42a5f5', '#66bb6a', '#ffa726', '#ef5350', '#ab47bc', '#26c6da']\n      }]\n    };\n    this.barChartData = {\n      labels: [],\n      datasets: [{\n        data: [],\n        label: 'Spent',\n        backgroundColor: '#ff7043',\n        barPercentage: 0.4,\n        categoryPercentage: 0.6\n      }]\n    };\n    // 👇 Updated type from 'pie' to 'doughnut'\n    this.pieChartOptions = {\n      responsive: true,\n      plugins: {\n        legend: {\n          position: 'top'\n        },\n        datalabels: {\n          color: '#fff',\n          formatter: (value, ctx) => {\n            const data = ctx.chart.data.datasets[0].data;\n            const total = data.reduce((a, b) => a + b, 0);\n            return total ? (value / total * 100).toFixed(0) + '%' : '';\n          },\n          font: {\n            weight: 'bold',\n            size: 14\n          }\n        }\n      },\n      cutout: '60%' // 🍩 thickness of donut hole\n    };\n\n    this.pieChartPlugins = [ChartDataLabels];\n    this.lineChartOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          position: 'top'\n        }\n      },\n      layout: {\n        padding: {\n          top: 10,\n          bottom: 10\n        }\n      }\n    };\n    this.barChartOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          position: 'top'\n        }\n      },\n      scales: {\n        x: {\n          ticks: {\n            font: {\n              size: 12\n            }\n          },\n          grid: {\n            display: false\n          }\n        },\n        y: {\n          beginAtZero: true,\n          ticks: {\n            font: {\n              size: 12\n            }\n          },\n          grid: {\n            color: 'rgba(0, 0, 0, 0.05)'\n          }\n        }\n      }\n    };\n  }\n  ngOnInit() {\n    this.loadData();\n  }\n  ngOnChanges(changes) {\n    if (changes['pieChartData']) {\n      this.updateCharts();\n    }\n  }\n  loadData() {\n    this.firestore.collection('expenses').valueChanges().subscribe(data => {\n      let received = 0;\n      let spent = 0;\n      const monthlyMap = {};\n      const categoryMap = {};\n      data.forEach(exp => {\n        const date = exp.date?.toDate ? exp.date.toDate() : new Date(exp.date);\n        if (isNaN(date.getTime())) return;\n        const monthKey = `${date.toLocaleString('default', {\n          month: 'short'\n        })} ${date.getFullYear()}`;\n        const isIncome = exp.category.toLowerCase() === 'income';\n        if (!monthlyMap[monthKey]) {\n          monthlyMap[monthKey] = {\n            received: 0,\n            spent: 0\n          };\n        }\n        if (isIncome) {\n          received += exp.amount;\n          monthlyMap[monthKey].received += exp.amount;\n        } else {\n          spent += exp.amount;\n          monthlyMap[monthKey].spent += exp.amount;\n          if (!categoryMap[exp.category]) categoryMap[exp.category] = 0;\n          categoryMap[exp.category] += exp.amount;\n        }\n      });\n      this.totalReceived = received;\n      this.totalSpent = spent;\n      this.totalSaved = received - spent;\n      const monthLabels = Object.keys(monthlyMap);\n      const savingsData = monthLabels.map(key => monthlyMap[key].received - monthlyMap[key].spent);\n      const spentData = monthLabels.map(key => monthlyMap[key].spent);\n      const pieLabels = Object.keys(categoryMap);\n      const pieData = pieLabels.map(key => categoryMap[key]);\n      this.lineChartData.labels = monthLabels;\n      this.lineChartData.datasets[0].data = savingsData;\n      this.barChartData.labels = monthLabels;\n      this.barChartData.datasets[0].data = spentData;\n      this.pieChartData.labels = pieLabels;\n      this.pieChartData.datasets[0].data = pieData;\n      this.updateCharts();\n    });\n  }\n  updateCharts() {\n    if (this.pieChart && !this.pieChart.chart) {\n      this.pieChart.chart = new Chart(this.pieChart.nativeElement, {\n        type: 'doughnut',\n        data: this.pieChartData,\n        options: this.pieChartOptions\n      });\n    }\n    if (this.barChart && !this.barChart.chart) {\n      this.barChart.chart = new Chart(this.barChart.nativeElement, {\n        type: 'bar',\n        data: this.barChartData,\n        options: this.barChartOptions\n      });\n    }\n    if (this.lineChart && !this.lineChart.chart) {\n      this.lineChart.chart = new Chart(this.lineChart.nativeElement, {\n        type: 'line',\n        data: this.lineChartData,\n        options: this.lineChartOptions\n      });\n    }\n  }\n};\n__decorate([ViewChild('pieChart')], HomeComponent.prototype, \"pieChart\", void 0);\n__decorate([ViewChild('barChart')], HomeComponent.prototype, \"barChart\", void 0);\n__decorate([ViewChild('lineChart')], HomeComponent.prototype, \"lineChart\", void 0);\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"names":["Component","ViewChild","Chart","ChartDataLabels","register","HomeComponent","constructor","firestore","totalReceived","totalSpent","totalSaved","lineChartData","labels","datasets","data","label","fill","tension","borderColor","backgroundColor","pieChartData","barChartData","barPercentage","categoryPercentage","pieChartOptions","responsive","plugins","legend","position","datalabels","color","formatter","value","ctx","chart","total","reduce","a","b","toFixed","font","weight","size","cutout","pieChartPlugins","lineChartOptions","maintainAspectRatio","layout","padding","top","bottom","barChartOptions","scales","x","ticks","grid","display","y","beginAtZero","ngOnInit","loadData","ngOnChanges","changes","updateCharts","collection","valueChanges","subscribe","received","spent","monthlyMap","categoryMap","forEach","exp","date","toDate","Date","isNaN","getTime","monthKey","toLocaleString","month","getFullYear","isIncome","category","toLowerCase","amount","monthLabels","Object","keys","savingsData","map","key","spentData","pieLabels","pieData","pieChart","nativeElement","type","options","barChart","lineChart","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/expense-tracker/src/app/pages/home/home.component.ts"],"sourcesContent":["import { Component, OnInit, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { ChartConfiguration, ChartOptions, Chart } from 'chart.js';\nimport { Expense } from '../expenses/expenses.component';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\n\nChart.register(ChartDataLabels);\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit, OnChanges {\n  totalReceived = 0;\n  totalSpent = 0;\n  totalSaved = 0;\n\n  lineChartData: ChartConfiguration<'line'>['data'] = {\n    labels: [],\n    datasets: [\n      {\n        data: [],\n        label: 'Savings',\n        fill: true,\n        tension: 0.4,\n        borderColor: '#4caf50',\n        backgroundColor: 'rgba(76, 175, 80, 0.2)'\n      }\n    ]\n  };\n\n  // 👇 Updated pie chart to doughnut chart\n  pieChartData: ChartConfiguration<'doughnut'>['data'] = {\n    labels: [],\n    datasets: [\n      {\n        data: [],\n        backgroundColor: ['#42a5f5', '#66bb6a', '#ffa726', '#ef5350', '#ab47bc', '#26c6da']\n      }\n    ]\n  };\n\n  barChartData: ChartConfiguration<'bar'>['data'] = {\n    labels: [],\n    datasets: [\n      {\n        data: [],\n        label: 'Spent',\n        backgroundColor: '#ff7043',\n        barPercentage: 0.4,\n        categoryPercentage: 0.6\n      }\n    ]\n  };\n\n  @ViewChild('pieChart') pieChart: any;\n  @ViewChild('barChart') barChart: any;\n  @ViewChild('lineChart') lineChart: any;\n\n  constructor(private firestore: AngularFirestore) {}\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['pieChartData']) {\n      this.updateCharts();\n    }\n  }\n\n  loadData() {\n    this.firestore.collection<Expense>('expenses').valueChanges().subscribe((data: Expense[]) => {\n      let received = 0;\n      let spent = 0;\n\n      const monthlyMap: { [key: string]: { received: number; spent: number } } = {};\n      const categoryMap: { [category: string]: number } = {};\n\n      data.forEach(exp => {\n        const date = exp.date?.toDate ? exp.date.toDate() : new Date(exp.date);\n        if (isNaN(date.getTime())) return;\n\n        const monthKey = `${date.toLocaleString('default', { month: 'short' })} ${date.getFullYear()}`;\n        const isIncome = exp.category.toLowerCase() === 'income';\n\n        if (!monthlyMap[monthKey]) {\n          monthlyMap[monthKey] = { received: 0, spent: 0 };\n        }\n\n        if (isIncome) {\n          received += exp.amount;\n          monthlyMap[monthKey].received += exp.amount;\n        } else {\n          spent += exp.amount;\n          monthlyMap[monthKey].spent += exp.amount;\n\n          if (!categoryMap[exp.category]) categoryMap[exp.category] = 0;\n          categoryMap[exp.category] += exp.amount;\n        }\n      });\n\n      this.totalReceived = received;\n      this.totalSpent = spent;\n      this.totalSaved = received - spent;\n\n      const monthLabels = Object.keys(monthlyMap);\n      const savingsData = monthLabels.map(key => monthlyMap[key].received - monthlyMap[key].spent);\n      const spentData = monthLabels.map(key => monthlyMap[key].spent);\n      const pieLabels = Object.keys(categoryMap);\n      const pieData = pieLabels.map(key => categoryMap[key]);\n\n      this.lineChartData.labels = monthLabels;\n      this.lineChartData.datasets[0].data = savingsData;\n\n      this.barChartData.labels = monthLabels;\n      this.barChartData.datasets[0].data = spentData;\n\n      this.pieChartData.labels = pieLabels;\n      this.pieChartData.datasets[0].data = pieData;\n\n      this.updateCharts();\n    });\n  }\n\n  updateCharts() {\n    if (this.pieChart && !this.pieChart.chart) {\n      this.pieChart.chart = new Chart(this.pieChart.nativeElement, {\n        type: 'doughnut', // 👈 Changed from 'pie'\n        data: this.pieChartData,\n        options: this.pieChartOptions\n      });\n    }\n    if (this.barChart && !this.barChart.chart) {\n      this.barChart.chart = new Chart(this.barChart.nativeElement, {\n        type: 'bar',\n        data: this.barChartData,\n        options: this.barChartOptions\n      });\n    }\n    if (this.lineChart && !this.lineChart.chart) {\n      this.lineChart.chart = new Chart(this.lineChart.nativeElement, {\n        type: 'line',\n        data: this.lineChartData,\n        options: this.lineChartOptions\n      });\n    }\n  }\n\n  // 👇 Updated type from 'pie' to 'doughnut'\n  pieChartOptions: ChartOptions<'doughnut'> = {\n    responsive: true,\n    plugins: {\n      legend: { position: 'top' },\n      datalabels: {\n        color: '#fff',\n        formatter: (value: number, ctx) => {\n          const data = ctx.chart.data.datasets[0].data as number[];\n          const total = data.reduce((a, b) => a + b, 0);\n          return total ? ((value / total) * 100).toFixed(0) + '%' : '';\n        },\n        font: { weight: 'bold' as const, size: 14 }\n      }\n    },\n    cutout: '60%' // 🍩 thickness of donut hole\n  };\n\n  pieChartPlugins = [ChartDataLabels];\n\n  lineChartOptions: ChartConfiguration<'line'>['options'] = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: { position: 'top' }\n    },\n    layout: { padding: { top: 10, bottom: 10 } }\n  };\n\n  barChartOptions: ChartConfiguration<'bar'>['options'] = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: { position: 'top' }\n    },\n    scales: {\n      x: {\n        ticks: { font: { size: 12 } },\n        grid: { display: false }\n      },\n      y: {\n        beginAtZero: true,\n        ticks: { font: { size: 12 } },\n        grid: { color: 'rgba(0, 0, 0, 0.05)' }\n      }\n    }\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
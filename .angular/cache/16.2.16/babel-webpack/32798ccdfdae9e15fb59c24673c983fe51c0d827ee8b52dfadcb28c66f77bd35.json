{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/card\";\nimport * as i9 from \"@angular/material/icon\";\nimport * as i10 from \"@angular/material/progress-spinner\";\nimport * as i11 from \"@angular/material/checkbox\";\nimport * as i12 from \"@angular/forms\";\nfunction AuthComponent_div_6_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AuthComponent_div_6_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Phone is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AuthComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-form-field\", 4)(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Full Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 18, 19);\n    i0.ɵɵlistener(\"ngModelChange\", function AuthComponent_div_6_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.name = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, AuthComponent_div_6_mat_error_6_Template, 2, 0, \"mat-error\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"mat-form-field\", 4)(8, \"mat-label\");\n    i0.ɵɵtext(9, \"Phone Number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"input\", 20, 21);\n    i0.ɵɵlistener(\"ngModelChange\", function AuthComponent_div_6_Template_input_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.phone = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(12, AuthComponent_div_6_mat_error_12_Template, 2, 0, \"mat-error\", 3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const _r10 = i0.ɵɵreference(5);\n    const _r12 = i0.ɵɵreference(11);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", _r10.invalid && _r10.touched);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.phone);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", _r12.invalid && _r12.touched);\n  }\n}\nfunction AuthComponent_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Valid email required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AuthComponent_mat_error_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password must be at least 6 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AuthComponent_mat_form_field_22_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Confirm your password \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AuthComponent_mat_form_field_22_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Passwords do not match \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AuthComponent_mat_form_field_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-form-field\", 4)(1, \"mat-label\");\n    i0.ɵɵtext(2, \"Confirm Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 22, 23);\n    i0.ɵɵlistener(\"ngModelChange\", function AuthComponent_mat_form_field_22_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.confirmPassword = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, AuthComponent_mat_form_field_22_mat_error_5_Template, 2, 0, \"mat-error\", 3);\n    i0.ɵɵtemplate(6, AuthComponent_mat_form_field_22_mat_error_6_Template, 2, 0, \"mat-error\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r17 = i0.ɵɵreference(4);\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"type\", ctx_r6.showPassword ? \"text\" : \"password\")(\"ngModel\", ctx_r6.confirmPassword);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", _r17.invalid && _r17.touched);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.password !== ctx_r6.confirmPassword && ctx_r6.confirmPassword);\n  }\n}\nfunction AuthComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 24)(1, \"a\", 17);\n    i0.ɵɵlistener(\"click\", function AuthComponent_div_23_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.onForgotPassword());\n    });\n    i0.ɵɵtext(2, \"Forgot Password?\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AuthComponent_mat_progress_spinner_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-progress-spinner\", 25);\n  }\n}\nfunction AuthComponent_span_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r9.isLoginMode ? \"Login\" : \"Register\");\n  }\n}\nexport class AuthComponent {\n  constructor(authService, router, snackBar) {\n    this.authService = authService;\n    this.router = router;\n    this.snackBar = snackBar;\n    this.isLoginMode = true;\n    this.showPassword = false;\n    this.isLoading = false;\n    this.rememberMe = true;\n    this.email = '';\n    this.password = '';\n    this.name = '';\n    this.phone = '';\n    this.confirmPassword = '';\n  }\n  ngOnInit() {\n    this.authService.getCurrentUser().subscribe(user => {\n      if (user) {\n        this.router.navigate(['/overview']);\n      }\n    });\n  }\n  togglePasswordVisibility() {\n    this.showPassword = !this.showPassword;\n  }\n  onToggleMode() {\n    this.isLoginMode = !this.isLoginMode;\n  }\n  onSubmit(form) {\n    // ✅ Step 1: Confirm passwords match (before form check)\n    if (!this.isLoginMode && this.password !== this.confirmPassword) {\n      this.snackBar.open('Passwords do not match.', 'Close', {\n        duration: 3000,\n        panelClass: ['snackbar-error']\n      });\n      return;\n    }\n    // ✅ Step 2: Validate form\n    if (form.invalid) return;\n    // ✅ Step 3: Start loading\n    this.isLoading = true;\n    const {\n      name,\n      phone,\n      email,\n      password\n    } = form.value;\n    const persistence = this.rememberMe ? 'local' : 'session';\n    // ✅ Step 4: Auth logic - FIXED\n    let authPromise;\n    this.authService.setPersistence(persistence).then(() => {\n      authPromise = this.isLoginMode ? this.authService.login(email, password) : this.authService.register(name, phone, email, password);\n      return authPromise;\n    }).then(() => {\n      const message = this.isLoginMode ? 'Login successful!' : 'Registration successful!';\n      this.snackBar.open(message, 'Close', {\n        duration: 3000,\n        panelClass: ['snackbar-success']\n      });\n      this.router.navigate(['/home']);\n    }).catch(err => {\n      console.error('Firebase Auth Error:', err);\n      let message = 'Something went wrong.';\n      if (err.code === 'auth/user-not-found' || err.code === 'auth/wrong-password' || err.code === 'auth/invalid-login-credentials') {\n        message = 'Incorrect email or password.';\n      } else if (err.code === 'auth/email-already-in-use') {\n        message = 'Email already in use. Try logging in.';\n      } else if (err.code === 'auth/invalid-email') {\n        message = 'Invalid email address.';\n      } else if (err.code === 'auth/weak-password') {\n        message = 'Password must be at least 6 characters.';\n      }\n      this.snackBar.open(message, 'Close', {\n        duration: 3000,\n        panelClass: ['snackbar-error']\n      });\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  }\n  onForgotPassword() {\n    if (!this.email) {\n      this.snackBar.open('Please enter your email first.', 'Close', {\n        duration: 3000,\n        panelClass: ['snackbar-error']\n      });\n      return;\n    }\n    this.authService.sendPasswordResetEmail(this.email).then(() => {\n      this.snackBar.open('Password reset email sent!', 'Close', {\n        duration: 3000,\n        panelClass: ['snackbar-success']\n      });\n    }).catch(err => {\n      let message = 'Failed to send reset email.';\n      if (err.code === 'auth/user-not-found') message = 'No account found with this email.';else if (err.code === 'auth/invalid-email') message = 'Invalid email address.';\n      this.snackBar.open(message, 'Close', {\n        duration: 3000,\n        panelClass: ['snackbar-error']\n      });\n    });\n  }\n  static {\n    this.ɵfac = function AuthComponent_Factory(t) {\n      return new (t || AuthComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.MatSnackBar));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AuthComponent,\n      selectors: [[\"app-auth\"]],\n      decls: 34,\n      vars: 16,\n      consts: [[1, \"auth-container\"], [3, \"ngSubmit\"], [\"authForm\", \"ngForm\"], [4, \"ngIf\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"name\", \"email\", \"type\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"emailInput\", \"ngModel\"], [\"matInput\", \"\", \"name\", \"password\", \"required\", \"\", \"minlength\", \"6\", 3, \"type\", \"ngModel\", \"ngModelChange\"], [\"passwordInput\", \"ngModel\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", \"type\", \"button\", \"aria-label\", \"Toggle password visibility\", 3, \"click\"], [\"appearance\", \"outline\", 4, \"ngIf\"], [\"class\", \"forgot-password\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"full-width-button\", 3, \"disabled\"], [\"diameter\", \"20\", \"mode\", \"indeterminate\", \"color\", \"accent\", 4, \"ngIf\"], [1, \"remember-checkbox\"], [\"name\", \"rememberMe\", 3, \"ngModel\", \"ngModelChange\"], [1, \"mode-toggle\"], [3, \"click\"], [\"matInput\", \"\", \"name\", \"name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"nameInput\", \"ngModel\"], [\"matInput\", \"\", \"name\", \"phone\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"phoneInput\", \"ngModel\"], [\"matInput\", \"\", \"name\", \"confirmPassword\", \"required\", \"\", 3, \"type\", \"ngModel\", \"ngModelChange\"], [\"confirmInput\", \"ngModel\"], [1, \"forgot-password\"], [\"diameter\", \"20\", \"mode\", \"indeterminate\", \"color\", \"accent\"]],\n      template: function AuthComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r24 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-card\")(2, \"h2\");\n          i0.ɵɵtext(3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"form\", 1, 2);\n          i0.ɵɵlistener(\"ngSubmit\", function AuthComponent_Template_form_ngSubmit_4_listener() {\n            i0.ɵɵrestoreView(_r24);\n            const _r0 = i0.ɵɵreference(5);\n            return i0.ɵɵresetView(ctx.onSubmit(_r0));\n          });\n          i0.ɵɵtemplate(6, AuthComponent_div_6_Template, 13, 4, \"div\", 3);\n          i0.ɵɵelementStart(7, \"mat-form-field\", 4)(8, \"mat-label\");\n          i0.ɵɵtext(9, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"input\", 5, 6);\n          i0.ɵɵlistener(\"ngModelChange\", function AuthComponent_Template_input_ngModelChange_10_listener($event) {\n            return ctx.email = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(12, AuthComponent_mat_error_12_Template, 2, 0, \"mat-error\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"mat-form-field\", 4)(14, \"mat-label\");\n          i0.ɵɵtext(15, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"input\", 7, 8);\n          i0.ɵɵlistener(\"ngModelChange\", function AuthComponent_Template_input_ngModelChange_16_listener($event) {\n            return ctx.password = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"button\", 9);\n          i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_18_listener() {\n            return ctx.togglePasswordVisibility();\n          });\n          i0.ɵɵelementStart(19, \"mat-icon\");\n          i0.ɵɵtext(20);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(21, AuthComponent_mat_error_21_Template, 2, 0, \"mat-error\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(22, AuthComponent_mat_form_field_22_Template, 7, 4, \"mat-form-field\", 10);\n          i0.ɵɵtemplate(23, AuthComponent_div_23_Template, 3, 0, \"div\", 11);\n          i0.ɵɵelementStart(24, \"button\", 12);\n          i0.ɵɵtemplate(25, AuthComponent_mat_progress_spinner_25_Template, 1, 0, \"mat-progress-spinner\", 13);\n          i0.ɵɵtemplate(26, AuthComponent_span_26_Template, 2, 1, \"span\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"div\", 14)(28, \"mat-checkbox\", 15);\n          i0.ɵɵlistener(\"ngModelChange\", function AuthComponent_Template_mat_checkbox_ngModelChange_28_listener($event) {\n            return ctx.rememberMe = $event;\n          });\n          i0.ɵɵtext(29, \" Remember Me \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(30, \"p\", 16);\n          i0.ɵɵtext(31);\n          i0.ɵɵelementStart(32, \"a\", 17);\n          i0.ɵɵlistener(\"click\", function AuthComponent_Template_a_click_32_listener() {\n            return ctx.onToggleMode();\n          });\n          i0.ɵɵtext(33);\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          const _r2 = i0.ɵɵreference(11);\n          const _r4 = i0.ɵɵreference(17);\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(ctx.isLoginMode ? \"Login\" : \"Register\");\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoginMode);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.email);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", _r2.invalid && _r2.touched);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"type\", ctx.showPassword ? \"text\" : \"password\")(\"ngModel\", ctx.password);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate(ctx.showPassword ? \"visibility_off\" : \"visibility\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", _r4.invalid && _r4.touched);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoginMode);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoginMode);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", ctx.isLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngModel\", ctx.rememberMe);\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate1(\" \", ctx.isLoginMode ? \"Don't have an account?\" : \"Already have an account?\", \" \");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.isLoginMode ? \"Register\" : \"Login\");\n        }\n      },\n      dependencies: [i4.NgIf, i5.MatButton, i5.MatIconButton, i6.MatFormField, i6.MatLabel, i6.MatError, i6.MatSuffix, i7.MatInput, i8.MatCard, i9.MatIcon, i10.MatProgressSpinner, i11.MatCheckbox, i12.ɵNgNoValidate, i12.DefaultValueAccessor, i12.NgControlStatus, i12.NgControlStatusGroup, i12.RequiredValidator, i12.MinLengthValidator, i12.NgModel, i12.NgForm],\n      styles: [\".auth-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 100vh;\\n  background: linear-gradient(to right, #e0eafc, #cfdef3);\\n}\\n.auth-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%] {\\n  padding: 2rem 2.5rem;\\n  border-radius: 16px;\\n  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.15);\\n  min-width: 400px;\\n  max-width: 450px;\\n  width: 100%;\\n}\\n.auth-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  margin-bottom: 1.5rem;\\n  text-align: center;\\n  font-size: 1.8rem;\\n}\\n.auth-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%] {\\n  display: block;\\n  width: 100%;\\n  margin-bottom: 1rem;\\n}\\n.auth-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]   .forgot-password[_ngcontent-%COMP%] {\\n  text-align: right;\\n  margin-bottom: 1rem;\\n}\\n.auth-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]   .forgot-password[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n  font-size: 0.85rem;\\n  color: #3f51b5;\\n  cursor: pointer;\\n  font-weight: 500;\\n}\\n.auth-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]   .full-width-button[_ngcontent-%COMP%] {\\n  width: 100%;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  margin-bottom: 0.75rem;\\n}\\n.auth-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]   .remember-checkbox[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin-bottom: 1rem;\\n}\\n.auth-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]   .mat-mdc-progress-spinner[_ngcontent-%COMP%] {\\n  margin-right: 0.5rem;\\n}\\n.auth-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]   .mode-toggle[_ngcontent-%COMP%] {\\n  margin-top: 1.5rem;\\n  text-align: center;\\n}\\n.auth-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]   .mode-toggle[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n  font-weight: 600;\\n  color: #3f51b5;\\n}\\n\\n@media screen and (max-width: 600px) {\\n  .auth-container[_ngcontent-%COMP%] {\\n    padding: 20px;\\n    align-items: flex-start;\\n    height: auto;\\n  }\\n  .auth-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%] {\\n    min-width: 100%;\\n    max-width: 100%;\\n    padding: 1.5rem;\\n  }\\n  .auth-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n    font-size: 1.5rem;\\n  }\\n  .auth-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]   .full-width-button[_ngcontent-%COMP%] {\\n    font-size: 1rem;\\n  }\\n  .auth-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]   .mode-toggle[_ngcontent-%COMP%] {\\n    font-size: 0.9rem;\\n  }\\n  .auth-container[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]   .forgot-password[_ngcontent-%COMP%] {\\n    text-align: left;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvYXV0aC9hdXRoLmNvbXBvbmVudC5zY3NzIiwid2VicGFjazovLy4vLi4vLi4vbXklMjBnaXRodWIlMjBwcm9qZWN0cy9leHBlbnNlLXRyYWNrZXIvc3JjL2FwcC9wYWdlcy9hdXRoL2F1dGguY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLGFBQUE7RUFDQSx1REFBQTtBQ0NKO0FEQ0k7RUFDRSxvQkFBQTtFQUNBLG1CQUFBO0VBQ0EsMkNBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0VBQ0EsV0FBQTtBQ0NOO0FEQ007RUFDRSxxQkFBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7QUNDUjtBREVNO0VBQ0UsY0FBQTtFQUNBLFdBQUE7RUFDQSxtQkFBQTtBQ0FSO0FER007RUFDRSxpQkFBQTtFQUNBLG1CQUFBO0FDRFI7QURHUTtFQUNFLGtCQUFBO0VBQ0EsY0FBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtBQ0RWO0FES007RUFDRSxXQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7RUFDQSxzQkFBQTtBQ0hSO0FETU07RUFDRSxrQkFBQTtFQUNBLG1CQUFBO0FDSlI7QURPTTtFQUNFLG9CQUFBO0FDTFI7QURRTTtFQUNFLGtCQUFBO0VBQ0Esa0JBQUE7QUNOUjtBRFFRO0VBQ0UsZUFBQTtFQUNBLGdCQUFBO0VBQ0EsY0FBQTtBQ05WOztBRFdFO0VBQ0U7SUFDRSxhQUFBO0lBQ0EsdUJBQUE7SUFDQSxZQUFBO0VDUko7RURVSTtJQUNFLGVBQUE7SUFDQSxlQUFBO0lBQ0EsZUFBQTtFQ1JOO0VEVU07SUFDRSxpQkFBQTtFQ1JSO0VEV007SUFDRSxlQUFBO0VDVFI7RURZTTtJQUNFLGlCQUFBO0VDVlI7RURhTTtJQUNFLGdCQUFBO0VDWFI7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi5hdXRoLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGhlaWdodDogMTAwdmg7XG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjZTBlYWZjLCAjY2ZkZWYzKTtcbiAgXG4gICAgbWF0LWNhcmQge1xuICAgICAgcGFkZGluZzogMnJlbSAyLjVyZW07XG4gICAgICBib3JkZXItcmFkaXVzOiAxNnB4O1xuICAgICAgYm94LXNoYWRvdzogMCAxMHB4IDQwcHggcmdiYSgwLCAwLCAwLCAwLjE1KTtcbiAgICAgIG1pbi13aWR0aDogNDAwcHg7XG4gICAgICBtYXgtd2lkdGg6IDQ1MHB4O1xuICAgICAgd2lkdGg6IDEwMCU7XG4gIFxuICAgICAgaDIge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAxLjVyZW07XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgZm9udC1zaXplOiAxLjhyZW07XG4gICAgICB9XG4gIFxuICAgICAgbWF0LWZvcm0tZmllbGQge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDFyZW07XG4gICAgICB9XG4gIFxuICAgICAgLmZvcmdvdC1wYXNzd29yZCB7XG4gICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAxcmVtO1xuICBcbiAgICAgICAgYSB7XG4gICAgICAgICAgZm9udC1zaXplOiAwLjg1cmVtO1xuICAgICAgICAgIGNvbG9yOiAjM2Y1MWI1O1xuICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICBmb250LXdlaWdodDogNTAwO1xuICAgICAgICB9XG4gICAgICB9XG4gIFxuICAgICAgLmZ1bGwtd2lkdGgtYnV0dG9uIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwLjc1cmVtO1xuICAgICAgfVxuICBcbiAgICAgIC5yZW1lbWJlci1jaGVja2JveCB7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbiAgICAgIH1cbiAgXG4gICAgICAubWF0LW1kYy1wcm9ncmVzcy1zcGlubmVyIHtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAwLjVyZW07XG4gICAgICB9XG4gIFxuICAgICAgLm1vZGUtdG9nZ2xlIHtcbiAgICAgICAgbWFyZ2luLXRvcDogMS41cmVtO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIFxuICAgICAgICBhIHtcbiAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgICAgICBjb2xvcjogIzNmNTFiNTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2MDBweCkge1xuICAgIC5hdXRoLWNvbnRhaW5lciB7XG4gICAgICBwYWRkaW5nOiAyMHB4O1xuICAgICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gICAgICBoZWlnaHQ6IGF1dG87XG4gIFxuICAgICAgbWF0LWNhcmQge1xuICAgICAgICBtaW4td2lkdGg6IDEwMCU7XG4gICAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgICAgcGFkZGluZzogMS41cmVtO1xuICBcbiAgICAgICAgaDIge1xuICAgICAgICAgIGZvbnQtc2l6ZTogMS41cmVtO1xuICAgICAgICB9XG4gIFxuICAgICAgICAuZnVsbC13aWR0aC1idXR0b24ge1xuICAgICAgICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICAgICAgfVxuICBcbiAgICAgICAgLm1vZGUtdG9nZ2xlIHtcbiAgICAgICAgICBmb250LXNpemU6IDAuOXJlbTtcbiAgICAgICAgfVxuICBcbiAgICAgICAgLmZvcmdvdC1wYXNzd29yZCB7XG4gICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuICAiLCIuYXV0aC1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjZTBlYWZjLCAjY2ZkZWYzKTtcbn1cbi5hdXRoLWNvbnRhaW5lciBtYXQtY2FyZCB7XG4gIHBhZGRpbmc6IDJyZW0gMi41cmVtO1xuICBib3JkZXItcmFkaXVzOiAxNnB4O1xuICBib3gtc2hhZG93OiAwIDEwcHggNDBweCByZ2JhKDAsIDAsIDAsIDAuMTUpO1xuICBtaW4td2lkdGg6IDQwMHB4O1xuICBtYXgtd2lkdGg6IDQ1MHB4O1xuICB3aWR0aDogMTAwJTtcbn1cbi5hdXRoLWNvbnRhaW5lciBtYXQtY2FyZCBoMiB7XG4gIG1hcmdpbi1ib3R0b206IDEuNXJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDEuOHJlbTtcbn1cbi5hdXRoLWNvbnRhaW5lciBtYXQtY2FyZCBtYXQtZm9ybS1maWVsZCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbn1cbi5hdXRoLWNvbnRhaW5lciBtYXQtY2FyZCAuZm9yZ290LXBhc3N3b3JkIHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIG1hcmdpbi1ib3R0b206IDFyZW07XG59XG4uYXV0aC1jb250YWluZXIgbWF0LWNhcmQgLmZvcmdvdC1wYXNzd29yZCBhIHtcbiAgZm9udC1zaXplOiAwLjg1cmVtO1xuICBjb2xvcjogIzNmNTFiNTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBmb250LXdlaWdodDogNTAwO1xufVxuLmF1dGgtY29udGFpbmVyIG1hdC1jYXJkIC5mdWxsLXdpZHRoLWJ1dHRvbiB7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgbWFyZ2luLWJvdHRvbTogMC43NXJlbTtcbn1cbi5hdXRoLWNvbnRhaW5lciBtYXQtY2FyZCAucmVtZW1iZXItY2hlY2tib3gge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDFyZW07XG59XG4uYXV0aC1jb250YWluZXIgbWF0LWNhcmQgLm1hdC1tZGMtcHJvZ3Jlc3Mtc3Bpbm5lciB7XG4gIG1hcmdpbi1yaWdodDogMC41cmVtO1xufVxuLmF1dGgtY29udGFpbmVyIG1hdC1jYXJkIC5tb2RlLXRvZ2dsZSB7XG4gIG1hcmdpbi10b3A6IDEuNXJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLmF1dGgtY29udGFpbmVyIG1hdC1jYXJkIC5tb2RlLXRvZ2dsZSBhIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBmb250LXdlaWdodDogNjAwO1xuICBjb2xvcjogIzNmNTFiNTtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHtcbiAgLmF1dGgtY29udGFpbmVyIHtcbiAgICBwYWRkaW5nOiAyMHB4O1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgIGhlaWdodDogYXV0bztcbiAgfVxuICAuYXV0aC1jb250YWluZXIgbWF0LWNhcmQge1xuICAgIG1pbi13aWR0aDogMTAwJTtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZzogMS41cmVtO1xuICB9XG4gIC5hdXRoLWNvbnRhaW5lciBtYXQtY2FyZCBoMiB7XG4gICAgZm9udC1zaXplOiAxLjVyZW07XG4gIH1cbiAgLmF1dGgtY29udGFpbmVyIG1hdC1jYXJkIC5mdWxsLXdpZHRoLWJ1dHRvbiB7XG4gICAgZm9udC1zaXplOiAxcmVtO1xuICB9XG4gIC5hdXRoLWNvbnRhaW5lciBtYXQtY2FyZCAubW9kZS10b2dnbGUge1xuICAgIGZvbnQtc2l6ZTogMC45cmVtO1xuICB9XG4gIC5hdXRoLWNvbnRhaW5lciBtYXQtY2FyZCAuZm9yZ290LXBhc3N3b3JkIHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICB9XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AuthComponent_div_6_Template_input_ngModelChange_4_listener","$event","ɵɵrestoreView","_r15","ctx_r14","ɵɵnextContext","ɵɵresetView","name","ɵɵtemplate","AuthComponent_div_6_mat_error_6_Template","AuthComponent_div_6_Template_input_ngModelChange_10_listener","ctx_r16","phone","AuthComponent_div_6_mat_error_12_Template","ɵɵadvance","ɵɵproperty","ctx_r1","_r10","invalid","touched","_r12","AuthComponent_mat_form_field_22_Template_input_ngModelChange_3_listener","_r21","ctx_r20","confirmPassword","AuthComponent_mat_form_field_22_mat_error_5_Template","AuthComponent_mat_form_field_22_mat_error_6_Template","ctx_r6","showPassword","_r17","password","AuthComponent_div_23_Template_a_click_1_listener","_r23","ctx_r22","onForgotPassword","ɵɵelement","ɵɵtextInterpolate","ctx_r9","isLoginMode","AuthComponent","constructor","authService","router","snackBar","isLoading","rememberMe","email","ngOnInit","getCurrentUser","subscribe","user","navigate","togglePasswordVisibility","onToggleMode","onSubmit","form","open","duration","panelClass","value","persistence","authPromise","setPersistence","then","login","register","message","catch","err","console","error","code","finally","sendPasswordResetEmail","ɵɵdirectiveInject","i1","AuthService","i2","Router","i3","MatSnackBar","selectors","decls","vars","consts","template","AuthComponent_Template","rf","ctx","AuthComponent_Template_form_ngSubmit_4_listener","_r24","_r0","ɵɵreference","AuthComponent_div_6_Template","AuthComponent_Template_input_ngModelChange_10_listener","AuthComponent_mat_error_12_Template","AuthComponent_Template_input_ngModelChange_16_listener","AuthComponent_Template_button_click_18_listener","AuthComponent_mat_error_21_Template","AuthComponent_mat_form_field_22_Template","AuthComponent_div_23_Template","AuthComponent_mat_progress_spinner_25_Template","AuthComponent_span_26_Template","AuthComponent_Template_mat_checkbox_ngModelChange_28_listener","AuthComponent_Template_a_click_32_listener","_r2","_r4","ɵɵtextInterpolate1"],"sources":["/Users/vinithyareddy/Desktop/projects/my github projects/expense-tracker/src/app/pages/auth/auth.component.ts","/Users/vinithyareddy/Desktop/projects/my github projects/expense-tracker/src/app/pages/auth/auth.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { NgForm } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n  isLoginMode = true;\n  showPassword = false;\n  isLoading = false;\n  rememberMe = true;\n\n  email = '';\n  password = '';\n  name = '';\n  phone = '';\n  confirmPassword = '';\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {\n    this.authService.getCurrentUser().subscribe(user => {\n      if (user) {\n        this.router.navigate(['/overview']);\n      }\n    });\n  }\n\n  togglePasswordVisibility(): void {\n    this.showPassword = !this.showPassword;\n  }\n\n  onToggleMode(): void {\n    this.isLoginMode = !this.isLoginMode;\n  }\n\n  onSubmit(form: NgForm): void {\n    // ✅ Step 1: Confirm passwords match (before form check)\n    if (!this.isLoginMode && this.password !== this.confirmPassword) {\n      this.snackBar.open('Passwords do not match.', 'Close', {\n        duration: 3000,\n        panelClass: ['snackbar-error']\n      });\n      return;\n    }\n\n    // ✅ Step 2: Validate form\n    if (form.invalid) return;\n\n    // ✅ Step 3: Start loading\n    this.isLoading = true;\n    const { name, phone, email, password } = form.value;\n    const persistence = this.rememberMe ? 'local' : 'session';\n\n // ✅ Step 4: Auth logic - FIXED\nlet authPromise: Promise<any>;\n\nthis.authService.setPersistence(persistence)\n  .then(() => {\n    authPromise = this.isLoginMode\n      ? this.authService.login(email, password)\n      : this.authService.register(name, phone, email, password);\n    return authPromise;\n  })\n  .then(() => {\n    const message = this.isLoginMode ? 'Login successful!' : 'Registration successful!';\n    this.snackBar.open(message, 'Close', {\n      duration: 3000,\n      panelClass: ['snackbar-success']\n    });\n    this.router.navigate(['/home']);\n  })\n  .catch(err => {\n    console.error('Firebase Auth Error:', err);\n    let message = 'Something went wrong.';\n    if (\n      err.code === 'auth/user-not-found' ||\n      err.code === 'auth/wrong-password' ||\n      err.code === 'auth/invalid-login-credentials'\n    ) {\n      message = 'Incorrect email or password.';\n    } else if (err.code === 'auth/email-already-in-use') {\n      message = 'Email already in use. Try logging in.';\n    } else if (err.code === 'auth/invalid-email') {\n      message = 'Invalid email address.';\n    } else if (err.code === 'auth/weak-password') {\n      message = 'Password must be at least 6 characters.';\n    }\n\n    this.snackBar.open(message, 'Close', {\n      duration: 3000,\n      panelClass: ['snackbar-error']\n    });\n  })\n  .finally(() => {\n    this.isLoading = false;\n  });\n\n\n  }\n\n  onForgotPassword(): void {\n    if (!this.email) {\n      this.snackBar.open('Please enter your email first.', 'Close', {\n        duration: 3000,\n        panelClass: ['snackbar-error']\n      });\n      return;\n    }\n\n    this.authService.sendPasswordResetEmail(this.email)\n      .then(() => {\n        this.snackBar.open('Password reset email sent!', 'Close', {\n          duration: 3000,\n          panelClass: ['snackbar-success']\n        });\n      })\n      .catch(err => {\n        let message = 'Failed to send reset email.';\n        if (err.code === 'auth/user-not-found') message = 'No account found with this email.';\n        else if (err.code === 'auth/invalid-email') message = 'Invalid email address.';\n\n        this.snackBar.open(message, 'Close', {\n          duration: 3000,\n          panelClass: ['snackbar-error']\n        });\n      });\n  }\n}\n","<div class=\"auth-container\">\n    <mat-card>\n      <h2>{{ isLoginMode ? 'Login' : 'Register' }}</h2>\n  \n      <form #authForm=\"ngForm\" (ngSubmit)=\"onSubmit(authForm)\">\n        <!-- Name and phone only for register -->\n        <div *ngIf=\"!isLoginMode\">\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Full Name</mat-label>\n            <input matInput name=\"name\" [(ngModel)]=\"name\" required #nameInput=\"ngModel\" />\n            <mat-error *ngIf=\"nameInput.invalid && nameInput.touched\">Name is required</mat-error>\n          </mat-form-field>\n  \n          <mat-form-field appearance=\"outline\">\n            <mat-label>Phone Number</mat-label>\n            <input matInput name=\"phone\" [(ngModel)]=\"phone\" required #phoneInput=\"ngModel\" />\n            <mat-error *ngIf=\"phoneInput.invalid && phoneInput.touched\">Phone is required</mat-error>\n          </mat-form-field>\n        </div>\n  \n        <mat-form-field appearance=\"outline\">\n          <mat-label>Email</mat-label>\n          <input matInput name=\"email\" type=\"email\" [(ngModel)]=\"email\" required #emailInput=\"ngModel\" />\n          <mat-error *ngIf=\"emailInput.invalid && emailInput.touched\">Valid email required</mat-error>\n        </mat-form-field>\n  \n        <mat-form-field appearance=\"outline\">\n          <mat-label>Password</mat-label>\n          <input\n            matInput\n            [type]=\"showPassword ? 'text' : 'password'\"\n            [(ngModel)]=\"password\"\n            name=\"password\"\n            required\n            minlength=\"6\"\n            #passwordInput=\"ngModel\"\n          />\n          <button\n            mat-icon-button\n            matSuffix\n            (click)=\"togglePasswordVisibility()\"\n            type=\"button\"\n            aria-label=\"Toggle password visibility\"\n          >\n            <mat-icon>{{ showPassword ? 'visibility_off' : 'visibility' }}</mat-icon>\n          </button>\n          <mat-error *ngIf=\"passwordInput.invalid && passwordInput.touched\">\n            Password must be at least 6 characters\n          </mat-error>\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\" *ngIf=\"!isLoginMode\">\n            <mat-label>Confirm Password</mat-label>\n            <input\n              matInput\n              [type]=\"showPassword ? 'text' : 'password'\"\n              [(ngModel)]=\"confirmPassword\"\n              name=\"confirmPassword\"\n              required\n              #confirmInput=\"ngModel\"\n            />\n            <mat-error *ngIf=\"confirmInput.invalid && confirmInput.touched\">\n              Confirm your password\n            </mat-error>\n            <mat-error *ngIf=\"password !== confirmPassword && confirmPassword\">\n              Passwords do not match\n            </mat-error>\n          </mat-form-field>\n          \n        <div class=\"forgot-password\" *ngIf=\"isLoginMode\">\n            <a (click)=\"onForgotPassword()\">Forgot Password?</a>\n          </div>\n          \n  \n          <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"isLoading\" class=\"full-width-button\">\n            <mat-progress-spinner *ngIf=\"isLoading\" diameter=\"20\" mode=\"indeterminate\" color=\"accent\"></mat-progress-spinner>\n            <span *ngIf=\"!isLoading\">{{ isLoginMode ? 'Login' : 'Register' }}</span>\n          </button>\n          \n          <div class=\"remember-checkbox\">\n            <mat-checkbox [(ngModel)]=\"rememberMe\" name=\"rememberMe\">\n              Remember Me\n            </mat-checkbox>\n          </div>\n          \n  \n        <p class=\"mode-toggle\">\n          {{ isLoginMode ? \"Don't have an account?\" : \"Already have an account?\" }}\n          <a (click)=\"onToggleMode()\">{{ isLoginMode ? 'Register' : 'Login' }}</a>\n        </p>\n      </form>\n    </mat-card>\n  </div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}